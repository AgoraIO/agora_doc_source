<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE topic PUBLIC "-//OASIS//DTD DITA Topic//EN" "topic.dtd">
<topic id="release_notes">
    <title>v4.5.6</title>
    <body>
        <p>该版本于 2034 年 11 月 x 日发布。</p>
    </body>
    <topic id="level2">
        <title/>
        <topic id="compatibility">
            <title>升级必看</title>
            <body>
                <p>该版本对部分功能的实现方式进行了优化，涉及 SDK 的行为变更、API 的改名或删除，为确保项目的正常运行，你需要在升级到该版本后更新 App 中的代码。</p>
                <ol>
                    <li props="cpp"><ph><b>成员参数类型变更</b></ph>
                        <p>为提升各框架对 Native SDK 的适配性，该版本对一些 API 中的成员或参数做了如下修改：<table frame="all" rowsep="1" colsep="1">
                        <tgroup cols="3">
                            <colspec colname="c1" colnum="1" colwidth="1*"/>
                            <colspec colname="c2" colnum="2" colwidth="1*"/>
                            <colspec colname="c3" colnum="3" colwidth="1*"/>
                            <thead>
                                <row>
                                    <entry>API</entry>
                                    <entry>成员/参数</entry>
                                    <entry>变更</entry>
                                </row>
                            </thead>
                            <tbody>
                                <row>
                                    <entry><apiname keyref="startScreenCaptureByDisplayId"/></entry>
                                    <entry><parmname>displayId</parmname></entry>
                                    <entry>由 uint32_t 型变更为 int64_t 型</entry>
                                </row>
                                <row>
                                    <entry><apiname keyref="startScreenCaptureByWindowId"/></entry>
                                    <entry><parmname>windowId</parmname></entry>
                                    <entry>由 view_t 型变更为 int64_t 型</entry>
                                </row>
                                <row>
                                    <entry morerows="1"><apiname keyref="ScreenCaptureConfiguration"/></entry>
                                    <entry><parmname>displayId</parmname></entry>
                                    <entry>由 uint32_t 型变更为 int64_t 型</entry>
                                </row>
                                <row>
                                    <entry><parmname>windowId</parmname></entry>
                                    <entry>由 view_t 型变更为 int64_t 型</entry>
                                </row>
                                <row>
                                    <entry morerows="1"><apiname keyref="ScreenCaptureSourceInfo"/></entry>
                                    <entry><parmname>sourceDisplayId</parmname></entry>
                                    <entry>由 view_t 型变更为 int64_t 型</entry>
                                </row>
                                <row>
                                    <entry><parmname>sourceId</parmname></entry>
                                    <entry>默认值由 <codeph>nullptr</codeph> 变更为 0</entry>
                                </row>
                            </tbody>
                        </tgroup>
                        </table></p>
                    </li>
                    <li props="mac"><ph><b>自动安装虚拟声卡</b></ph>
                        <p>自该版本起，SDK 支持自动安装虚拟声卡功能，当你第一次调用 <apiname keyref="enableLoopbackRecording"/> 时，SDK 会自动安装内置的声网自研虚拟声卡 AgoraALD。安装成功后，音频路由会自动切换为虚拟声卡，同时使用虚拟声卡进行采集。</p>
                    </li>
                    <li><ph><b>强效视频降噪实现变更</b></ph>
                        <p><?oxy-placeholder content="用段落描述"?></p>
                    </li>
                    <li><ph><b> 摄像头插拔状态变更 (macOS, Windows)</b></ph>
                        <p><?oxy-placeholder content="用段落描述"?></p>
                    </li>
                    <li><ph><b>视频编码偏好变更</b></ph>
                        <p>为提升用户的视频互动体验，该版本优化了视频编码时的默认偏好：
                        <ul>
                        <li>在 <apiname keyref="COMPRESSION_PREFERENCE"/> 枚举类中新增 <ph keyref="PREFER_COMPRESSION_AUTO"/> (-1) 枚举，并替代原有的 <ph keyref="PREFER_QUALITY"/> (1) 作为默认值。在该模式下，SDK 会根据你设置的视频场景，自动选择 <ph keyref="PREFER_LOW_LATENCY"/> 或 <ph keyref="PREFER_QUALITY"/>，以获得最佳的用户体验。</li>
                        <li>在 <apiname keyref="DEGRADATION_PREFERENCE"/> 枚举类中新增 <ph keyref="MAINTAIN_AUTO"/> (-1) 枚举，并替代原有的 <ph keyref="MAINTAIN_QUALITY"/> (1) 作为默认值。在该模式下，SDK 会根据你设置的视频场景，自动选择 <ph keyref="MAINTAIN_FRAMERATE"/>、<ph keyref="MAINTAIN_BALANCED"/> 或 <ph keyref="MAINTAIN_RESOLUTION"/>，以获得最优的综合质量体验 (QoE)。</li>
                        </ul></p>
                    </li>
                    <li><ph><b>16 KB 内存页大小 (Android)</b></ph>
                        <p><?oxy-placeholder content="用段落描述"?></p>
                    </li>
                </ol>
            </body>
        </topic>
        <topic id="newfeature">
            <title>新增特性</title>
            <body>
                <ol>
                    <li><ph><b>高级美颜</b></ph>
                        <ul>
                        <li><?oxy-placeholder content="用 list 描述"?></li>
                        <li><?oxy-placeholder content="用 list 描述"?></li>
                        </ul></li>
                    <li><ph><b>秀场直播场景</b></ph>
                        <p><?oxy-placeholder content="用段落描述"?></p>
                    </li>
                    <li><ph><b>限制视频渲染帧率</b></ph>
                        <p>该版本新增 <apiname keyref="setLocalRenderTargetFps"/> 和 <apiname keyref="setRemoteRenderTargetFps"/> 方法，支持设置视频在本地和远端渲染时的最大帧率，SDK 进行视频渲染的实际帧率会尽量接近该值。</p>
                        <p>在对视频渲染帧率要求不高的场景（例如：屏幕共享、在线教育）或者远端使用中低端设备的场景下，你可以通过这一组方法限制视频渲染帧率，从而减小 CPU 消耗、提升系统性能。</p>
                    </li>
                    <li><ph><b>URL 拉流播放</b></ph>
                        <p><?oxy-placeholder content="用段落描述"?></p>
                    </li>
                    <li><ph><b>滤镜效果</b></ph>
                        <p><?oxy-placeholder content="用段落描述"?></p>
                    </li>
                    <li><ph><b>本地音频合流</b></ph>
                        <p>该版本新增本地音频合流功能，你可以调用 <apiname keyref="startLocalAudioMixer"/> 方法，将本地麦克风采集的音频流、媒体播放器中的音频流、声卡采集的音频流、远端音频流等合并为一路音频流，你可以将合并后的音频流发布到频道中。不再需要音频合流时，你可以调用 <apiname keyref="stopLocalAudioMixer"/> 方法停止本地音频合流；在合流过程中，可以调用 <apiname keyref="updateLocalAudioMixerConfiguration"/> 方法更新正在合流的音频流配置。 </p>
                        <p>该功能的使用场景示例如下： 
                        <ul>
                        <li>结合本地合图功能一起使用，可将合图视频流相关的音频流同步采集和发布。</li>
                        <li>在直播场景下，用户接收频道内的音频流，在本地进行多路音频流合流后转发到其他频道。</li>
                        <li>在教育场景下，老师可将跟学生连麦互动的音频在本地进行合流，然后将合并的音频流转发到其他频道。</li>
                        </ul></p>
                    </li>
                    <li props="android unity rn flutter unreal"><ph><b>外部 MediaProjection (Android)</b></ph>
                        <p>该版本新增 <apiname keyref="setExternalMediaProjection"/> 方法，该方法支持你自行设置外部 <codeph>MediaProjection</codeph>，并取代 SDK 申请的 <codeph>MediaProjection</codeph>。 </p>
                        <p>如果你具备自行申请 <codeph>MediaProjection</codeph> 的开发能力，可通过该功能实现更加灵活的屏幕采集。有关具体实现方法，详见《屏幕共享》。</p>
                    </li>
                    <li><ph><b>EGL 环境上下文 (Android)</b></ph>
                        <p><?oxy-placeholder content="用段落描述"?></p>
                    </li>
                    <li><ph><b>色彩空间设置</b></ph>
                        <p><?oxy-placeholder content="用段落描述"?></p>
                    </li>
                    <li><ph><b/></ph>
                        <p><?oxy-placeholder content="用段落描述"?></p>
                    </li>
                    <li><ph><b>其他</b></ph>
                        <ul>
                        <li props="cpp unity flutter electron unreal"><apiname keyref="onLocalVideoStateChanged"/> 回调新增 <ph keyref="LOCAL_VIDEO_STREAM_REASON_DEVICE_DISCONNECTED"/> 枚举，表示当前正在使用的视频采集设备已经断开连接（例如，被拔出）。(Windows)</li>
                        </ul> </li>
                </ol>
            </body>
        </topic>
        <topic id="improvement">
            <title>改进</title>
            <body>
                <ol>
                    <li><ph><b>虚拟背景算法优化</b></ph>
                        <ul>
                        <li><?oxy-placeholder content="用 list 描述"?></li>
                        <li><?oxy-placeholder content="用 list 描述"?></li>
                        </ul></li>
                    <li><ph><b>录制本地预览视频</b></ph>
                        <ul>
                        <li><?oxy-placeholder content="用 list 描述"?></li>
                        <li><?oxy-placeholder content="用 list 描述"?></li>
                        </ul></li>
                    <li><ph><b>指定视频观测位置截图</b></ph>
                        <ul>
                        <li><?oxy-placeholder content="用 list 描述"?></li>
                        <li><?oxy-placeholder content="用 list 描述"?></li>
                        </ul></li>
                    <li><ph><b/></ph>
                        <ul>
                        <li><?oxy-placeholder content="用 list 描述"?></li>
                        <li><?oxy-placeholder content="用 list 描述"?></li>
                        </ul></li>
                    <li><ph><b>自定义音频采集改进</b></ph>
                        <p><?oxy-placeholder content="用段落描述"?></p>
                    </li>
                    <li><ph><b>其他改进</b></ph>
                        <ul>
                        <li props="android ios unity flutter rn unreal">通过拼接视频帧和 Alpha 数据实现 Alpha 透明特效的应用场景下，提升了接收端的渲染性能，有效减少卡顿和延迟。（Android, iOS）</li>
                        <li/>
                        </ul></li>
                </ol>
            </body>
        </topic>
        <topic id="bugfix">
            <title>问题修复</title>
            <body>
                <p>该版本修复了以下问题：</p>
                <ul>
                    <li props="cpp unity flutter electron  unreal">调用 <apiname keyref="startScreenCaptureByWindowId"/> 共享屏幕时，通过 <parmname>regionRect</parmname> 指定的窗口采集区域不准确，导致接收端看到的屏幕共享窗口宽高错误。（Windows）</li>
                    <li props="android ios unity flutter rn unreal">当发送端视频源类型为 JPEG 格式时，偶现接收端帧率低于预期。(Android、iOS)</li>
                    <li props="android unity flutter rn unreal">在播放音乐内容中心的音乐资源时，偶现杂音和卡顿。(Android) </li>
                    <li props="android unity flutter rn unreal">在 App 没有获取麦克风权限时，通过 <apiname keyref="IMusicPlayer"/> 播放伴奏音乐偶现卡顿。(Android)</li>
                    <li props="android unity flutter rn unreal">音视频互动过程中被系统来电打断后，通过 <apiname keyref="onAudioVolumeIndication"/> 回调上报的用户音量错误。(Android)</li>
                    <li props="android unity flutter rn unreal">在接收端默认订阅视频小流、加入频道时不自动订阅任何视频流的前提下，加入频道后调用 <apiname keyref="muteRemoteVideoStream"/><codeph>(uid,false)</codeph> 恢复接收视频流，但接收到的视频流为视频大流，不符合预期。(Android)</li> 
                    <li/>
                </ul>
            </body>
        </topic>
    </topic>
</topic>
