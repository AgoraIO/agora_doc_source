<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE topic PUBLIC "-//OASIS//DTD DITA Topic//EN" "topic.dtd">
<topic id="release_notes">
    <title>v4.5.0</title>
    <body>
        <p>该版本于 2034 年 11 月 x 日发布。</p>
    </body>
    <topic id="level2">
        <title/>
        <topic id="compatibility">
            <title>升级必看</title>
            <body>
                <p>该版本对部分功能的实现方式进行了优化，涉及 SDK 的行为变更、API 的改名或删除，为确保项目的正常运行，你需要在升级到该版本后更新 App 中的代码。</p>
                <ol>
                    <li props="cpp"><ph><b>成员参数类型变更</b></ph>
                        <p>为提升各框架对 Native SDK 的适配性，该版本对一些 API 中的成员或参数做了如下修改：<table frame="all" rowsep="1" colsep="1">
                        <tgroup cols="3">
                            <colspec colname="c1" colnum="1" colwidth="1*"/>
                            <colspec colname="c2" colnum="2" colwidth="1*"/>
                            <colspec colname="c3" colnum="3" colwidth="1*"/>
                            <thead>
                                <row>
                                    <entry>API</entry>
                                    <entry>成员/参数</entry>
                                    <entry>变更</entry>
                                </row>
                            </thead>
                            <tbody>
                                <row>
                                    <entry><apiname keyref="startScreenCaptureByDisplayId"/></entry>
                                    <entry><parmname>displayId</parmname></entry>
                                    <entry>由 uint32_t 型变更为 int64_t 型</entry>
                                </row>
                                <row>
                                    <entry><apiname keyref="startScreenCaptureByWindowId"/></entry>
                                    <entry><parmname>windowId</parmname></entry>
                                    <entry>由 view_t 型变更为 int64_t 型</entry>
                                </row>
                                <row>
                                    <entry morerows="1"><apiname keyref="ScreenCaptureConfiguration"/></entry>
                                    <entry><parmname>displayId</parmname></entry>
                                    <entry>由 uint32_t 型变更为 int64_t 型</entry>
                                </row>
                                <row>
                                    <entry><parmname>windowId</parmname></entry>
                                    <entry>由 view_t 型变更为 int64_t 型</entry>
                                </row>
                                <row>
                                    <entry morerows="1"><apiname keyref="ScreenCaptureSourceInfo"/></entry>
                                    <entry><parmname>sourceDisplayId</parmname></entry>
                                    <entry>由 view_t 型变更为 int64_t 型</entry>
                                </row>
                                <row>
                                    <entry><parmname>sourceId</parmname></entry>
                                    <entry>默认值由 <codeph>nullptr</codeph> 变更为 0</entry>
                                </row>
                            </tbody>
                        </tgroup>
                        </table></p>
                    </li>
                    <li props="mac"><ph><b>自动安装虚拟声卡</b></ph>
                        <p>自该版本起，SDK 支持自动安装虚拟声卡功能，当你第一次调用 <apiname keyref="enableLoopbackRecording"/> 时，SDK 会自动安装内置的声网自研虚拟声卡 AgoraALD。安装成功后，音频路由会自动切换为虚拟声卡，同时使用虚拟声卡进行采集。</p>
                    </li>
                    <li><ph><b>强效视频降噪实现变更</b></ph>
                        <p>该版本调整了强效视频降噪的实现方式，在 <apiname keyref="VIDEO_DENOISER_LEVEL"/> 中删除了 <apiname keyref="VIDEO_DENOISER_LEVEL_STRENGTH"/>，改为调用 <apiname keyref="setVideoDenoiserOptions"/> 启用视频降噪后，调用 <apiname keyref="aasetBeautyEffectOptionsa"/> 方法启用美颜磨皮功能，二者搭配使用以获得更好的视频降噪效果。实现强效降噪时，推荐磨皮参数设置详见 <apiname keyref="setVideoDenoiserOptions。"/></p>
                        <p>此外，受该调整影响，实现画质优先的暗光增强效果时，需要先开启视频降噪并采用特定设置，详见 <apiname keyref="setLowlightEnhanceOptions。"/></p>
                    </li>
                    <li><ph><b> 摄像头插拔状态变更 (macOS, Windows)</b></ph>
                        <p><?oxy-placeholder content="用段落描述"?></p>
                    </li>
                    <li><ph><b>视频编码偏好变更</b></ph>
                        <p>为提升用户的视频互动体验，该版本优化了视频编码时的默认偏好：
                        <ul>
                        <li>在 <apiname keyref="COMPRESSION_PREFERENCE"/> 枚举类中新增 <ph keyref="PREFER_COMPRESSION_AUTO"/> (-1) 枚举，并替代原有的 <ph keyref="PREFER_QUALITY"/> (1) 作为默认值。在该模式下，SDK 会根据你设置的视频场景，自动选择 <ph keyref="PREFER_LOW_LATENCY"/> 或 <ph keyref="PREFER_QUALITY"/>，以获得最佳的用户体验。</li>
                        <li>在 <apiname keyref="DEGRADATION_PREFERENCE"/> 枚举类中新增 <ph keyref="MAINTAIN_AUTO"/> (-1) 枚举，并替代原有的 <ph keyref="MAINTAIN_QUALITY"/> (1) 作为默认值。在该模式下，SDK 会根据你设置的视频场景，自动选择 <ph keyref="MAINTAIN_FRAMERATE"/>、<ph keyref="MAINTAIN_BALANCED"/> 或 <ph keyref="MAINTAIN_RESOLUTION"/>，以获得最优的综合质量体验 (QoE)。</li>
                        </ul></p>
                    </li>
                    <li><ph><b>16 KB 内存页大小 (Android)</b></ph>
                        <p><?oxy-placeholder content="用段落描述"?></p>
                    </li>
                </ol>
            </body>
        </topic>
        <topic id="newfeature">
            <title>新增特性</title>
            <body>
                <ol>
                    <li><ph><b>高级美颜</b></ph>
                        <ul>
                        <li><?oxy-placeholder content="用 list 描述"?></li>
                        <li><?oxy-placeholder content="用 list 描述"?></li>
                        </ul></li>
                    <li><ph><b>秀场直播场景</b></ph>
                        <p><?oxy-placeholder content="用段落描述"?></p>
                    </li>
                    <li><ph><b>高级美颜</b></ph>
                        <p><ph>该版本新增以下两种高级美颜功能：</ph>
                            <ul>
                                <li>美型：调用 <apiname keyref="setFaceShapeBeautyOptions"/> 方法，可对人脸各部位进行修饰，你可以使用预设的模板一次性实现瘦脸、大眼、瘦鼻等微整形效果，并微调整体的修饰力度。如果预设的美型效果不能满足你的需求，你可以调用 <apiname keyref="setFaceShapeAreaOptions"/> 方法设置美型部位选项，对人脸的各个部位单独微调，实现更加精细的美型效果。</li>
                                <li>美妆：调用 <apiname keyref="setExtensionProperty"/> 方法，传入指定参数，可实现眼影、美瞳、眼线、美眉、唇彩、腮红等美妆特效。</li>
                            </ul>
                            <ph>有关美型和美妆的实现步骤，详见<xref keyref="advanced-beauty"/>。</ph>
                            <note type="note">目前，高级美颜功能为<b>限时免费</b>，详见<xref keyref="billing-strategy"/>。</note>
                        </p>
                    </li>
                    <li><ph><b>限制视频渲染帧率</b></ph>
                        <p>该版本新增 <apiname keyref="setLocalRenderTargetFps"/> 和 <apiname keyref="setRemoteRenderTargetFps"/> 方法，支持设置视频在本地和远端渲染时的最大帧率，SDK 进行视频渲染的实际帧率会尽量接近该值。</p>
                        <p>在对视频渲染帧率要求不高的场景（例如：屏幕共享、在线教育）或者远端使用中低端设备的场景下，你可以通过这一组方法限制视频渲染帧率，从而减小 CPU 消耗、提升系统性能。</p>
                    </li>
                    <li><ph><b>URL 拉流播放</b></ph>
                        <p><?oxy-placeholder content="用段落描述"?></p>
                    </li>
                    <li><ph><b>滤镜效果</b></ph>
                        <p><?oxy-placeholder content="用段落描述"?></p>
                    </li>
                    <li><ph><b>本地音频合流</b></ph>
                        <p>该版本新增本地音频合流功能，你可以调用 <apiname keyref="startLocalAudioMixer"/> 方法，将本地麦克风采集的音频流、媒体播放器中的音频流、声卡采集的音频流、远端音频流等合并为一路音频流，你可以将合并后的音频流发布到频道中。不再需要音频合流时，你可以调用 <apiname keyref="stopLocalAudioMixer"/> 方法停止本地音频合流；在合流过程中，可以调用 <apiname keyref="updateLocalAudioMixerConfiguration"/> 方法更新正在合流的音频流配置。 </p>
                        <p>该功能的使用场景示例如下： 
                        <ul>
                        <li>结合本地合图功能一起使用，可将合图视频流相关的音频流同步采集和发布。</li>
                        <li>在直播场景下，用户接收频道内的音频流，在本地进行多路音频流合流后转发到其他频道。</li>
                        <li>在教育场景下，老师可将跟学生连麦互动的音频在本地进行合流，然后将合并的音频流转发到其他频道。</li>
                        </ul></p>
                    </li>
                    <li props="android unity rn flutter unreal"><ph><b>外部 MediaProjection (Android)</b></ph>
                        <p>该版本新增 <apiname keyref="setExternalMediaProjection"/> 方法，该方法支持你自行设置外部 <codeph>MediaProjection</codeph>，并取代 SDK 申请的 <codeph>MediaProjection</codeph>。 </p>
                        <p>如果你具备自行申请 <codeph>MediaProjection</codeph> 的开发能力，可通过该功能实现更加灵活的屏幕采集。有关具体实现方法，详见《屏幕共享》。</p>
                    </li>
                    <li><ph><b>EGL 环境上下文 (Android)</b></ph>
                        <p><?oxy-placeholder content="用段落描述"?></p>
                    </li>
                    <li><ph><b>色彩空间设置</b></ph>
                        <p><?oxy-placeholder content="用段落描述"?></p>
                    </li>
                    <li><ph><b/></ph>
                        <p><?oxy-placeholder content="用段落描述"?></p>
                    </li>
                    <li><ph><b>其他</b></ph>
                        <ul>
                        <li props="cpp unity flutter electron unreal"><apiname keyref="onLocalVideoStateChanged"/> 回调新增 <ph keyref="LOCAL_VIDEO_STREAM_REASON_DEVICE_DISCONNECTED"/> 枚举，表示当前正在使用的视频采集设备已经断开连接（例如，被拔出）。(Windows)</li>
                        </ul> </li>
                </ol>
            </body>
        </topic>
        <topic id="improvement">
            <title>改进</title>
            <body>
                <ol>
                    <li><ph><b>虚拟背景算法优化</b></ph>
                        <p>该版本升级了虚拟背景的算法，分割人像主体部分与背景时更加准确，背景无露出，人像身体轮廓无缺块，手指细节辨识显著提高。同时，人像与背景的边缘更加稳定，减少了连续视频帧中人像边缘的跳变和闪烁现象。</p>
                    </li>
                    <li><ph><b>录制本地预览视频</b></ph>
                        <p>该版本在 <apiname keyref="RecorderStreamInfo"/> 中新增 <parmname>type</parmname> 成员。当调用 <apiname keyref="createMediaRecorder"/> 时，可通过该成员指定录制的视频流类型为本地预览视频流，并在 <apiname keyref="MediaRecorderConfiguration"/> 中设置录制预览视频的高、宽、帧率、采样率等参数，之后调用 <apiname keyref="startRecording"/> 即可开始录制本地预览的视频。</p>
                    </li>
                    <li><ph><b>指定视频观测位置截图</b></ph>
                        <p>该版本新增 <apiname keyref="takeSnapshot2"/> 和 <apiname keyref="takeSnapshotEx2"/> 方法，你可以在调用该方法时通过 <parmname>config</parmname> 参数，在指定的视频观测点进行截图，比如：编码前、编码后或渲染前的数据，以实现更加灵活的截图效果。</p>
                    </li>
                    <li><ph><b/></ph>
                        <ul>
                        <li><?oxy-placeholder content="用 list 描述"?></li>
                        <li><?oxy-placeholder content="用 list 描述"?></li>
                        </ul></li>
                    <li><ph><b>自定义音频采集改进</b></ph>
                        <p><?oxy-placeholder content="用段落描述"?></p>
                    </li>
                    <li><ph><b>其他改进</b></ph>
                        <ul>
                        <li props="android ios unity flutter rn unreal">通过拼接视频帧和 Alpha 数据实现 Alpha 透明特效的应用场景下，提升了接收端的渲染性能，有效减少卡顿和延迟。（Android, iOS）</li>
                        <li>优化了调用 <apiname keyref="queryDeviceScore"/> 获取设备评分等级的设计逻辑，提升了等级评分结果的准确性。</li>
                        <li/>
                        </ul></li>
                </ol>
            </body>
        </topic>
        <topic id="bugfix">
            <title>问题修复</title>
            <body>
                <p>该版本修复了以下问题：</p>
                <ul>
                    <li props="cpp unity flutter electron  unreal">调用 <apiname keyref="startScreenCaptureByWindowId"/> 共享屏幕时，通过 <parmname>regionRect</parmname> 指定的窗口采集区域不准确，导致接收端看到的屏幕共享窗口宽高错误。（Windows）</li>
                    <li props="android ios unity flutter rn unreal">当发送端视频源类型为 JPEG 格式时，偶现接收端帧率低于预期。(Android、iOS)</li>
                    <li props="android unity flutter rn unreal">在播放音乐内容中心的音乐资源时，偶现杂音和卡顿。(Android) </li>
                    <li props="android unity flutter rn unreal">在 App 没有获取麦克风权限时，通过 <apiname keyref="IMusicPlayer"/> 播放伴奏音乐偶现卡顿。(Android)</li>
                    <li props="android unity flutter rn unreal">音视频互动过程中被系统来电打断后，通过 <apiname keyref="onAudioVolumeIndication"/> 回调上报的用户音量错误。(Android)</li>
                    <li props="android unity flutter rn unreal">在接收端默认订阅视频小流、加入频道时不自动订阅任何视频流的前提下，加入频道后调用 <apiname keyref="muteRemoteVideoStream"/><codeph>(uid,false)</codeph> 恢复接收视频流，但接收到的视频流为视频大流，不符合预期。(Android)</li> 
                    <li props="cpp unity electron flutter unreal">Windows 7 系统下进行音视频互动，偶现找不到系统文件的报错。(Windows)</li>
                    <li>调用 <apiname keyref="followSystemRecordingDevice"/> 或 <apiname keyref="followSystemPlaybackDevice"/> 设置 SDK 使用的音频采集或播放设备不跟随系统默认的音频播放设备，当音频设备被移除时，本地音频状态回调 <apiname keyref="onLocalAudioStateChanged"/> 没有被触发，不符合预期。(Windows)</li>
                    <li props="apple unity flutter rn unreal">音视频互动过程中，如果发送端设备的系统版本为 iOS 17，偶现接收端听不到来自发送端的声音。（iOS）</li>
                    <li props="apple unity flutter rn unreal">直播场景下，观众端因切换网络导致断开连接，重新连接直播间花费的时间长于预期。(iOS)</li>
                    <li props="apple unity flutter rn unreal">App 启动后使用媒体播放器播放在线媒体资源，播放无声。(iOS)</li>
                    <li props="apple unity flutter rn unreal">音视频互动过程中被系统其他 App 打断后恢复，偶现音频采集无声。(iOS)</li>
                    <li>调用 <apiname keyref="startAudioMixing"/> 后，立即调用 <apiname keyref="pauseAudioMixing"/> 暂停播放音乐文件不生效。</li>
                    <li></li>
                    <li/>
                </ul>
            </body>
        </topic>
    </topic>
</topic>
