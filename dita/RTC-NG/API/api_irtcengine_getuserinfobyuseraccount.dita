<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE reference PUBLIC "-//OASIS//DTD DITA Reference//EN" "reference.dtd">
<reference id="api_irtcengine_getuserinfobyuseraccount">
    <title><ph keyref="getUserInfoByUserAccount" /></title>
    <shortdesc id="short"><ph id="shortdesc">通过 User Account 获取用户信息。</ph></shortdesc>
    <prolog>
        <metadata>
            <keywords>
                <indexterm keyref="getUserInfoByUserAccount" />
            </keywords>
        </metadata>
    </prolog>
    <refbody>
        <section id="prototype">
            <p outputclass="codeblock">
            <codeblock props="hmos" outputclass="language-arkts"></codeblock>
            <codeblock props="ios mac" outputclass="language-objectivec">- (AgoraUserInfo* _Nullable)getUserInfoByUserAccount:(NSString* _Nonnull)userAccount withError:(AgoraErrorCode* _Nullable)error;</codeblock>
            <codeblock props="android" outputclass="language-java">public abstract int getUserInfoByUserAccount(String userAccount, UserInfo userInfo);</codeblock>
            <codeblock props="cpp unreal" outputclass="language-cpp">virtual int getUserInfoByUserAccount(const char* userAccount, rtc::UserInfo* userInfo, const char* channelId = NULL, const char* localUserAccount = NULL) = 0;</codeblock>
         <codeblock props="bp" outputclass="language-cpp">UFUNCTION(BlueprintCallable, Category = &quot;Agora|IRtcEngine&quot;)
	int GetUserInfoByUserAccount(const FString&amp; userAccount, FUserInfo&amp; userInfo);</codeblock>
            <codeblock props="electron" outputclass="language-typescript">abstract getUserInfoByUserAccount(userAccount: string): UserInfo;</codeblock>
            <codeblock props="unity cs" outputclass="language-csharp">public abstract int GetUserInfoByUserAccount(string userAccount, ref UserInfo userInfo);</codeblock>
            <codeblock props="rn" outputclass="language-typescript">abstract getUserInfoByUserAccount(userAccount: string): UserInfo;</codeblock>
            <codeblock props="flutter" outputclass="language-dart">Future&lt;UserInfo&gt; getUserInfoByUserAccount(String userAccount);</codeblock>
            <codeblock props="reserve" outputclass="language-cpp"></codeblock></p>
        </section>
        <section id="detailed_desc" deliveryTarget="details" otherprops="no-title">
            <p>远端用户加入频道后，SDK 会获取到该远端用户的 UID 和 User Account，然后缓存一个包含了远端用户 UID 和 User Account 的映射表，并在本地触发 <xref keyref="onUserInfoUpdated"/> 回调。收到回调后，调用该方法传入 User Account 来获取包含了指定用户 UID 的 <xref keyref="UserInfo" /> 对象。</p>
        </section>
        <section id="timing" deliveryTarget="details">
            <title>调用时机</title>
            <p>在收到 <xref keyref="onUserInfoUpdated"/> 回调后调用。</p>
        </section>
        <section id="restriction" deliveryTarget="details">
            <title>调用限制</title>
            <p>无。</p>
        </section>
        <section id="related" deliveryTarget="details" conkeyref="getUserInfoByUid/related">
            <title>相关回调</title>
            <p/>
        </section>
        <section id="parameters" deliveryTarget="details">
            <title>参数</title>
            <parml>
            <plentry>
                <pt>userAccount</pt>
                <pd>用户 User Account。</pd>
            </plentry>
            <plentry props="cpp unreal bp unity android cs" conkeyref="getUserInfoByUid/userInfo">
                <pt />
                <pd />
            </plentry>
            <plentry props="cpp unreal bp">
                <pt>channelId</pt>
                <pd><p conkeyref="joinChannel2/channelID_desc"/></pd>
            </plentry>
            <plentry id="localUserAccount" props="cpp unreal bp">
                <pt>localUserAccount</pt>
                <pd>本地用户的 User Account。</pd>
            </plentry>
            <plentry props="ios mac" conkeyref="getUserInfoByUid/error">
                <pt />
                <pd />
            </plentry>
            </parml> </section>
        <section conkeyref="getUserInfoByUid/return_values" id="return_values">
            <title/>
        </section>
    </refbody>
</reference>
