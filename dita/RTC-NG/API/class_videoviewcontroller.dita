<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE reference PUBLIC "-//OASIS//DTD DITA Reference//EN" "reference.dtd">
<reference id="class_videoviewcontroller">
    <title><ph keyref="VideoViewController" /></title>
    <shortdesc id="short"><ph id="shortdesc"><xref keyref="AgoraVideoView" /> 的控制器，用于渲染本地和远端视频。</ph></shortdesc>
    <refbody>
        <section id="prototype">
            <p outputclass="codeblock">
            <codeblock props="android" outputclass="language-java" />
            <codeblock props="ios mac" outputclass="language-objectivec" />
            <codeblock props="cpp unreal" outputclass="language-cpp" />
            <codeblock props="electron" outputclass="language-typescript" />
            <codeblock props="unity cs" outputclass="language-csharp" />
            <codeblock props="rn" outputclass="language-typescript" />
            <codeblock props="flutter" outputclass="language-dart">class VideoViewController
    with VideoViewControllerBaseMixin
    implements VideoViewControllerBase {
  VideoViewController({
    required this.rtcEngine,
    required this.canvas,
    this.useFlutterTexture = false,
    this.useAndroidSurfaceView = false,
  }) : connection = const RtcConnection();

  VideoViewController.remote({
    required this.rtcEngine,
    required this.canvas,
    required this.connection,
    this.useFlutterTexture = false,
    this.useAndroidSurfaceView = false,
  }) : assert(connection.channelId != null);

  @override
  final RtcEngine rtcEngine;

  @override
  final VideoCanvas canvas;

  @override
  final RtcConnection connection;

  @override
  final bool useFlutterTexture;

  @override
  final bool useAndroidSurfaceView;

  @protected
  @override
  int getVideoSourceType() {
    return canvas.uid! == 0
        ? VideoSourceType.videoSourceCamera.value()
        : VideoSourceType.videoSourceRemote.value();
  }
}</codeblock>
            <codeblock props="reserve" outputclass="language-cpp"></codeblock></p>
        </section>
        <section id="detailed_desc">
            <p>在不同平台上，该类对应的默认视图不同：
            <ul>
            <li>Android: <xref keyref="TextureView-link" />。如果你想要使用 <xref keyref="SurfaceView-link" />，则设置 <codeph>useAndroidSurfaceView</codeph> 的属性为 <codeph>true</codeph>。</li>
            <li>iOS: <xref keyref="UIView-link" />。 如果你想要使用 Flutter Texture，则设置 <codeph>useFlutterTexture</codeph> 的属性为 <codeph>true</codeph>。</li>
            <li>macOS 和 Windows：<xref keyref="FlutterTexture-link" />。</li>
            </ul> </p>
        </section>
        <section id="parameters">
            <title><text conref="../conref/conref_api_metadata.dita#conref_api_metadata/property" /></title>
            <parml>
            <plentry id="rtcengine">
                <pt>rtcEngine</pt>
                <pd><xref keyref="IRtcEngine" />。</pd>
            </plentry>
            <plentry id="canvas">
                <pt>canvas</pt>
                <pd>本地视频显示属性。详见 <xref keyref="VideoCanvas" />。</pd>
            </plentry>
            <plentry id="connection">
                <pt>connection</pt>
                <pd>Connection 信息。详见 <xref keyref="RtcConnection" />。</pd>
            </plentry>
            <plentry id="fluttertexture">
                <pt>useFlutterTexture</pt>
                <pd>是否使用 <codeph>FlutterTexture</codeph> 渲染视频：
                    <ul>
                    <li><codeph><ph keyref="true" /></codeph>: 使用 <codeph>FlutterTexture</codeph> 渲染视频。</li>
                    <li><codeph><ph keyref="false" /></codeph>: 不使用  <codeph>FlutterTexture</codeph> 渲染视频。</li>
                    </ul>
                    <note><codeph>FlutterTexture</codeph> 仅适用于 iOS、macOS 和 Windows 平台。</note></pd>
            </plentry>
            <plentry id="androidsurfaceview">
                <pt>useAndroidSurfaceView</pt>
                <pd>是否使用 Android <codeph>SurfaceView</codeph> 渲染视频：
                    <ul>
                    <li><codeph><ph keyref="true" /></codeph>: 使用 Android <codeph>SurfaceView</codeph> 渲染视频。</li>
                    <li><codeph><ph keyref="false" /></codeph>: 不使用  Android <codeph>SurfaceView</codeph> 渲染视频。</li>
                    </ul>
                    <note>Android <codeph>SurfaceView</codeph> 仅适用于 Android 平台。</note></pd>
            </plentry>
            </parml> </section>
    </refbody>
</reference>