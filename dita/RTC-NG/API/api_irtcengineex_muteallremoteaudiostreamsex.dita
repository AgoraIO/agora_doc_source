<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE reference PUBLIC "-//OASIS//DTD DITA Reference//EN" "reference.dtd">
<reference id="api_irtcengineex_muteallremoteaudiostreamsex">
    <title><ph keyref="muteAllRemoteAudioStreamsEx"/></title>
    <shortdesc id="short"><ph id="shortdesc">取消或恢复订阅所有远端用户的音频流。</ph></shortdesc>
    <prolog>
        <metadata>
            <keywords>
                <indexterm keyref="muteAllRemoteAudioStreamsEx"/>
            </keywords>
        </metadata>
    </prolog>
    <refbody>
        <section id="prototype">
            <p outputclass="codeblock">
            <codeblock props="android" outputclass="language-java">public abstract int muteAllRemoteAudioStreamsEx(boolean muted, RtcConnection connection);</codeblock>
            <codeblock props="ios mac" outputclass="language-objectivec">- (int)muteAllRemoteAudioStreamsEx:(BOOL)mute
                        connection:(AgoraRtcConnection * _Nonnull)connection  NS_SWIFT_NAME(muteAllRemoteAudioStreamsEx(_:connection:));</codeblock>
            <codeblock props="cpp unreal bp" outputclass="language-cpp">virtual int muteAllRemoteAudioStreamsEx(bool mute, const RtcConnection&amp; connection) = 0;</codeblock>
            <codeblock props="electron" outputclass="language-typescript">abstract muteAllRemoteAudioStreamsEx(
    mute: boolean,
    connection: RtcConnection
  ): number;</codeblock>
            <codeblock props="unity cs" outputclass="language-csharp">public abstract int MuteAllRemoteAudioStreamsEx(bool mute, RtcConnection connection);</codeblock>
            <codeblock props="rn" outputclass="language-typescript">abstract muteAllRemoteAudioStreamsEx(
    mute: boolean,
    connection: RtcConnection
  ): number;</codeblock>
            <codeblock props="flutter" outputclass="language-dart">Future&lt;void> muteAllRemoteAudioStreamsEx(
      {required bool mute, required RtcConnection connection});</codeblock>
            <codeblock props="reserve" outputclass="language-cpp"/></p>
        </section>
        <section id="detailed_desc">
            <title>详情</title>
            <p id="desc">成功调用该方法后，本地用户会取消或恢复订阅远端用户的音频流，包括在调用该方法后加入频道的用户的音频流。</p>
            <note type="attention" id="note">
            <ul>
            <li>该方法需要在加入频道后调用。</li>
            <li>如果需要在加入频道前设置默认不订阅远端用户音频流，可以在调用 <xref keyref="joinChannel2"/> 加入频道时设置 <parmname>autoSubscribeAudio</parmname> 为 <codeph><ph keyref="false"/></codeph>。</li>
            <li props="ios android cpp unreal bp"><ph>该方法的推荐设置详见<xref keyref="guide-set-subscribing-state">设置订阅状态</xref>。</ph></li>
            </ul> </note> </section>
        <section id="parameters">
            <title>参数</title>
            <parml>
            <plentry>
                <pt props="android">muted</pt>
                <pt props="ios mac cpp unreal bp unity flutter rn electron cs">mute</pt>
                <pd>
                    <p>是否取消订阅所有远端用户的音频流：
                    <ul>
                    <li><codeph><ph keyref="true"/></codeph>: 取消订阅所有远端用户的音频流。</li>
                    <li><codeph><ph keyref="false"/></codeph>:（默认）订阅所有远端用户的音频流。</li>
                    </ul> </p>
                </pd>
            </plentry>
            <plentry conkeyref="joinChannelEx/connection">
                <pt/>
                <pd/>
            </plentry>
            </parml> </section>
        <section id="return_values">
            <title><ph keyref="return-section-title"/></title>
            <p props="flutter">方法成功调用时，无返回值；方法调用失败时，会抛出 <xref keyref="AgoraRtcException"/> 异常，你需要捕获异常并进行处理。</p>
            <ul>
            <li props="native unreal bp electron unity rn cs">0: 方法调用成功</li>
            <li> &lt; 0: 方法调用失败</li>
            </ul> </section>
    </refbody>
</reference>
