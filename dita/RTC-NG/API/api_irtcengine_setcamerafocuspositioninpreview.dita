<?xml version='1.0' encoding='UTF-8'?>
<!DOCTYPE reference PUBLIC "-//OASIS//DTD DITA Reference//EN" "reference.dtd">
<reference id="api_irtcengine_setcamerafocuspositioninpreview">
    <title><ph keyref="setCameraFocusPositionInPreview"/></title>
    <shortdesc id="short"><ph id="shortdesc">设置摄像头的手动对焦位置。</ph></shortdesc>
    <prolog>
        <metadata>
            <keywords>
                <indexterm keyref="setCameraFocusPositionInPreview"/>
            </keywords>
        </metadata>
    </prolog>
    <refbody>
        <section id="prototype">
            <p outputclass="codeblock">
            <codeblock props="android" outputclass="language-java">public abstract int setCameraFocusPositionInPreview(float positionX, float positionY);</codeblock>
            <codeblock props="hmos" outputclass="language-arkts">public abstract setCameraFocusPositionInPreview(positionX: number, positionY: number): number;</codeblock>
            <codeblock props="ios mac" outputclass="language-objectivec">- (BOOL)setCameraFocusPositionInPreview:(CGPoint)position NS_SWIFT_NAME(setCameraFocusPositionInPreview(_:));</codeblock>
            <codeblock props="cpp unreal" outputclass="language-cpp">virtual int setCameraFocusPositionInPreview(float positionX, float positionY) = 0;</codeblock>
         <codeblock props="bp" outputclass="language-cpp">UFUNCTION(BlueprintCallable, Category = "Agora|IRtcEngine")
	int SetCameraFocusPositionInPreview(float positionX, float positionY);</codeblock>
            <codeblock props="electron" outputclass="language-typescript">abstract setCameraFocusPositionInPreview(
    positionX: number,
    positionY: number
  ): number;</codeblock>
            <codeblock props="unity cs" outputclass="language-csharp">public abstract int SetCameraFocusPositionInPreview(float positionX, float positionY);</codeblock>
            <codeblock props="rn" outputclass="language-typescript">abstract setCameraFocusPositionInPreview(
    positionX: number,
    positionY: number
  ): number;</codeblock>
            <codeblock props="flutter" outputclass="language-dart">Future&lt;void&gt; setCameraFocusPositionInPreview(
    {required double positionX, required double positionY});</codeblock>
            <codeblock props="reserve" outputclass="language-cpp"/></p>
        </section>
        <section id="detailed_desc">
            <title>详情</title>
            <note type="attention"><ul>
            <li props="bp cpp cs flutter unity unreal">该方法仅适用于 Android 和 iOS。</li>
            <li conkeyref="setCameraExposureFactor/sequence"/>
            <li>成功调用该方法后，本地会触发 <xref keyref="onCameraFocusAreaChanged"/> 回调。</li>
            </ul></note>
         <note type="attention" props="cpp"><xref keyref="setCameraFocusPositionInPreview"/> 仅适用于 Android 和 iOS 平台。必须在调用 <xref keyref="enableVideo"/> 后调用该方法。设置将在摄像头成功开启后生效，即 SDK 触发 <xref keyref="onLocalVideoStateChanged"/> 回调并返回本地视频状态为 <ph keyref="LOCAL_VIDEO_STREAM_STATE_CAPTURING"/>（1）后生效。调用该方法成功后，SDK 会触发 <xref keyref="onCameraFocusAreaChanged"/> 回调。</note>
            <note type="attention" props="apple">你必须在调用 <xref keyref="enableVideo"/> 方法之后再调用本方法。设置结果会在摄像头成功开启后生效，即 SDK 触发 <xref keyref="onLocalVideoStateChanged"/> 回调并返回本地视频状态为 <ph keyref="AgoraVideoLocalStateCapturing"/>（1）后生效。成功调用该方法后，SDK 会触发 <xref keyref="onCameraFocusAreaChanged"/> 回调。</note>
            <note type="attention" props="android">你必须在调用 <xref keyref="enableVideo"/> 之后再调用此方法。设置结果在摄像头成功开启后生效，即 SDK 触发 <xref keyref="onLocalVideoStateChanged"/> 回调并返回本地视频状态为 <ph keyref="LOCAL_VIDEO_STREAM_STATE_CAPTURING"/>（1）后生效。成功调用该方法后，SDK 会触发 <xref keyref="onCameraFocusAreaChanged"/> 回调。</note>
            </section>
        <section id="parameters">
            <title>参数</title>
            <parml>
            <plentry props="android bp cpp cs flutter hmos rn unity unreal">
                <pt props="android bp cpp cs flutter hmos rn unity unreal">positionX</pt>
                <pd props="apple bp cs electron flutter rn unity unreal">触摸点相对于视图的横坐标。</pd>
            <pd props="android cpp">视图中触摸点的水平坐标。</pd>
                </plentry>
            <plentry props="android bp cpp cs flutter hmos rn unity unreal">
                <pt props="android bp cpp cs flutter hmos rn unity unreal">positionY</pt>
                <pd props="apple bp cs electron flutter rn unity unreal">触摸点相对于视图的纵坐标。</pd>
            <pd props="android cpp">视图中触摸点的垂直坐标。</pd>
                </plentry>
            <plentry props="apple">
                <pt props="apple">position</pt>
                <pd props="android bp cpp cs electron flutter mac rn unity unreal">触摸点相对于视图的坐标。</pd>
            <pd props="ios">视图中触摸点的坐标。</pd>
                </plentry>
        </parml> </section>
        <section id="return_values" props="bp cs flutter native rn unity unreal">
            <title><ph keyref="return-section-title"/></title>
        <p props="flutter">方法成功调用时，无返回值；方法调用失败时，会抛出 <xref keyref="AgoraRtcException"/> 异常，你需要捕获异常并进行处理。<ph props="cn">详见<xref keyref="error-code-link"/>了解详情和解决建议。</ph></p>
        <ul props="bp cs rn unity unreal">
            <li>0: 方法调用成功。</li>
            <li>&lt; 0: 方法调用失败。<ph props="cn">详见<xref keyref="error-code-link"/>了解详情和解决建议。</ph></li>
            </ul>
        <p props="android cpp"><ul>
                        <li>0：方法调用成功。</li>
                        <li>&lt; 0：方法调用失败。</li>
                        </ul>
                    </p>
        <p props="apple"><ul>
                        <li><codeph><ph keyref="true"/></codeph>：设置成功。</li>
                        <li><codeph><ph keyref="false"/></codeph>：设置失败。</li>
                        </ul>
                    </p>
    </section>
    </refbody>
</reference>
