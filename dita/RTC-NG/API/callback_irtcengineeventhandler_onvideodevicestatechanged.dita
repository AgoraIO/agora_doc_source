<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE reference PUBLIC "-//OASIS//DTD DITA Reference//EN" "reference.dtd">
<reference id="callback_irtcengineeventhandler_onvideodevicestatechanged">
     <title> <ph keyref="onVideoDeviceStateChanged"/> </title>
     <shortdesc id="short"> <ph id="shortdesc">视频设备变化回调。</ph> </shortdesc>
     <prolog>
          <metadata>
               <keywords>
                    <indexterm keyref="onVideoDeviceStateChanged"/>
               </keywords>
          </metadata>
     </prolog>
     <refbody>
          <section id="prototype">
               <p outputclass="codeblock">
               <codeblock props="android" outputclass="language-java"/>
               <codeblock props="ios mac" outputclass="language-objectivec">- (void)rtcEngine:(AgoraRtcEngineKit * _Nonnull)engine device:(NSString * _Nonnull)deviceId type:(AgoraMediaDeviceType)deviceType stateChanged:(NSInteger)state NS_SWIFT_NAME(rtcEngine(_:device:type:stateChanged:));</codeblock>
               <codeblock props="cpp unreal bp" outputclass="language-cpp">virtual void onVideoDeviceStateChanged(const char* deviceId, int deviceType, int deviceState) {
     (void)deviceId;
     (void)deviceType;
     (void)deviceState;
     }</codeblock>
               <codeblock props="electron" outputclass="language-typescript">  onVideoDeviceStateChanged?(
    deviceId: string,
    deviceType: MediaDeviceType,
    deviceState: number
  ): void;</codeblock>
               <codeblock props="unity cs" outputclass="language-csharp">public virtual void OnVideoDeviceStateChanged(string deviceId, int deviceType, int deviceState)</codeblock>
               <codeblock props="rn" outputclass="language-typescript">  onVideoDeviceStateChanged?(
    deviceId: string,
    deviceType: MediaDeviceType,
    deviceState: number
  ): void;</codeblock>
               <codeblock props="flutter" outputclass="language-dart">final void Function(String deviceId, MediaDeviceType deviceType,
      MediaDeviceStateType deviceState)? onVideoDeviceStateChanged;</codeblock>
            <codeblock props="reserve" outputclass="language-cpp"></codeblock></p>
          </section>
          <section id="detailed_desc">
               <p id="desc">该回调提示系统视频设备状态发生改变，比如被拔出或移除。如果设备已使用外接摄像头采集，外接摄像头被拔开后，视频会中断。</p>
               <note props="cpp unreal bp unity flutter">该回调仅适用于 Windows 和 macOS。</note> </section>
          <section id="parameters">
               <title> <ph keyref="callback-section-title"/> </title>
               <parml>
               <plentry>
                    <pt>deviceId</pt>
                    <pd>设备 ID。</pd>
               </plentry>
               <plentry>
                    <pt>deviceType</pt>
                    <pd>设备类型。详见 <xref keyref="MEDIA_DEVICE_TYPE"/>。</pd>
               </plentry>
               <plentry id="state">
                    <pt>deviceState</pt>
                    <pd>设备状态。</pd>
                    <pd>
                         <ul>
                         <li>在 Windows  平台上，详见 <xref keyref="MEDIA_DEVICE_STATE_TYPE"/> 。</li>
                         <li props="cpp unreal bp electron unity flutter">在 macOS 平台上：
                                        
                              <ul>
                              <li>0: 设备就绪。</li>
                              <li>8: 设备被拔出。</li>
                              </ul></li>
                         </ul> </pd>
               </plentry>
               </parml> </section>
     </refbody>
</reference>
