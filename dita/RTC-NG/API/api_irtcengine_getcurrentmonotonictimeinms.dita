<?xml version='1.0' encoding='UTF-8'?>
<!DOCTYPE reference PUBLIC "-//OASIS//DTD DITA Reference//EN" "reference.dtd">
<reference id="api_irtcengine_getcurrentmonotonictimeinms">
    <title><ph keyref="getCurrentMonotonicTimeInMs"/></title>
    <shortdesc id="short"><ph id="shortdesc">获取 SDK 当前的 Monotonic Time。</ph></shortdesc>
    <prolog>
        <metadata>
            <keywords>
                <indexterm keyref="getCurrentMonotonicTimeInMs"/>
            </keywords>
        </metadata>
    </prolog>
    <refbody>
        <section id="prototype">
            <p outputclass="codeblock">
            <codeblock props="android" outputclass="language-java">public abstract long getCurrentMonotonicTimeInMs();</codeblock>
            <codeblock props="hmos" outputclass="language-arkts">public abstract getCurrentMonotonicTimeInMs(): number;</codeblock>
            <codeblock props="ios mac" outputclass="language-objectivec">- (int64_t)getCurrentMonotonicTimeInMs NS_SWIFT_NAME(getCurrentMonotonicTimeInMs());</codeblock>
            <codeblock props="cpp unreal" outputclass="language-cpp">virtual int64_t getCurrentMonotonicTimeInMs() = 0;</codeblock>
            <codeblock props="bp" outputclass="language-cpp">UFUNCTION(BlueprintCallable, Category = "Agora|IRtcEngine")
	int64 GetCurrentMonotonicTimeInMs();</codeblock>
            <codeblock props="electron" outputclass="language-typescript">abstract getCurrentMonotonicTimeInMs(): number;</codeblock>
            <codeblock props="unity cs" outputclass="language-csharp">public abstract long GetCurrentMonotonicTimeInMs();</codeblock>
            <codeblock props="rn" outputclass="language-typescript">abstract getCurrentMonotonicTimeInMs(): number;</codeblock>
            <codeblock props="flutter" outputclass="language-dart">Future&lt;int&gt; getCurrentMonotonicTimeInMs();</codeblock> </p>
        </section>
        <section id="detailed_desc" deliveryTarget="details" otherprops="no-title">
            <p>Monotonic Time 是一个单调递增的时间序列，其值随时间推移持续增加，单位为毫秒。在自定义视频采集和自定义音频采集场景中，为确保音视频同步，声网建议调用该方法获取 SDK 当前的 Monotonic Time，并将该值传入采集的视频帧（<xref keyref="VideoFrame"/>）和音频帧（<xref keyref="AudioFrame"/>）的时间戳参数中。</p>
            <p>在自定义视频采集、自定义音频采集场景中，为确保音视频同步，声网建议你调用该方法获取 SDK 当前的 Monotonic Time 后，将该值传入采集的视频帧（<xref keyref="VideoFrame"/>）、音频帧（<xref keyref="AudioFrame"/>）的时间戳参数。</p>
        <note type="attention" props="apple">该方法可以在加入频道前或加入频道后调用。</note>
            </section>
        <section id="timing" deliveryTarget="details">
            <title>调用时机</title>
            <p>该方法可以在加入频道前或加入频道后调用。</p>
        </section>        
        <section id="restriction" deliveryTarget="details">
            <title>调用限制</title>
            <p>无。</p>
        </section>
        <section id="return_values" props="native">
            <title>返回值</title>
        <ul>
            <li>≥ 0: 方法调用成功，返回 SDK 当前的 Monotonic Time（毫秒）。</li>
            <li>&lt; 0: 方法调用失败。<ph props="cn">详见<xref keyref="error-code-link"/>了解详情和解决建议。</ph></li>
            </ul>
        <p props="apple"><ul>
                        <li>≥ 0：方法调用成功，返回 SDK 当前的 <codeph>Monotonic Time</codeph>（单位为毫秒）。</li>
                        <li>&lt; 0：方法调用失败。</li>
                        </ul>
                    </p>
        <p props="cpp"><ul>
                        <li>≥0：方法调用成功，返回 SDK 当前的 Monotonic Time（单位为毫秒）。</li>
                        <li>&lt; 0：方法调用失败。</li>
                        </ul>
                    </p>
        <p props="android"><ul>
                        <li>≥ 0：方法调用成功，返回 SDK 当前的单调时间（单位为毫秒）。</li>
                        <li>&lt; 0：方法调用失败。</li>
                        </ul>
                    </p>
    </section>
    </refbody>
</reference>
