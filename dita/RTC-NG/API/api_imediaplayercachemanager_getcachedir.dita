<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE reference PUBLIC "-//OASIS//DTD DITA Reference//EN" "reference.dtd">
<reference id="api_imediaplayercachemanager_getcachedir">
    <title><ph keyref="getCacheDir"/></title>
    <shortdesc id="short"><ph id="shortdesc">获取缓存文件的储存路径。</ph></shortdesc>
    <prolog>
        <metadata>
            <keywords>
                <indexterm keyref="getCacheDir"/>
            </keywords>
        </metadata>
    </prolog>
    <refbody>
        <section id="prototype">
            <p outputclass="codeblock">
            <codeblock props="android" outputclass="language-java">String getCacheDir();</codeblock>
            <codeblock props="ios mac" outputclass="language-objectivec">- (NSString *)cacheDir;</codeblock>
            <codeblock props="cpp unreal" outputclass="language-cpp">virtual int getCacheDir(char* path, int length) = 0;</codeblock>
         <codeblock props="bp" outputclass="language-cpp">UFUNCTION(BlueprintCallable, Category = &quot;Agora|IMediaPlayerCacheManager&quot;)
	int GetCacheDir(FString path, int length);</codeblock>
            <codeblock props="electron" outputclass="language-typescript">abstract getCacheDir(length: number): string;</codeblock>
            <codeblock props="unity cs" outputclass="language-csharp">public abstract int GetCacheDir(out string path, int length);</codeblock>
            <codeblock props="rn" outputclass="language-typescript">abstract getCacheDir(length: number): string;</codeblock>
            <codeblock props="flutter" outputclass="language-dart">Future&lt;String> getCacheDir(int length);</codeblock>
            <codeblock props="reserve" outputclass="language-cpp"></codeblock></p>
        </section>
        <section id="detailed_desc">
            <title>详情</title>
            <p>如果你在调用该方法前未曾调用 <xref keyref="setCacheDir"/> 方法自定义缓存文件的储存路径，该方法返回的为 SDK 默认的缓存文件储存路径。</p>
        </section>
        <section props="cpp unreal bp electron unity rn flutter cs" id="parameters">
            <title>参数</title>
            <parml>
            <plentry props="cpp unreal bp unity cs">
                <pt>path</pt>
                <pd>输出参数，缓存文件的储存路径。</pd>
            </plentry>
            <plentry>
                <pt>length</pt>
                <pd><ph>输入参数，缓存文件储存路径字符串的最大长度。</ph><ph props="cpp unreal bp unity cs">根据你在 <parmname>path</parmname> 中获得的缓存文件储存路径字符串来填写。</ph></pd>
            </plentry>
            </parml> </section>
        <section id="return_values">
            <title>返回值</title>
            <ul>
            <li props="cpp unreal bp unity cs">0：方法调用成功。</li>
            <li props="apple android electron rn flutter">方法调用成功时，返回缓存文件的储存路径。</li>
            <li>&lt; 0：方法调用失败，详见 <xref keyref="MEDIA_PLAYER_REASON"/>。</li>
            </ul> </section>
    </refbody>
</reference>
