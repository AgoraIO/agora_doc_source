<?xml version='1.0' encoding='UTF-8'?>
<!DOCTYPE reference PUBLIC "-//OASIS//DTD DITA Reference//EN" "reference.dtd">
<reference id="api_irtcengine_setscreencapturescenario">
    <title><ph keyref="setScreenCaptureScenario"/></title>
    <shortdesc id="short"><ph id="shortdesc">设置屏幕共享场景。</ph></shortdesc>
    <prolog>
        <metadata>
            <keywords>
                <indexterm keyref="setScreenCaptureScenario"/>
            </keywords>
        </metadata>
    </prolog>
    <refbody>
        <section id="prototype">
            <p outputclass="codeblock">
            <codeblock props="android" outputclass="language-java">public abstract int setScreenCaptureScenario(Constants.ScreenScenarioType screenScenario);</codeblock>
            <codeblock props="hmos" outputclass="language-arkts"/>
            <codeblock props="ios mac" outputclass="language-objectivec">- (int)setScreenCaptureScenario:(AgoraScreenScenarioType)scenarioType  NS_SWIFT_NAME(setScreenCaptureScenario(_:));</codeblock>
            <codeblock props="cpp unreal" outputclass="language-cpp">virtual int setScreenCaptureScenario(SCREEN_SCENARIO_TYPE screenScenario) = 0;</codeblock>
         <codeblock props="bp" outputclass="language-cpp">UFUNCTION(BlueprintCallable, Category = "Agora|IRtcEngine")
	int SetScreenCaptureScenario(ESCREEN_SCENARIO_TYPE screenScenario);</codeblock>
            <codeblock props="electron" outputclass="language-typescript">abstract setScreenCaptureScenario(screenScenario: ScreenScenarioType): number;</codeblock>
            <codeblock props="unity cs" outputclass="language-csharp">public abstract int SetScreenCaptureScenario(SCREEN_SCENARIO_TYPE screenScenario);</codeblock>
            <codeblock props="rn" outputclass="language-typescript">abstract setScreenCaptureScenario(screenScenario: ScreenScenarioType): number;</codeblock>
            <codeblock props="flutter" outputclass="language-dart">Future&lt;void&gt; setScreenCaptureScenario(ScreenScenarioType screenScenario);</codeblock>
            <codeblock props="reserve" outputclass="language-cpp"/></p>
        </section>
        <section id="detailed_desc">
            <dl outputclass="since">
            <dlentry props="android">
                <dt>自从：</dt>
                <dd props="native">自 v4.2.0 版本新增。</dd>
            </dlentry>
            </dl>
            <title>详情</title>
            <p>调用该方法设置屏幕共享场景。SDK 会根据设置的场景自动优化共享的视频质量和用户体验。</p>
            <note>声网建议你在加入频道前调用该方法。</note>
        <note type="attention" props="android cpp">声网建议你在加入频道前调用此方法。</note>
            <note type="attention" props="apple">建议在加入频道前调用此方法。</note>
            </section>
        <section id="parameters">
            <title>参数</title>
            <parml>
            <plentry>
                <pt props="apple">scenarioType</pt>
                <pt props="android bp cpp cs electron flutter rn unity unreal">screenScenario</pt>
                <pd>屏幕共享的场景，详见 <xref keyref="SCREEN_SCENARIO_TYPE"/>。</pd>
            </plentry>
            <plentry props="android cpp ios">
                <pt props="android cpp ios">screenScenario</pt>
                <pd props="android cpp ios">屏幕共享场景。详见 <xref keyref="SCREEN_SCENARIO_TYPE"/>。</pd>
                </plentry>
        </parml> </section>
        <section id="return_values" props="bp cs electron flutter native rn unity unreal">
            <title><ph keyref="return-section-title"/></title>
        <p props="flutter">方法成功调用时，无返回值；方法调用失败时，会抛出 <xref keyref="AgoraRtcException"/> 异常，你需要捕获异常并进行处理。<ph props="cn">详见<xref keyref="error-code-link"/>了解详情和解决建议。</ph></p>
        <ul props="bp cs electron rn unity unreal">
            <li>0: 方法调用成功。</li>
            <li>&lt; 0: 方法调用失败。<ph props="cn">详见<xref keyref="error-code-link"/>了解详情和解决建议。</ph></li>
            </ul>
        <p props="android apple"><ul>
                        <li>0：方法调用成功。</li>
                        <li>&lt; 0：方法调用失败。</li>
                        </ul>
                    </p>
        <p props="cpp"><ul>
                        <li>0：方法调用成功。</li>
                        <li>&lt; 0：方法调用失败。<ul>
                            <li><ph keyref="ERR_NOT_SUPPORTED"/>（4）：无法设置屏幕共享场景。</li>
                            <li><ph keyref="ERR_FAILED"/>（1）：发生通用错误（无明确原因）。</li>
                            <li><ph keyref="ERR_NOT_INITIALIZED"/>（7）：未初始化 <xref keyref="IRtcEngine"/> 即调用该方法。</li>
                            </ul>
                        </li>
                        </ul>
                    </p>
        </section>
    </refbody>
</reference>
