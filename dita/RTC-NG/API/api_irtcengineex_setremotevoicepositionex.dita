<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE reference PUBLIC "-//OASIS//DTD DITA Reference//EN" "reference.dtd">
<reference id="api_irtcengineex_setremotevoicepositionex">
    <title><ph keyref="setRemoteVoicePositionEx" /></title>
    <shortdesc id="short"><ph id="shortdesc">设置远端用户声音的 2D 位置，即水平面位置。</ph></shortdesc>
    <prolog>
        <metadata>
            <keywords>
                <indexterm keyref="setRemoteVoicePositionEx" />
            </keywords>
        </metadata>
    </prolog>
    <refbody>
        <section id="prototype">
            <p outputclass="codeblock">
            <codeblock props="android" outputclass="language-java">public abstract int setRemoteVoicePositionEx(
      int uid, double pan, double gain, RtcConnection connection);</codeblock>
            <codeblock props="ios mac" outputclass="language-objectivec">- (int)setRemoteVoicePosition:(NSUInteger)uid
                          pan:(double)pan
                         gain:(double)gain
                   connection:(AgoraRtcConnection * _Nonnull)connection;</codeblock>
            <codeblock props="cpp" outputclass="language-cpp">virtual int setRemoteVoicePositionEx(uid_t uid, double pan, double gain, const RtcConnection&amp; connection) = 0;</codeblock>
            <codeblock props="electron" outputclass="language-typescript">abstract setRemoteVoicePositionEx(
    uid: number,
    pan: number,
    gain: number,
    connection: RtcConnection
  ): number;</codeblock>
            <codeblock props="unity" outputclass="language-csharp">public abstract int SetRemoteVoicePositionEx(uint uid, double pan, double gain, RtcConnection connection);</codeblock>
            <codeblock props="rn" outputclass="language-typescript">abstract setRemoteVoicePositionEx(
    uid: number,
    pan: number,
    gain: number,
    connection: RtcConnection
  ): number;</codeblock>
            <codeblock props="flutter" outputclass="language-dart">Future&lt;void&gt; setRemoteVoicePositionEx(
      {required int uid,
      required double pan,
      required double gain,
      required RtcConnection connection});</codeblock>
            <codeblock props="unreal" outputclass="language-cpp"></codeblock></p>
        </section>
        <section id="detailed_desc">
            <p>设置远端用户声音的空间位置和音量，方便本地用户听声辨位。</p>
            <p>通过调用该接口设置远端用户声音出现的位置，左右声道的声音差异会产生声音的方位感，从而判断出远端用户的实时位置。在多人在线游戏场景，如吃鸡游戏中，该方法能有效增加游戏角色的方位感，模拟真实场景。</p>
            <note type="attention">
            <ul>
            <li>为获得最佳听觉体验，我们建议用户佩戴有线耳机。</li>
            <li>该方法需要在加入频道后调用。</li>
            </ul> </note> </section>
        <section id="parameters">
            <title>参数</title>
            <parml>
            <plentry>
                <pt>uid</pt>
                <pd>远端用户的 ID。</pd>
            </plentry>
            <plentry>
                <pt>pan</pt>
                <pd>设置远端用户声音的空间位置，取值范围为 [-1.0,1.0]:


                    
                    <ul>
                    <li>-1.0: 声音出现在左边。</li>
                    <li>(默认）0.0: 声音出现在正前方。</li>
                    <li>1.0: 声音出现在右边。</li>
                    </ul></pd>
            </plentry>
            <plentry>
                <pt>gain</pt>
                <pd>设置远端用户声音的音量，取值范围为 [0.0,100.0]，默认值为 100.0，表示该用户的原始音量。取值越小，则音量越低。</pd>
            </plentry>
            <plentry conkeyref="joinChannelEx/connection">
                <pt />
                <pd />
            </plentry>
            </parml> </section>
        <section id="return_values" props="native unity rn electron">
            <title>返回值</title>
            <ul>
            <li>0: 方法调用成功</li>
            <li>&lt; 0: 方法调用失败</li>
            </ul> </section>
    </refbody>
</reference>