<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE reference PUBLIC "-//OASIS//DTD DITA Reference//EN" "reference.dtd">
<reference id="api_irtcengine_enablefacedetection">
    <title><ph keyref="enableFaceDetection" /></title>
    <shortdesc id="short"><ph id="shortdesc">开启/关闭本地人脸检测。</ph></shortdesc>
    <prolog>
        <metadata>
            <keywords>
                <indexterm keyref="enableFaceDetection" />
            </keywords>
        </metadata>
    </prolog>
    <refbody>
        <section id="prototype">
            <p outputclass="codeblock">
            <codeblock props="android" outputclass="language-java">public abstract int enableFaceDetection(boolean enabled);</codeblock>
            <codeblock props="ios mac" outputclass="language-cpp">- (int)enableFaceDetection:(bool)enable NS_SWIFT_NAME(enableFaceDetection(_:));</codeblock>
            <codeblock props="cpp unreal bp" outputclass="language-cpp">virtual int enableFaceDetection(bool enabled) = 0;</codeblock>
            <codeblock props="unity cs" outputclass="language-csharp">public abstract int EnableFaceDetection(bool enabled);</codeblock>
            <codeblock props="electron" outputclass="language-typescript">abstract enableFaceDetection(enabled: boolean): number;</codeblock>
            <codeblock props="rn" outputclass="language-typescript">abstract enableFaceDetection(enabled: boolean): number;</codeblock>
            <codeblock props="flutter" outputclass="language-dart">Future&lt;void&gt; enableFaceDetection(bool enabled);</codeblock>
            <codeblock props="reserve" outputclass="language-cpp"></codeblock></p>
        </section>
        <section id="detailed_desc">
            <title>详情</title>
            <p>该方法在加入频道前后都能调用。</p>
            <note type="attention" props="cpp unreal bp unity flutter">该方法仅适用于 Android 和 iOS。</note>
            <p>开启本地人脸检测后，SDK 会触发 <xref keyref="onFacePositionChanged" /> 回调向你报告人脸检测的信息：

            <ul>
            <li>摄像头采集的画面大小</li>
            <li>人脸在 view 中的位置</li>
            <li>人脸距设备屏幕的距离</li>
            </ul> </p>
            <p>该方法需要在相机启动（如通过调用 <apiname keyref="startPreview" props="native unreal bp flutter unity" /> <apiname keyref="startPreview2" props="rn electron" /> 或 <apiname keyref="enableVideo" /> 实现）后调用。</p>
        </section>
        <section id="parameters">
            <title>参数</title>
            <parml>
            <plentry>
                <pt props="android ios mac ">enable</pt>
                <pt props="cpp unreal bp unity flutter electron rn cs">enabled</pt>
                <pd>是否开启人脸检测：

                    <ul>
                    <li><codeph><ph keyref="true" /></codeph>：开启人脸检测。</li>
                    <li><codeph><ph keyref="false" /></codeph>：（默认）关闭人脸检测。</li>
                    </ul> </pd>
            </plentry>
            </parml> </section>
        <section id="return_values">
            <title><ph keyref="return-section-title"/></title>
            <p props="flutter">方法成功调用时，无返回值；方法调用失败时，会抛出 <xref keyref="AgoraRtcException"/> 异常，你需要捕获异常并进行处理。</p>
            <ul>
            <li props="native unreal bp unity rn electron cs">0: 方法调用成功</li>
            <li>&lt; 0: 方法调用失败</li>
            </ul> </section>
    </refbody>
</reference>