<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE reference PUBLIC "-//OASIS//DTD DITA Reference//EN" "reference.dtd">
<reference id="api_imediaplayer_seek">
    <title><ph keyref="seek" /></title>
    <shortdesc id="short"><ph id="shortdesc">定位到媒体文件的指定播放位置。</ph></shortdesc>
    <prolog>
        <metadata>
            <keywords>
                <indexterm keyref="seek" />
            </keywords>
        </metadata>
    </prolog>
    <refbody>
        <section id="prototype">
            <p outputclass="codeblock">
            <codeblock props="android" outputclass="language-java">int seek(long newPos);
</codeblock>
            <codeblock props="hmos" outputclass="language-arkts">public abstract seek(newPos: number): number;</codeblock>
            <codeblock props="ios mac" outputclass="language-objectivec">- (void)seekToPosition:(NSInteger)position;
</codeblock>
            <codeblock props="cpp unreal" outputclass="language-cpp">virtual int seek(int64_t newPos) = 0;</codeblock>
         <codeblock props="bp" outputclass="language-cpp">UFUNCTION(BlueprintCallable, Category = &quot;Agora|IMediaPlayer&quot;)
	int Seek(int64 newPos);</codeblock>
            <codeblock props="electron" outputclass="language-typescript">abstract seek(newPos: number): number;</codeblock>
            <codeblock props="unity cs" outputclass="language-csharp">public abstract int Seek(Int64 newPos);</codeblock>
            <codeblock props="rn" outputclass="language-typescript">abstract seek(newPos: number): number;</codeblock>
            <codeblock props="flutter" outputclass="language-dart">Future&lt;void&gt; seek(int newPos);</codeblock>
            <codeblock props="reserve" outputclass="language-cpp"></codeblock></p>
        </section>
        <section id="detailed_desc" deliveryTarget="details" otherprops="no-title">
            <ul>
                <li>如果你在播放已经完成后（收到 <xref keyref="onPlayerSourceStateChanged"/> 回调报告播放状态为 <ph keyref="PLAYER_STATE_PLAYBACK_COMPLETED"/> 或 <ph keyref="PLAYER_STATE_PLAYBACK_ALL_LOOPS_COMPLETED"/>）再调用 <apiname keyref="seek"/>，方法调用成功后，SDK 会从你指定的位置开始自动播放，此时你会收到 <xref keyref="onPlayerSourceStateChanged"/> 回调报告播放状态为 <ph keyref="PLAYER_STATE_PLAYING"/>。</li>
                <li>如果你在播放暂停的情况下调用 <apiname keyref="seek"/>，调用成功后 SDK 会定位到你指定位置，如需播放，请调用 <xref keyref="resume"/> 或 <xref keyref="play"/>。</li>
            </ul></section>
        <section id="timing" deliveryTarget="details">
            <title>调用时机</title>
            <p>该方法在加入频道前后均可调用。</p>
        </section>        
        <section id="restriction" deliveryTarget="details">
            <title>调用限制</title>
            <p>无。</p>
        </section>
        <section id="related" deliveryTarget="details">
            <title>相关回调</title>
            <p>成功调用该方法后，你会收到 <xref keyref="onPlayerEvent" /> 回调，报告当前播放器发生的事件，如定位开始、定位成功或定位失败。</p>
        </section>
        <section id="parameters" deliveryTarget="details">
            <title>参数</title>
            <parml>
            <plentry>
                <pt props="android cpp unreal bp unity rn electron flutter cs">newPos</pt>
                <pt props="ios mac">position</pt>
                <pd>指定的位置（毫秒）。</pd>
            </plentry>
            </parml> </section>
        <section id="return_values">
            <title><ph keyref="return-section-title"/></title>
            <p props="flutter">方法成功调用时，无返回值；方法调用失败时，会抛出 <xref keyref="AgoraRtcException"/> 异常，你需要捕获异常并进行处理。<ph props="cn">详见<xref keyref="error-code-link"/>了解详情和解决建议。</ph></p>
            <ul props="native unreal bp electron unity rn cs">
            <li>0: 方法调用成功。</li>
            <li>&lt; 0: 方法调用失败。<ph props="cn">详见<xref keyref="error-code-link"/>了解详情和解决建议。</ph></li>
            </ul> </section>
    </refbody>
</reference>