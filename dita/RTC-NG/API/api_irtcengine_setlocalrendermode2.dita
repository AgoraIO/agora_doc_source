<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE reference PUBLIC "-//OASIS//DTD DITA Reference//EN" "reference.dtd">
<reference id="api_irtcengine_setlocalrendermode2">
    <title><ph keyref="setLocalRenderMode2" /></title>
    <shortdesc id="short"><ph id="shortdesc">更新本地视图显示模式。</ph></shortdesc>
    <prolog>
        <metadata>
            <keywords>
                <indexterm keyref="setLocalRenderMode2" />
            </keywords>
        </metadata>
    </prolog>
    <refbody>
        <section id="prototype">
            <p outputclass="codeblock">
            <codeblock props="android" outputclass="language-java">public abstract int setLocalRenderMode(int renderMode, int mirrorMode);</codeblock>
            <codeblock props="ios mac" outputclass="language-objectivec">- (int)setLocalRenderMode:(AgoraVideoRenderMode)mode
                   mirror:(AgoraVideoMirrorMode)mirror;</codeblock>
            <codeblock props="cpp unreal" outputclass="language-cpp">virtual int setLocalRenderMode(media::base::RENDER_MODE_TYPE renderMode, VIDEO_MIRROR_MODE_TYPE mirrorMode) = 0;</codeblock>
         <codeblock props="bp" outputclass="language-cpp">UFUNCTION(BlueprintCallable, Category = &quot;Agora|RtcEngineProxy&quot;)
	int SetLocalRenderMode(ERENDER_MODE_TYPE renderMode, EVIDEO_MIRROR_MODE_TYPE mirrorMode = EVIDEO_MIRROR_MODE_TYPE::VIDEO_MIRROR_MODE_AUTO);</codeblock>
            <codeblock props="electron" outputclass="language-typescript">abstract setLocalRenderMode(
    renderMode: RenderModeType,
    mirrorMode?: VideoMirrorModeType
  ): number;</codeblock>
            <codeblock props="unity cs" outputclass="language-csharp">public abstract int SetLocalRenderMode(RENDER_MODE_TYPE renderMode, VIDEO_MIRROR_MODE_TYPE mirrorMode);</codeblock>
            <codeblock props="rn" outputclass="language-typescript">abstract setLocalRenderMode(
    renderMode: RenderModeType,
    mirrorMode?: VideoMirrorModeType
  ): number;</codeblock>
            <codeblock props="flutter" outputclass="language-dart">Future&lt;void&gt; setLocalRenderMode(
    {required RenderModeType renderMode,
    VideoMirrorModeType mirrorMode =
        VideoMirrorModeType.videoMirrorModeAuto});</codeblock>
            <codeblock props="reserve" outputclass="language-cpp"></codeblock></p>
        </section>
        <section id="detailed_desc">
            <title>详情</title>
            <p>初始化本地用户视图后，你可以调用该方法更新本地用户视图的渲染和镜像模式。该方法只影响本地用户看到的视频画面，不影响本地发布视频。</p>
            <note type="attention">
            <ul>
            <li props="native unreal bp electron flutter unity cs">请在调用 <xref keyref="setupLocalVideo" /> 方法初始化本地视图后，调用该方法。</li>
            <li>你可以在通话中多次调用该方法，多次更新本地用户视图的显示模式。</li>
            </ul> </note> </section>
        <section id="parameters">
            <title>参数</title>
            <parml>
            <plentry>
                <pt props="android cpp unreal bp unity flutter rn electron cs">renderMode</pt>
                <pt props="ios mac">mode</pt>
                <pd>
                    <p props="ios mac cpp unreal bp unity flutter rn electron cs">本地视图显示模式。详见 <xref keyref="RENDER_MODE_TYPE" />。</p>
                    <p props="android">本地视图显示模式。

                    <ul id="rendermodetype">
                    <li><ph keyref="RENDER_MODE_HIDDEN" /> (1)：优先保证视窗被填满。视频尺寸等比缩放，直至整个视窗被视频填满。如果视频长宽与显示窗口不同，多出的视频将被截掉。</li>
                    <li><ph keyref="RENDER_MODE_FIT" /> (2)：优先保证视频内容全部显示。视频尺寸等比缩放，直至视频窗口的一边与视窗边框对齐。如果视频长宽与显示窗口不同，视窗上未被填满的区域将被涂黑。</li>
                    <li><ph keyref="RENDER_MODE_ADAPTIVE" /> (3): 该模式已废弃，不推荐使用。</li>
                    </ul> </p>
                </pd>
            </plentry>
            <plentry>
                <pt props="android cpp unreal bp unity flutter rn electron cs">mirrorMode</pt>
                <pt props="ios mac">mirror</pt>
                <pd>
                    <p props="ios mac cpp unreal bp unity flutter rn electron cs">本地视图的镜像模式，详见 <xref keyref="VIDEO_MIRROR_MODE_TYPE" />。
                    <note type="attention" props="unity cs">该参数仅对 SDK 自渲染生效，如果你想要设置视图镜像，可以将 GameObject 的 scaleX 设为 <codeph>-1</codeph> 或 <codeph>+1</codeph>。</note></p>
                    <p props="android">本地视图的镜像模式。
                    <ul id="videomirrormodetype">
                    <li><ph keyref="VIDEO_MIRROR_MODE_AUTO" /> (0)：SDK 决定镜像模式。如果你使用前置摄像头，默认启动本地视图镜像模式；如果你启用后置摄像头，默认关闭本地视图镜像模式。</li>
                    <li><ph keyref="VIDEO_MIRROR_MODE_ENABLED" /> (1)：开启本地视图的镜像模式。</li>
                    <li><ph keyref="VIDEO_MIRROR_MODE_DISABLED" /> (2)：关闭本地视图的镜像模式。</li>
                    </ul> </p>
                    <note type="attention">如果你使用前置摄像头，默认启动本地用户视图镜像模式；如果你使用后置摄像头，默认关闭本地视图镜像模式。</note> </pd>
            </plentry>
            </parml> </section>
        <section id="return_values">
            <title><ph keyref="return-section-title"/></title>
            <p props="flutter">方法成功调用时，无返回值；方法调用失败时，会抛出 <xref keyref="AgoraRtcException"/> 异常，你需要捕获异常并进行处理。<ph props="cn">详见<xref keyref="error-code-link"/>了解详情和解决建议。</ph></p>
            <ul props="native unreal bp electron unity rn cs">
            <li>0: 方法调用成功。</li>
            <li> &lt; 0: 方法调用失败。<ph props="cn">详见<xref keyref="error-code-link"/>了解详情和解决建议。</ph></li>
            </ul> </section>
    </refbody>
</reference>
