<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE reference PUBLIC "-//OASIS//DTD DITA Reference//EN" "reference.dtd">
<reference id="class_localaudiostats">
    <title><ph keyref="LocalAudioStats" /></title>
    <shortdesc id="short"><ph id="shortdesc">本地音频统计数据。</ph></shortdesc>
    <refbody>
        <section id="prototype">
            <p outputclass="codeblock">
            <codeblock props="android" outputclass="language-java">public static class LocalAudioStats {
  public int numChannels;
  public int sentSampleRate;
  public int sentBitrate;
  public int internalCodec;
  public int txPacketLossRate;
  public int audioDeviceDelay;
  public int earMonitorDelay;
  public int aecEstimatedDelay;
};</codeblock>
            <codeblock props="ios mac" outputclass="language-objectivec">__attribute__((visibility("default"))) @interface AgoraRtcLocalAudioStats : NSObject
@property(assign, nonatomic) NSUInteger numChannels;
@property(assign, nonatomic) NSUInteger sentSampleRate;
@property(assign, nonatomic) NSUInteger sentBitrate;
@property(assign, nonatomic) NSUInteger internalCodec;
@property(assign, nonatomic) NSUInteger txPacketLossRate;
@property(assign, nonatomic) NSUInteger audioDeviceDelay;
@property(assign, nonatomic) NSUInteger earMonitorDelay;
@property(assign, nonatomic) NSUInteger aecEstimatedDelay;

@end</codeblock>
            <codeblock props="cpp unreal" outputclass="language-cpp">struct LocalAudioStats
{
  int numChannels;
  int sentSampleRate;
  int sentBitrate;
  int internalCodec;
  unsigned short txPacketLossRate;
  int audioDeviceDelay;
  int earMonitorDelay;
  int aecEstimatedDelay;
};</codeblock>
         <codeblock props="bp" outputclass="language-cpp">USTRUCT(BlueprintType)
struct FLocalAudioStats
{
	GENERATED_BODY()
	UPROPERTY(VisibleAnywhere, BlueprintReadWrite, Category = &quot;Agora|LocalAudioStats&quot;)
	int numChannels;
	UPROPERTY(VisibleAnywhere, BlueprintReadWrite, Category = &quot;Agora|LocalAudioStats&quot;)
	int sentSampleRate;
	UPROPERTY(VisibleAnywhere, BlueprintReadWrite, Category = &quot;Agora|LocalAudioStats&quot;)
	int sentBitrate;
	UPROPERTY(VisibleAnywhere, BlueprintReadWrite, Category = &quot;Agora|LocalAudioStats&quot;)
	int internalCodec;
	UPROPERTY(VisibleAnywhere, BlueprintReadWrite, Category = &quot;Agora|LocalAudioStats&quot;)
	int64 txPacketLossRate;
	UPROPERTY(VisibleAnywhere, BlueprintReadWrite, Category = &quot;Agora|LocalAudioStats&quot;)
	int audioDeviceDelay;
};</codeblock>
            <codeblock props="electron" outputclass="language-typescript">export class LocalAudioStats {

  numChannels?: number;

  sentSampleRate?: number;

  sentBitrate?: number;

  internalCodec?: number;

  txPacketLossRate?: number;

  audioDeviceDelay?: number;

  earMonitorDelay?: number;
  
  aecEstimatedDelay?: number;
}</codeblock>
            <codeblock props="unity cs" outputclass="language-csharp">public class LocalAudioStats
                {
                    public int numChannels;
                    public int sentSampleRate;
                    public int sentBitrate
                    public int internalCodec;
                    public ushort txPacketLossRate;
                    public int audioDeviceDelay;
                    public int audioPlayoutDelay
                    public int earMonitorDelay
                    public int aecEstimatedDelay;
                }
</codeblock>
            <codeblock props="rn" outputclass="language-typescript">export class LocalAudioStats {

  numChannels?: number;

  sentSampleRate?: number;

  sentBitrate?: number;

  internalCodec?: number;

  txPacketLossRate?: number;

  audioDeviceDelay?: number;

  earMonitorDelay?: number;
  
  aecEstimatedDelay?: number;
}</codeblock>
            <codeblock props="flutter" outputclass="language-dart">@JsonSerializable(explicitToJson: true, includeIfNull: false)
class LocalAudioStats {
  const LocalAudioStats(
      {this.numChannels,
      this.sentSampleRate,
      this.sentBitrate,
      this.internalCodec,
      this.txPacketLossRate,
      this.audioDeviceDelay,
      this.audioPlayoutDelay,
      this.earMonitorDelay,
      this.aecEstimatedDelay});

  @JsonKey(name: &#x27;numChannels&#x27;)
  final int? numChannels;

  @JsonKey(name: &#x27;sentSampleRate&#x27;)
  final int? sentSampleRate;

  @JsonKey(name: &#x27;sentBitrate&#x27;)
  final int? sentBitrate;

  @JsonKey(name: &#x27;internalCodec&#x27;)
  final int? internalCodec;

  @JsonKey(name: &#x27;txPacketLossRate&#x27;)
  final int? txPacketLossRate;

  @JsonKey(name: &#x27;audioDeviceDelay&#x27;)
  final int? audioDeviceDelay;

  @JsonKey(name: &#x27;audioPlayoutDelay&#x27;)
  final int? audioPlayoutDelay;

  @JsonKey(name: &#x27;earMonitorDelay&#x27;)
  final int? earMonitorDelay;

  @JsonKey(name: &#x27;aecEstimatedDelay&#x27;)
  final int? aecEstimatedDelay;

  factory LocalAudioStats.fromJson(Map&lt;String, dynamic&gt; json) =&gt;
      _$LocalAudioStatsFromJson(json);

  Map&lt;String, dynamic&gt; toJson() =&gt; _$LocalAudioStatsToJson(this);
}
</codeblock>
            </p>
        </section>
        <section id="parameters">
            <title><text conref="../conref/conref_api_metadata.dita#conref_api_metadata/property" /></title>
            <parml>
            <plentry>
                <pt>numChannels</pt>
                <pd>声道数。</pd>
            </plentry>
            <plentry>
                <pt>sentSampleRate</pt>
                <pd>发送本地音频的采样率，单位为 Hz。</pd>
            </plentry>
            <plentry>
                <pt>sentBitrate</pt>
                <pd>发送本地音频的码率平均值，单位为 Kbps。</pd>
            </plentry>
            <plentry>
                <pt>txPacketLossRate</pt>
                <pd>弱网对抗前本端到声网边缘服务器的丢包率 (%)。</pd>
            </plentry>
            <plentry>
                <pt>internalCodec</pt>
                <pd>内部的 payload 类型。</pd>
            </plentry>
            <plentry>
                <pt>audioDeviceDelay</pt>
                <pd>播放或录制音频时，音频设备模块的延迟 (ms)。</pd>
            </plentry>
            <plentry>
                <pt>earMonitorDelay</pt>
                <pd>耳返延迟 (ms)，即声音从麦克风输入到耳机输出的延迟。</pd>
            </plentry>
            <plentry>
                <pt>aecEstimatedDelay</pt>
                <pd>回声消除延迟 (ms)，即回声消除 (Acoustic Echo Cancellation, AEC) 模块测算出音频在本地播放前与被本地采集后的信号延迟。</pd>
            </plentry>
            </parml> </section>
    </refbody>
</reference>