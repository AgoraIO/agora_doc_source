<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE reference PUBLIC "-//OASIS//DTD DITA Reference//EN" "reference.dtd">
<reference id="callback_irtcengineeventhandler_onlocalvideostatechanged">
    <title> <ph keyref="onLocalVideoStateChanged"/> </title>
    <shortdesc id="short"> <ph id="shortdesc">本地视频状态发生改变回调。</ph> </shortdesc>
    <prolog>
        <metadata>
            <keywords>
                <indexterm keyref="onLocalVideoStateChanged"/>
            </keywords>
        </metadata>
    </prolog>
    <refbody>
        <section id="prototype">
            <p outputclass="codeblock">
            <codeblock props="android" outputclass="language-java">public void onLocalVideoStateChanged(Constants.VideoSourceType source, int state, int reason) {}
</codeblock>
            <codeblock props="ios mac" outputclass="language-objectivec">- (void)rtcEngine:(AgoraRtcEngineKit * _Nonnull)engine localVideoStateChangedOfState:(AgoraVideoLocalState)state reason:(AgoraLocalVideoStreamReason)reason sourceType:(AgoraVideoSourceType)sourceType NS_SWIFT_NAME(rtcEngine(_:localVideoStateChangedOf:reason:sourceType:));
</codeblock>
            <codeblock props="cpp unreal" outputclass="language-cpp">  virtual void onLocalVideoStateChanged(VIDEO_SOURCE_TYPE source, LOCAL_VIDEO_STREAM_STATE state, LOCAL_VIDEO_STREAM_REASON reason) {
    (void)source;
    (void)state;
    (void)reason;
  }</codeblock>
         <codeblock props="bp" outputclass="language-cpp">DECLARE_DYNAMIC_MULTICAST_DELEGATE_ThreeParams(FOnLocalVideoStateChanged, EVIDEO_SOURCE_TYPE, source, ELOCAL_VIDEO_STREAM_STATE, state, ELOCAL_VIDEO_STREAM_ERROR, error);</codeblock>
            <codeblock props="electron" outputclass="language-typescript">onLocalVideoStateChanged?(
    source: VideoSourceType,
    state: LocalVideoStreamState,
    reason: LocalVideoStreamReason
  ): void;</codeblock>
            <codeblock props="unity cs" outputclass="language-csharp">public virtual void OnLocalVideoStateChanged(VIDEO_SOURCE_TYPE source, LOCAL_VIDEO_STREAM_STATE state, LOCAL_VIDEO_STREAM_REASON reason)</codeblock>
            <codeblock props="rn" outputclass="language-typescript">onLocalVideoStateChanged?(
    source: VideoSourceType,
    state: LocalVideoStreamState,
    reason: LocalVideoStreamReason
  ): void;</codeblock>
            <codeblock props="flutter" outputclass="language-dart">final void Function(VideoSourceType source, LocalVideoStreamState state,
    LocalVideoStreamReason reason)? onLocalVideoStateChanged;;</codeblock>
            <codeblock props="reserve" outputclass="language-cpp"></codeblock></p>
        </section>
        <section id="detailed_desc" deliveryTarget="details" otherprops="no-title">
            <p id="desc1">本地视频的状态发生改变时，SDK 会触发该回调，报告当前的本地视频状态以及状态改变的原因。</p>
        </section>
        <section id="scenario" deliveryTarget="details">
            <title>适用场景</title>
            <p>你可以通过该回调及时了解本地视频流的状态变化，并根据状态改变的原因采取相应的措施，更好地管理和调试视频流相关的问题。</p>
        </section>
        <section id="timing" deliveryTarget="details">
            <title>触发时机</title>
            <ul><li>SDK 会在如下情况触发该回调，且 <parmname>state</parmname> 为 <ph keyref="LOCAL_VIDEO_STREAM_STATE_FAILED"/>，<parmname>reason</parmname> 为 <codeph><ph keyref="LOCAL_VIDEO_STREAM_REASON_CAPTURE_FAILURE"/></codeph>：
                    <ul>
                    <li props="cpp apple framework">应用退到后台，系统回收摄像头。</li>
                    <li props="cpp unreal bp android unity flutter rn">Android 9 及以上版本，App 切后台一段时间后，系统会收回相机权限。</li>
                    <li props="cpp unreal bp android unity flutter rn">Android 6 及以上版本，如果相机被第三方应用占用一段时间后释放，则 SDK 会触发该回调，并报告 <codeph><apiname keyref="onLocalVideoStateChanged"/>(<ph keyref="LOCAL_VIDEO_STREAM_STATE_CAPTURING"/>，<ph keyref="LOCAL_VIDEO_STREAM_REASON_OK"/>)</codeph> 回调。</li>
                    <li>摄像头正常启动，但连续 4 秒都没有输出采集的视频。</li></ul></li>
                <li>当摄像头输出采集的视频帧时，如果 SDK 检测到连续 15 个重复的视频帧，会触发该回调，且 <parmname>state</parmname> 为 <apiname keyref="LOCAL_VIDEO_STREAM_STATE_CAPTURING"/>，<parmname>reason</parmname> 为 <apiname keyref="LOCAL_VIDEO_STREAM_REASON_CAPTURE_FAILURE"/>。
                <note>帧重复检测仅针对分辨率大于 200 × 200、帧率大于等于 10 fps、码率小于 20 Kbps 的视频帧。</note></li></ul>
        </section>        
        <section id="restriction" deliveryTarget="details">
            <title>使用限制</title>
            <p>对某些机型而言，当本地视频采集设备正在使用中时，SDK 不会在本地视频状态发生改变时触发该回调，你需要自行做超时判断。</p>
        </section>
        <section id="parameters">
            <title><ph keyref="callback-section-title"/></title>
            <parml>
            <plentry conkeyref="onJoinChannelSuccess/engine" props="ios mac">
                <pt/>
                <pd/>
            </plentry>
            <plentry id="source">
                <pt props="apple">sourceType</pt>
                <pt props="android cpp unreal bp rn electron flutter unity cs">source</pt>
                <pd>视频源的类型。详见 <xref keyref="VIDEO_SOURCE_TYPE"/>。</pd>
            </plentry>
            <plentry>
                <pt>state</pt>
                <pd>
                    <p props="ios mac cpp unreal bp unity electron rn flutter cs">本地视频状态，详见 <xref keyref="LOCAL_VIDEO_STREAM_STATE"/>。</p>
                    <p props="android">
                    <ul>
                    <li><ph keyref="LOCAL_VIDEO_STREAM_STATE_STOPPED"/> (0): 本地视频默认初始状态。</li>
                    <li><ph keyref="LOCAL_VIDEO_STREAM_STATE_CAPTURING"/> (1): 本地视频采集设备启动成功。</li>
                    <li><ph keyref="LOCAL_VIDEO_STREAM_STATE_ENCODING"/> (2): 本地视频首帧编码成功。</li>
                    <li><ph keyref="LOCAL_VIDEO_STREAM_STATE_FAILED"/> (3): 本地视频启动失败。</li>
                    </ul> </p>
                </pd>
            </plentry>
            <plentry>
                <pt>reason</pt>
                <pd>
                    <p props="ios mac cpp unreal bp electron rn flutter unity cs">本地视频状态改变原因，详见 <xref keyref="LOCAL_VIDEO_STREAM_REASON"/>。</p>
                    <p props="android">
                    <ul>
                    <li><ph keyref="LOCAL_VIDEO_STREAM_REASON_OK"/> (0): 本地视频状态正常。</li>
                    <li><ph keyref="LOCAL_VIDEO_STREAM_REASON_FAILURE"/> (1): 出错原因不明确。</li>
                    <li><ph keyref="LOCAL_VIDEO_STREAM_REASON_DEVICE_BUSY"/> (3): 本地视频采集设备正在使用中。请提示用户检查摄像头是否被其他 App 占用，或者尝试重新加入频道。</li>
                    <li><ph keyref="LOCAL_VIDEO_STREAM_REASON_CAPTURE_FAILURE"/> (4): 本地视频采集失败。请提示用户检查视频采集设备是否正常工作，检查摄像头是否被其他 App 占用，或者尝试重新加入频道。</li>
                    <li><ph keyref="LOCAL_VIDEO_STREAM_REASON_CODEC_NOT_SUPPORT"/> (5)：本地视频编码失败。</li>
                    <li><ph keyref="LOCAL_VIDEO_STREAM_REASON_DEVICE_NOT_FOUND"/> (8)：找不到本地视频采集设备。需检查摄像头是否与设备正常连接、摄像头是否正常工作，或者尝试重新加入频道。</li>
                    </ul> </p>
                </pd>
            </plentry>
            </parml> </section>
    </refbody>
</reference>
