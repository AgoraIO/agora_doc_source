<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE reference PUBLIC "-//OASIS//DTD DITA Reference//EN" "reference.dtd">
<reference id="class_virtualbackgroundsource">
    <title><ph keyref="VirtualBackgroundSource"/></title>
    <shortdesc id="short"><ph id="shortdesc">自定义的背景。</ph></shortdesc>
    <refbody>
        <section id="prototype">
            <p outputclass="codeblock" props="rtc-ng">
            <codeblock props="android" outputclass="language-java">public class VirtualBackgroundSource {
  public static final int BACKGROUND_COLOR = 1;
  public static final int BACKGROUND_IMG = 2;
  public static final int BACKGROUND_BLUR = 3;
  public static final int BLUR_DEGREE_LOW = 1;
  public static final int BLUR_DEGREE_MEDIUM = 2;
  public static final int BLUR_DEGREE_HIGH = 3;
  public int backgroundSourceType;
  public int color;
  public String source = null;
  public int blurDegree;
  public VirtualBackgroundSource(
      int backgroundSourceType, int color, String source, int blurDegree) {
    this.backgroundSourceType = backgroundSourceType;
    this.color = color;
    this.source = source;
    this.blurDegree = blurDegree;
  }
  public VirtualBackgroundSource() {
    this.backgroundSourceType = BACKGROUND_COLOR;
    this.color = 0xffffff;
    this.source = "";
    this.blurDegree = BLUR_DEGREE_HIGH;
  }
}
</codeblock>
            <codeblock props="ios mac" outputclass="language-objectivec">__attribute__((visibility("default"))) @interface AgoraVirtualBackgroundSource : NSObject
@property(nonatomic, assign) AgoraVirtualBackgroundSourceType backgroundSourceType NS_SWIFT_NAME(backgroundSourceType);
@property(nonatomic, assign) NSUInteger color NS_SWIFT_NAME(color);
@property(nonatomic, copy) NSString* _Nullable source NS_SWIFT_NAME(source);
@property(nonatomic, assign) AgoraBlurDegree blurDegree;
@end
</codeblock>
            <codeblock props="unity" outputclass="language-csharp">public class VirtualBackgroundSource
    {
        public BACKGROUND_SOURCE_TYPE background_source_type
        public uint color;
        public string source;
        public BACKGROUND_BLUR_DEGREE blur_degree;
    };</codeblock> </p>
            <p outputclass="codeblock" props="rtc">
            <codeblock props="android" outputclass="language-java">public class VirtualBackgroundSource {
    public static final int BACKGROUND_COLOR = 1;
    public static final int BACKGROUND_IMG = 2;
    public static final int BACKGROUND_BLUR = 3;
    public static final int BLUR_DEGREE_LOW = 1;
    public static final int BLUR_DEGREE_MEDIUM = 2;
    public static final int BLUR_DEGREE_HIGH = 3;
    public int backgroundSourceType;
    public int color;
    public String source = null;
    public int blur_degree;
    public VirtualBackgroundSource(
      int backgroundSourceType, int color, String source, int blur_degree) {
        this.backgroundSourceType = backgroundSourceType;
        this.color = color;
        this.source = source;
        this.blur_degree = blur_degree;
    }
    public VirtualBackgroundSource() {
        this.backgroundSourceType = BACKGROUND_COLOR;
        this.color = 0xffffff;
        this.source = "";
        this.blur_degree = BLUR_DEGREE_HIGH;
    }
}
</codeblock>
            <codeblock props="ios mac" outputclass="language-objectivec">NS_SWIFT_NAME(AgoraVirtualBackgroundSource) __attribute__((visibility("default"))) @interface AgoraVirtualBackgroundSource : NSObject
@property(nonatomic, assign) AgoraVirtualBackgroundSourceType backgroundSourceType NS_SWIFT_NAME(backgroundSourceType);
@property(nonatomic, assign) NSUInteger color NS_SWIFT_NAME(color);
@property(nonatomic, copy) NSString* _Nullable source NS_SWIFT_NAME(source);
@property(nonatomic, assign) AgoraBlurDegree blur_degree;
@end
</codeblock></p>
            <p outputclass="codeblock">
            <codeblock props="electron" outputclass="language-typescript"/>
            <codeblock props="rn" outputclass="language-typescript"/>
            <codeblock props="flutter" outputclass="language-dart"/>
            <codeblock props="cpp" outputclass="language-cpp">struct VirtualBackgroundSource {
                    enum BACKGROUND_SOURCE_TYPE {
                    BACKGROUND_COLOR = 1,
                    BACKGROUND_IMG,
                    BACKGROUND_BLUR,
                    };
                    enum BACKGROUND_BLUR_DEGREE {
                    BLUR_DEGREE_LOW = 1,
                    BLUR_DEGREE_MEDIUM,
                    BLUR_DEGREE_HIGH,
                    };
                    BACKGROUND_SOURCE_TYPE background_source_type;
                    unsigned int color;
                    const char* source;
                    BACKGROUND_BLUR_DEGREE blur_degree;
                    VirtualBackgroundSource() : background_source_type(BACKGROUND_COLOR), color(0xffffff), source(NULL),  blur_degree(BLUR_DEGREE_HIGH) {}
                </codeblock>
            <codeblock props="flutter" outputclass="language-dart">class VirtualBackgroundSource {

                    @JsonKey(includeIfNull: false)
                    VirtualBackgroundSourceType? backgroundSourceType;
                  
                    @JsonKey(includeIfNull: false)
                    int? color;
                  
                    @JsonKey(includeIfNull: false)
                    String? source;
                  
                    @JsonKey(name: 'blur_degree')
                    VirtualBackgroundBlurDegree blurDegree;
                  
                    VirtualBackgroundSource({
                      this.backgroundSourceType,
                      this.color,
                      this.source,
                      this.blurDegree = VirtualBackgroundBlurDegree.High,
                    });
                  
                    factory VirtualBackgroundSource.fromJson(Map&lt;String, dynamic&gt; json) =>
                        _$VirtualBackgroundSourceFromJson(json);
                  
                    Map&lt;String, dynamic&gt; toJson() => _$VirtualBackgroundSourceToJson(this);
                  }</codeblock> </p>
        </section>
        <section id="detailed_desc">
            <dl outputclass="since" props="rtc">
            <dlentry props="native">
                <dt>自从</dt>
                <dd>v3.5.0</dd>
            </dlentry>
            </dl>
        </section>
        <section id="parameters">
            <title><text
            conref="../conref/conref_api_metadata.dita#conref_api_metadata/property"
            /></title>
            <parml>
            <plentry>
                <pt props="android ios mac flutter">backgroundSourceType</pt>
                <pt props="unity cpp">background_source_type</pt>
                <pd><ph>自定义的背景图类型。</ph><ph props="ios mac cpp unity flutter"
                    >详见 <xref keyref="BACKGROUND_SOURCE_TYPE"/>。</ph>
                    <ul props="android">
                    <li><ph keyref="BACKGROUND_COLOR"/>(1)：（默认）背景图为纯色。</li>
                    <li><ph keyref="BACKGROUND_IMG"
                        />(2)：背景图为 PNG、JPG 格式的图片。</li>
                    <li><ph keyref="BACKGROUND_BLUR"/>(3)：将虚化处理后的背景作为背景图。</li>
                    </ul></pd>
            </plentry>
            <plentry>
                <pt>color</pt>
                <pd>自定义的背景图颜色。格式为 RGB 定义下的十六进制整数，不要带 # 号，如 0xFFB6C1 表示浅粉色。 默认值为 0xFFFFFF，表示白色。 取值范围为 [0x000000，0xffffff]。如果取值非法，SDK 会用白色背景图替换原背景图。
                        
                    
                    
                    <note type="attention">该参数仅在自定义背景图类型为 <ph
                    keyref="BACKGROUND_COLOR"/> 时生效。</note></pd>
            </plentry>
            <plentry>
                <pt>source</pt>
                <pd>自定义背景图的本地绝对路径。支持 PNG 和 JPG 格式。如果路径无效，SDK 会用白色背景图替换原背景图。
                    
                    
                    <note type="attention">该参数仅在自定义背景图类型为 <ph
                    keyref="BACKGROUND_IMG"/> 时生效。</note></pd>
            </plentry>
            <plentry>
                <pt props="rtc-ng"><ph props="ios mac android">blurDegree</ph><ph props="cpp unity">blur_degree</ph></pt>
                <pt props="rtc"><ph props="native electron unity">blur_degree</ph><ph props="flutter">blurDegree</ph></pt>
                <pd><ph>自定义背景图的模糊程度。</ph><ph
                    props="ios mac cpp unity flutter">详见 <xref
                    keyref="BACKGROUND_BLUR_DEGREE"/>。</ph>
                    <ul props="android">
                    <li><ph keyref="BLUR_DEGREE_LOW"
                        />(1)：自定义背景图的虚化程度为低。用户差不多能看清背景。</li>
                    <li><ph keyref="BLUR_DEGREE_MEDIUM"
                        />(2)：自定义背景图的虚化程度为中。用户较难看清背景。</li>
                    <li><ph keyref="BLUR_DEGREE_HIGH"
                        />(3)：（默认）自定义背景图的虚化程度为高。用户很难看清背景。</li>
                    </ul>
                    <note type="attention">该参数仅在自定义背景图类型为 <ph
                    keyref="BACKGROUND_BLUR"/> 时生效。</note></pd>
            </plentry>
            </parml> </section>
    </refbody>
</reference>
