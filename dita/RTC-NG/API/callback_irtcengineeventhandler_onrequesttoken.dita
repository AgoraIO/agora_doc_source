<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE reference PUBLIC "-//OASIS//DTD DITA Reference//EN" "reference.dtd">
<reference id="callback_irtcengineeventhandler_onrequesttoken">
    <title> <ph keyref="onRequestToken" /> </title>
    <shortdesc id="short"> <ph id="shortdesc">Token 已过期回调。</ph> </shortdesc>
    <prolog>
        <metadata>
            <keywords>
                <indexterm keyref="onRequestToken" />
            </keywords>
        </metadata>
    </prolog>
    <refbody>
        <section id="prototype">
            <p outputclass="codeblock">
            <codeblock props="android" outputclass="language-java">public void onRequestToken() {}</codeblock>
            <codeblock props="ios mac" outputclass="language-objectivec">- (void)rtcEngineRequestToken:(AgoraRtcEngineKit * _Nonnull)engine;</codeblock>
            <codeblock props="cpp unreal" outputclass="language-cpp">virtual void onRequestToken()</codeblock>
         <codeblock props="bp" outputclass="language-cpp">DECLARE_DYNAMIC_MULTICAST_DELEGATE(FOnRequestToken);</codeblock>
            <codeblock props="electron" outputclass="language-typescript">  onRequestToken?(connection: RtcConnection): void;</codeblock>
            <codeblock props="unity cs" outputclass="language-csharp">public virtual void OnRequestToken(RtcConnection connection) {}</codeblock>
            <codeblock props="rn" outputclass="language-typescript">  onRequestToken?(connection: RtcConnection): void;</codeblock>
            <codeblock props="flutter" outputclass="language-dart">final void Function(RtcConnection connection)? onRequestToken;</codeblock>
            <codeblock props="reserve" outputclass="language-cpp"></codeblock></p>
        </section>
        <section id="detailed_desc">
            <p id="desc1">在通话过程中如果 Token 已失效，SDK 会触发该回调，提醒 app 更新 Token。</p>
            <p>
                当收到该回调时，你需要重新在服务端生成新的 Token，然后通过下列任意一种方式来更新 Token：
                <ul><li>调用 <xref keyref="renewToken"/> 来传入新的 Token。 </li>
                <li>调用 <xref keyref="leaveChannel2"/> 离开当前频道，然后在调用 <xref keyref="joinChannel2" /> 时传入新的 Token 重新加入频道。</li></ul></p>
        </section>
        <section id="parameters">
            <title> <ph keyref="callback-section-title" /> </title>
            <parml>
            <plentry conkeyref="onJoinChannelSuccess/engine" props="ios mac">
                <pt />
                <pd />
            </plentry>
            <plentry props="unity electron rn flutter cs" conkeyref="joinChannelEx/connection">
                <pt />
                <pd />
            </plentry>
            </parml> </section>
    </refbody>
</reference>