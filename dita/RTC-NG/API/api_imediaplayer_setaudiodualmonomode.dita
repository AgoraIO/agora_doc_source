<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE reference PUBLIC "-//OASIS//DTD DITA Reference//EN" "reference.dtd">
<reference id="api_imediaplayer_setaudiodualmonomode">
    <title><ph keyref="setAudioDualMonoMode" /></title>
    <shortdesc id="short"><ph id="shortdesc">设置当前音频文件的声道模式。</ph></shortdesc>
    <prolog>
        <metadata>
            <keywords>
                <indexterm keyref="setAudioDualMonoMode" />
            </keywords>
        </metadata>
    </prolog>
    <refbody>
        <section id="prototype">
            <p outputclass="codeblock">
            <codeblock props="android" outputclass="language-java">int setAudioDualMonoMode(int mode);</codeblock>
            <codeblock props="ios mac" outputclass="language-objectivec">- (int)setAudioDualMonoMode:(AgoraAudioDualMonoMode)mode;</codeblock>
            <codeblock props="cpp" outputclass="language-cpp">virtual int setAudioDualMonoMode(agora::media::base::AUDIO_DUAL_MONO_MODE mode) = 0;</codeblock>
            <codeblock props="electron" outputclass="language-typescript">abstract setAudioDualMonoMode(mode: AudioDualMonoMode): number;</codeblock>
            <codeblock props="unity" outputclass="language-csharp">public abstract int SetAudioDualMonoMode(AUDIO_DUAL_MONO_MODE mode);</codeblock>
            <codeblock props="rn" outputclass="language-typescript">abstract setAudioDualMonoMode(mode: AudioDualMonoMode): number;</codeblock>
            <codeblock props="flutter" outputclass="language-dart">Future&lt;void&gt; setAudioDualMonoMode(AudioDualMonoMode mode);</codeblock>
            <codeblock props="reserve" outputclass="language-cpp"></codeblock></p>
        </section>
        <section id="detailed_desc">
            <title>详情</title>
            <p>在双声道音频文件中，左声道和右声道可以存储不同的音频数据。根据实际需要，你可以设置声道模式为原始模式、左声道模式、右声道模式或混合模式。例如，在 KTV 场景中，音频文件的左声道存储了伴奏，右声道存储了原唱的歌声。如果你只需听伴奏，调用该方法设置音频文件的声道模式为左声道模式；如果你需要同时听伴奏和原唱，调用该方法设置声道模式为混合模式。</p>
            <note type="attention" id="note">
            <ul>
            <li>你需要在调用 <xref keyref="open" /> 后调用该方法。</li>
            <li>该方法仅适用于双声道的音频文件。</li>
            </ul></note> </section>
        <section id="parameters">
            <title>参数</title>
            <parml>
            <plentry>
                <pt>mode</pt>
                <pd><ph>声道模式。</ph><ph props="cpp mac ios unity flutter rn electron">详见 <xref keyref="AUDIO_DUAL_MONO_MODE" />。</ph>
                    <ul props="android">
                    <li><ph keyref="AUDIO_DUAL_MONO_STEREO" /> (0): 原始模式。</li>
                    <li><ph keyref="AUDIO_DUAL_MONO_L" /> (1): 左声道模式。该模式用左声道的音频替换右声道的音频，即用户只能听到左声道的音频。</li>
                    <li><ph keyref="AUDIO_DUAL_MONO_R" /> (2): 右声道模式。该模式用右声道的音频替换左声道的音频，即用户只能听到右声道的音频。</li>
                    <li><ph keyref="AUDIO_DUAL_MONO_MIX" /> (3): 混合模式。该模式将左右声道的数据叠加，即用户能同时听到左声道和右声道的音频。</li>
                    </ul> </pd>
            </plentry>
            </parml> </section>
        <section id="return_values">
            <title><ph keyref="return-section-title"/></title>
            <p props="flutter">方法成功调用时，无返回值；方法调用失败时，会抛出 <xref keyref="AgoraRtcException"/> 异常，你需要捕获异常并进行处理。</p>
            <ul>
            <li props="native electron unity rn">0: 方法调用成功</li>
            <li>&lt; 0: 方法调用失败</li>
            </ul> </section>
    </refbody>
</reference>