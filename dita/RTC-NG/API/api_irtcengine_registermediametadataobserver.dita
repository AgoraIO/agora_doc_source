<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE reference PUBLIC "-//OASIS//DTD DITA Reference//EN" "reference.dtd">
<reference id="api_irtcengine_registermediametadataobserver">
    <title><ph keyref="registerMediaMetadataObserver" /></title>
    <shortdesc id="short"><ph id="shortdesc">注册媒体 metadata 观测器用于接收或发送 metadata。</ph></shortdesc>
    <prolog>
        <metadata>
            <keywords>
                <indexterm keyref="registerMediaMetadataObserver" />
            </keywords>
        </metadata>
    </prolog>
    <refbody>
        <section id="prototype">
            <p outputclass="codeblock">
            <codeblock props="android" outputclass="language-java">public abstract int registerMediaMetadataObserver(IMetadataObserver observer, int type);</codeblock>
            <codeblock props="ios mac" outputclass="language-objectivec">- (BOOL)setMediaMetadataDelegate:(id&lt;AgoraMediaMetadataDelegate&gt; _Nullable)metadataDelegate withType:(AgoraMetadataType)type;</codeblock>
            <codeblock props="cpp" outputclass="language-cpp">virtual int registerMediaMetadataObserver(IMetadataObserver *observer, IMetadataObserver::METADATA_TYPE type) = 0;
</codeblock>
            <codeblock props="electron" outputclass="language-typescript">abstract registerMediaMetadataObserver(
    observer: IMetadataObserver,
    type: MetadataType
  ): number;</codeblock>
            <codeblock props="unity" outputclass="language-csharp">public abstract void RegisterMediaMetadataObserver(IMetadataObserver observer, METADATA_TYPE type);</codeblock>
            <codeblock props="rn" outputclass="language-typescript">abstract registerMediaMetadataObserver(
    observer: IMetadataObserver,
    type: MetadataType
  ): number;</codeblock>
            <codeblock props="flutter" outputclass="language-dart">void registerMediaMetadataObserver(
      {required MetadataObserver observer, required MetadataType type});</codeblock>
            <codeblock props="unreal" outputclass="language-cpp"></codeblock></p>
        </section>
        <section id="detailed_desc">
            <p>你需要自行实现 <xref keyref="IMetadataObserver" /> 类并在本方法中指定 metadata 类型。本方法允许你为视频流添加同步的 metadata，用于多样化的直播互动，如发送购物链接、电子优惠券和在线测试。</p>
            <p props="native unity">调用该方法成功后，SDK 会触发 <xref keyref="getMaxMetadataSize" /> 回调。</p>
            <note type="attention">请在 <apiname keyref="joinChannel2" /> 前调用该方法。</note> </section>
        <section id="parameters">
            <title>参数</title>
            <parml>
            <plentry>
                <pt>observer</pt>
                <pd>metadata 观测器。详见 <xref keyref="IMetadataObserver" />。</pd>
            </plentry>
            <plentry id="metadatatype">
                <pt>type</pt>
                <pd>
                    <p>metadata 类型。目前仅支持 <apiname keyref="VIDEO_METADATA" />。<ph props="ios mac cpp unity rn electron">详见 <xref keyref="METADATA_TYPE" />。</ph></p>
                </pd>
            </plentry>
            </parml> </section>
        <section id="return_values" props="native electron rn">
            <title>返回值</title>
            <ul>
            <li>0：方法调用成功。</li>
            <li>&lt; 0：方法调用失败。</li>
            </ul> </section>
    </refbody>
</reference>
