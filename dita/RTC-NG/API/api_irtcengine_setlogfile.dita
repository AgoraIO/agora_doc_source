<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE reference PUBLIC "-//OASIS//DTD DITA Reference//EN" "reference.dtd">
<reference id="api_irtcengine_setlogfile">
    <title><ph keyref="setLogFile" /></title>
    <shortdesc id="short"><ph id="shortdesc">设置日志文件</ph></shortdesc>
    <prolog>
        <metadata>
            <keywords>
                <indexterm keyref="setLogFile" />
            </keywords>
        </metadata>
    </prolog>
    <refbody>
        <section id="prototype">
            <p outputclass="codeblock">
            <codeblock props="android" outputclass="language-java">public abstract int setLogFile(String filePath);</codeblock>
            <codeblock props="ios mac" outputclass="language-objectivec">- (int)setLogFile:(NSString * _Nonnull)filePath;</codeblock>
            <codeblock props="cpp unreal" outputclass="language-cpp">virtual int setLogFile(const char* filePath) = 0;</codeblock>
         <codeblock props="bp" outputclass="language-cpp">UFUNCTION(BlueprintCallable, Category = &quot;Agora|RtcEngineProxy&quot;)
	int SetLogFile(FString filePath);</codeblock>
            <codeblock props="electron" outputclass="language-typescript">abstract setLogFile(filePath: string): number;</codeblock>
            <codeblock props="unity cs" outputclass="language-csharp">public abstract int SetLogFile(string filePath);</codeblock>
            <codeblock props="rn" outputclass="language-typescript">abstract setLogFile(filePath: string): number;</codeblock>
            <codeblock props="flutter" outputclass="language-dart">Future&lt;void&gt; setLogFile(String filePath);</codeblock>
            <codeblock props="reserve" outputclass="language-cpp"></codeblock></p>
        </section>
        <section id="detailed_desc">
            <title>详情</title>
            <dl outputclass="deprecated">
            <dlentry>
                <dt>弃用：</dt>
                <dd>此方法已废弃，请改用 <xref keyref="initialize" /> 中的 <codeph>logConfig</codeph> 参数设置日志文件路径 。</dd>
            </dlentry>
            </dl>
            <p>设置 SDK 的输出 log 文件。SDK 运行时产生的所有 log 将写入该文件。App 必须保证指定的目录存在而且可写。</p>
            <note id="note_gnw_y1g_3qb">
            <p>如需调用本方法，请在调用 <apiname keyref="initialize" /> 方法初始化 <xref keyref="IRtcEngine" /> 对象后立即调用，否则输出日志可能不完整。</p>
            </note> </section>
        <section id="parameters">
            <title>参数</title>
            <parml>
            <plentry>
                <pt>filePath</pt>
                <pd>日志文件的完整路径。该日志文件为 UTF-8 编码。</pd>
            </plentry>
            </parml> </section>
        <section id="return_values">
            <title><ph keyref="return-section-title"/></title>
            <p props="flutter">方法成功调用时，无返回值；方法调用失败时，会抛出 <xref keyref="AgoraRtcException"/> 异常，你需要捕获异常并进行处理。<ph props="cn">详见<xref keyref="error-code-link"/>了解详情和解决建议。</ph></p>
            <ul id="ul_ahk_23f_3qb">
            <li props="native unreal bp electron unity rn cs">0: 方法调用成功。</li>
            <li>&lt; 0: 方法调用失败。<ph props="cn">详见<xref keyref="error-code-link"/>了解详情和解决建议。</ph></li>
            </ul> </section>
    </refbody>
</reference>