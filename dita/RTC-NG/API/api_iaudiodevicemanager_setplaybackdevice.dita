<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE reference PUBLIC "-//OASIS//DTD DITA Reference//EN" "reference.dtd">
<reference id="api_iaudiodevicemanager_setplaybackdevice">
    <title><ph keyref="setPlaybackDevice" /></title>
    <shortdesc id="short"><ph id="shortdesc">指定播放设备。</ph></shortdesc>
    <prolog>
        <metadata>
            <keywords>
                <indexterm keyref="setPlaybackDevice" />
            </keywords>
        </metadata>
    </prolog>
    <refbody>
        <section id="prototype">
            <p outputclass="codeblock">
            <codeblock props="android" outputclass="language-java" />
            <codeblock props="ios mac" outputclass="language-objectivec" />
            <codeblock props="cpp" outputclass="language-cpp">virtual int setPlaybackDevice(const char deviceId[MAX_DEVICE_ID_LENGTH]) = 0;</codeblock>
            <codeblock props="electron" outputclass="language-typescript">abstract setPlaybackDevice(deviceId: string): number;</codeblock>
            <codeblock props="unity" outputclass="language-csharp">public abstract int SetPlaybackDevice(string deviceId);</codeblock>
            <codeblock props="rn" outputclass="language-typescript">abstract setPlaybackDevice(deviceId: string): number;</codeblock>
            <codeblock props="flutter" outputclass="language-dart">Future&lt;void&gt; setPlaybackDevice(String deviceId);</codeblock>
            <codeblock props="reserve" outputclass="language-cpp"></codeblock></p>
        </section>
        <section id="detailed_desc">
            <title>详情</title>
            <p>该方法可以更改当前的音频路由，但不会改变系统默认的音频路由。假设系统默认的音频路由是扬声器 1，你在加入频道前调用该方法设置当前的音频路由为扬声器 2，如果在此时进行设备检测，SDK 会对扬声器 2 进行检测。检测结束后，当你加入频道时 SDK 依然会选择使用系统默认的音频路由，即扬声器 1。</p>
            </section>
        <section id="parameters">
            <title>参数</title>
            <parml>
            <plentry id="deviceid">
                <pt>deviceId</pt>
                <pd>
                    <p>指定播放设备。由 <xref keyref="enumeratePlaybackDevices" /> 获取。插拔设备不会影响 <parmname>deviceId</parmname>。</p>
                    <p props="cpp electron">最大长度为 <xref keyref="MAX_DEVICE_ID_LENGTH_TYPE" />。</p>
                </pd>
            </plentry>
            </parml> </section>
        <section id="return_values">
            <title><ph keyref="return-section-title"/></title>
            <p props="flutter">方法成功调用时，无返回值；方法调用失败时，会抛出 <xref keyref="AgoraRtcException"/> 异常，你需要捕获异常并进行处理。</p>
            <ul>
            <li props="native electron unity rn">0: 方法调用成功。</li>
            <li>&lt; 0: 方法调用失败。</li>
            </ul> </section>
    </refbody>
</reference>
