<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE reference PUBLIC "-//OASIS//DTD DITA Reference//EN" "reference.dtd">
<reference id="callback_irtcengineeventhandler_onusermutevideo">
    <title><ph keyref="onUserMuteVideo" /></title>
    <shortdesc id="short"><ph id="shortdesc">远端用户取消或恢复发布视频流回调。</ph></shortdesc>
    <prolog>
        <metadata>
            <keywords>
                <indexterm keyref="onUserMuteVideo" />
            </keywords>
        </metadata>
    </prolog>
    <refbody>
        <section id="prototype">
            <p outputclass="codeblock">
            <codeblock props="android" outputclass="language-java">public void onUserMuteVideo(int uid, boolean muted) {}</codeblock>
            <codeblock props="ios mac" outputclass="language-objectivec">- (void)rtcEngine:(AgoraRtcEngineKit * _Nonnull)engine didVideoMuted:(BOOL)muted byUid:(NSUInteger)uid</codeblock>
            <codeblock props="cpp" outputclass="language-cpp">virtual void onUserMuteVideo(uid_t uid, bool muted) {
    (void)uid;
    (void)muted;
    }</codeblock>
            <codeblock props="electron" outputclass="language-typescript">  onUserMuteVideo?(
    connection: RtcConnection,
    remoteUid: number,
    muted: boolean
  ): void;</codeblock>
            <codeblock props="unity" outputclass="language-csharp">public virtual void OnUserMuteVideo(RtcConnection connection, uint remoteUid, bool muted) {}</codeblock>
            <codeblock props="rn" outputclass="language-typescript">  onUserMuteVideo?(
    connection: RtcConnection,
    remoteUid: number,
    muted: boolean
  ): void;</codeblock>
            <codeblock props="flutter" outputclass="language-dart">final void Function(RtcConnection connection, int remoteUid, bool muted)?
      onUserMuteVideo;</codeblock>
            <codeblock props="unreal" outputclass="language-cpp"></codeblock></p>
        </section>
        <section id="detailed_desc">
            <dl outputclass="deprecated" props="hide">
            <dlentry>
                <dt>弃用：</dt>
                <dd>你也可以使用 <xref keyref="onRemoteVideoStateChanged" /> 回调的：


                    <ul>
                    <li><apiname keyref="REMOTE_VIDEO_STATE_STOPPED" /> (0) 和 <apiname keyref="REMOTE_VIDEO_STATE_REASON_REMOTE_MUTED" /> (5) 。</li>
                    <li><apiname keyref="REMOTE_VIDEO_STATE_DECODING" /> (2) 和 <apiname keyref="REMOTE_VIDEO_STATE_REASON_REMOTE_UNMUTED" /> (6)。</li>
                    </ul> </dd>
            </dlentry>
            </dl>
            <note props="unity">该方法即将废弃，Agora 推荐你使用 <xref keyref="onRemoteVideoStateChanged" />。</note>
            <p>当远端用户调用 <xref keyref="muteLocalVideoStream" /> 取消或恢复发布视频流时，SDK 会触发该回调向本地用户报告远端用户的发流状况。</p>
            <note type="attention">当频道内的用户（通信场景）或主播（直播场景）的人数超过 17 时，该回调可能不准确。</note> </section>
        <section id="parameters">
            <title><ph keyref="callback-section-title" /></title>
            <parml>
                <plentry conkeyref="onJoinChannelSuccess/engine" props="ios mac">
                    <pt />
                    <pd />
                </plentry>
                <plentry props="unity electron rn flutter">
                    <pt>connection</pt>
                    <pd>Connection 信息。详见 <xref keyref="RtcConnection" />。</pd>
                </plentry>
                <plentry>
                    <pt props="native">uid</pt>
                    <pt props="unity electron rn flutter">remoteUid</pt>
                    <pd>远端用户 ID。</pd>
                </plentry>
                <plentry>
                    <pt>muted</pt>
                    <pd>远端用户是否取消发布视频流：
                        <ul>
                        <li><codeph><ph keyref="true" /></codeph>: 取消发布视频流。</li>
                        <li><codeph><ph keyref="false" /></codeph>: 发布视频流。</li>
                        </ul> </pd>
                </plentry>
            </parml>
        </section>
    </refbody>
</reference>