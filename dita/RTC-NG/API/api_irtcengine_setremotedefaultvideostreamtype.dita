<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE reference PUBLIC "-//OASIS//DTD DITA Reference//EN" "reference.dtd">
<reference id="api_irtcengine_setremotedefaultvideostreamtype">
    <title><ph keyref="setRemoteDefaultVideoStreamType" /></title>
    <shortdesc id="short"><ph id="shortdesc">设置默认订阅的视频流类型。</ph></shortdesc>
    <prolog>
        <metadata>
            <keywords>
                <indexterm keyref="setRemoteDefaultVideoStreamType" />
            </keywords>
        </metadata>
    </prolog>
    <refbody>
        <section id="prototype">
            <p outputclass="codeblock">
            <codeblock props="android" outputclass="language-java">public abstract int setRemoteDefaultVideoStreamType(int streamType);</codeblock>
            <codeblock props="ios mac" outputclass="language-objectivec">- (int)setRemoteDefaultVideoStreamType:(AgoraVideoStreamType)streamType;</codeblock>
            <codeblock props="cpp unreal" outputclass="language-cpp">virtual int setRemoteDefaultVideoStreamType(VIDEO_STREAM_TYPE streamType) = 0;</codeblock>
         <codeblock props="bp" outputclass="language-cpp">UFUNCTION(BlueprintCallable, Category = &quot;Agora|RtcEngineProxy&quot;)
	int SetRemoteDefaultVideoStreamType(EVIDEO_STREAM_TYPE streamType);</codeblock>
            <codeblock props="electron" outputclass="language-typescript">abstract setRemoteDefaultVideoStreamType(streamType: VideoStreamType): number;</codeblock>
            <codeblock props="unity cs" outputclass="language-csharp">public abstract int SetRemoteDefaultVideoStreamType(VIDEO_STREAM_TYPE streamType);</codeblock>
            <codeblock props="rn" outputclass="language-typescript">abstract setRemoteDefaultVideoStreamType(streamType: VideoStreamType): number;</codeblock>
            <codeblock props="flutter" outputclass="language-dart">Future&lt;void&gt; setRemoteDefaultVideoStreamType(VideoStreamType streamType);</codeblock>
            <codeblock props="reserve" outputclass="language-cpp"></codeblock></p>
        </section>
        <section id="detailed_desc">
            <title>详情</title>
            <p conkeyref="setRemoteVideoStreamType/desc1"/>
            <p conkeyref="setRemoteVideoStreamType/desc2"/>
            <note type="attention">
            <ul>
            <li>该方法只能在加入频道前调用。SDK 不支持你在加入频道后修改默认订阅的视频流类型。</li>
            <li>如果你既调用了该方法，也调用了 <xref keyref="setRemoteVideoStreamType" />，则 SDK 以 <apiname keyref="setRemoteVideoStreamType" /> 中的设置为准。</li>
            </ul></note> </section>
        <section id="parameters">
            <title>参数</title>
            <parml>
            <plentry>
                <pt>streamType</pt>
                <pd id="defaultstreamtype">
                    <p props="apple cpp framework">默认订阅的视频流类型: <xref keyref="VIDEO_STREAM_TYPE" />。</p>
                    <p props="android">默认订阅的视频流类型：
                    <ul>
                    <li><ph keyref="VIDEO_STREAM_HIGH"/> (0)：视频大流，即高分辨率、高码率视频流。</li>
                    <li><ph keyref="VIDEO_STREAM_LOW"/> (1)：视频小流，即低分辨率、低码率视频流。</li>
                    </ul> </p>
                </pd>
            </plentry>
            </parml> </section>
        <section id="return_values">
            <title><ph keyref="return-section-title"/></title>
            <p props="flutter">方法成功调用时，无返回值；方法调用失败时，会抛出 <xref keyref="AgoraRtcException"/> 异常，你需要捕获异常并进行处理。<ph props="cn">详见<xref keyref="error-code-link"/>了解详情和解决建议。</ph></p>
            <ul props="native unreal bp electron unity rn cs">
            <li>0: 方法调用成功。</li>
            <li>&lt; 0: 方法调用失败。<ph props="cn">详见<xref keyref="error-code-link"/>了解详情和解决建议。</ph></li>
            </ul> </section>
    </refbody>
</reference>
