<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE reference PUBLIC "-//OASIS//DTD DITA Reference//EN" "reference.dtd">
<reference id="class_channelmediainfo">
    <title> <ph keyref="ChannelMediaInfo"/> </title>
    <shortdesc> 频道媒体信息。
    </shortdesc>
    <refbody>
        <section id="prototype">
            <p outputclass="codeblock">
            <codeblock props="android" outputclass="language-java">public class ChannelMediaInfo {
  public String channelName = null;
  public String token = null;
  public int uid = 0;
  }</codeblock>
            <codeblock props="hmos" outputclass="language-arkts">export class ChannelMediaInfo {
  
  public channelName:string|null;
  
  public token:string|null;
  
  public uid:number = 0;
  public constructor(cname:string|null, token: string|null, uid: number) {
    this.channelName = cname;
    this.token = token;
    this.uid = uid;
  }
}</codeblock>
            <codeblock props="ios mac" outputclass="language-objectivec">__attribute__((visibility("default"))) @interface AgoraChannelMediaRelayInfo: NSObject

@property (copy, nonatomic) NSString * _Nullable token;
@property (copy, nonatomic) NSString * _Nullable channelName;
@property (assign, nonatomic) NSUInteger uid;
- (instancetype _Nonnull)initWithToken:(NSString *_Nullable)token;
@end</codeblock>
            <codeblock props="cpp unreal" outputclass="language-cpp">struct ChannelMediaInfo {
	const char* channelName;
	const char* token;
	uid_t uid;
    };</codeblock>
         <codeblock props="bp" outputclass="language-cpp">USTRUCT(BlueprintType)
struct FChannelMediaInfo {
	GENERATED_BODY()
public:
	UPROPERTY(VisibleAnywhere, BlueprintReadWrite, Category = &quot;Agora|UserInfo&quot;)
	int64 uid = 0;
	UPROPERTY(VisibleAnywhere, BlueprintReadWrite, Category = &quot;Agora|UserInfo&quot;)
	FString channelName = &quot;&quot;;
	UPROPERTY(VisibleAnywhere, BlueprintReadWrite, Category = &quot;Agora|UserInfo&quot;)
	FString token = &quot;&quot;;
	FChannelMediaInfo(){}
	FChannelMediaInfo(const agora::rtc::ChannelMediaInfo &amp; AgoraData){
		channelName = UTF8_TO_TCHAR(AgoraData.channelName);
		token = UTF8_TO_TCHAR(AgoraData.token);
		uid = AgoraData.uid;
	}
	agora::rtc::ChannelMediaInfo CreateAgoraData() const {
		agora::rtc::ChannelMediaInfo AgoraData;
		SET_UABT_FSTRING_TO_CONST_CHAR___MEMALLOC(AgoraData.channelName,this-&gt;channelName)
		SET_UABT_FSTRING_TO_CONST_CHAR___MEMALLOC(AgoraData.token,this-&gt;token)
		AgoraData.uid = uid;
		return AgoraData;
	}
	void FreeAgoraData(agora::rtc::ChannelMediaInfo &amp; AgoraData) const {
		SET_UABT_FSTRING_TO_CONST_CHAR___MEMFREE(AgoraData.channelName)
		SET_UABT_FSTRING_TO_CONST_CHAR___MEMFREE(AgoraData.token)
	}
};</codeblock>
            <codeblock props="electron" outputclass="language-typescript">export class ChannelMediaInfo {
  
  channelName?: string;
  
  token?: string;
  
  uid?: number;
}</codeblock>
            <codeblock props="unity cs" outputclass="language-csharp">public class ChannelMediaInfo
    {
        public ChannelMediaInfo()
        {
        }

        public ChannelMediaInfo(string channelName, string token, uint uid)
        {
            this.channelName = channelName;
            this.token = token;
            this.uid = uid;

        public string channelName { set; get; }
        public string token { set; get; }
        public uint uid { set; get; }
    }</codeblock>
            <codeblock props="rn" outputclass="language-typescript">export class ChannelMediaInfo {
  
  channelName?: string;
  
  token?: string;
  
  uid?: number;
}</codeblock>
            <codeblock props="flutter" outputclass="language-dart">class ChannelMediaInfo {
  const ChannelMediaInfo({this.channelName, this.token, this.uid});

  @JsonKey(name: 'channelName')
  final String? channelName;
  @JsonKey(name: 'token')
  final String? token;
  @JsonKey(name: 'uid')
  final int? uid;
  factory ChannelMediaInfo.fromJson(Map&lt;String, dynamic&gt; json) =&gt;
      _$ChannelMediaInfoFromJson(json);
  Map&lt;String, dynamic&gt; toJson() =&gt; _$ChannelMediaInfoToJson(this);
}</codeblock>            
            <codeblock props="reserve" outputclass="language-cpp"></codeblock></p>
        </section>
        <section id="parameters">
            <title> <text conref="../conref/conref_api_metadata.dita#conref_api_metadata/property"/> </title>
            <parml>
            <plentry>
                <pt>channelName</pt>
                <pd>频道名。</pd>
            </plentry>
            <plentry>
                <pt>token</pt>
                <pd>能加入频道的 Token。</pd>
            </plentry>
            <plentry>
                <pt>uid</pt>
                <pd>用户 ID。</pd>
            </plentry>
            </parml> </section>
    </refbody>
</reference>
