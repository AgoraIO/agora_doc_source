<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE reference PUBLIC "-//OASIS//DTD DITA Reference//EN" "reference.dtd">
<reference id="callback_ivideoframeobserver_onrendervideoframe">
    <title><ph keyref="onRenderVideoFrame"/></title>
    <shortdesc id="short"><ph id="shortdesc">获取远端发送的视频数据。</ph></shortdesc>
    <prolog>
        <metadata>
            <keywords>
                <indexterm keyref="onRenderVideoFrame"/>
            </keywords>
        </metadata>
    </prolog>
    <refbody>
        <section id="prototype">
            <p outputclass="codeblock">
            <codeblock props="android" outputclass="language-java">boolean onRenderVideoFrame(String channelId, int uid, VideoFrame videoFrame);</codeblock>
            <codeblock props="ios mac" outputclass="language-objectivec">- (BOOL)onRenderVideoFrame:(AgoraOutputVideoFrame * _Nonnull)videoFrame
    uid:(NSUInteger)uid
    channelId:(NSString * _Nonnull)channelId;</codeblock>
            <codeblock props="cpp unreal" outputclass="language-cpp">virtual bool onRenderVideoFrame(const char* channelId, rtc::uid_t remoteUid, VideoFrame&amp; videoFrame) = 0;</codeblock>
         <codeblock props="bp" outputclass="language-cpp">DECLARE_DYNAMIC_MULTICAST_DELEGATE_ThreeParams(FOnRenderVideoFrame, const FString, channelId, int64, remoteUid, const FVideoFrame&amp;, videoFrame);</codeblock>
            <codeblock props="electron" outputclass="language-typescript">  onRenderVideoFrame?(
    channelId: string,
    remoteUid: number,
    videoFrame: VideoFrame
  ): boolean;</codeblock>
            <codeblock props="unity cs" outputclass="language-csharp">public virtual bool OnRenderVideoFrame(string channelId, uint remoteUid, VideoFrame videoFrame)</codeblock>
            <codeblock props="rn" outputclass="language-typescript">  onRenderVideoFrame?(
    channelId: string,
    remoteUid: number,
    videoFrame: VideoFrame
  ): boolean;</codeblock>
            <codeblock props="flutter" outputclass="language-dart">final void Function(String channelId, int remoteUid, VideoFrame videoFrame)?
      onRenderVideoFrame;</codeblock>
            <codeblock props="reserve" outputclass="language-cpp"></codeblock></p>
        </section>
        <section id="detailed_desc">
            <p>成功注册视频数据观测器后，SDK 会在捕捉到每个视频帧时触发该回调。你可以在回调中获取远端发送的渲染前的视频数据，然后根据场景需要，对视频数据进行处理。</p>
            <note type="attention" props="native unreal bp electron rn flutter">
            <ul>
            <li>如果你获取到的视频数据类型为 RGBA，SDK 不支持对 alpha 通道的值进行处理。</li>
            <li props="flutter">由于 Flutter 框架的限制，该回调不支持将处理后的视频数据发送回 SDK。</li>
            </ul></note>
        <note props="unity cs">Unity 仅支持将 YUV 格式的视频数据发回 SDK。请确保调用 <xref keyref="registerVideoFrameObserver"/> 方法注册原始视频帧观测器时，将 <parmname>mode</parmname> 设置为 <codeph>INTPTR</codeph>。</note> </section>
        <section id="parameters">
            <title>参数</title>
            <parml>
            <plentry>
                <pt props="android ios mac">uid</pt>
                <pt props="cpp unreal bp rn electron flutter unity cs">remoteUid</pt>
                <pd>发送该帧视频的远端用户 ID。</pd>
            </plentry>
            <plentry conkeyref="onCaptureVideoFrame/videoframe">
                <pt/>
                <pd/>
            </plentry>
            <plentry>
                <pt>channelId</pt>
                <pd>频道 ID。</pd>
            </plentry>
            </parml> </section>
        <section id="return_values" props="native unreal bp electron unity rn cs">
            <title>返回值</title>
            <p conkeyref="onCaptureVideoFrame/return"/>
        </section>
    </refbody>
</reference>
