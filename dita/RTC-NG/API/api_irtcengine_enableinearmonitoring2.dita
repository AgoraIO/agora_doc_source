<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE reference PUBLIC "-//OASIS//DTD DITA Reference//EN" "reference.dtd">
<reference id="api_irtcengine_enableinearmonitoring2">
    <title><ph keyref="enableInEarMonitoring2"/></title>
    <shortdesc id="short"><ph id="shortdesc">开启耳返功能。</ph></shortdesc>
    <prolog>
        <metadata>
            <keywords>
                <indexterm keyref="enableInEarMonitoring2"/>
            </keywords>
        </metadata>
    </prolog>
    <refbody>
        <section id="prototype">
            <p outputclass="codeblock">
            <codeblock props="android" outputclass="language-java">public abstract int enableInEarMonitoring(boolean enabled, int includeAudioFilters);</codeblock>
            <codeblock props="ios mac" outputclass="language-objectivec">- (int)enableInEarMonitoring:(BOOL)enabled includeAudioFilters:(AgoraEarMonitoringFilterType)includeAudioFilters;</codeblock>
            <codeblock props="cpp unreal" outputclass="language-cpp">virtual int enableInEarMonitoring(bool enabled, int includeAudioFilters) = 0;</codeblock>
         <codeblock props="bp" outputclass="language-cpp">UFUNCTION(BlueprintCallable, Category = &quot;Agora|RtcEngineProxy&quot;)
	int EnableInEarMonitoring(bool enabled, int includeAudioFilters);</codeblock>
            <codeblock props="electron" outputclass="language-typescript">abstract enableInEarMonitoring(
    enabled: boolean,
    includeAudioFilters: EarMonitoringFilterType
  ): number;</codeblock>
            <codeblock props="unity cs" outputclass="language-csharp">public abstract int EnableInEarMonitoring(bool enabled, int includeAudioFilters);</codeblock>
            <codeblock props="rn" outputclass="language-typescript">abstract enableInEarMonitoring(
    enabled: boolean,
    includeAudioFilters: EarMonitoringFilterType
  ): number;</codeblock>
            <codeblock props="flutter" outputclass="language-dart">Future&lt;void> enableInEarMonitoring(
      {required bool enabled,
      required EarMonitoringFilterType includeAudioFilters});</codeblock>
            <codeblock props="reserve" outputclass="language-cpp"></codeblock></p>
        </section>
        <section id="detailed_desc">
            <title>详情</title>
            <p>该方法打开或关闭耳返功能。</p>
            <note type="attention">
            <ul>
            <li>用户必须使用耳机（有线和蓝牙均可）才能听到耳返效果。</li>
            <li>该方法在加入频道前后都能调用。</li>
            </ul></note> </section>
        <section id="parameters">
            <title>参数</title>
            <parml>
            <plentry>
                <pt>enabled</pt>
                <pd>开启/关闭耳返功能:
                    <ul>
                    <li><codeph><ph keyref="true"/></codeph>: 开启耳返功能。</li>
                    <li><codeph><ph keyref="false"/></codeph>: （默认）关闭耳返功能。</li>
                    </ul></pd>
            </plentry>
            <plentry>
                <pt>includeAudioFilters</pt>
                <pd props="ios mac cpp unreal electron unity rn flutter cs">耳返 Audio filter 类型。详见 <xref keyref="EAR_MONITORING_FILTER_TYPE"/>。</pd>
                <pd props="android bp">耳返 Audio filter 类型：                      
                    <ul id="ul_nwv_hcy_4qb">
                    <li><ph keyref="EAR_MONITORING_FILTER_NONE"/> (1 &lt;&lt; 0)：不在耳返中添加 Audio filter。</li>
                    <li><ph keyref="EAR_MONITORING_FILTER_BUILT_IN_AUDIO_FILTERS"/> (1 &lt;&lt; 1): 在耳返中添加人声效果 Audio filter。如果你实现了美声、音效等功能，用户可以在耳返中听到添加效果后的声音。该枚举值支持使用按位或运算符（|）进行组合。</li>
                    <li><ph keyref="EAR_MONITORING_FILTER_NOISE_SUPPRESSION"/> (1 &lt;&lt;2)：在耳返中添加降噪 Audio filter。该枚举值支持使用按位或运算符（|）进行组合。</li>
                    <li><ph keyref="EAR_MONITORING_FILTER_REUSE_POST_PROCESSING_FILTER"/> (1 &lt;&lt;15)：
                    复用发送端已进行过音效处理的 Audio filter。通过复用 Audio filter 降低耳返对 CPU 的占用率，但会增加耳返延迟，适用于需要降低 CPU 消耗且对耳返延迟不敏感的场景。该枚举值仅支持单独使用，一旦指定了该选项，其他 Audio filter 配置将自动失效。</li>                
                    </ul>
                    <note type="attention">该参数仅在 <parmname>enabled</parmname> 设为 <codeph><ph keyref="true"/></codeph> 时生效。</note>
                    </pd>
            </plentry>
            </parml> </section>
        <section id="return_values">
            <title><ph keyref="return-section-title"/></title>
            <p props="flutter">方法成功调用时，无返回值；方法调用失败时，会抛出 <xref keyref="AgoraRtcException"/> 异常，你需要捕获异常并进行处理。<ph props="cn">详见<xref keyref="error-code-link"/>了解详情和解决建议。</ph></p>
            <ul id="ul_uns_l2y_hqb">
            <li props="native unreal bp unity electron rn cs">0: 方法调用成功。</li>
            <li>&lt; 0: 方法调用失败。<ph props="cn">详见<xref keyref="error-code-link"/>了解详情和解决建议。</ph>
                <ul><li>- 8: 请确保当前的音频路由为蓝牙或耳机。</li></ul>
            </li>
            </ul> </section>
    </refbody>
</reference>
