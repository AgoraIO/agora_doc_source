<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE reference PUBLIC "-//OASIS//DTD DITA Reference//EN" "reference.dtd">
<reference id="api_irtcengine_enableinearmonitoring2">
    <title><ph keyref="enableInEarMonitoring2"/></title>
    <shortdesc id="short"><ph id="shortdesc">开启耳返功能。</ph></shortdesc>
    <prolog>
        <metadata>
            <keywords>
                <indexterm keyref="enableInEarMonitoring2"/>
            </keywords>
        </metadata>
    </prolog>
    <refbody>
        <section id="prototype">
            <p outputclass="codeblock">
            <codeblock props="android" outputclass="language-java">public abstract int enableInEarMonitoring(boolean enabled, int includeAudioFilters);</codeblock>
            <codeblock props="ios mac" outputclass="language-objectivec">- (int)enableInEarMonitoring:(BOOL)enabled includeAudioFilters:(AgoraEarMonitoringFilterType)includeAudioFilters;</codeblock>
            <codeblock props="cpp" outputclass="language-cpp">virtual int enableInEarMonitoring(bool enabled, int includeAudioFilters) = 0;</codeblock>
            <codeblock props="electron" outputclass="language-typescript">abstract enableInEarMonitoring(
    enabled: boolean,
    includeAudioFilters: EarMonitoringFilterType
  ): number;</codeblock>
            <codeblock props="unity" outputclass="language-csharp">public abstract int EnableInEarMonitoring(bool enabled, int includeAudioFilters);</codeblock>
            <codeblock props="rn" outputclass="language-typescript">abstract enableInEarMonitoring(
    enabled: boolean,
    includeAudioFilters: EarMonitoringFilterType
  ): number;</codeblock>
            <codeblock props="flutter" outputclass="language-dart">Future&lt;void> enableInEarMonitoring(
      {required bool enabled,
      required EarMonitoringFilterType includeAudioFilters});</codeblock>
            <codeblock props="unreal" outputclass="language-cpp"></codeblock></p>
        </section>
        <section id="detailed_desc">
            <p>该方法打开或关闭耳返功能。</p>
            <note type="attention">
            <ul>
            <li>用户必须使用有线耳机才能听到耳返效果。</li>
            <li>该方法在加入频道前后都能调用。</li>
            </ul></note> </section>
        <section id="parameters">
            <title>参数</title>
            <parml>
            <plentry>
                <pt>enabled</pt>
                <pd>开启/关闭耳返功能:                    
                    
                    <ul>
                    <li><codeph><ph keyref="true"/></codeph>: 开启耳返功能。</li>
                    <li><codeph><ph keyref="false"/></codeph>: （默认）关闭耳返功能。</li>
                    </ul></pd>
            </plentry>
            <plentry>
                <pt>includeAudioFilters</pt>
                <pd props="ios mac cpp electron unity rn flutter">耳返 audio filter 类型。详见 <xref keyref="EAR_MONITORING_FILTER_TYPE"/>。</pd>
                <pd props="android">耳返 audio filter 类型：                    
                    
                    <ul id="ul_nwv_hcy_4qb">
                    <li><ph keyref="EAR_MONITORING_FILTER_NONE"/> (1 &lt;&lt; 0)：不在耳返中添加 audio filter。</li>
                    <li><ph keyref="EAR_MONITORING_FILTER_BUILT_IN_AUDIO_FILTERS"/> (1 &lt;&lt; 1): 在耳返中添加人声效果 audio filter。如果你实现了美声、音效等功能，用户可以在耳返中听到添加效果后的声音。</li>
                    <li><ph keyref="EAR_MONITORING_FILTER_NOISE_SUPPRESSION"/> (1 &lt;&lt;2)：在耳返中添加降噪 audio filter。                       
                        
                        <p>可使用按位或运算符 (|) 添加多个 audio filter。
                        
                        <note type="attention"> 如果你将 <parmname>enabled</parmname> 参数设为 <codeph><ph keyref="false"/></codeph>，则无需设置 <parmname>includeAudioFilters</parmname> 参数。</note></p>
                    </li>
                    </ul></pd>
            </plentry>
            </parml> </section>
        <section id="return_values" props="native unity electron rn">
            <title>返回值</title>
            <ul id="ul_uns_l2y_hqb">
            <li>0: 方法调用成功。</li>
            <li>&lt; 0: 方法调用失败。</li>
            </ul> </section>
    </refbody>
</reference>
