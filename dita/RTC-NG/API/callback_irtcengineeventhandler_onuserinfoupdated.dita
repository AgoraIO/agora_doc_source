<?xml version='1.0' encoding='UTF-8'?>
<!DOCTYPE reference PUBLIC "-//OASIS//DTD DITA Reference//EN" "reference.dtd">
<reference id="callback_irtcengineeventhandler_onuserinfoupdated">
    <title> <ph keyref="onUserInfoUpdated"/> </title>
    <shortdesc id="short"> <ph id="shortdesc">远端用户的用户 ID 和用户账号信息更新时触发的回调。</ph> </shortdesc>
    <prolog>
        <metadata>
            <keywords>
                <indexterm keyref="onUserInfoUpdated"/>
            </keywords>
        </metadata>
    </prolog>
    <refbody>
        <section id="prototype">
            <p outputclass="codeblock">
            <codeblock props="android" outputclass="language-java">public void onUserInfoUpdated(int uid, UserInfo userInfo) {}</codeblock>
            <codeblock props="hmos" outputclass="language-arkts"/>
            <codeblock props="ios mac" outputclass="language-objectivec">- (void)rtcEngine:(AgoraRtcEngineKit * _Nonnull)engine didUserInfoUpdatedWithUserId:(NSUInteger)uid userInfo:(AgoraUserInfo* _Nonnull)userInfo NS_SWIFT_NAME(rtcEngine(_:didUserInfoUpdatedWithUserId:userInfo:));</codeblock>
            <codeblock props="cpp unreal" outputclass="language-cpp">virtual void onUserInfoUpdated(uid_t uid, const UserInfo&amp; info) = 0;</codeblock>
         <codeblock props="bp" outputclass="language-cpp">UFUNCTION(BlueprintNativeEvent, Category = "Agora|Event")
	void OnUserInfoUpdated(int64 uid, const FUserInfo&amp; info);</codeblock>
            <codeblock props="electron" outputclass="language-typescript">  onUserInfoUpdated?(uid: number, info: UserInfo): void;</codeblock>
            <codeblock props="unity cs" outputclass="language-csharp">public virtual void OnUserInfoUpdated(uint uid, UserInfo info)</codeblock>
            <codeblock props="rn" outputclass="language-typescript">  onUserInfoUpdated?(uid: number, info: UserInfo): void;</codeblock>
            <codeblock props="flutter" outputclass="language-dart">final void Function(int uid, UserInfo info)? onUserInfoUpdated;</codeblock>
            <codeblock props="reserve" outputclass="language-cpp"/></p>
        </section>
        <section id="detailed_desc">
            <dl outputclass="since">
            <dlentry props="android">
                <dt>自从：</dt>
                <dd props="native">自 v2.8.0 版本新增。</dd>
            </dlentry>
            </dl>
            <p>当远端用户加入频道后，SDK 会获取该用户的用户 ID 和用户账号，并将其缓存在映射表中，然后在本地客户端触发该回调。</p>
            </section>
        <section id="parameters">
            <title> <ph keyref="callback-section-title"/> </title>
            <parml>
            <plentry conkeyref="onJoinChannelSuccess/engine" props="apple">
                <pt/>
                <pd/>
            </plentry>
            <plentry>
                <pt>uid</pt>
                <pd props="bp cs electron flutter mac rn unity unreal">远端用户 ID。</pd>
            <pd props="android cpp ios">远端用户的用户 ID。</pd>
                </plentry>
            <plentry>
                <pt>userInfo</pt>
                <pt props="bp cpp cs electron flutter rn unity unreal">info</pt>
                <pd props="bp cpp cs electron flutter mac rn unity unreal">标识用户信息的 UserInfo 对象，包含用户 UID 和 User Account。详见 <xref keyref="UserInfo"/> 类。</pd>
            <pd props="android">包含远端用户的用户 ID 和用户账号信息的对象。详见 <xref keyref="UserInfo"/>。</pd>
                <pd props="ios">包含远端用户的用户 ID 和用户账号的对象，详见 <xref keyref="UserInfo"/>。</pd>
                </plentry>
            <plentry props="cpp">
                <pt props="cpp">info</pt>
                <pd props="cpp">包含远端用户的用户 ID 和用户账号的对象。详见 <xref keyref="UserInfo"/>。</pd>
            </plentry>
            <plentry props="ios">
                <pt props="ios">engine</pt>
                <pd props="ios">输入参数，<xref keyref="IRtcEngine"/> 对象，详见 <xref keyref="IRtcEngine"/>。</pd>
            </plentry>
        </parml> </section>
    </refbody>
</reference>
