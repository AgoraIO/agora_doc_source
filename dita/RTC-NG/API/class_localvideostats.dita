<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE reference PUBLIC "-//OASIS//DTD DITA Reference//EN" "reference.dtd">
<reference id="class_localvideostats">
    <title><ph keyref="LocalVideoStats"/></title>
    <shortdesc id="short"><ph id="shortdesc">本地视频流统计信息。</ph></shortdesc>
    <refbody>
        <section id="prototype">
            <p outputclass="codeblock">
            <codeblock props="android" outputclass="language-java">public static class LocalVideoStats {
  public int uid;
  public int sentBitrate;
  public int sentFrameRate;
  public int captureFrameRate;
  public int captureFrameWidth;
  public int captureFrameHeight;
  public int regulatedCaptureFrameRate;
  public int regulatedCaptureFrameWidth;
  public int regulatedCaptureFrameHeight;
  public int encoderOutputFrameRate;
  public int rendererOutputFrameRate;
  public int targetBitrate;
  public int targetFrameRate;
  public int qualityAdaptIndication;
  public int encodedBitrate;
  public int encodedFrameWidth;
  public int encodedFrameHeight;
  public int encodedFrameCount;
  public int codecType;
  public int txPacketLossRate;
  public int captureBrightnessLevel;
  public int hwEncoderAccelerating;
}</codeblock>
            <codeblock props="ios mac" outputclass="language-objectivec">__attribute__((visibility("default"))) @interface AgoraRtcLocalVideoStats : NSObject
@property(assign, nonatomic) NSUInteger sentBitrate;
@property(assign, nonatomic) NSUInteger sentFrameRate;
@property(assign, nonatomic) NSUInteger uid;

@property(assign, nonatomic) NSInteger captureFrameRate;
@property(assign, nonatomic) NSInteger captureFrameWidth;
@property(assign, nonatomic) NSInteger captureFrameHeight;
@property(assign, nonatomic) NSInteger regulatedCaptureFrameRate;
@property(assign, nonatomic) NSInteger regulatedCaptureFrameWidth;
@property(assign, nonatomic) NSInteger regulatedCaptureFrameHeight;

@property(assign, nonatomic) NSInteger encoderOutputFrameRate;
@property(assign, nonatomic) NSInteger rendererOutputFrameRate;
@property(assign, nonatomic) NSInteger targetFrameRate;
@property(assign, nonatomic) AgoraVideoQualityAdaptIndication qualityAdaptIndication;
@property(assign, nonatomic) NSInteger targetBitrate;
@property(assign, nonatomic) NSInteger encodedBitrate;
@property(assign, nonatomic) NSInteger encodedFrameWidth;
@property(assign, nonatomic) NSInteger encodedFrameHeight;
@property(assign, nonatomic) NSInteger encodedFrameCount;
@property(assign, nonatomic) AgoraVideoCodecType codecType;
@property(assign, nonatomic) AgoraVideoHwEncoderAccelerating hwEncoderAccelerating;
@property(assign, nonatomic) NSInteger txPacketLossRate;
@property(assign, nonatomic) AgoraCaptureBrightnessLevelType captureBrightnessLevel NS_SWIFT_NAME(captureBrightnessLevel);
@end</codeblock>
            <codeblock props="cpp" outputclass="language-cpp">struct LocalVideoStats
{
    uid_t uid;
    int sentBitrate;
    int sentFrameRate;
    int captureFrameRate;
    int captureFrameWidth;
    int captureFrameHeight;
    int regulatedCaptureFrameRate;
    int regulatedCaptureFrameWidth;
    int regulatedCaptureFrameHeight;
    int encoderOutputFrameRate;
    int encodedFrameWidth;
    int encodedFrameHeight;
    int rendererOutputFrameRate;
    int targetBitrate;
    int targetFrameRate;
    QUALITY_ADAPT_INDICATION qualityAdaptIndication;
    int encodedBitrate;
    int encodedFrameCount;
    VIDEO_CODEC_TYPE codecType;
    unsigned short txPacketLossRate;
    CAPTURE_BRIGHTNESS_LEVEL_TYPE captureBrightnessLevel;
    int hwEncoderAccelerating;

};</codeblock>
            <codeblock props="electron" outputclass="language-typescript">export class LocalVideoStats {
  
  uid?: number;
  
  sentBitrate?: number;
  
  sentFrameRate?: number;
  
  captureFrameRate?: number;
  
  captureFrameWidth?: number;
  
  captureFrameHeight?: number;
  
  regulatedCaptureFrameRate?: number;
  
  regulatedCaptureFrameWidth?: number;
  
  regulatedCaptureFrameHeight?: number;
  
  encoderOutputFrameRate?: number;
  
  encodedFrameWidth?: number;
  
  encodedFrameHeight?: number;
  
  rendererOutputFrameRate?: number;
  
  targetBitrate?: number;
  
  targetFrameRate?: number;
  
  qualityAdaptIndication?: QualityAdaptIndication;
  
  encodedBitrate?: number;
  
  encodedFrameCount?: number;
  
  codecType?: VideoCodecType;
  
  txPacketLossRate?: number;
  
  captureBrightnessLevel?: CaptureBrightnessLevelType;

  hwEncoderAccelerating?: number;

}</codeblock>
            <codeblock props="unity" outputclass="language-csharp">public class LocalVideoStats
    {
        public LocalVideoStats()
        {
        }

        public uint uid { set; get; }
        public int sentBitrate { set; get; }
        public int sentFrameRate { set; get; }
        public int captureFrameRate { set; get; }
        public int captureFrameWidth { set; get; }
        public int captureFrameHeight { set; get; }
        public int regulatedCaptureFrameRate { set; get; }
        public int regulatedCaptureFrameWidth { set; get; 
        public int regulatedCaptureFrameHeight { set; get; }
        public int encoderOutputFrameRate { set; get; }
        public int encodedFrameWidth { set; get; }
        public int encodedFrameHeight { set; get; }
        public int rendererOutputFrameRate { set; get; }
        public int targetBitrate { set; get; }
        public int targetFrameRate { set; get; }
        public QUALITY_ADAPT_INDICATION qualityAdaptIndication { set; get; }
        public int encodedBitrate { set; get; }
        public int encodedFrameCount { set; get; }
        public VIDEO_CODEC_TYPE codecType { set; get; }
        public ushort txPacketLossRate { set; get; }
        public CAPTURE_BRIGHTNESS_LEVEL_TYPE captureBrightnessLevel { set; get; }
        public int hwEncoderAccelerating { set; get; }
    };</codeblock>
            <codeblock props="rn" outputclass="language-typescript">export class LocalVideoStats {
  
  uid?: number;
  
  sentBitrate?: number;
  
  sentFrameRate?: number;
  
  captureFrameRate?: number;
  
  captureFrameWidth?: number;
  
  captureFrameHeight?: number;
  
  regulatedCaptureFrameRate?: number;
  
  regulatedCaptureFrameWidth?: number;
  
  regulatedCaptureFrameHeight?: number;
  
  encoderOutputFrameRate?: number;
  
  encodedFrameWidth?: number;
  
  encodedFrameHeight?: number;
  
  rendererOutputFrameRate?: number;
  
  targetBitrate?: number;
  
  targetFrameRate?: number;
  
  qualityAdaptIndication?: QualityAdaptIndication;
  
  encodedBitrate?: number;
  
  encodedFrameCount?: number;
  
  codecType?: VideoCodecType;
  
  txPacketLossRate?: number;
  
  captureBrightnessLevel?: CaptureBrightnessLevelType;

  hwEncoderAccelerating?: number;
  
}</codeblock>
            <codeblock props="flutter" outputclass="language-dart">class LocalVideoStats {
  const LocalVideoStats(
      {this.uid,
      this.sentBitrate,
      this.sentFrameRate,
      this.captureFrameRate,
      this.captureFrameWidth,
      this.captureFrameHeight,
      this.regulatedCaptureFrameRate,
      this.regulatedCaptureFrameWidth,
      this.regulatedCaptureFrameHeight,
      this.encoderOutputFrameRate,
      this.encodedFrameWidth,
      this.encodedFrameHeight,
      this.rendererOutputFrameRate,
      this.targetBitrate,
      this.targetFrameRate,
      this.qualityAdaptIndication,
      this.encodedBitrate,
      this.encodedFrameCount,
      this.codecType,
      this.txPacketLossRate,
      this.captureBrightnessLevel,
      this.hwEncoderAccelerating});

  @JsonKey(name: 'uid')
  final int? uid;

  @JsonKey(name: 'sentBitrate')
  final int? sentBitrate;

  @JsonKey(name: 'sentFrameRate')
  final int? sentFrameRate;

  @JsonKey(name: 'captureFrameRate')
  final int? captureFrameRate;

  @JsonKey(name: 'captureFrameWidth')
  final int? captureFrameWidth;

  @JsonKey(name: 'captureFrameHeight')
  final int? captureFrameHeight;

  @JsonKey(name: 'regulatedCaptureFrameRate')
  final int? regulatedCaptureFrameRate;

  @JsonKey(name: 'regulatedCaptureFrameWidth')
  final int? regulatedCaptureFrameWidth;

  @JsonKey(name: 'regulatedCaptureFrameHeight')
  final int? regulatedCaptureFrameHeight;

  @JsonKey(name: 'encoderOutputFrameRate')
  final int? encoderOutputFrameRate;

  @JsonKey(name: 'encodedFrameWidth')
  final int? encodedFrameWidth;

  @JsonKey(name: 'encodedFrameHeight')
  final int? encodedFrameHeight;

  @JsonKey(name: 'rendererOutputFrameRate')
  final int? rendererOutputFrameRate;

  @JsonKey(name: 'targetBitrate')
  final int? targetBitrate;

  @JsonKey(name: 'targetFrameRate')
  final int? targetFrameRate;

  @JsonKey(name: 'qualityAdaptIndication')
  final QualityAdaptIndication? qualityAdaptIndication;

  @JsonKey(name: 'encodedBitrate')
  final int? encodedBitrate;

  @JsonKey(name: 'encodedFrameCount')
  final int? encodedFrameCount;

  @JsonKey(name: 'codecType')
  final VideoCodecType? codecType;

  @JsonKey(name: 'txPacketLossRate')
  final int? txPacketLossRate;

  @JsonKey(name: 'captureBrightnessLevel')
  final CaptureBrightnessLevelType? captureBrightnessLevel;

  @JsonKey(name: 'hwEncoderAccelerating')
  final int? hwEncoderAccelerating;

  factory LocalVideoStats.fromJson(Map&lt;String, dynamic> json) =>
      _$LocalVideoStatsFromJson(json);

  Map&lt;String, dynamic> toJson() => _$LocalVideoStatsToJson(this);
}</codeblock>            
            <codeblock props="unreal" outputclass="language-cpp"></codeblock></p>
        </section>
        <section id="parameters">
            <title><text
            conref="../conref/conref_api_metadata.dita#conref_api_metadata/property"
            /></title>
            <parml>
            <plentry>
                <pt>uid</pt>
                <pd>本地用户的 ID。</pd>
            </plentry>
            <plentry>
                <pt>sentBitrate</pt>
                <pd>
                    <p>实际发送码率 (Kbps) 
                    <note type="attention">不包含丢包后重传视频等的发送码率。</note></p>
                </pd>
            </plentry>
            <plentry>
                <pt>sentFrameRate</pt>
                <pd>实际发送帧率 (fps)。
                    <note type="attention">不包含丢包后重传视频等的发送帧率。</note></pd>
            </plentry>
            <plentry>
                <pt>captureFrameRate</pt>
                <pd>本地视频采集帧率 (fps)。</pd>
            </plentry>
            <plentry>
                <pt>captureFrameWidth</pt>
                <pd>本地视频采集宽度 (px)。</pd>
            </plentry>
            <plentry>
                <pt>captureFrameHeight</pt>
                <pd>本地视频采集高度 (px)。</pd>
            </plentry>
            <plentry>
                <pt>regulatedCaptureFrameRate</pt>
                <pd>SDK 内置的视频采集适配器（regulator）调整后的摄像头采集视频帧率 (fps)。Regulator 根据视频编码配置对摄像头采集视频的帧率进行调整。</pd>
            </plentry>
            <plentry>
                <pt>regulatedCaptureFrameWidth</pt>
                <pd>SDK 内置的视频采集适配器（regulator）调整后的摄像头采集视频宽度 (px)。Regulator 根据视频编码配置对摄像头采集视频的宽高进行调整。</pd>
            </plentry>
            <plentry>
                <pt>regulatedCaptureFrameHeight</pt>
                <pd>SDK 内置的视频采集适配器（regulator）调整后的摄像头采集视频高度 (px)。Regulator 根据视频编码配置对摄像头采集视频的宽高进行调整。</pd>
            </plentry>
            <plentry>
                <pt>encoderOutputFrameRate</pt>
                <pd>本地视频编码器的输出帧率，单位为 fps。</pd>
            </plentry>
            <plentry>
                <pt>rendererOutputFrameRate</pt>
                <pd>本地视频渲染器的输出帧率，单位为 fps。</pd>
            </plentry>
            <plentry>
                <pt>targetBitrate</pt>
                <pd>当前编码器的目标编码码率 (Kbps)，该码率为 SDK 根据当前网络状况预估的一个值。</pd>
            </plentry>
            <plentry>
                <pt>targetFrameRate</pt>
                <pd>当前编码器的目标编码帧率 (fps)。</pd>
            </plentry>
            <plentry>
                <pt>qualityAdaptIndication</pt>
                <pd><ph>统计周期内本地视频质量（基于目标帧率和目标码率）的自适应情况。</ph><ph props="cpp ios mac unity electron rn flutter">详见 <xref keyref="QUALITY_ADAPT_INDICATION"/>。</ph>
                    <p props="android">
                    <ul>
                    <li><ph keyref="ADAPT_NONE"/> (0): 本地视频质量不变。</li>
                    <li><ph keyref="ADAPT_UP_BANDWIDTH"/> (1): 因网络带宽增加，本地视频质量改善。</li>
                    <li><ph keyref="ADAPT_DOWN_BANDWIDTH"/> (2): 因网络带宽减少，本地视频质量变差。</li>
                    </ul> </p>
                </pd>
            </plentry>
            <plentry>
                <pt>encodedBitrate</pt>
                <pd>
                    <p>视频编码码率（Kbps）。
                    <note type="attention">不包含丢包后重传视频等的编码码率。</note></p>
                </pd>
            </plentry>
            <plentry>
                <pt>encodedFrameHeight</pt>
                <pd>视频编码高度（px）。</pd>
            </plentry>
            <plentry>
                <pt>encodedFrameWidth</pt>
                <pd>视频编码宽度（px）。</pd>
            </plentry>
            <plentry>
                <pt>encodedFrameCount</pt>
                <pd>视频发送的帧数，累计值。</pd>
            </plentry>
            <plentry>
                <pt>codecType</pt>
                <pd><ph>视频的编码类型。</ph><ph props="ios mac cpp unity electron rn flutter">详见 <xref keyref="VIDEO_CODEC_TYPE"/>。</ph>
                    <p props="android">
                    <ul>
                    <li><ph keyref="VIDEO_CODEC_VP8"/> (1): VP8。</li>
                    <li><ph keyref="VIDEO_CODEC_H264"/> (2): （默认值） H.264。</li>
                    </ul> </p>
                </pd>
            </plentry>
            <plentry>
                <pt>txPacketLossRate</pt>
                <pd>弱网对抗前本端到 Agora 边缘服务器的视频丢包率 (%)。</pd>
            </plentry>
            <plentry props="unity electron rn flutter">
                <pt>captureFrameRate</pt>
                <pd>本地视频采集帧率 (fps)。</pd>
            </plentry>
            <plentry props="apple cpp framework">
                <pt>captureBrightnessLevel</pt>
                <pd>本地采集的画质亮度级别。详见 <xref keyref="CAPTURE_BRIGHTNESS_LEVEL_TYPE"/>。</pd>
            </plentry>
            <plentry props="android">
                <pt>captureBrightnessLevel</pt>
                <pd>本地采集的画质亮度级别。
                    <ul>
                    <li><ph keyref="CAPTURE_BRIGHTNESS_LEVEL_INVALID"/> (-1): SDK 未检测出本地采集的画质亮度级别。请等待几秒，通过下一次回调的 <parmname>captureBrightnessLevel</parmname> 获取亮度级别。</li>
                    <li><ph keyref="CAPTURE_BRIGHTNESS_LEVEL_NORMAL"/> (0): 本地采集的画质亮度正常。</li>
                    <li><ph keyref="CAPTURE_BRIGHTNESS_LEVEL_BRIGHT"/> (1): 本地采集的画质亮度偏亮。</li>
                    <li><ph keyref="CAPTURE_BRIGHTNESS_LEVEL_DARK"/> (2): 本地采集的画质亮度偏暗。</li>
                    </ul></pd>
            </plentry>
            <plentry>
                <pt>hwEncoderAccelerating</pt>
                <pd>本地视频编码加速类型。<ph props="apple">详见 <xref keyref="hwEncoderAccelerating"/>。</ph>
                    <ul props="cpp android framework">
                    <li>0：采用软件编码，未加速。</li>
                    <li>1：采用硬件编码进行加速。</li>
                    </ul></pd>
            </plentry>
            </parml> </section>
    </refbody>
</reference>
