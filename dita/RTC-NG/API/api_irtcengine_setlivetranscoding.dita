<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE reference PUBLIC "-//OASIS//DTD DITA Reference//EN" "reference.dtd">
<reference id="api_irtcengine_setlivetranscoding">
    <title><ph keyref="setLiveTranscoding" /></title>
    <shortdesc id="short"><ph id="shortdesc">设置直播推流转码。</ph></shortdesc>
    <prolog>
        <metadata>
            <keywords>
                <indexterm keyref="setLiveTranscoding" />
            </keywords>
        </metadata>
    </prolog>
    <refbody>
        <section id="prototype">
            <p outputclass="codeblock">
            <codeblock props="android" outputclass="language-java">public abstract int setLiveTranscoding(LiveTranscoding transcoding);</codeblock>
            <codeblock props="ios mac" outputclass="language-objectivec">- (int)setLiveTranscoding:(AgoraLiveTranscoding *_Nullable)transcoding;</codeblock>
            <codeblock props="cpp unreal" outputclass="language-cpp">virtual int setLiveTranscoding(const LiveTranscoding &amp;transcoding) = 0;</codeblock>
            <codeblock props="electron" outputclass="language-typescript">abstract setLiveTranscoding(transcoding: LiveTranscoding): number;</codeblock>
            <codeblock props="unity cs" outputclass="language-csharp">public abstract int SetLiveTranscoding(LiveTranscoding transcoding);</codeblock>
            <codeblock props="rn" outputclass="language-typescript">abstract setLiveTranscoding(transcoding: LiveTranscoding): number;</codeblock>
            <codeblock props="flutter" outputclass="language-dart">Future&lt;void&gt; setLiveTranscoding(LiveTranscoding transcoding);</codeblock>
            <codeblock props="reserve" outputclass="language-cpp"></codeblock></p>
        </section>
        <section id="detailed_desc">
            <title>详情</title>
            <dl outputclass="deprecated">
            <dlentry>
                <dt>弃用：</dt>
                <dd>该方法已废弃。请根据实际情况改用 <xref keyref="startRtmpStreamWithTranscoding" /> 或 <xref keyref="updateRtmpTranscoding" />。</dd>
            </dlentry>
            </dl>
            <p>该方法用于旁路推流的视图布局及音频设置等。调用该方法更新转码设置后本地会触发 <xref keyref="onTranscodingUpdated" /> 回调。</p>
            <note type="attention" id="note">
            <ul>
            <li>只有直播场景中角色为主播的用户才能调用该方法。</li>
            <li>请确保已开通旁路推流的功能。</li>
            <li>首次调用该方法更新转码设置时，不会触发 <apiname keyref="onTranscodingUpdated" /> 回调。</li>
            <li>该方法需要在加入频道后调用。</li>
            </ul> </note> </section>
        <section id="parameters">
            <title>参数</title>
            <parml>
            <plentry>
                <pt>transcoding</pt>
                <pd>
                    <p>推流转码设置。详见 <xref href="class_livetranscoding.dita" />。</p>
                </pd>
            </plentry>
            </parml> </section>
        <section id="return_values">
            <title><ph keyref="return-section-title"/></title>
            <p props="flutter">方法成功调用时，无返回值；方法调用失败时，会抛出 <xref keyref="AgoraRtcException"/> 异常，你需要捕获异常并进行处理。<ph props="cn">详见<xref keyref="error-code-link"/>了解详情和解决建议。</ph></p>
            <ul>
            <li props="native unreal bp electron unity rn cs">0：方法调用成功。</li>
            <li>&lt; 0：方法调用失败。<ph props="cn">详见<xref keyref="error-code-link"/>了解详情和解决建议。</ph></li>
            </ul> </section>
    </refbody>
</reference>