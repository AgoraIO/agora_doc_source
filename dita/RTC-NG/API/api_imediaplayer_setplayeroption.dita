<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE reference PUBLIC "-//OASIS//DTD DITA Reference//EN" "reference.dtd">
<reference id="api_imediaplayer_setplayeroption">
    <title><ph keyref="setPlayerOption"/></title>
    <shortdesc id="short"><ph id="shortdesc">设置媒体播放器选项。</ph></shortdesc>
    <prolog>
        <metadata>
            <keywords>
                <indexterm keyref="setPlayerOption"/>
            </keywords>
        </metadata>
    </prolog>
    <refbody>
        <section id="prototype">
            <p outputclass="codeblock">
            <codeblock props="android" outputclass="language-java">int setPlayerOption(String key, int value);</codeblock>
            <codeblock props="hmos" outputclass="language-arkts">public abstract setPlayerOption(key:string, value:number);</codeblock>
            <codeblock props="ios mac" outputclass="language-objectivec">- (int)setPlayerOption:(NSString *)key value:(NSInteger)value NS_SWIFT_NAME(setPlayerOption(_:value:));</codeblock>
            <codeblock props="cpp unreal" outputclass="language-cpp">virtual int setPlayerOption(const char* key, int64_t value) = 0;</codeblock>
           <codeblock props="bp" outputclass="language-cpp">UFUNCTION(BlueprintCallable, Category = &quot;Agora|IMediaPlayer&quot;)
	int SetPlayerOptionWithInt(const FString &amp; key, int value);</codeblock>
            <codeblock props="electron" outputclass="language-typescript">abstract setPlayerOptionInInt(key: string, value: number): number;</codeblock>
            <codeblock props="unity cs" outputclass="language-csharp">public abstract int SetPlayerOption(string key, int value);</codeblock>
            <codeblock props="rn" outputclass="language-typescript">abstract setPlayerOptionInInt(key: string, value: number): number;</codeblock>
            <codeblock props="flutter" outputclass="language-dart">Future&lt;void> setPlayerOptionInInt({required String key, required int value});</codeblock>
            <codeblock props="reserve" outputclass="language-cpp"></codeblock></p>
        </section>
        <section id="detailed_desc" deliveryTarget="details" otherprops="no-title">
            <p id="desc1">媒体播放器支持通过 <parmname>key</parmname> 和 <parmname>value</parmname> 来设置选项。</p>
            <p>该方法和 <xref keyref="setPlayerOption2"/> 的区别在于，该方法的 <parmname>value</parmname> 是 Int 型，<apiname keyref="setPlayerOption2"/> 的 <parmname>value</parmname> 是 String 型。二者不可混用。</p>
            </section>
            <section id="scenario" deliveryTarget="details">
                <title>适用场景</title>
                <p>需要提供技术预览或特别定制功能的场景。一般情况下，你无需调用该方法，使用媒体播放器默认的选项设置即可。</p>
            </section>
            <section id="timing" deliveryTarget="details">
                <title>调用时机</title>
                <p>该方法需要在 <xref keyref="open"/> 或 <xref keyref="openWithMediaSource"/> 之前调用。</p>
            </section>        
            <section id="restriction" deliveryTarget="details">
                <title>调用限制</title>
                <p>无。</p>
            </section>
            <section id="parameters" deliveryTarget="details">
                <title>参数</title>
            <parml>
            <plentry>
                <pt>key</pt>
                <pd>key 值。</pd>
            </plentry>
            <plentry>
                <pt>value</pt>
                <pd>value 值。</pd>
            </plentry>
            </parml> </section>
        <section id="return_values">
            <title><ph keyref="return-section-title"/></title>
            <p props="flutter">方法成功调用时，无返回值；方法调用失败时，会抛出 <xref keyref="AgoraRtcException"/> 异常，你需要捕获异常并进行处理。<ph props="cn">详见<xref keyref="error-code-link"/>了解详情和解决建议。</ph></p>
            <ul props="native unreal bp electron unity rn cs">
            <li>0: 方法调用成功。</li>
            <li>&lt; 0: 方法调用失败。<ph props="cn">详见<xref keyref="error-code-link"/>了解详情和解决建议。</ph></li>
            </ul> </section>
    </refbody>
</reference>
