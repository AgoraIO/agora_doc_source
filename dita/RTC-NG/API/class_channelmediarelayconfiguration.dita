<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE reference PUBLIC "-//OASIS//DTD DITA Reference//EN" "reference.dtd">
<reference id="class_channelmediarelayconfiguration">
    <title> <ph keyref="ChannelMediaRelayConfiguration"/> </title>
    <shortdesc>跨频道媒体流转发配置信息。</shortdesc>
    <refbody>
        <section id="prototype">
            <p outputclass="codeblock">
            <codeblock props="android" outputclass="language-java">public class ChannelMediaRelayConfiguration {
  private ChannelMediaInfo srcInfo = null;
  private Map&lt;String, ChannelMediaInfo> destInfos = null;

  public ChannelMediaRelayConfiguration() {
    destInfos = new HashMap&lt;String, ChannelMediaInfo>();
    srcInfo = new ChannelMediaInfo(null, null, 0);
  }

  public void setSrcChannelInfo(ChannelMediaInfo srcInfo) {
    this.srcInfo = srcInfo;
  }

  public void setDestChannelInfo(String channelName, ChannelMediaInfo destInfo) {
    if (destInfos.size() &lt; Constants.MAX_CROSS_DEST_CHANNEL_SIZE) {
      destInfos.put(channelName, destInfo);
    }
  }

  public void removeDestChannelInfo(String channelName) {
    destInfos.remove(channelName);
  }

  public ChannelMediaInfo getSrcChannelMediaInfo() {
    return srcInfo;
  }

  public Map&lt;String, ChannelMediaInfo> getDestChannelMediaInfos() {
    return destInfos;
  }
}
</codeblock>
            <codeblock props="ios mac" outputclass="language-objectivec">__attribute__((visibility("default"))) @interface AgoraChannelMediaRelayConfiguration: NSObject

@property (strong, nonatomic, readonly) NSDictionary&lt;NSString *, AgoraChannelMediaRelayInfo *&gt; *_Nullable destinationInfos;
@property (strong, nonatomic) AgoraChannelMediaRelayInfo *_Nonnull sourceInfo;

- (BOOL)setDestinationInfo:(AgoraChannelMediaRelayInfo *_Nonnull)destinationInfo forChannelName:(NSString *_Nonnull)channelName;
- (BOOL)removeDestinationInfoForChannelName:(NSString *_Nonnull)channelName;
@end</codeblock>
            <codeblock props="cpp" outputclass="language-cpp">struct ChannelMediaRelayConfiguration {
	ChannelMediaInfo *srcInfo;
	ChannelMediaInfo *destInfos;
	int destCount;

	ChannelMediaRelayConfiguration()
			: srcInfo(nullptr)
			, destInfos(nullptr)
			, destCount(0)
	{}
    };</codeblock>
            <codeblock props="electron" outputclass="language-typescript">export class ChannelMediaRelayConfiguration {
  
  srcInfo?: ChannelMediaInfo;
  
  destInfos?: ChannelMediaInfo[];
  
  destCount?: number;
}</codeblock>
            <codeblock props="unity" outputclass="language-csharp">public class ChannelMediaRelayConfiguration
    {
        public ChannelMediaRelayConfiguration()
        {
            srcInfo = null;
            destInfos = new ChannelMediaInfo[0];
            destCount = 0;
        }

        public ChannelMediaRelayConfiguration(ChannelMediaInfo srcInfo, ChannelMediaInfo[] destInfos, int destCount)
        {
            this.srcInfo = srcInfo;
            this.destInfos = destInfos ?? new ChannelMediaInfo[0];
            this.destCount = destCount;
        }
        public ChannelMediaInfo srcInfo { set; get; }
        public ChannelMediaInfo[] destInfos { set; get; }
        public int destCount { set; get; }
    }</codeblock>
            <codeblock props="rn" outputclass="language-typescript">export class ChannelMediaRelayConfiguration {
  
  srcInfo?: ChannelMediaInfo;
  
  destInfos?: ChannelMediaInfo[];
  
  destCount?: number;
}</codeblock>
            <codeblock props="flutter" outputclass="language-dart">class ChannelMediaRelayConfiguration {
    const ChannelMediaRelayConfiguration(
        {this.srcInfo, this.destInfos, this.destCount});

    @JsonKey(name: 'srcInfo')
    final ChannelMediaInfo? srcInfo;
    @JsonKey(name: 'destInfos')
    final List&lt;ChannelMediaInfo&gt;? destInfos;
    @JsonKey(name: 'destCount')
    final int? destCount;
    factory ChannelMediaRelayConfiguration.fromJson(Map&lt;String, dynamic&gt; json) =&gt;
        _$ChannelMediaRelayConfigurationFromJson(json);
    Map&lt;String, dynamic&gt; toJson() =&gt; _$ChannelMediaRelayConfigurationToJson(this);
  }</codeblock>            
            <codeblock props="unreal" outputclass="language-cpp"></codeblock></p>
        </section>
        <section id="parameters">
            <title> <text conref="../conref/conref_api_metadata.dita#conref_api_metadata/property"/> </title>
            <parml>
            <plentry>
                <pt props="cpp framework">srcInfo</pt>
                <pt props="ios mac">sourceInfo</pt>
                <pd props="cpp ios mac framework">
                    <p>源频道信息 <xref keyref="ChannelMediaInfo"/>，包含如下成员：                                      
                    <ul>
                    <li><parmname>channelName</parmname>：源频道名。默认值为 <codeph><ph keyref="NULL"/></codeph>，表示 SDK 填充当前的频道名。</li>
                    <li><parmname>uid</parmname>：标识源频道中的转发媒体流的 UID。默认值为 0，表示 SDK 随机分配一个 <codeph>uid</codeph>。请确保设为 0。</li>
                    <li><parmname>token</parmname>：能加入源频道的 <parmname>token</parmname>。由你在 <parmname>srcInfo</parmname> 中设置的 <parmname>channelName</parmname> 和 <parmname>uid</parmname> 生成。                       
                        <ul>
                        <li>如未启用 App Certificate，可直接将该参数设为默认值 <codeph><ph keyref="NULL"/></codeph>，表示 SDK 填充 App ID。</li>
                        <li>如已启用 App Certificate，则务必填入使用 <parmname>channelName</parmname> 和 <parmname>uid</parmname> 生成的 <parmname>token</parmname>，且其中的 <parmname>uid</parmname> 必须为 0。</li>
                        </ul> </li>
                    </ul> </p>
                </pd>
            </plentry>
            <plentry>
                <pt props="cpp framework">destInfos</pt>
                <pt props="ios mac">destinationInfos</pt>
                <pd props="cpp ios mac framework">
                    <p>目标频道信息 <apiname keyref="ChannelMediaInfo"/>，包含如下成员：                                        
                    <ul>
                    <li> <parmname>channelName</parmname> ：目标频道的频道名。</li>
                    <li>
                        <parmname>uid</parmname>：标识目标频道中的转发媒体流的 UID。取值范围为 0 到（2 <sup>32</sup>-1），请确保与目标频道中的所有 UID 不同。默认值为 0，表示 SDK 随机分配一个 UID。请确保不要将该参数设为目标频道的主播的 UID，并与目标频道中的所有 UID 都不同。</li>
                    <li>
                        <parmname>token</parmname>：能加入目标频道的 <parmname>token</parmname>。由你在 <parmname>destInfos</parmname> 中设置的 <parmname>channelName</parmname> 和 <parmname>uid</parmname> 生成。                        
                        <ul>
                        <li>如未启用 App Certificate，可直接将该参数设为默认值 <codeph><ph keyref="NULL"/></codeph>，表示 SDK 填充 App ID。</li>
                        <li>如已启用 App Certificate，则务必填入使用 <parmname>channelName</parmname> 和 <parmname>uid</parmname> 生成的 <parmname>token</parmname>。</li>
                        </ul> </li>
                    </ul> </p>
                </pd>
            </plentry>
            <plentry props="cpp framework">
                <pt>destCount</pt>
                <pd>目标频道数量，默认值为 0，取值范围为 [0,4]。该参数应与你在 <parmname>destInfos</parmname> 中定义的 <apiname keyref="ChannelMediaInfo"/> 数组的数目一致。</pd>
            </plentry>
            </parml> </section>
    </refbody>
</reference>
