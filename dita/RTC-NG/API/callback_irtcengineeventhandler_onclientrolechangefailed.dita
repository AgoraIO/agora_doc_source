<?xml version='1.0' encoding='UTF-8'?>
<!DOCTYPE reference PUBLIC "-//OASIS//DTD DITA Reference//EN" "reference.dtd">
<reference id="callback_irtcengineeventhandler_onclientrolechangefailed">
    <title><ph keyref="onClientRoleChangeFailed"/></title>
    <shortdesc id="short"><ph id="shortdesc">切换用户角色失败回调。</ph></shortdesc>
    <prolog>
        <metadata>
            <keywords>
                <indexterm keyref="onClientRoleChangeFailed"/>
            </keywords>
        </metadata>
    </prolog>
    <refbody>
        <section id="prototype">
            <p outputclass="codeblock">
            <codeblock props="android" outputclass="language-java">public void onClientRoleChangeFailed(int reason, int currentRole)</codeblock>
            <codeblock props="hmos" outputclass="language-arkts">onClientRoleChangeFailed?: (reason:number, currentRole:Constants.ClientRole) =&gt; void;</codeblock>
            <codeblock props="ios mac" outputclass="language-objectivec">- (void)rtcEngine:(AgoraRtcEngineKit * _Nonnull)engine didClientRoleChangeFailed:(AgoraClientRoleChangeFailedReason)reason currentRole:(AgoraClientRole)currentRole NS_SWIFT_NAME(rtcEngine(_:didClientRoleChangeFailed:currentRole:));</codeblock>
            <codeblock props="cpp unreal" outputclass="language-cpp">virtual void onClientRoleChangeFailed(CLIENT_ROLE_CHANGE_FAILED_REASON reason, CLIENT_ROLE_TYPE currentRole)</codeblock>
         <codeblock props="bp" outputclass="language-cpp">UFUNCTION(BlueprintNativeEvent, Category = "Agora|Event")
	void OnClientRoleChangeFailed(ECLIENT_ROLE_CHANGE_FAILED_REASON reason, ECLIENT_ROLE_TYPE currentRole);</codeblock>
            <codeblock props="electron" outputclass="language-typescript">  onClientRoleChangeFailed?(
    connection: RtcConnection,
    reason: ClientRoleChangeFailedReason,
    currentRole: ClientRoleType
  ): void;</codeblock>
            <codeblock props="unity cs" outputclass="language-csharp">public virtual void OnClientRoleChangeFailed(RtcConnection connection, CLIENT_ROLE_CHANGE_FAILED_REASON reason, CLIENT_ROLE_TYPE currentRole) { }</codeblock>
            <codeblock props="rn" outputclass="language-typescript">  onClientRoleChangeFailed?(
    connection: RtcConnection,
    reason: ClientRoleChangeFailedReason,
    currentRole: ClientRoleType
  ): void;</codeblock>
        <codeblock props="flutter" outputclass="language-dart">final void Function(
            RtcConnection connection,
            ClientRoleChangeFailedReason reason,
            ClientRoleType currentRole)? onClientRoleChangeFailed;</codeblock>
            <codeblock props="reserve" outputclass="language-cpp"/></p>
      </section>
        <section id="detailed_desc" deliveryTarget="details" otherprops="no-title">
            <p>该回调用于报告切换用户角色失败的原因以及当前的用户角色。</p>
            </section>
            <section id="timing" deliveryTarget="details">
                <title>触发时机</title>
                <p>当本地用户加入频道后调用 <codeph>setClientRole</codeph> 切换用户角色失败时，SDK 会触发该回调。</p>
        <p props="bp electron flutter hmos rn">本地用户加入频道后调用 <xref keyref="setClientRole2"/> 设置用户角色失败时，SDK 会触发该回调。</p>
            </section>
            <section id="restriction" deliveryTarget="details">
                <title>使用限制</title>
                <p>无。</p>
        </section>
            <section id="parameters" deliveryTarget="details">
            <title><ph keyref="callback-section-title"/></title>
            <parml>
            <plentry>
                <pt>reason</pt>
                <pd props="bp cs electron flutter mac rn unity unreal">切换用户角色失败的原因。详见 <xref keyref="CLIENT_ROLE_CHANGE_FAILED_REASON"/>。</pd>
                <pd props="hmos">切换用户角色失败的原因。
                    <ul>
                        <li><ph keyref="CLIENT_ROLE_CHANGE_FAILED_TOO_MANY_BROADCASTERS"/>(1): 频道内主播人数达到上限。
                            <note type="note">该枚举仅在开启 128 人功能后报告。主播人数的上限根据开启 128 人功能时实际配置的人数而定。</note></li>
                        <li><ph keyref="CLIENT_ROLE_CHANGE_FAILED_NOT_AUTHORIZED"/>(2): 请求被服务端拒绝。建议提示用户重新尝试切换用户角色。</li>
                        <li><ph keyref="CLIENT_ROLE_CHANGE_FAILED_REQUEST_TIME_OUT"/>(3): 请求超时。建议提示用户检查网络连接状况后重新尝试切换用户角色。
                            <dl outputclass="deprecated">
                                <dlentry>
                                <dt>废弃：</dt>
                                <dd>该枚举值自 v4.4.0 起废弃，不建议使用。</dd>
                                </dlentry></dl></li>
                        <li><ph keyref="CLIENT_ROLE_CHANGE_FAILED_CONNECTION_FAILED"/>(4): 网络连接断开。可根据 <xref keyref="onConnectionStateChanged"/> 报告的 <parmname>reason</parmname>，排查网络连接失败的具体原因。
                            <dl outputclass="deprecated">
                                <dlentry>
                                <dt>废弃：</dt>
                                <dd>该枚举值自 v4.4.0 起废弃，不建议使用。</dd>
                                </dlentry></dl></li>
                    </ul></pd>
            <pd props="android">用户角色切换失败的原因。
                    <ul>
                        <li><ph keyref="CLIENT_ROLE_CHANGE_FAILED_TOO_MANY_BROADCASTERS"/> (1)：频道中的主播数量已达上限。仅在启用 128 人支持时会返回该枚举值。主播数量上限取决于启用 128 人功能时配置的实际值。</li>
                        <li><ph keyref="CLIENT_ROLE_CHANGE_FAILED_NOT_AUTHORIZED"/> (2)：请求被声网服务器拒绝。建议提示用户重试切换用户角色。</li>
                        <li><ph keyref="CLIENT_ROLE_CHANGE_FAILED_REQUEST_TIME_OUT"/> (3)：请求超时。建议提示用户检查网络连接并重试切换用户角色。自 v4.4.0 版本废弃，不建议使用。</li>
                        <li><ph keyref="CLIENT_ROLE_CHANGE_FAILED_CONNECTION_FAILED"/> (4)：SDK 连接失败。你可以通过 <xref keyref="onConnectionStateChanged"/> 回调中报告的 <codeph>reason</codeph> 进行排查。自 v4.4.0 版本废弃，不建议使用。</li>
                        </ul>
                    </pd>
                <pd props="cpp ios">用户角色切换失败的原因，详见 <xref keyref="CLIENT_ROLE_CHANGE_FAILED_REASON"/>。</pd>
                </plentry>
            <plentry>
                <pt>currentRole</pt>
                <pd props="bp cs electron flutter hmos mac rn unity unreal">当前用户角色。详见 <xref keyref="CLIENT_ROLE_TYPE"/>。</pd>
                <pd props="android">当前的用户角色。
                    <ul>
                        <li><ph keyref="CLIENT_ROLE_BROADCASTER"/> (1)：主播，可以发送和接收音视频流。</li>
                        <li><ph keyref="CLIENT_ROLE_AUDIENCE"/> (2)：观众，只能接收音视频流。</li>
                        </ul>
                    </pd>
                <pd props="cpp ios">当前的用户角色，详见 <xref keyref="CLIENT_ROLE_TYPE"/>。</pd>
                </plentry>
            <plentry conkeyref="joinChannelEx/connection" props="cs electron flutter rn unity">
                <pt/>
                <pd/>
            </plentry>
            <plentry props="ios">
                <pt props="ios">engine</pt>
                <pd props="ios"><xref keyref="IRtcEngine"/> 对象，详见 <xref keyref="IRtcEngine"/>。</pd>
            </plentry>
        </parml> </section>
    </refbody>
</reference>
