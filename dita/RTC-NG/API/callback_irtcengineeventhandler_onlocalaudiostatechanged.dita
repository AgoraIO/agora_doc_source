<?xml version='1.0' encoding='UTF-8'?>
<!DOCTYPE reference PUBLIC "-//OASIS//DTD DITA Reference//EN" "reference.dtd">
<reference id="callback_irtcengineeventhandler_onlocalaudiostatechanged">
    <title> <ph keyref="onLocalAudioStateChanged"/> </title>
    <shortdesc id="short"> <ph id="shortdesc"><codeph>本地音频流状态</codeph> 发生变化时触发的回调。</ph> </shortdesc>
    <prolog>
        <metadata>
            <keywords>
                <indexterm keyref="onLocalAudioStateChanged"/>
            </keywords>
        </metadata>
    </prolog>
    <refbody>
        <section id="prototype">
            <p outputclass="codeblock">
            <codeblock props="android" outputclass="language-java">public void onLocalAudioStateChanged(int state, int reason)</codeblock>
            <codeblock props="hmos" outputclass="language-arkts">onLocalAudioStateChanged?:(state:Constants.LocalAudioStreamState,error:Constants.LocalAudioStreamReason) =&gt; void</codeblock>
            <codeblock props="ios mac" outputclass="language-objectivec">- (void)rtcEngine:(AgoraRtcEngineKit * _Nonnull)engine localAudioStateChanged:(AgoraAudioLocalState)state reason:(AgoraAudioLocalReason)reason NS_SWIFT_NAME(rtcEngine(_:localAudioStateChanged:reason:));</codeblock>
            <codeblock props="cpp unreal" outputclass="language-cpp">virtual void onLocalAudioStateChanged(LOCAL_AUDIO_STREAM_STATE state, LOCAL_AUDIO_STREAM_REASON reason)</codeblock>
         <codeblock props="bp" outputclass="language-cpp">UFUNCTION(BlueprintNativeEvent, Category = "Agora|Event")
	void OnLocalAudioStateChanged(ELOCAL_AUDIO_STREAM_STATE state, ELOCAL_AUDIO_STREAM_REASON reason);</codeblock>
            <codeblock props="electron" outputclass="language-typescript">  onLocalAudioStateChanged?(
    connection: RtcConnection,
    state: LocalAudioStreamState,
    reason: LocalAudioStreamReason
  ): void;</codeblock>
            <codeblock props="unity cs" outputclass="language-csharp">public virtual void OnLocalAudioStateChanged(RtcConnection connection, LOCAL_AUDIO_STREAM_STATE state, LOCAL_AUDIO_STREAM_REASON reason)</codeblock>
            <codeblock props="rn" outputclass="language-typescript">  onLocalAudioStateChanged?(
    connection: RtcConnection,
    state: LocalAudioStreamState,
    reason: LocalAudioStreamReason
  ): void;</codeblock>
            <codeblock props="flutter" outputclass="language-dart">final void Function(RtcConnection connection, LocalAudioStreamState state,
    LocalAudioStreamReason reason)? onLocalAudioStateChanged;</codeblock>
            <codeblock props="reserve" outputclass="language-cpp"/></p>
        </section>
        <section id="detailed_desc">
            <p id="desc">当本地音频流的状态发生变化（包括音频采集和编码状态）时，SDK 会触发该回调以报告当前状态，并帮助你在音频出现异常时排查问题。</p>
            <note id="note" type="attention">
                当状态为 <apiname keyref="LOCAL_AUDIO_STREAM_STATE_FAILED"/> (3) 时， 你可以在 <parmname>error</parmname> 参数中查看返回的错误信息。
            </note> <note type="attention" props="cpp">当状态为 <ph keyref="LOCAL_AUDIO_STREAM_STATE_FAILED"/>（3）时，你可以在 <xref keyref="Error"/> 参数中查看错误信息。</note>
            <note type="attention" props="apple">当状态为 <ph keyref="LOCAL_AUDIO_STREAM_STATE_FAILED"/>（3）时，可以通过 <xref keyref="Error"/> 参数查看错误信息。</note>
            <note type="attention" props="android">当状态为 <ph keyref="LOCAL_AUDIO_STREAM_STATE_FAILED"/>（3）时，可通过 <xref keyref="Error"/> 参数查看错误信息。</note>
            </section>
        <section id="timing" deliveryTarget="details">
            <title>调用时机</title>
            <p>当本地音频流的状态发生变化时触发。</p>
        </section>
        <section id="parameters">
            <title><ph keyref="callback-section-title"/></title>
            <parml>
            <plentry conkeyref="onJoinChannelSuccess/engine" props="apple">
                <pt/>
                <pd/>
            </plentry>
            <plentry props="cs electron flutter rn unity">
                <pt>connection</pt>
                <pd>Connection 信息。详见 <xref keyref="RtcConnection"/>。</pd>
            </plentry>
            <plentry>
                <pt>state</pt>
                <pd props="bp cs electron flutter hmos mac rn unity unreal">当前的本地音频状态。详见 <xref keyref="LOCAL_AUDIO_STREAM_STATE"/>。</pd>
                <pd props="android">本地音频的状态：
                    <ul>
                        <li><ph keyref="LOCAL_AUDIO_STREAM_STATE_STOPPED"/>(0)：本地音频处于初始状态。</li>
                        <li><ph keyref="LOCAL_AUDIO_STREAM_STATE_RECORDING"/>(1)：本地音频采集设备启动成功。</li>
                        <li><ph keyref="LOCAL_AUDIO_STREAM_STATE_ENCODING"/>(2)：首帧音频编码成功。</li>
                        <li><ph keyref="LOCAL_AUDIO_STREAM_STATE_FAILED"/>(3)：本地音频启动失败。</li>
                        </ul>
                    </pd>
                <pd props="cpp ios">本地音频的状态，详见 <xref keyref="LOCAL_AUDIO_STREAM_STATE"/>。</pd>
                </plentry>
            <plentry>
                <pt>reason</pt>
                <pd props="bp cs electron flutter hmos mac rn unity unreal">本地音频状态改变原因。详见 <xref keyref="LOCAL_AUDIO_STREAM_REASON"/>。</pd>
                <pd props="android">本地音频状态变化的原因：
                    <ul>
                        <li><ph keyref="LOCAL_AUDIO_STREAM_REASON_OK"/>(0)：本地音频状态正常。</li>
                        <li><ph keyref="LOCAL_AUDIO_STREAM_REASON_FAILURE"/>(1)：本地音频失败的原因不明确。提示用户尝试重新加入频道。</li>
                        <li><ph keyref="LOCAL_AUDIO_STREAM_REASON_DEVICE_NO_PERMISSION"/>(2)：无权限使用本地音频采集设备。提示用户授予权限。</li>
                        <li><ph keyref="LOCAL_AUDIO_STREAM_REASON_DEVICE_BUSY"/>(3)：麦克风被占用。提示用户检查是否有其他应用占用麦克风。麦克风空闲约五秒后本地音频采集会自动恢复，也可以尝试在麦克风空闲后重新加入频道。</li>
                        <li><ph keyref="LOCAL_AUDIO_STREAM_REASON_RECORD_FAILURE"/>(4)：本地音频采集失败。</li>
                        <li><ph keyref="LOCAL_AUDIO_STREAM_REASON_ENCODE_FAILURE"/>(5)：本地音频编码失败。</li>
                        <li><ph keyref="LOCAL_AUDIO_STREAM_REASON_INTERRUPTED"/>(8)：本地音频采集被系统电话、智能助手或闹钟中断。如需继续采集音频，提示用户结束电话、智能助手或闹钟。</li>
                        </ul>
                    </pd>
                <pd props="cpp ios">本地音频状态变化的原因，详见 <xref keyref="LOCAL_AUDIO_STREAM_REASON"/>。</pd>
                </plentry>
            <plentry props="ios">
                <pt props="ios">engine</pt>
                <pd props="ios">引擎实例。详见 <xref keyref="IRtcEngine"/>。</pd>
                </plentry>
        </parml> </section>
    </refbody>
</reference>
