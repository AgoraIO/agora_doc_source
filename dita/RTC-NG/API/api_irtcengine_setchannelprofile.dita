<?xml version='1.0' encoding='UTF-8'?>
<!DOCTYPE reference PUBLIC "-//OASIS//DTD DITA Reference//EN" "reference.dtd">
<reference id="api_irtcengine_setchannelprofile">
    <title><ph keyref="setChannelProfile"/></title>
    <shortdesc id="short"><ph id="shortdesc">设置频道场景。</ph></shortdesc>
    <prolog>
        <metadata>
            <keywords>
                <indexterm keyref="setChannelProfile"/>
            </keywords>
        </metadata>
    </prolog>
    <refbody>
        <section id="prototype">
            <p outputclass="codeblock">
            <codeblock props="android" outputclass="language-java">public abstract int setChannelProfile(int profile);</codeblock>
            <codeblock props="hmos" outputclass="language-arkts">public abstract setChannelProfile(profile: number): number;</codeblock>
            <codeblock props="ios mac" outputclass="language-objectivec">- (int)setChannelProfile:(AgoraChannelProfile)profile NS_SWIFT_NAME(setChannelProfile(_:));</codeblock>
            <codeblock props="cpp unreal" outputclass="language-cpp">virtual int setChannelProfile(CHANNEL_PROFILE_TYPE profile) = 0;</codeblock>
         <codeblock props="bp" outputclass="language-cpp">UFUNCTION(BlueprintCallable, Category = "Agora|IRtcEngine")
	int SetChannelProfile(ECHANNEL_PROFILE_TYPE profile);</codeblock>
            <codeblock props="electron" outputclass="language-typescript">abstract setChannelProfile(profile: ChannelProfileType): number;</codeblock>
            <codeblock props="unity cs" outputclass="language-csharp">public abstract int SetChannelProfile(CHANNEL_PROFILE_TYPE profile);</codeblock>
            <codeblock props="rn" outputclass="language-typescript">abstract setChannelProfile(profile: ChannelProfileType): number;</codeblock>
            <codeblock props="flutter" outputclass="language-dart">Future&lt;void&gt; setChannelProfile(ChannelProfileType profile);</codeblock>
            <codeblock props="reserve" outputclass="language-cpp"/></p>
        </section>
        <section id="detailed_desc" deliveryTarget="details" otherprops="no-title">
            <p>SDK 会根据不同的频道场景采用不同的优化策略。例如，在极速直播场景中，SDK 会优先保证视频质量。
初始化 SDK 后，默认频道场景为极速直播。
调用时机：请在加入频道前调用此方法。</p>
            <note type="attention" props="android bp cpp ios rn unreal">
            <p>不同的频道场景下，SDK 的默认音频路由是不同的，详见 <xref keyref="setDefaultAudioRouteToSpeakerphone"/> 中的说明。</p>
           </note>
        <note type="attention" props="cpp">为确保实时通信质量，建议频道内所有用户使用相同的频道场景。
在不同频道场景下，SDK 的默认音频路由不同。详见 <xref keyref="setDefaultAudioRouteToSpeakerphone"/>。</note>
            <note type="attention" props="apple"><ul>
                        <li>为确保实时通信质量，声网建议频道内所有用户使用相同的频道场景。</li>
                        <li>在 iOS 平台，不同频道场景下 SDK 的默认音频路由不同，详见 <xref keyref="setDefaultAudioRouteToSpeakerphone"/>。</li>
                        </ul>
                    </note>
            <note type="attention" props="android">为确保实时通信质量，声网建议频道内所有用户使用相同的频道场景。
在不同的频道场景中，SDK 的默认音频路由不同。详见 <xref keyref="setDefaultAudioRouteToSpeakerphone"/>。</note>
            </section>
        <section id="timing" deliveryTarget="details">
            <title>调用时机</title>
            <p>请在加入频道前调用此方法。</p>
        </section>
        <section id="restriction" deliveryTarget="details">
            <title>调用限制</title>
            <p>无。</p>
        </section>
        <section id="parameters" deliveryTarget="details">
            <title>参数</title>
            <parml>
            <plentry>
                <pt>profile</pt>
                <pd id="channelprofiletype" props="bp cs electron flutter mac rn unity unreal">
                    <p props="apple bp cpp cs electron flutter rn unity unreal">频道使用场景。详见 <xref keyref="CHANNEL_PROFILE_TYPE"/>。</p>
                    <p props="android hmos">频道使用场景。

                    <ul>
                    <li><ph keyref="CHANNEL_PROFILE_COMMUNICATION"/> (0)：通信。声网推荐使用直播场景以获取更好的音视频体验。</li>
                    <li><ph keyref="CHANNEL_PROFILE_LIVE_BROADCASTING"/> (1)：（默认）直播。</li>
                    <li><ph keyref="CHANNEL_PROFILE_GAME"/> (2)：游戏语音场景。
                    <dl outputclass="deprecated">
                    <dlentry>
                    <dt>废弃：</dt>
                    <dd>请改用 <ph keyref="CHANNEL_PROFILE_LIVE_BROADCASTING"/>。</dd>
                    </dlentry></dl>
                    </li>
                    <li><ph keyref="CHANNEL_PROFILE_CLOUD_GAMING"/> (3)：互动。该场景对延时进行了优化。如果你的场景中有用户需要频繁互动，建议使用该场景。
                        <dl outputclass="deprecated">
                    <dlentry>
                    <dt>废弃：</dt>
                    <dd>请改用 <ph keyref="CHANNEL_PROFILE_LIVE_BROADCASTING"/>。</dd>
                    </dlentry></dl>
                    </li>
                    </ul> </p>
                </pd>
            <pd props="android">频道场景：
                    <ul>
                        <li><ph keyref="CHANNEL_PROFILE_COMMUNICATION"/>(0)：通信场景。声网建议使用直播场景以获得更好的音视频体验。</li>
                        <li><ph keyref="CHANNEL_PROFILE_LIVE_BROADCASTING"/>(1)：（默认）直播场景。</li>
                        <li><ph keyref="CHANNEL_PROFILE_GAME"/>(2)：游戏场景。已废弃，请使用 <ph keyref="CHANNEL_PROFILE_LIVE_BROADCASTING"/>。</li>
                        <li><ph keyref="CHANNEL_PROFILE_CLOUD_GAMING"/>(3)：互动场景。该场景对延迟进行了优化，适用于用户之间需要频繁互动的场景。已废弃，请使用 <ph keyref="CHANNEL_PROFILE_LIVE_BROADCASTING"/>。</li>
                        </ul>
                    </pd>
                <pd props="cpp ios">频道场景。详见 <xref keyref="CHANNEL_PROFILE_TYPE"/>。</pd>
                </plentry>
        </parml> </section>
        <section id="return_values" props="bp cs electron flutter native rn unity unreal">
            <title><ph keyref="return-section-title"/></title>
        <p props="flutter">方法成功调用时，无返回值；方法调用失败时，会抛出 <xref keyref="AgoraRtcException"/> 异常，你需要捕获异常并进行处理。<ph props="cn">详见<xref keyref="error-code-link"/>了解详情和解决建议。</ph></p>
        <ul>
            <li props="bp cs electron rn unity unreal">0: 方法调用成功。</li>
            <li>&lt; 0: 方法调用失败。<ph props="cn">详见<xref keyref="error-code-link"/>了解详情和解决建议。</ph>
                <ul>
                <li>-2: 参数无效。</li>
                <li>-7: SDK 尚未初始化。</li>
                </ul></li>
            </ul>
        <p props="apple">0：方法调用成功。
&lt; 0：方法调用失败。
                    <ul>
                        <li>-2：参数无效。</li>
                        <li>-7：SDK 尚未初始化。</li>
                        </ul>
                    </p>
        <p props="android cpp"><ul>
                        <li>0：方法调用成功。</li>
                        <li>&lt; 0：方法调用失败。<ul>
                            <li>-2：参数无效。</li>
                            <li>-7：SDK 未初始化。</li>
                            </ul>
                        </li>
                        </ul>
                    </p>
        </section>
    </refbody>
</reference>
