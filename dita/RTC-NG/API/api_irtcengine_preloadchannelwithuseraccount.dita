<?xml version='1.0' encoding='UTF-8'?>
<!DOCTYPE reference PUBLIC "-//OASIS//DTD DITA Reference//EN" "reference.dtd">
<reference id="api_irtcengine_preloadchannelwithuseraccount">
    <title><ph keyref="preloadChannelWithUserAccount"/></title>
    <shortdesc id="short"><ph id="shortdesc">使用指定的 Token、频道名和用户账号预加载频道。</ph></shortdesc>
    <prolog>
        <metadata>
            <keywords>
                <indexterm keyref="preloadChannelWithUserAccount"/>
            </keywords>
        </metadata>
    </prolog>
    <refbody>
        <section id="prototype">
            <p outputclass="codeblock">
            <codeblock props="android" outputclass="language-java">public abstract int preloadChannelWithUserAccount(String token, String channelName, String userAccount);</codeblock>
            <codeblock props="hmos" outputclass="language-arkts"/>
            <codeblock props="ios mac" outputclass="language-objectivec">- (int)preloadChannelByTokenWithUserAccount:(NSString * _Nullable)token
                   channelId:(NSString * _Nonnull)channelId
                 userAccount:(NSString * _Nonnull)userAccount NS_SWIFT_NAME(preloadChannelWithUserAccount(byToken:channelId:userAccount:));</codeblock>
            <codeblock props="cpp unreal" outputclass="language-cpp">virtual int preloadChannelWithUserAccount(const char* token, const char* channelId, const char* userAccount) = 0;</codeblock>
           <codeblock props="bp" outputclass="language-cpp">UFUNCTION(BlueprintCallable, Category = "Agora|IRtcEngine")
	int PreloadChannelWithUserAccount(const FString&amp; token, const FString&amp; channelId, const FString&amp; userAccount);</codeblock>
            <codeblock props="electron" outputclass="language-typescript">abstract preloadChannelWithUserAccount(
    token: string,
    channelId: string,
    userAccount: string
  ): number;</codeblock>
            <codeblock props="unity cs" outputclass="language-csharp">public abstract int PreloadChannel(string token, string channelId, string userAccount);</codeblock>
            <codeblock props="rn" outputclass="language-typescript">abstract preloadChannelWithUserAccount(
    token: string,
    channelId: string,
    userAccount: string
  ): number;</codeblock>
            <codeblock props="flutter" outputclass="language-dart">Future&lt;void&gt; preloadChannelWithUserAccount(
      {required String token,
      required String channelId,
      required String userAccount});</codeblock> </p>
        </section>
        <section id="detailed_desc" deliveryTarget="details" otherprops="no-title" conkeyref="preloadChannel/detailed_desc">
        <note type="attention" props="cpp"><ul>
                        <li>调用该方法时，请确保将用户角色设置为观众，且未将音频场景设置为 <ph keyref="AUDIO_SCENARIO_CHORUS"/>，否则该方法不生效。</li>
                        <li>请确保用于预加载的用户账号、频道名和 Token 与加入频道时传入的值一致，否则该方法不生效。</li>
                        <li>一个 <xref keyref="IRtcEngine"/> 实例最多支持预加载 20 个频道，超出限制时，仅保留最新的 20 个预加载频道。</li>
                        <li>预加载频道失败不会影响加入频道的能力，也不会增加加入频道所需的时间。</li>
                        </ul>
                    </note>
            <note type="attention" props="apple"><ul>
                        <li>调用该方法时，请确保将用户角色设置为观众，且未将音频场景设置为 <ph keyref="AgoraAudioScenarioChorus"/>，否则该方法不生效。</li>
                        <li>你还需要确保用于预加载的用户账号、频道名和 Token 与加入频道时传入的值一致，否则该方法不生效。</li>
                        <li>一个 <xref keyref="IRtcEngine"/> 实例最多支持预加载 20 个频道。超出限制时，仅保留最新的 20 个预加载频道生效。</li>
                        <li>预加载频道失败并不意味着无法加入频道，也不会增加加入频道所需的时间。</li>
                        </ul>
                    </note>
            <note type="attention" props="android"><ul>
                        <li>调用该方法时，请确保将用户角色设置为观众，且未将音频场景设置为 <ph keyref="AUDIO_SCENARIO_CHORUS"/>，否则该方法不生效。</li>
                        <li>请确保用于预加载的用户账号、频道名和 Token 与加入频道时传入的值一致，否则该方法不生效。</li>
                        <li>一个 <xref keyref="IRtcEngine"/> 实例最多支持预加载 20 个频道，超出限制时，仅保留最新的 20 个预加载频道生效。</li>
                        <li>预加载频道失败不会影响加入频道的功能，也不会增加加入频道所需的时间。</li>
                        </ul>
                    </note>
            </section>
        <section id="timing" deliveryTarget="details" conkeyref="preloadChannel/timing">
            <title/>
            <p/>
        </section>
        <section id="restriction" deliveryTarget="details">
            <title>调用限制</title>
            <p>无。</p>
        </section>
        <section id="parameters" deliveryTarget="details">
            <title>参数</title>
            <parml>
            <plentry conkeyref="preloadChannel/token">
                <pt/>
                <pd/>
            </plentry>
            <plentry conkeyref="preloadChannel/channel">
                <pt/>
                <pd/>
            </plentry>
            <plentry conkeyref="joinChannelWithUserAccount2/userAccount">
                <pt/>
                <pd/>
            </plentry>
            <plentry props="android cpp ios">
                <pt props="android cpp ios">token</pt>
                <pd props="android">在你的服务器上生成的用于鉴权的 Token。当用于预加载频道的 Token 过期时，你可以根据预加载的频道数量更新 Token。
                    <ul>
                        <li>预加载一个频道时，调用该方法传入新的 Token。</li>
                        <li>预加载多个频道时：<ul>
                            <li>如果你为所有预加载频道使用通配符 Token，调用 <xref keyref="updatePreloadChannelToken"/> 更新 Token。注意：生成通配符 Token 时，确保用户 ID 不为 0。详见 <codeph>Secure authentication with tokens</codeph>。</li>
                            <li>如果你为不同频道使用不同的 Token，调用该方法传入用户 ID、频道名和新的 Token。</li>
                            </ul>
                        </li>
                        </ul>
                    </pd>
                <pd props="ios">在你的服务器上生成的用于鉴权的 Token。当预加载频道的 Token 过期时，你可以根据预加载的频道数量更新 Token。
                    <ul>
                        <li>如果只预加载一个频道，调用该方法传入新的 Token。</li>
                        <li>如果预加载多个频道：<ul>
                            <li>如果你为所有预加载频道使用通配符 Token，调用 <xref keyref="updatePreloadChannelToken"/> 更新 Token。注意：生成通配符 Token 时，确保用户 ID 不为 0。详见 <codeph>使用 Token 进行安全认证</codeph>。</li>
                            <li>如果你为不同频道使用不同的 Token 进行预加载，调用该方法传入用户 ID、频道名和新的 Token。</li>
                            </ul>
                        </li>
                        </ul>
                    </pd>
                <pd props="cpp">在你的服务器上生成的用于鉴权的 Token。当用于预加载频道的 Token 过期时，你可以根据预加载的频道数量更新 Token。
                    <ul>
                        <li>预加载一个频道时，调用该方法传入新的 Token。</li>
                        <li>预加载多个频道时：<ul>
                            <li>如果你为所有预加载频道使用通配符 Token，调用 <xref keyref="updatePreloadChannelToken"/> 更新 Token。注意：生成通配符 Token 时，确保用户 ID 不为 0。详见 <codeph>Secure authentication with tokens</codeph>。</li>
                            <li>如果你为不同频道使用不同的 Token，调用该方法传入用户账号、频道名和新的 Token。</li>
                            </ul>
                        </li>
                        </ul>
                    </pd>
                </plentry>
            <plentry props="cpp ios">
                <pt props="cpp ios">channelId</pt>
                <pd props="ios">你想要预加载的频道名。该参数表示用户进行实时音视频互动的频道。在相同 App ID 下，填写相同频道名的用户会进入同一个频道进行音视频互动。字符串长度必须小于 64 字节。支持的字符（共 89 个）包括：
                    <ul>
                        <li>所有小写英文字母：a 到 z。</li>
                        <li>所有大写英文字母：A 到 Z。</li>
                        <li>所有数字字符：0 到 9。</li>
                        <li>空格。</li>
                        <li>标点符号和其他符号，包括："!", "#", "$", "%", "&amp;", "(", ")", "+", "-", ":", ";", "&lt;", "=", ".", "&gt;", "?", "@", "[", "]", "^", "_", "{", "}", "|", "~", ","。</li>
                        </ul>
                    </pd>
                <pd props="cpp">你想要预加载的频道名。该参数表示用户进行实时音视频互动的频道。在相同 App ID 的前提下，填写相同频道名的用户会进入同一个频道进行音视频互动。字符串长度必须小于 64 字节。支持的字符（共 89 个）包括：
                    <ul>
                        <li>所有小写英文字母：a 到 z。</li>
                        <li>所有大写英文字母：A 到 Z。</li>
                        <li>所有数字字符：0 到 9。</li>
                        <li>空格。</li>
                        <li>标点符号和其他符号，包括："!", "#", "$", "%", "&amp;", "(", ")", "+", "-", ":", ";", "&lt;", "=", ".", "&gt;", "?", "@", "[", "]", "^", "_", "{", "}", "|", "~", ","。</li>
                        </ul>
                    </pd>
                </plentry>
            <plentry props="android">
                <pt props="android">channelId</pt>
                <pd props="android">要预加载的频道名。该参数表示用户进行实时音视频互动的频道。在相同 App ID 下，填写相同频道名的用户会进入同一个频道进行音视频互动。字符串长度必须小于 64 字节。支持的字符（共 89 个）包括：
                    <ul>
                        <li>所有小写英文字母：a 到 z。</li>
                        <li>所有大写英文字母：A 到 Z。</li>
                        <li>所有数字字符：0 到 9。</li>
                        <li>空格</li>
                        <li>标点符号和其他符号，包括："!", "#", "$", "%", "&amp;", "(", ")", "+", "-", ":", ";", "&lt;", "=", ".", "&gt;", "?", "@", "[", "]", "^", "_", "{", "}", "|", "~", ","。</li>
                        </ul>
                    </pd>
                </plentry>
            <plentry props="android cpp ios">
                <pt props="android cpp ios">userAccount</pt>
                <pd props="android">用户账号。用于标识频道中的用户以进行实时音视频互动。你需要自行设置和管理用户账号，并确保同一频道中的每个用户账号唯一。该参数的最大长度为 255 字节。请确保设置该参数且不为 <codeph><ph keyref="NULL"/></codeph>。支持的字符如下（共 89 个）：
                    <ul>
                        <li>26 个小写英文字母：a 到 z。</li>
                        <li>26 个大写英文字母：A 到 Z。</li>
                        <li>所有数字字符：0 到 9。</li>
                        <li>空格</li>
                        <li>"!", "#", "$", "%", "&amp;", "(", ")", "+", "-", ":", ";", "&lt;", "=", ".", "&gt;", "?", "@", "[", "]", "^", "_", "{", "}", "|", "~", ","。</li>
                        </ul>
                    </pd>
                <pd props="ios">用户账号。该参数用于标识频道中的用户以进行实时音视频互动。你需要自行设置和管理用户账号，并确保同一频道中的每个用户账号唯一。该参数的最大长度为 255 字节。请确保设置该参数，且不为 <codeph><ph keyref="NULL"/></codeph>。支持的字符如下（共 89 个）：
                    <ul>
                        <li>26 个小写英文字母：a 到 z。</li>
                        <li>26 个大写英文字母：A 到 Z。</li>
                        <li>所有数字字符：0 到 9。</li>
                        <li>空格。</li>
                        <li>"!", "#", "$", "%", "&amp;", "(", ")", "+", "-", ":", ";", "&lt;", "=", ".", "&gt;", "?", "@", "[", "]", "^", "_", "{", "}", "|", "~", ","。</li>
                        </ul>
                    </pd>
                <pd props="cpp">用户账号。该参数用于标识频道中的用户以进行实时音视频互动。你需要自行设置和管理用户账号，并确保同一频道中的每个用户账号唯一。该参数的最大长度为 255 字节，不能为空。支持的字符如下（共 89 个）：
                    <ul>
                        <li>26 个小写英文字母：a 到 z。</li>
                        <li>26 个大写英文字母：A 到 Z。</li>
                        <li>所有数字字符：0 到 9。</li>
                        <li>空格。</li>
                        <li>"!", "#", "$", "%", "&amp;", "(", ")", "+", "-", ":", ";", "&lt;", "=", ".", "&gt;", "?", "@", "[", "]", "^", "_", "{", "}", "|", "~", ","。</li>
                        </ul>
                    </pd>
                </plentry>
        </parml> </section>
        <section id="return_values" props="bp cs electron flutter native rn unity unreal">
            <title><ph keyref="return-section-title"/></title>
        <p props="flutter">方法成功调用时，无返回值；方法调用失败时，会抛出 <xref keyref="AgoraRtcException"/> 异常，你需要捕获异常并进行处理。<ph props="cn">详见<xref keyref="error-code-link"/>了解详情和解决建议。</ph></p>
        <ul>
            <li props="bp cs electron rn unity unreal">0：方法调用成功。</li>
            <li>&lt; 0：方法调用失败。<ph props="cn">详见<xref keyref="error-code-link"/>了解详情和解决建议。</ph>
                <ul>
                <li>-2：传入的参数无效。例如，User Account 为空。你需要填入有效的参数，重新加入频道。</li>
                <li>-7：<apiname keyref="IRtcEngine"/> 对象尚未初始化。你需要在调用该方法前成功初始化 <apiname keyref="IRtcEngine"/> 对象。</li>
                <li>-102：频道名无效。你需要填入有效的频道名，重新加入频道。</li>
                </ul></li>
            </ul>
        <p props="apple"><ul>
                        <li>0：方法调用成功。</li>
                        <li>&lt; 0：方法调用失败。<ul>
                            <li>-2：参数无效。例如，用户账号为空。你需要传入有效参数并重新加入频道。</li>
                            <li>-7：<xref keyref="IRtcEngine"/> 对象尚未初始化。你需要先初始化该对象再调用该方法。</li>
                            <li>-102：频道名无效。你需要传入有效的频道名并重新加入频道。</li>
                            </ul>
                        </li>
                        </ul>
                    </p>
        <p props="cpp"><ul>
                        <li>0：方法调用成功。</li>
                        <li>&lt; 0：方法调用失败。<ul>
                            <li>-2：参数无效，例如用户账号为空。请传入有效参数后重新加入频道。</li>
                            <li>-7：<xref keyref="IRtcEngine"/> 对象尚未初始化。请先初始化 <xref keyref="IRtcEngine"/> 对象再调用该方法。</li>
                            <li>-102：频道名无效。请传入有效的频道名后重新加入频道。</li>
                            </ul>
                        </li>
                        </ul>
                    </p>
        <p props="android"><ul>
                        <li>0：方法调用成功。</li>
                        <li>&lt; 0：方法调用失败。<ul>
                            <li>-2：参数无效。例如，用户账号为空。你需要传入有效参数并重新加入频道。</li>
                            <li>-7：<xref keyref="IRtcEngine"/> 对象尚未初始化。你需要先初始化 <xref keyref="IRtcEngine"/> 对象再调用该方法。</li>
                            <li>-102：频道名无效。你需要传入有效的频道名并重新加入频道。</li>
                            </ul>
                        </li>
                        </ul>
                    </p>
    </section>
        </refbody>
</reference>
