<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE reference PUBLIC "-//OASIS//DTD DITA Reference//EN" "reference.dtd">
<reference id="api_irtcengineex_stoprtmpstreamex">
    <title> <ph keyref="stopRtmpStreamEx"/> </title>
    <shortdesc id="short"> <ph id="shortdesc">结束旁路推流。</ph> </shortdesc>
    <prolog>
        <metadata>
            <keywords>
                <indexterm keyref="stopRtmpStreamEx"/>
            </keywords>
        </metadata>
    </prolog>
    <refbody>
        <section id="prototype">
            <p outputclass="codeblock">
            <codeblock props="android" outputclass="language-java">public abstract int stopRtmpStreamEx(String url, RtcConnection connection);</codeblock>
            <codeblock props="ios mac" outputclass="language-objectivec">- (int)stopRtmpStreamEx:(NSString* _Nonnull)url
             connection:(AgoraRtcConnection * _Nonnull)connection NS_SWIFT_NAME(stopRtmpStreamEx(_:connection:));</codeblock>
            <codeblock props="cpp" outputclass="language-cpp">virtual int stopRtmpStreamEx(const char* url, const RtcConnection&amp; connection) = 0;</codeblock>
            <codeblock props="electron" outputclass="language-typescript">abstract stopRtmpStreamEx(url: string, connection: RtcConnection): number;</codeblock>
            <codeblock props="unity" outputclass="language-csharp">public abstract int StopRtmpStreamEx(string url, RtcConnection connection);</codeblock>
            <codeblock props="rn" outputclass="language-typescript">abstract stopRtmpStreamEx(url: string, connection: RtcConnection): number;</codeblock>
            <codeblock props="flutter" outputclass="language-dart">Future&lt;void> stopRtmpStreamEx(
      {required String url, required RtcConnection connection});</codeblock>
            <codeblock props="reserve" outputclass="language-cpp"/></p>
        </section>
        <section id="detailed_desc">
            <title>详情</title>
            <p>声网推荐你使用更加完善的服务端推流功能，详见<xref keyref="cdn-streaming-restful">实现服务端旁路推流</xref>。</p>
            <p>调用该方法，你可以结束指定的旁路推流地址上的直播。该方法每次只能结束一个推流地址上的直播，如果你需要结束多个推流地址的直播，则需多次调用该方法。</p>
            <p>调用该方法后，SDK 会在本地触发 <xref keyref="onRtmpStreamingStateChanged"/> 回调，报告推流的状态。</p>
        </section>
        <section id="parameters">
            <title>参数</title>
            <parml>
            <plentry conkeyref="startRtmpStreamWithTranscoding/url">
                <pt/>
                <pd/>
            </plentry>
            </parml> </section>
        <section id="return_values">
            <title><ph keyref="return-section-title"/></title>
            <p props="flutter">方法成功调用时，无返回值；方法调用失败时，会抛出 <xref keyref="AgoraRtcException"/> 异常，你需要捕获异常并进行处理。</p>
            <ul>
            <li props="native electron unity rn">0: 方法调用成功。</li>
            <li>&lt; 0: 方法调用失败。</li>
            </ul> </section>
    </refbody>
</reference>
