<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE reference PUBLIC "-//OASIS//DTD DITA Reference//EN" "reference.dtd">
<reference id="api_imediaengine_pushaudioframe0">
    <title><ph keyref="pushAudioFrame" /></title>
    <shortdesc id="short"><ph id="shortdesc">推送外部音频帧。</ph></shortdesc>
    <prolog>
        <metadata>
            <keywords>
                <indexterm keyref="pushAudioFrame" />
            </keywords>
        </metadata>
    </prolog>
    <refbody>
        <section id="prototype">
            <p outputclass="codeblock">
            <codeblock props="android" outputclass="language-java" />
            <codeblock props="ios mac" outputclass="language-objectivec" />
            <codeblock props="cpp unreal bp" outputclass="language-cpp">virtual int pushAudioFrame(IAudioFrameObserver::AudioFrame* frame, rtc::track_id_t trackId = 0) = 0;</codeblock>
            <codeblock props="electron" outputclass="language-typescript">abstract pushAudioFrame(frame: AudioFrame, trackId?: number): number;</codeblock>
            <codeblock props="unity cs" outputclass="language-csharp">public abstract int PushAudioFrame(AudioFrame frame, uint trackId = 0);</codeblock>
            <codeblock props="rn" outputclass="language-typescript">abstract pushAudioFrame(frame: AudioFrame, trackId?: number): number;</codeblock>
            <codeblock props="flutter" outputclass="language-dart">Future&lt;void> pushAudioFrame({required AudioFrame frame, int trackId = 0});</codeblock>
            <codeblock props="reserve" outputclass="language-cpp"></codeblock></p>
        </section>
        <section id="parameters">
            <title>参数</title>
            <parml>
            <plentry>
                <pt>frame</pt>
                <pd>外部音频帧。详见 <xref keyref="AudioFrame" />。</pd>
            </plentry>
            <plentry>
                <pt>trackId</pt>
                <pd>音频轨道 ID。如果你要发布自定义的外部音频源，则将该参数设置为你想要发布的自定义音频轨道 ID。</pd>
            </plentry>
            </parml> </section>
        <section id="return_values">
            <title><ph keyref="return-section-title"/></title>
            <p props="flutter">方法成功调用时，无返回值；方法调用失败时，会抛出 <xref keyref="AgoraRtcException"/> 异常，你需要捕获异常并进行处理。</p>
            <ul>
            <li props="cpp unreal bp unity electron rn cs">0：方法调用成功。</li>
            <li>&lt; 0：方法调用失败。</li>
            </ul> </section>
    </refbody>
</reference>