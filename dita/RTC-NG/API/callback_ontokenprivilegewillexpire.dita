<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE reference PUBLIC "-//OASIS//DTD DITA Reference//EN" "reference.dtd">
<reference id="callback_ontokenprivilegewillexpire">
    <title><ph keyref="onTokenPrivilegeWillExpire"/></title>
    <shortdesc id="short"><ph id="shortdesc">Token 服务将在30s内过期回调。</ph></shortdesc>
    <prolog>
        <metadata>
            <keywords>
                <indexterm keyref="onTokenPrivilegeWillExpire"/>
            </keywords>
        </metadata>
    </prolog>
    <refbody>
        <section id="prototype">
            <p outputclass="codeblock" props="rtc-ng">
            <codeblock props="unity" outputclass="language-csharp">public virtual void OnTokenPrivilegeWillExpire(RtcConnection connection, string token) {}</codeblock></p>
            <p outputclass="codeblock" props="rtc">
                <codeblock props="unity" outputclass="language-csharp">public virtual void OnTokenPrivilegeWillExpire(string token)</codeblock></p>
            <p outputclass="codeblock">
            <codeblock props="android" outputclass="language-java">public void onTokenPrivilegeWillExpire(String token) {}</codeblock>
            <codeblock props="ios mac" outputclass="language-objectivec">- (void)rtcEngine:(AgoraRtcEngineKit * _Nonnull)engine
     tokenPrivilegeWillExpire:(NSString *_Nonnull)token;</codeblock>
            <codeblock props="cpp" outputclass="language-cpp">virtual void onTokenPrivilegeWillExpire(const char* token) {
    (void)token;
    }</codeblock>
            <codeblock props="electron" outputclass="language-typescript">on(evt: EngineEvents.TOKEN_PRIVILEGE_WILL_EXPIRE, cb: (token: string) =&gt; void): this;</codeblock>
            <codeblock props="rn" outputclass="language-typescript"/>
            <codeblock props="flutter" outputclass="language-dart">TokenCallback? tokenPrivilegeWillExpire;</codeblock> </p>
        </section>
        <section id="detailed_desc">
            <p id="desc1">在通话过程中如果 Token 即将失效，SDK 会提前 30 秒触发该回调，提醒 app 更新 Token。</p>
            <p>当收到该回调时，你需要重新在服务端生成新的 Token，然后调用 <xref keyref="renewToken"/> 将新生成的 Token 传给 SDK。</p>
        </section>
        <section id="parameters">
            <title><ph keyref="callback-section-title"/></title>
            <p conkeyref="onJoinChannelSuccess/callback-desc" props="flutter rn"/>
            <parml>
            <plentry conkeyref="onJoinChannelSuccess/engine" props="ios mac">
                <pt/>
                <pd/>
            </plentry>
            <plentry props="rtc-ng">
                <pt props="unity">connection</pt>
                <pd props="unity">Connection 信息。详见 <xref keyref="RtcConnection"/>。</pd>
            </plentry>
            <plentry id="token">
                <pt>token</pt>
                <pd>即将服务失效的 Token。</pd>
            </plentry>
            </parml> </section>
    </refbody>
</reference>
