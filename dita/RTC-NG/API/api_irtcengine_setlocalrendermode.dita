<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE reference PUBLIC "-//OASIS//DTD DITA Reference//EN" "reference.dtd">
<reference id="api_irtcengine_setlocalrendermode">
    <title><ph keyref="setLocalRenderMode1" /></title>
    <shortdesc id="short"><ph id="shortdesc">设置本地视图显示模式。</ph></shortdesc>
    <prolog>
        <metadata>
            <keywords>
                <indexterm keyref="setLocalRenderMode1" />
            </keywords>
        </metadata>
    </prolog>
    <refbody>
        <section id="prototype">
            <p outputclass="codeblock">
            <codeblock props="android" outputclass="language-java">public abstract int setLocalRenderMode(int renderMode);</codeblock>
            <codeblock props="ios mac" outputclass="language-objectivec">- (int)setLocalRenderMode:(NSUInteger)uid
                     mode:(AgoraVideoRenderMode) mode;</codeblock>
            <codeblock props="cpp unreal" outputclass="language-cpp">virtual int setLocalRenderMode(media::base::RENDER_MODE_TYPE renderMode) = 0;</codeblock>
            <codeblock props="electron" outputclass="language-typescript">abstract setLocalRenderMode(
    renderMode: RenderModeType,
    mirrorMode?: VideoMirrorModeType
  ): number;</codeblock>
            <codeblock props="unity cs" outputclass="language-csharp">public abstract int SetLocalRenderMode(RENDER_MODE_TYPE renderMode);</codeblock>
            <codeblock props="rn" outputclass="language-typescript">abstract setLocalRenderMode(
    renderMode: RenderModeType,
    mirrorMode?: VideoMirrorModeType
  ): number;</codeblock>
            <codeblock props="flutter" outputclass="language-dart">Future&lt;void&gt; setLocalRenderMode2(RenderModeType renderMode);</codeblock>
            <codeblock props="reserve" outputclass="language-cpp"></codeblock></p>
        </section>
        <section id="detailed_desc">
            <title>详情</title>
            <dl outputclass="deprecated">
            <dlentry>
                <dt>弃用：</dt>
                <dd>该方法已废弃，请使用 <xref keyref="setLocalRenderMode2" /> 作为替代。</dd>
            </dlentry>
            </dl>
            <p>该方法设置本地视图显示模式。 App 可以多次调用此方法更改显示模式。</p>
        </section>
        <section id="parameters">
            <title>参数</title>
            <parml>
            <plentry>
                <pt props="cpp unreal bp android unity flutter cs">renderMode</pt>
                <pt props="ios mac">mode</pt>
                <pd>
                    <p props="ios mac cpp unreal bp unity flutter cs">本地视图显示模式。详见 <xref keyref="RENDER_MODE_TYPE" />。</p>
                    <p props="android">本地视图显示模式。


                    <ul conkeyref="setLocalRenderMode2/rendermodetype">
                    <li />
                    </ul> </p>
                </pd>
            </plentry>
            <plentry props="ios mac">
                <pt>uid</pt>
                <pd>
                  用户 ID。
                </pd>
            </plentry>
            </parml> </section>
        <section id="return_values">
            <title><ph keyref="return-section-title"/></title>
            <p props="flutter">方法成功调用时，无返回值；方法调用失败时，会抛出 <xref keyref="AgoraRtcException"/> 异常，你需要捕获异常并进行处理。<ph props="cn">详见<xref keyref="error-code-link"/>了解详情和解决建议。</ph></p>
            <ul props="native unreal bp electron unity rn cs">
            <li>0: 方法调用成功。</li>
            <li>&lt; 0: 方法调用失败。<ph props="cn">详见<xref keyref="error-code-link"/>了解详情和解决建议。</ph></li>
            </ul> </section>
    </refbody>
</reference>