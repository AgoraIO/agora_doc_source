<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE reference PUBLIC "-//OASIS//DTD DITA Reference//EN" "reference.dtd">
<reference id="api_irtcengine_playeffect3">
    <title><ph keyref="playEffect3" /></title>
    <shortdesc id="short"><ph id="shortdesc">播放指定的本地或在线音效文件。</ph></shortdesc>
    <prolog>
        <metadata>
            <keywords>
                <indexterm keyref="playEffect3" />
            </keywords>
        </metadata>
    </prolog>
    <refbody>
        <section id="prototype">
            <p outputclass="codeblock">
            <codeblock props="android" outputclass="language-java">public int playEffect(int soundId, String filePath, int loopCount, double pitch,
                        double pan, double gain, boolean publish, int startPos);
</codeblock>
            <codeblock props="ios mac" outputclass="language-objectivec">- (int)playEffect:(int)soundId
         filePath:(NSString* _Nonnull)filePath
        loopCount:(NSInteger)loopCount
            pitch:(double)pitch
              pan:(double)pan
             gain:(NSInteger)gain
          publish:(BOOL)publish
         startPos:(int)startPos;
</codeblock>
            <codeblock props="cpp unreal" outputclass="language-cpp">virtual int playEffect(int soundId,
    const char* filePath,
    int loopCount,
    double pitch,
    double pan,
    int gain,
    bool publish,
    int startPos) = 0;</codeblock>
         <codeblock props="bp" outputclass="language-cpp">UFUNCTION(BlueprintCallable, Category = &quot;Agora|RtcEngineProxy&quot;)
	int PlayEffect(int soundId, FString filePath, int loopCount, float pitch, float pan, int gain, bool publish, int startPos);</codeblock>
            <codeblock props="electron" outputclass="language-typescript">abstract playEffect(
    soundId: number,
    filePath: string,
    loopCount: number,
    pitch: number,
    pan: number,
    gain: number,
    publish?: boolean,
    startPos?: number
  ): number;</codeblock>
            <codeblock props="unity cs" outputclass="language-csharp">public abstract int PlayEffect(int soundId, string filePath, int loopCount, double pitch, double pan, int gain, bool publish = false, int startPos = 0);</codeblock>
            <codeblock props="rn" outputclass="language-typescript">abstract playEffect(
    soundId: number,
    filePath: string,
    loopCount: number,
    pitch: number,
    pan: number,
    gain: number,
    publish?: boolean,
    startPos?: number
  ): number;</codeblock>
            <codeblock props="flutter" outputclass="language-dart">Future&lt;void&gt; playEffect(
    {required int soundId,
    required String filePath,
    required int loopCount,
    required double pitch,
    required double pan,
    required int gain,
    bool publish = false,
    int startPos = 0});</codeblock>
            <codeblock props="reserve" outputclass="language-cpp"></codeblock></p>
        </section>
        <section id="detailed_desc">
            <title>详情</title>
            <note type="attention" id="note">如果你需要通过该方法来播放在线音效文件，建议你先将在线音效文件缓存到本地设备，调用 <xref keyref="preloadEffect"/> 将缓存的音效文件预加载到内存中，然后再调用此方法播放音效。否则，可能出现因在线音效文件加载超时、加载失败而导致的播放失败和无声的问题。</note>
            <p id="playEffect-desc">你可以多次调用该方法，传入不同的 <parmname>soundID</parmname> 和 <parmname>filePath</parmname>，同时播放多个音效文件。为获得最佳用户体验，建议同时播放的音效文件不超过 3 个。音效文件播放结束后，SDK 会触发 <apiname keyref="onAudioEffectFinished"/> 回调。</p>
        <p conkeyref="startAudioMixing2/uri" props="android"></p>
        </section>
        <section id="parameters">
            <title>参数</title>
            <parml>
            <plentry id="soundid">
                <pt>soundId</pt>
                <pd>音效的 ID。每个音效的 ID 具有唯一性。

                    <note type="attention">如果你已通过 <xref keyref="preloadEffect" /> 将音效加载至内存，请确保该参数与 <apiname keyref="preloadEffect" /> 中设置的 <parmname>soundId</parmname> 相同。</note> </pd>
            </plentry>
            <plentry>
                <pt>filePath</pt>
                <pd>
                    <p id="filepath">播放文件的绝对路径或 URL 地址，需精确到文件名及后缀。例如 <codeph><ph keyref="filePath-example" /></codeph>。支持的音频格式包括 MP3、AAC、M4A、MP4、WAV、3GP。详见<xref keyref="filePath-link">支持的媒体格式</xref>。</p>
                    <note type="attention">如果你已通过 <xref keyref="preloadEffect" /> 将音效加载至内存，请确保该参数与 <apiname keyref="preloadEffect" /> 中设置的 <parmname>filePath</parmname> 相同。</note> </pd>
            </plentry>
            <plentry id="loopcount">
                <pt>loopCount</pt>
                <pd>
                    <p>音效循环播放的次数。


                    <ul>
                    <li>≥ 0: 循环播放次数。例如，1 表示循环播放 1 次，即总计播放 2 次。</li>
                    <li>-1: 无限循环播放。</li>
                    </ul></p>
                </pd>
            </plentry>
            <plentry id="pitch">
                <pt>pitch</pt>
                <pd>音效的音调，取值范围为 [0.5,2.0]。默认值为 1.0，表示原始音调。取值越小，则音调越低。</pd>
            </plentry>
            <plentry id="pan">
                <pt>pan</pt>
                <pd>
                    <p>音效的空间位置。取值范围为 [-1.0,1.0]，例如：


                    <ul>
                    <li>-1.0：音效出现在左边</li>
                    <li>0.0：音效出现在正前方 </li>
                    <li>1.0：音效出现在右边 </li>
                    </ul></p>
                </pd>
            </plentry>
            <plentry id="gain">
                <pt>gain</pt>
                <pd>音效的音量。取值范围为 [0.0,100.0]。默认值为 100.0，表示原始音量。取值越小，则音量越低。</pd>
            </plentry>
            <plentry id="publish">
                <pt>publish</pt>
                <pd>
                    <p>是否将音效发布至远端：


                    <ul>
                    <li><codeph><ph keyref="true" /></codeph>: 将音效发布至远端。本地用户和远端用户都能听到音效。</li>
                    <li><codeph><ph keyref="false" /></codeph>: 不将音效发布至远端。只有本地用户能听到音效。</li>
                    </ul></p>
                </pd>
            </plentry>
            <plentry>
                <pt>startPos</pt>
                <pd>
                    <p>音效文件的播放位置，单位为毫秒。</p>
                </pd>
            </plentry>
            </parml> </section>
        <section id="return_values">
            <title><ph keyref="return-section-title"/></title>
            <p props="flutter">方法成功调用时，无返回值；方法调用失败时，会抛出 <xref keyref="AgoraRtcException"/> 异常，你需要捕获异常并进行处理。<ph props="cn">详见<xref keyref="error-code-link"/>了解详情和解决建议。</ph></p>
            <ul>
            <li props="native unreal bp electron unity rn cs">0：方法调用成功。</li>
            <li>&lt; 0：方法调用失败。<ph props="cn">详见<xref keyref="error-code-link"/>了解详情和解决建议。</ph></li>
            </ul> </section>
    </refbody>
</reference>
