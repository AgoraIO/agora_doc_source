<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE reference PUBLIC "-//OASIS//DTD DITA Reference//EN" "reference.dtd">
<reference id="api_irtcengine_updatescreencapture">
    <title><ph keyref="updateScreenCapture" /></title>
    <shortdesc id="short"><ph id="shortdesc">更新屏幕共享的参数配置。</ph></shortdesc>
    <prolog>
        <metadata>
            <keywords>
                <indexterm keyref="updateScreenCapture" />
            </keywords>
        </metadata>
    </prolog>
    <refbody>
        <section id="prototype">
            <p outputclass="codeblock">
            <codeblock props="android" outputclass="language-java" />
            <codeblock props="ios" outputclass="language-objectivec">- (int)updateScreenCapture:(AgoraScreenCaptureParameters2* _Nonnull)parameters NS_SWIFT_NAME(updateScreenCapture(_:));</codeblock>
            <codeblock props="cpp" outputclass="language-cpp">virtual int updateScreenCapture(const ScreenCaptureParameters2&amp; captureParams) = 0;
</codeblock>
            <codeblock props="cs" outputclass="language-csharp" />
            <codeblock props="electron" outputclass="language-typescript">abstract updateScreenCapture(captureParams: ScreenCaptureParameters2): number;</codeblock>
            <codeblock props="unity" outputclass="language-csharp">public abstract int UpdateScreenCapture(ScreenCaptureParameters2 captureParams);</codeblock>
            <codeblock props="rn" outputclass="language-typescript">abstract updateScreenCapture(captureParams: ScreenCaptureParameters2): number;</codeblock>
            <codeblock props="flutter" outputclass="language-dart">Future&lt;void&gt; updateScreenCapture(ScreenCaptureParameters2 captureParams);</codeblock>
            <codeblock props="reserve" outputclass="language-cpp"></codeblock></p>
        </section>
        <section id="detailed_desc">
            <title>详情</title>
            <p>如果在开启屏幕共享时未采集系统音频、然后想要更新参数配置、发布系统音频，可参考以下步骤：
                <ol>
                <li>调用该方法并设置 <parmname>captureAudio</parmname> 为 <codeph><ph keyref="true"/></codeph>。</li>
                <li>调用 <xref keyref="updateChannelMediaOptions"/> 设置 <parmname>publishScreenCaptureAudio</parmname> 为 <codeph><ph keyref="true"/></codeph>，即可发布屏幕采集的音频。</li>
                </ol></p>
            <note type="attention">
                <ul>
                    <li props="cpp rn unity flutter">该方法适用于 Android 和 iOS 平台。</li>
                    <li props="cpp rn unity flutter ios">在 iOS 平台上，屏幕共享仅适用于 iOS 12.0 及以上。</li>
                </ul>
            </note>
        </section>
        <section id="parameters">
            <title>参数</title>
            <parml>
            <plentry>
                <pt props="ios">parameters</pt>
                <pt props="cpp electron unity rn flutter">captureParams</pt>
                <pd>屏幕共享的编码参数配置。默认的分辨率为 1920 x 1080，即 2073600 像素。该像素值为计费标准。详见 <xref keyref="ScreenCaptureParameters2" />。</pd>
            </plentry>
            </parml> </section>
        <section id="return_values">
            <title><ph keyref="return-section-title"/></title>
            <p props="flutter">方法成功调用时，无返回值；方法调用失败时，会抛出 <xref keyref="AgoraRtcException"/> 异常，你需要捕获异常并进行处理。</p>
            <ul>
            <li props="ios cpp electron unity rn">0: 方法调用成功。</li>
            <li>&lt; 0: 方法调用失败。 
                    <ul conkeyref="startScreenCaptureByDisplayId/err">
                    <li/>
                    </ul> </li>
            </ul> </section>
    </refbody>
</reference>
