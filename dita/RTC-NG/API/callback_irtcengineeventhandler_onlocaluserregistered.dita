<?xml version='1.0' encoding='UTF-8'?>
<!DOCTYPE reference PUBLIC "-//OASIS//DTD DITA Reference//EN" "reference.dtd">
<reference id="callback_irtcengineeventhandler_onlocaluserregistered">
    <title><ph keyref="onLocalUserRegistered"/></title>
    <shortdesc id="short"><ph id="shortdesc">本地用户注册用户账号成功时触发的回调。</ph></shortdesc>
    <prolog>
        <metadata>
            <keywords>
                <indexterm keyref="onLocalUserRegistered"/>
            </keywords>
        </metadata>
    </prolog>
    <refbody>
        <section id="prototype">
            <p outputclass="codeblock">
            <codeblock props="android" outputclass="language-java">public void onLocalUserRegistered(int uid, String userAccount) {}</codeblock>
            <codeblock props="hmos" outputclass="language-arkts"/>
            <codeblock props="ios mac" outputclass="language-objectivec">- (void)rtcEngine:(AgoraRtcEngineKit * _Nonnull)engine didLocalUserRegisteredWithUserId:(NSUInteger)uid userAccount:(NSString * _Nonnull)userAccount NS_SWIFT_NAME(rtcEngine(_:didLocalUserRegisteredWithUserId:userAccount:));</codeblock>
            <codeblock props="cpp unreal" outputclass="language-cpp">virtual void onLocalUserRegistered(uid_t uid, const char* userAccount)</codeblock>
         <codeblock props="bp" outputclass="language-cpp">UFUNCTION(BlueprintNativeEvent, Category = "Agora|Event")
	void OnLocalUserRegistered(int64 uid, const FString&amp; userAccount);</codeblock>
            <codeblock props="electron" outputclass="language-typescript">  onLocalUserRegistered?(uid: number, userAccount: string): void;</codeblock>
            <codeblock props="unity cs" outputclass="language-csharp">public virtual void OnLocalUserRegistered(uint uid, string userAccount) {}</codeblock>
            <codeblock props="rn" outputclass="language-typescript">  onLocalUserRegistered?(uid: number, userAccount: string): void;</codeblock>
            <codeblock props="flutter" outputclass="language-dart">final void Function(int uid, String userAccount)? onLocalUserRegistered;</codeblock>
            <codeblock props="reserve" outputclass="language-cpp"/></p>
        </section>
        <section id="detailed_desc">
            <p>当本地用户成功调用 <xref keyref="registerLocalUserAccount"/> 注册用户账号，或调用 <codeph>joinChannelWithUserAccount</codeph> 加入频道后，SDK 会触发该回调，并返回本地用户的用户 ID 和用户账号。<codeph>joinChannelWithUserAccount</codeph> 的完整方法签名为：<codeph>joinChannelWithUserAccount(const char* token, const char* channelId, const char* userAccount, const ChannelMediaOptions&amp; options)</codeph>。<xref keyref="registerLocalUserAccount"/> 注册用户账号，或调用 <codeph>joinChannelWithUserAccount</codeph> 加入频道后，SDK 会触发该回调，并返回本地用户的用户 ID 和用户账号。<codeph>joinChannelWithUserAccount</codeph> 的完整方法签名为：<codeph>joinChannelWithUserAccount(const char* token, const char* channelId, const char* userAccount, const ChannelMediaOptions&amp; options)</codeph>。<xref keyref="registerLocalUserAccount"/> 方法注册用户 User Account，或调用 <apiname keyref="joinChannelWithUserAccount2"/> 加入频道后，SDK 会触发该回调，并告知本地用户的 UID 和 User Account。</p>
            </section>
        <section id="parameters">
            <title><ph keyref="callback-section-title"/></title>
            <parml>
            <plentry conkeyref="onJoinChannelSuccess/engine" props="apple">
                <pt/>
                <pd/>
            </plentry>
            <plentry>
                <pt>uid</pt>
                <pd props="android bp cs electron flutter mac rn unity unreal">本地用户的 ID。</pd>
            <pd props="cpp ios">本地用户的用户 ID。</pd>
                </plentry>
            <plentry>
                <pt>userAccount</pt>
                <pd props="android bp cs electron flutter mac rn unity unreal">本地用户的 User Account。</pd>
            <pd props="cpp ios">本地用户的用户账号。</pd>
                </plentry>
            <plentry props="ios">
                <pt props="ios">engine</pt>
                <pd props="ios"><xref keyref="IRtcEngine"/> 对象，详见 <xref keyref="IRtcEngine"/>。</pd>
                </plentry>
        </parml> </section>
    </refbody>
</reference>
