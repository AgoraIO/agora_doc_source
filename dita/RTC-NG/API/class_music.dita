<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE reference PUBLIC "-//OASIS//DTD DITA Reference//EN" "reference.dtd">
<reference id="class_music">
    <title><ph keyref="Music"/></title>
    <shortdesc id="short"><ph id="shortdesc">音乐资源的详细信息。</ph></shortdesc>
    <refbody>
        <section id="prototype">
            <p outputclass="codeblock">
            <codeblock props="android" outputclass="language-java">public class Music {
  public long songCode;
  public String name;
  public String singer;
  public String poster;
  public String releaseTime;
  public int type;
  public int pitchType;
  public int durationS;
  public int[] lyricTypes;
  public ClimaxSegment[] climaxSegments;

  public Music() {}

  @CalledByNative
  public Music(long songCode, String name, String singer, String poster, String releaseTime,
      int type, int pitchType, int durationS, int[] lyricTypes,
      ClimaxSegment[] climaxSegments) {
    this.songCode = songCode;
    this.name = name;
    this.singer = singer;
    this.poster = poster;
    this.releaseTime = releaseTime;
    this.type = type;
    this.pitchType = pitchType;
    this.durationS = durationS;
    this.lyricTypes = lyricTypes;
    this.climaxSegments = climaxSegments;
  }

  @CalledByNative
  public long getSongCode() {
    return songCode;
  }

  @CalledByNative
  public String getName() {
    return name;
  }

  @CalledByNative
  public String getSinger() {
    return singer;
  }

  @CalledByNative
  public String getPoster() {
    return poster;
  }

  @CalledByNative
  public String getReleaseTime() {
    return releaseTime;
  }

  @CalledByNative
  public int getType() {
    return type;
  }

  @CalledByNative
  public int getPitchType() {
    return pitchType;
  }

  @CalledByNative
  public int getDurationS() {
    return durationS;
  }

  @CalledByNative
  public int[] getLyricTypes() {
    return lyricTypes;
  }

  @CalledByNative
  public ClimaxSegment[] getClimaxSegments() {
    return climaxSegments;
  }
}</codeblock>
            <codeblock props="ios mac" outputclass="language-objectivec">__attribute__((visibility("default"))) @interface AgoraMusic : NSObject
@property(nonatomic, assign) NSInteger songCode;
@property(nonatomic, assign) NSInteger type;
@property(nonatomic, assign) NSInteger pitchType;
@property(nonatomic, copy) NSString* name;
@property(nonatomic, copy) NSString* singer;
@property(nonatomic, copy) NSString* poster;
@property(nonatomic, copy) NSString* releaseTime;
@property(nonatomic, assign) NSInteger durationS;
@property(nonatomic, strong) NSArray&lt;NSNumber *>* lyricList;
@property(nonatomic, strong) NSArray&lt;AgoraClimaxSegment *>* climaxSegmentList;
@end</codeblock>
            <codeblock props="cpp unreal" outputclass="language-cpp">struct Music
{
    int64_t songCode;
    const char* name;
    const char* singer;
    const char* poster;
    const char* releaseTime;
    int32_t durationS;
    int32_t type;
    int32_t pitchType;
    int32_t lyricCount;
    int32_t* lyricList;
    int32_t climaxSegmentCount;
    ClimaxSegment* climaxSegmentList;

};</codeblock>
            <codeblock props="electron" outputclass="language-typescript">export class Music {
  songCode?: number;
  name?: string;
  singer?: string;
  poster?: string;
  releaseTime?: string;
  durationS?: number;
  type?: number;
  pitchType?: number;
  lyricCount?: number;
  lyricList?: number[];
  climaxSegmentCount?: number;
  climaxSegmentList?: ClimaxSegment[];
}</codeblock>
            <codeblock props="unity cs" outputclass="language-csharp">    public class Music
    {
        public Int64 songCode;
        public string name;
        public string singer;
        public string poster;
        public string releaseTime;
        public int durationS;
        public int type;
        public int pitchType;
        public int lyricCount;
        public int[] lyricList;
        public int climaxSegmentCount;
        public ClimaxSegment[] climaxSegmentList;
    }</codeblock>
            <codeblock props="rn" outputclass="language-typescript">export class Music {
  songCode?: number;
  name?: string;
  singer?: string;
  poster?: string;
  releaseTime?: string;
  durationS?: number;
  type?: number;
  pitchType?: number;
  lyricCount?: number;
  lyricList?: number[];
  climaxSegmentCount?: number;
  climaxSegmentList?: ClimaxSegment[];
}</codeblock>
            <codeblock props="flutter" outputclass="language-dart">class Music {
  const Music(
      {this.songCode,
      this.name,
      this.singer,
      this.poster,
      this.releaseTime,
      this.durationS,
      this.type,
      this.pitchType,
      this.lyricCount,
      this.lyricList,
      this.climaxSegmentCount,
      this.climaxSegmentList});

  @JsonKey(name: 'songCode')
  final int? songCode;

  @JsonKey(name: 'name')
  final String? name;

  @JsonKey(name: 'singer')
  final String? singer;

  @JsonKey(name: 'poster')
  final String? poster;

  @JsonKey(name: 'releaseTime')
  final String? releaseTime;

  @JsonKey(name: 'durationS')
  final int? durationS;

  @JsonKey(name: 'type')
  final int? type;

  @JsonKey(name: 'pitchType')
  final int? pitchType;

  @JsonKey(name: 'lyricCount')
  final int? lyricCount;

  @JsonKey(name: 'lyricList')
  final List&lt;int>? lyricList;

  @JsonKey(name: 'climaxSegmentCount')
  final int? climaxSegmentCount;

  @JsonKey(name: 'climaxSegmentList')
  final List&lt;ClimaxSegment>? climaxSegmentList;

  factory Music.fromJson(Map&lt;String, dynamic> json) => _$MusicFromJson(json);

  Map&lt;String, dynamic> toJson() => _$MusicToJson(this);
}</codeblock>
            <codeblock props="reserve" outputclass="language-cpp"></codeblock></p>
        </section>
        <section id="detailed_desc">
            <dl outputclass="since">
            <dlentry props="native">
                <dt>自从</dt>
                <dd>v4.1.0</dd>
            </dlentry>
            </dl>
        </section>
        <section id="parameters">
            <title><text conref="../conref/conref_api_metadata.dita#conref_api_metadata/property"/></title>
            <parml>
            <plentry id="code">
                <pt>songCode</pt>
                <pd>音乐资源的编号，用于标识一个音乐资源。</pd>
            </plentry>
            <plentry>
                <pt>name</pt>
                <pd>音乐资源名称。</pd>
            </plentry>
            <plentry>
                <pt>singer</pt>
                <pd>歌手名。</pd>
            </plentry>
            <plentry>
                <pt>poster</pt>
                <pd>音乐资源海报的下载地址。</pd>
            </plentry>
            <plentry>
                <pt>releaseTime</pt>
                <pd>音乐资源发布的时间。</pd>
            </plentry>
            <plentry>
                <pt>type</pt>
                <pd>音乐资源类型：
                    <ul>
                    <li>1：左声道伴奏，右声道原唱的单音轨纯音频音源。</li>
                    <li>2：只有伴唱的单音轨纯音频音源。</li>
                    <li>3：只有原唱的单音轨纯音频音源。</li>
                    <li>4：多音轨的纯音频音源。</li>
                    </ul></pd>
            </plentry>
            <plentry>
                <pt>pitchType</pt>
                <pd>歌曲是否支持演唱评分功能：

                    <ul>
                    <li>1：歌曲支持演唱评分功能。</li>
                    <li>2：歌曲不支持演唱评分功能。</li>
                    </ul></pd>
            </plentry>
            <plentry>
                <pt>durationS</pt>
                <pd>音乐资源总时长 （秒）。</pd>
            </plentry>
            <plentry>
                <pt props="android">lyricTypes</pt>
                <pt props="apple cpp framework">lyricList</pt>
                <pd>支持的歌词类型：
                    <ul>
                    <li>0：xml 格式。</li>
                    <li>1：lrc 格式。</li>
                    </ul></pd>
            </plentry>
            <plentry>
                <pt props="android">climaxSegments</pt>
                <pt props="apple cpp framework">climaxSegmentList</pt>
                <pd>音乐高潮片段列表，详见 <xref keyref="ClimaxSegment"/>。</pd>
            </plentry>
            <plentry props="cpp framework">
                <pt>lyricCount</pt>
                <pd>歌曲的歌词数量。</pd>
            </plentry>
            <plentry props="cpp framework">
                <pt>climaxSegmentCount</pt>
                <pd>高潮片段的数量。</pd>
            </plentry>
            </parml> </section>
    </refbody>
</reference>
