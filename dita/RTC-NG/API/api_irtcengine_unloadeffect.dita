<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE reference PUBLIC "-//OASIS//DTD DITA Reference//EN" "reference.dtd">
<reference id="api_irtcengine_unloadeffect">
    <title><ph keyref="unloadEffect" /></title>
    <shortdesc id="short"><ph id="shortdesc">从内存释放某个预加载的音效文件。</ph></shortdesc>
    <prolog>
        <metadata>
            <keywords>
                <indexterm keyref="unloadEffect" />
            </keywords>
        </metadata>
    </prolog>
    <refbody>
        <section id="prototype">
            <p outputclass="codeblock">
            <codeblock props="android" outputclass="language-java">public abstract int unloadEffect(int soundId);
</codeblock>
            <codeblock props="hmos" outputclass="language-arkts"></codeblock>
            <codeblock props="ios mac" outputclass="language-objectivec">- (int)unloadEffect:(int)soundId;
</codeblock>
            <codeblock props="cpp unreal" outputclass="language-cpp">virtual int unloadEffect(int soundId) = 0;</codeblock>
            <codeblock props="bp" outputclass="language-cpp">UFUNCTION(BlueprintCallable, Category = &quot;Agora|IRtcEngine&quot;)
	int UnloadEffect(int soundId);</codeblock>
            <codeblock props="electron" outputclass="language-typescript">abstract unloadEffect(soundId: number): number;</codeblock>
            <codeblock props="unity cs" outputclass="language-csharp">public abstract int UnloadEffect(int soundId);</codeblock>
            <codeblock props="rn" outputclass="language-typescript">abstract unloadEffect(soundId: number): number;</codeblock>
            <codeblock props="flutter" outputclass="language-dart">Future&lt;void&gt; unloadEffect(int soundId);</codeblock>
            <codeblock props="reserve" outputclass="language-cpp"></codeblock></p>
        </section>
        <section id="detailed_desc" deliveryTarget="details" otherprops="no-title">
            <p>调用 <xref keyref="preloadEffect"/> 将音效文件加载至内存后，如需释放该音效文件，请调用该方法。</p>
        </section>
        <section id="timing" deliveryTarget="details">
            <title>调用时机</title>
            <p>该方法在加入频道前后均可调用。</p>
        </section>        
        <section id="restriction" deliveryTarget="details">
            <title>调用限制</title>
            <p>无。</p>
        </section>
        <section id="parameters" deliveryTarget="details">
            <title>参数</title>
            <parml>
            <plentry>
                <pt>soundId</pt>
                <pd>指定音效文件的 ID。每个音效文件均有唯一的 ID。</pd>
            </plentry>
            </parml> </section>
        <section id="return_values">
            <title><ph keyref="return-section-title"/></title>
            <p props="flutter">方法成功调用时，无返回值；方法调用失败时，会抛出 <xref keyref="AgoraRtcException"/> 异常，你需要捕获异常并进行处理。<ph props="cn">详见<xref keyref="error-code-link"/>了解详情和解决建议。</ph></p>
            <ul props="native unreal bp electron unity rn cs">
            <li>0: 方法调用成功。</li>
            <li>&lt; 0: 方法调用失败。<ph props="cn">详见<xref keyref="error-code-link"/>了解详情和解决建议。</ph></li>
            </ul> </section>
    </refbody>
</reference>