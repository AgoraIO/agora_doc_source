<?xml version='1.0' encoding='UTF-8'?>
<!DOCTYPE reference PUBLIC "-//OASIS//DTD DITA Reference//EN" "reference.dtd">
<reference id="callback_iaudioframeobserver_onplaybackaudioframebeforemixing">
    <title><ph keyref="onPlaybackAudioFrameBeforeMixing"/></title>
    <shortdesc id="short"><ph id="shortdesc"><xref keyref="onPlaybackAudioFrameBeforeMixing"/> 回调，在混音前接收到播放音频帧时触发。</ph></shortdesc>
    <prolog>
        <metadata>
            <keywords>
                <indexterm keyref="onPlaybackAudioFrameBeforeMixing"/>
            </keywords>
        </metadata>
    </prolog>
    <refbody>
        <section id="prototype">
            <p outputclass="codeblock">
            <codeblock props="android" outputclass="language-java">public abstract boolean onPlaybackAudioFrameBeforeMixing(String channelId, int uid, int type, int samplesPerChannel, int bytesPerSample, int channels, int samplesPerSec, ByteBuffer buffer, long renderTimeMs, int avsync_type, int rtpTimestamp, long presentationMs);</codeblock>
            <codeblock props="hmos" outputclass="language-arkts"/>
            <codeblock props="ios mac" outputclass="language-objectivec"/>
            <codeblock props="cpp unreal" outputclass="language-cpp"/>
            <codeblock props="bp" outputclass="language-cpp"/>
            <codeblock props="cs" outputclass="language-csharp"/>
            <codeblock props="electron" outputclass="language-typescript"/>
            <codeblock props="unity cs" outputclass="language-csharp"/>
            <codeblock props="rn" outputclass="language-typescript"/>
            <codeblock props="flutter" outputclass="language-dart"/> </p>
        </section>
        <section id="detailed_desc" deliveryTarget="details" otherprops="no-title">
            <p>该回调在远端音频帧混音前触发，开发者可通过此接口获取每个远端用户的原始音频数据并进行处理。</p>
        </section>
        <section id="restriction" deliveryTarget="details">
            <title>使用限制</title>
            <p>无。</p>
        </section>
        <section id="parameters" deliveryTarget="details">
            <title>参数</title>
            <parml>
            <plentry props="android">
                <pt props="android">channelId</pt>
                <pd props="android">频道的唯一标识符。</pd>
            </plentry>
            <plentry props="android">
                <pt props="android">uid</pt>
                <pd props="android">远端用户 ID。</pd>
            </plentry>
            <plentry props="android">
                <pt props="android">type</pt>
                <pd props="android">音频帧的类型。</pd>
            </plentry>
            <plentry props="android">
                <pt props="android">samplesPerChannel</pt>
                <pd props="android">每个声道的采样数。</pd>
            </plentry>
            <plentry props="android">
                <pt props="android">bytesPerSample</pt>
                <pd props="android">每个音频采样的字节数。例如，每个 PCM 音频采样通常占用 16 位（2 字节）。</pd>
            </plentry>
            <plentry props="android">
                <pt props="android">channels</pt>
                <pd props="android">音频声道数。如果使用立体声，数据为交错格式：
                    <ul>
                        <li>1：单声道。</li>
                        <li>2：立体声。</li>
                        </ul>
                    </pd>
            </plentry>
            <plentry props="android">
                <pt props="android">samplesPerSec</pt>
                <pd props="android">音频帧中每个声道每秒的采样数。</pd>
            </plentry>
            <plentry props="android">
                <pt props="android">buffer</pt>
                <pd props="android">音频帧的有效载荷。详见 <codeph>ByteBuffer</codeph>。</pd>
            </plentry>
            <plentry props="android">
                <pt props="android">renderTimeMs</pt>
                <pd props="android">渲染时间戳，单位为毫秒。</pd>
            </plentry>
            <plentry props="android">
                <pt props="android">avsync_type</pt>
                <pd props="android">音视频同步类型。</pd>
            </plentry>
            <plentry props="android">
                <pt props="android">rtpTimestamp</pt>
                <pd props="android">该音频帧中第一个采样的 RTP 时间戳。</pd>
            </plentry>
            <plentry props="android">
                <pt props="android">presentationMs</pt>
                <pd props="android">该音频帧的 PTS（显示时间戳），单位为毫秒。</pd>
            </plentry>
            </parml> </section>
        <section id="return_values" props="bp electron flutter native rn unity unreal">
            <title><ph keyref="return-section-title"/></title>
        <p props="flutter">方法成功调用时，无返回值；方法调用失败时，会抛出 <xref keyref="AgoraRtcException"/> 异常，你需要捕获异常并进行处理。</p>
        <ul props="apple bp cpp electron rn unity unreal">
                <li>0: 方法调用成功。</li>
                <li>&lt; 0: 方法调用失败。<ph props="cn">详见<xref keyref="error-code-link"/>了解详情和解决建议。</ph></li>
                </ul>
        <p props="android"><ul>
                        <li><codeph><ph keyref="true"/></codeph>：混音前的播放音频帧有效，已编码并发送。</li>
                        <li><codeph><ph keyref="false"/></codeph>：混音前的播放音频帧无效，未编码或发送。</li>
                        </ul>
                    </p>
    </section>
    </refbody>
</reference>
