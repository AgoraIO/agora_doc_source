<?xml version='1.0' encoding='UTF-8'?>
<!DOCTYPE reference PUBLIC "-//OASIS//DTD DITA Reference//EN" "reference.dtd">
<reference id="api_irtcengine_mutelocalaudiostream">
    <title><ph keyref="muteLocalAudioStream"/></title>
    <shortdesc id="short"><ph id="shortdesc">停止或恢复发送本地音频流。</ph></shortdesc>
    <prolog>
        <metadata>
            <keywords>
                <indexterm keyref="muteLocalAudioStream"/>
            </keywords>
        </metadata>
    </prolog>
    <refbody>
        <section id="prototype">
            <p outputclass="codeblock">
            <codeblock props="android" outputclass="language-java">public abstract int muteLocalAudioStream(boolean muted);</codeblock>
            <codeblock props="hmos" outputclass="language-arkts">public abstract muteLocalAudioStream(muted: boolean): number;</codeblock>
            <codeblock props="ios mac" outputclass="language-objectivec">- (int)muteLocalAudioStream:(BOOL)mute NS_SWIFT_NAME(muteLocalAudioStream(_:));</codeblock>
            <codeblock props="cpp unreal" outputclass="language-cpp">virtual int muteLocalAudioStream(bool mute) = 0;</codeblock>
         <codeblock props="bp" outputclass="language-cpp">UFUNCTION(BlueprintCallable, Category = "Agora|IRtcEngine")
	int MuteLocalAudioStream(bool mute);</codeblock>
            <codeblock props="electron" outputclass="language-typescript">abstract muteLocalAudioStream(mute: boolean): number;</codeblock>
            <codeblock props="unity cs" outputclass="language-csharp">public abstract int MuteLocalAudioStream(bool mute);</codeblock>
            <codeblock props="rn" outputclass="language-typescript">abstract muteLocalAudioStream(mute: boolean): number;</codeblock>
            <codeblock props="flutter" outputclass="language-dart">Future&lt;void&gt; muteLocalAudioStream(bool mute);</codeblock>
            <codeblock props="reserve" outputclass="language-cpp"/></p>
        </section>
        <section id="detailed_desc" deliveryTarget="details" otherprops="no-title">
            <p></p>
            <note type="attention" props="android">成功调用该方法后，本地会触发回调 <xref keyref="onAudioPublishStateChanged"/>；远端会触发 <xref keyref="onUserMuteAudio"/> 和 <xref keyref="onRemoteAudioStateChanged"/> 回调。</note>
            </section>
        <section id="timing" deliveryTarget="details">
            <title>调用时机</title>
            <p>加入频道前后均可调用。</p>
        </section>        
        <section id="restriction" deliveryTarget="details">
            <title>调用限制</title>
            <p>无。</p>
        </section>
        <section id="related" deliveryTarget="details">
            <title>相关回调</title>
            <p>成功调用该方法后，SDK 会触发 <xref keyref="onRemoteAudioStateChanged"/> 回调报告远端音频状态：
                    <ul>
                        <li><codeph>REMOTE_AUDIO_STATE_STOPPED(0)</codeph> 和 <codeph>REMOTE_AUDIO_REASON_REMOTE_MUTED(5)</codeph>。</li>
                        </ul>
                    </p>
        </section>
        <section id="parameters">
            <title>参数</title>
            <parml>
            <plentry>
                <pt props="android hmos">muted</pt>
                <pt props="apple bp cpp cs electron flutter rn unity unreal">mute</pt>
                <pd id="mute">
                    <p>是否取消发布本地音频流。


                    <ul>
                    <li><codeph><ph keyref="true"/></codeph>: 取消发布。</li>
                    <li><codeph><ph keyref="false"/></codeph>:（默认）发布。</li>
                    </ul></p>
                </pd>
            </plentry>
            <plentry props="android cpp ios">
                <pt props="android cpp ios">mute</pt>
                <pd props="android ios">是否停止发布本地音频流：
                    <ul>
                        <li><codeph><ph keyref="true"/></codeph>：停止发布本地音频流。</li>
                        <li><codeph><ph keyref="false"/></codeph>：（默认）恢复发布本地音频流。</li>
                        </ul>
                    </pd>
                <pd props="cpp">是否停止发送本地音频流：
                    <ul>
                        <li><codeph><ph keyref="true"/></codeph>：停止发送。</li>
                        <li><codeph><ph keyref="false"/></codeph>：恢复发送。</li>
                        </ul>
                    </pd>
            </plentry>
        </parml> </section>
        <section id="return_values" props="bp cs electron flutter native rn unity unreal">
            <title><ph keyref="return-section-title"/></title>
        <p props="flutter">方法成功调用时，无返回值；方法调用失败时，会抛出 <xref keyref="AgoraRtcException"/> 异常，你需要捕获异常并进行处理。<ph props="cn">详见<xref keyref="error-code-link"/>了解详情和解决建议。</ph></p>
        <ul props="bp cs electron rn unity unreal">
            <li>0: 方法调用成功。</li>
            <li> &lt; 0: 方法调用失败。<ph props="cn">详见<xref keyref="error-code-link"/>了解详情和解决建议。</ph></li>
            </ul>
        <p props="cpp"><ul>
                        <li>0: 方法调用成功。</li>
                        <li>&lt; 0: 方法调用失败。</li>
                        </ul>
                    </p>
        <p props="android apple"><ul>
                        <li>0：方法调用成功。</li>
                        <li>&lt; 0：方法调用失败。</li>
                        </ul>
                    </p>
    </section>
    </refbody>
</reference>
