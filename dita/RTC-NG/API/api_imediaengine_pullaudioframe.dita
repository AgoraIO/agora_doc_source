<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE reference PUBLIC "-//OASIS//DTD DITA Reference//EN" "reference.dtd">
<reference id="api_imediaengine_pullaudioframe">
    <title><ph keyref="pullAudioFrame"/></title>
    <shortdesc id="short"><ph id="shortdesc">拉取远端音频数据。</ph></shortdesc>
    <prolog>
        <metadata>
            <keywords>
                <indexterm keyref="pullAudioFrame"/>
            </keywords>
        </metadata>
    </prolog>
    <refbody>
        <section id="prototype">
            <p outputclass="codeblock">
            <codeblock props="android" outputclass="language-java">public abstract int pullPlaybackAudioFrame(byte[] data, int lengthInByte);</codeblock>
            <codeblock props="ios mac" outputclass="language-objectivec">- (BOOL)pullPlaybackAudioFrameRawData:(void * _Nonnull)data
                              lengthInByte:(NSUInteger)lengthInByte;</codeblock>
            <codeblock props="cpp unreal" outputclass="language-cpp">virtual int pullAudioFrame(IAudioFrameObserver::AudioFrame* frame) = 0;</codeblock>
            <codeblock props="electron" outputclass="language-typescript">abstract pullAudioFrame(): AudioFrame;</codeblock>
            <codeblock props="unity cs" outputclass="language-csharp">public abstract int PullAudioFrame(AudioFrame frame);</codeblock>
            <codeblock props="rn" outputclass="language-typescript">abstract pullAudioFrame(): AudioFrame;</codeblock>
            <codeblock props="flutter" outputclass="language-dart">Future&lt;void&gt; pullAudioFrame(AudioFrame frame);</codeblock>
            <codeblock props="reserve" outputclass="language-cpp"></codeblock></p>
        </section>
        <section id="detailed_desc">
            <title>详情</title>
            <p>使用该方法前，你需要调用 <xref keyref="setExternalAudioSink"/><codeph>(<parmname>enabled</parmname>: <ph keyref="true"/>)</codeph> 通知 App 开启并设置外部渲染。</p>
            <p>调用该方法后，App 会采取主动拉取的方式获取远端已解码和混音后的音频数据，用于音频播放。</p>
            <note type="attention">
            <ul>
            <li>该方法需要在加入频道后调用。</li>
            <li>该方法和 <xref keyref="onPlaybackAudioFrame"/> 回调均可用于获取远端混音后的音频数据。需要注意的是：在调用 <apiname keyref="setExternalAudioSink"/> 开启外部音频渲染后，App 将无法从 <apiname keyref="onPlaybackAudioFrame"/> 回调中获得数据，因此，请根据实际的业务需求在该方法和 <apiname keyref="onPlaybackAudioFrame"/> 回调之间进行选择。二者的处理机制不同，具体区别如下：
                <ul>
                <li>调用该方法后 App 会主动拉取音频数据。通过设置音频数据，SDK 可以调整缓存，帮助 App 处理延时，从而有效避免音频播放抖动。</li>
                <li>SDK 通过 <apiname keyref="onPlaybackAudioFrame"/> 回调将音频数据传输给 App。如果 App 处理延时，可能会导致音频播放抖动。</li>
                </ul></li>
            <li>该方法仅用于拉取远端混音后的音频数据，如需获取采集、播放等不同音频处理阶段的音频数据，可以通过调用 <xref keyref="registerAudioFrameObserver"/> 注册相应的回调。</li>
            </ul> </note> </section>
        <section id="parameters" props="native unreal bp unity flutter cs">
            <title>参数</title>
            <parml>
            <plentry props="cpp unreal bp unity flutter cs">
                <pt>frame</pt>
                <pd>指向 <xref keyref="AudioFrame"/> 的指针。</pd>
            </plentry>
            <plentry props="android ios mac">
                <pt>data</pt>
                <pd>待拉取的远端音频数据，数据类型为 <codeph>byte[]</codeph>。</pd>
            </plentry>
            <plentry props="android ios mac" id="length">
                <pt>lengthInByte</pt>
                <pd>音频数据长度，单位为字节。该参数的值由音频数据时长、<apiname keyref="setExternalAudioSink"/> 的 <codeph>sampleRate</codeph> 和 <codeph>channels</codeph> 参数确定。<codeph>lengthInByte</codeph> = <codeph>sampleRate</codeph>/1000 × 2 × <codeph>channels</codeph> × 音频数据时长 (ms)。</pd>
            </plentry>
            </parml> </section>
        <section id="return_values">
            <title><ph keyref="return-section-title"/></title>
            <p props="flutter">方法成功调用时，无返回值；方法调用失败时，会抛出 <xref keyref="AgoraRtcException"/> 异常，你需要捕获异常并进行处理。<ph props="cn">详见<xref keyref="error-code-link"/>了解详情和解决建议。</ph></p>
            <ul props="android cpp unreal bp unity cs">
            <li>0：方法调用成功。</li>
            <li>&lt; 0：方法调用失败。<ph props="cn">详见<xref keyref="error-code-link"/>了解详情和解决建议。</ph></li>
            </ul>
            <ul props="ios mac">
            <li><codeph><ph keyref="true"/></codeph>：方法调用成功。</li>
            <li><codeph><ph keyref="false"/></codeph>：方法调用失败。<ph props="cn">详见<xref keyref="error-code-link"/>了解详情和解决建议。</ph></li>
            </ul>
            <ul props="electron rn">
            <li>方法调用成功，返回一个 <apiname keyref="AudioFrame" /> 对象。</li>
            <li>方法调用失败，返回错误码。</li>
            </ul> </section>
    </refbody>
</reference>
