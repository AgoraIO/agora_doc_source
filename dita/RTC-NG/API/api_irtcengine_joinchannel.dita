<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE reference PUBLIC "-//OASIS//DTD DITA Reference//EN" "reference.dtd">
<reference id="api_irtcengine_joinchannel">
    <title><ph keyref="joinChannel1" /></title>
    <shortdesc id="short"><ph id="shortdesc">加入频道。</ph></shortdesc>
    <prolog>
        <metadata>
            <keywords>
                <indexterm keyref="joinChannel1" />
            </keywords>
        </metadata>
    </prolog>
    <refbody>
        <section id="prototype">
            <p outputclass="codeblock">
            <codeblock props="android" outputclass="language-java">public abstract int joinChannel(
    String token, String channelId, String optionalInfo, int uid);</codeblock>
            <codeblock props="hmos" outputclass="language-arkts">public abstract joinChannel(key: string, channel: string, optionalInfo: string, uid: number): number;</codeblock>
            <codeblock props="ios mac" outputclass="language-objectivec">- (int)joinChannelByToken:(NSString * _Nullable)token
                channelId:(NSString * _Nonnull)channelId
                     info:(NSString * _Nullable)info
                      uid:(NSUInteger)uid
              joinSuccess:(void(^ _Nullable)(NSString * _Nonnull channel, NSUInteger uid, NSInteger elapsed))joinSuccessBlock;</codeblock>
            <codeblock props="cpp unreal" outputclass="language-cpp">virtual int joinChannel(const char* token, const char* channelId, const char* info,
                        uid_t uid) = 0;</codeblock>
           <codeblock props="bp" outputclass="language-cpp">UFUNCTION(BlueprintCallable, Category = &quot;Agora|IRtcEngine&quot;)
	int JoinChannel(const FString &amp; token, const FString&amp; channelId, int64 uid);</codeblock>
            <codeblock props="electron" outputclass="language-typescript">abstract joinChannel(
    token: string,
    channelId: string,
    info: string,
    uid: number
  ): number;</codeblock>
            <codeblock props="unity cs" outputclass="language-csharp">public abstract int JoinChannel(string token, string channelId, string info = "", uint uid = 0);</codeblock>
            <codeblock props="rn" outputclass="language-typescript">abstract joinChannel(
    token: string,
    channelId: string,
    info: string,
    uid: number
  ): number;</codeblock>
            <codeblock props="flutter" outputclass="language-dart">Future&lt;void&gt; joinChannel(
    {required String token,
    required String channelId,
    required String info,
    required int uid});</codeblock>
            <codeblock props="reserve" outputclass="language-cpp"></codeblock></p>
        </section>
        <section id="detailed_desc" deliveryTarget="details" otherprops="no-title">
            <p>加入频道后，默认情况下用户订阅频道内所有其他用户的音频流和视频流，因此会产生用量并<b>影响计费</b>。如果想取消订阅，可以通过相应的 <apiname>mute</apiname> 方法实现。</p>
      </section>
    <section id="timing" deliveryTarget="details" conkeyref="joinChannel2/timing">
    </section>
    <section id="restriction" deliveryTarget="details" conkeyref="joinChannel2/restriction">
    </section>
    <section id="related" deliveryTarget="details" conkeyref="joinChannel2/related">
    </section>
    <section id="parameters" deliveryTarget="details">
            <title>参数</title>
            <parml>
            <plentry conkeyref="joinChannel2/token">
                <pt />
                <pd />
            </plentry>
            <plentry conkeyref="joinChannel2/channelID">
                <pt />
                <pd />
            </plentry>
            <plentry>
                <pt props="ios mac cpp unreal bp unity rn electron flutter cs">info</pt>
                <pt props="android hmos">optionalInfo</pt>
                <pd>(非必选项) 预留参数。</pd>
            </plentry>
            <plentry id="uid">
                <pt>uid</pt>
                <pd>用户 ID。该参数用于标识在实时音视频互动频道中的用户。你需要自行设置和管理用户 ID，并确保同一频道内的每个用户 ID 是唯一的。<ph props="android hmos">该参数为 32 位有符号整数。取值范围为：-2<sup>31</sup> 到 2<sup>31</sup>-1。</ph><ph props="cpp apple framework">该参数为 32 位无符号整数。建议设置范围：1 到 2<sup>32</sup>-1。</ph>如果不指定（即设为 0），SDK 会自动分配一个，并在 <apiname keyref="onJoinChannelSuccess" /> 回调中返回， 应用层必须记住该返回值并维护，SDK 不对该返回值进行维护。</pd>
            </plentry>
            <plentry props="ios mac" conkeyref="joinChannel2/joinsuccessblock">
                <pt />
                <pd />
            </plentry>
            </parml> </section>
        <section id="return_values" conkeyref="joinChannel2/return_values" />
    </refbody>
</reference>
