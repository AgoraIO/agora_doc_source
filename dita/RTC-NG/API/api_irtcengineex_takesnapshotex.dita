<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE reference PUBLIC "-//OASIS//DTD DITA Reference//EN" "reference.dtd">
<reference id="api_irtcengineex_takesnapshotex">
    <title><ph keyref="takeSnapshotEx"/></title>
    <shortdesc id="short"><ph id="shortdesc">获取视频截图。</ph></shortdesc>
    <prolog>
        <metadata>
            <keywords>
                <indexterm keyref="takeSnapshotEx"/>
            </keywords>
        </metadata>
    </prolog>
    <refbody>
        <section id="prototype">
            <p outputclass="codeblock">
            <codeblock props="android" outputclass="language-java">public abstract int takeSnapshotEx(RtcConnection connection, int uid, String filePath);</codeblock>
            <codeblock props="ios mac" outputclass="language-objectivec">- (NSInteger)takeSnapshotEx:(AgoraRtcConnection * _Nonnull)connection uid:(NSInteger)uid filePath:(NSString* _Nonnull)filePath;</codeblock>
            <codeblock props="cpp unreal bp" outputclass="language-cpp">virtual int takeSnapshotEx(const RtcConnection&amp; connection, uid_t uid, const char* filePath)  = 0;</codeblock>
            <codeblock props="electron" outputclass="language-typescript">abstract takeSnapshotEx(
    connection: RtcConnection,
    uid: number,
    filePath: string
  ): number;</codeblock>
            <codeblock props="unity cs" outputclass="language-csharp">public abstract int TakeSnapshotEx(RtcConnection connection, uint uid, string filePath);</codeblock>
            <codeblock props="rn" outputclass="language-typescript">abstract takeSnapshotEx(
    connection: RtcConnection,
    uid: number,
    filePath: string
  ): number;</codeblock>
            <codeblock props="flutter" outputclass="language-dart">Future&lt;void> takeSnapshotEx(
      {required RtcConnection connection,
      required int uid,
      required String filePath});</codeblock>
            <codeblock props="reserve" outputclass="language-cpp"></codeblock></p>
        </section>
        <section id="detailed_desc">
            <title>详情</title>
            <p conkeyref="takeSnapshot/desc1"/>
            <p conkeyref="takeSnapshot/desc2" props="native unreal bp unity electron flutter cs"/>
            <p props="rn">调用该方法返回时 SDK 并没有真正获取截图。成功调用该方法后，SDK 会触发 <xref keyref="onSnapshotTaken" /> 回调报告截图是否成功和获取截图的详情。</p>
            <note type="attention">
            <ul>
            <li>该方法需要在调用 <xref keyref="joinChannelEx"/> 后调用。</li>
            <li>该方法对 <xref keyref="ChannelMediaOptions"/> 中指定发布的视频流进行截图。</li>
            <li>如果用户的视频经过前处理，例如，添加了水印或美颜，生成的截图会包含前处理效果。</li>
            </ul></note> </section>
        <section id="parameters">
            <title>参数</title>
            <parml>
            <plentry conkeyref="joinChannelEx/connection">
                <pt/>
                <pd/>
            </plentry>
            <plentry conkeyref="takeSnapshot/uid">
                <pt/>
                <pd/>
            </plentry>
            <plentry conkeyref="takeSnapshot/filepath">
                <pt/>
                <pd/>
            </plentry>
            </parml> </section>
        <section id="return_values">
            <title><ph keyref="return-section-title"/></title>
            <p props="flutter">方法成功调用时，无返回值；方法调用失败时，会抛出 <xref keyref="AgoraRtcException"/> 异常，你需要捕获异常并进行处理。</p>
            <ul>
            <li props="native unreal bp electron unity rn cs">0: 方法调用成功。</li>
            <li>&lt; 0: 方法调用失败。</li>
            </ul> </section>
    </refbody>
</reference>
