<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE reference PUBLIC "-//OASIS//DTD DITA Reference//EN" "reference.dtd">
<reference id="api_irtcengine_startdirectcdnstreaming">
    <title><ph keyref="startDirectCdnStreaming" /></title>
    <shortdesc id="short"><ph id="shortdesc">设置主播端开始直接向 CDN 推流。</ph></shortdesc>
    <prolog>
        <metadata>
            <keywords>
                <indexterm keyref="startDirectCdnStreaming" />
            </keywords>
        </metadata>
    </prolog>
    <refbody><section id="prototype">
    <p outputclass="codeblock">
        <codeblock props="android" outputclass="language-java">public abstract int startDirectCdnStreaming(IDirectCdnStreamingEventHandler eventHandler,
            String publishUrl, DirectCdnStreamingMediaOptions options);</codeblock>
            <codeblock props="ios mac" outputclass="language-objectivec">- (int)startDirectCdnStreaming:(id&lt;AgoraDirectCdnStreamingEventDelegate&gt; _Nonnull)delegate publishUrl:(NSString * _Nonnull)publishUrl mediaOptions:(AgoraDirectCdnStreamingMediaOptions * _Nonnull)options;</codeblock>
            <codeblock props="cpp" outputclass="language-cpp">virtual int startDirectCdnStreaming(IDirectCdnStreamingEventHandler* eventHandler,
            const char* publishUrl, const DirectCdnStreamingMediaOptions&amp; options) = 0;</codeblock>
            <codeblock props="electron" outputclass="language-typescript">abstract startDirectCdnStreaming(
    eventHandler: IDirectCdnStreamingEventHandler,
    publishUrl: string,
    options: DirectCdnStreamingMediaOptions
  ): number;</codeblock>
            <codeblock props="unity" outputclass="language-csharp">public abstract int StartDirectCdnStreaming(string publishUrl, DirectCdnStreamingMediaOptions options);</codeblock>
            <codeblock props="rn" outputclass="language-typescript">abstract startDirectCdnStreaming(
    eventHandler: IDirectCdnStreamingEventHandler,
    publishUrl: string,
    options: DirectCdnStreamingMediaOptions
  ): number;</codeblock>
            <codeblock props="flutter" outputclass="language-dart">Future&lt;void&gt; startDirectCdnStreaming(
    {required DirectCdnStreamingEventHandler eventHandler,
    required String publishUrl,
    required DirectCdnStreamingMediaOptions options});</codeblock>
            <codeblock props="reserve" outputclass="language-cpp"></codeblock></p></section>
        <section id="detailed_desc">
            <title>详情</title>
            <p>SDK 不支持同一时间向同一个 URL 重复推流。</p>
            <p><b>媒体选项说明</b></p>
            <p>SDK 不支持 <parmname>publishCameraTrack</parmname> 和 <parmname>publishCustomVideoTrack</parmname> 同时为 <codeph><ph keyref="true" /></codeph>，也不支持 <parmname>publishMicrophoneTrack</parmname> 和 <parmname>publishCustomAudioTrack</parmname> 同时为 <codeph><ph keyref="true" /></codeph>。你可以根据场景需求设置媒体选项 (<xref keyref="DirectCdnStreamingMediaOptions" />)。示例如下：</p>
            <p>如果你想推送主播端采集的音视频流，请将媒体选项进行如下设置：</p>
            <ul>
                <li props="android cpp electron rn flutter unity"><parmname>publishCustomAudioTrack</parmname> 设为 <codeph><ph keyref="true" /></codeph> 并调用 <xref props="android" keyref="pushAudioFrame2" /><xref props="cpp unity rn flutter electron" keyref="pushAudioFrame" /></li>
                <li props="ios mac"><parmname>publishCustomAudioTrack</parmname> 设为 <codeph><ph keyref="true" /></codeph> 并调用 <xref keyref="pushExternalAudioFrameSampleBuffer1" /> 或 <xref keyref="pushAudioFrame2" /></li>
                <li><parmname>publishCustomVideoTrack</parmname> 设为 <codeph><ph keyref="true" /></codeph> 并调用 <xref keyref="pushVideoFrame" /></li>
                <li>确保 <parmname>publishCameraTrack</parmname> 为 <codeph><ph keyref="false" /></codeph> (默认值)</li>
                <li>确保 <parmname>publishMicrophoneTrack</parmname> 为 <codeph><ph keyref="false" /></codeph> (默认值)</li>
            </ul>
            <p>自 v4.2.0 起，SDK 支持推送纯音频流。你可以在 <xref keyref="DirectCdnStreamingMediaOptions"/> 中将 <parmname>publishCustomAudioTrack</parmname> 或者 <parmname>publishMicrophoneTrack</parmname> 设为 <codeph><ph keyref="true"/></codeph>，并调用 <xref keyref="pushAudioFrame"/> 即可推送纯音频流。
            <note>在向 CDN 直接推流时，SDK 目前仅支持推送一路音频流及视频流，或一路纯音频流。</note></p>
        </section>
        <section id="parameters"><title>参数</title>
            <parml>
            <plentry>
                <pt props="android cpp flutter rn electron">eventHandler</pt>
                <pt props="ios mac">delegate</pt>
                <pd>详见 <xref keyref="onDirectCdnStreamingStateChanged" /> 及 <xref keyref="onDirectCdnStreamingStats" />。</pd>
            </plentry>
            <plentry>
                <pt>publishUrl</pt>
                <pd>CDN 推流 URL。</pd>
            </plentry>
            <plentry>
                <pt>options</pt>
                <pd>主播端的媒体选项。详见 <xref keyref="DirectCdnStreamingMediaOptions" />。</pd>
            </plentry>
            </parml> </section>
        <section id="return_values">
            <title><ph keyref="return-section-title"/></title>
            <p props="flutter">方法成功调用时，无返回值；方法调用失败时，会抛出 <xref keyref="AgoraRtcException"/> 异常，你需要捕获异常并进行处理。</p>
            <ul>
            <li props="native unity electron rn">0: 方法调用成功</li>
            <li>&lt; 0: 方法调用失败</li>
            </ul> </section>
    </refbody>
</reference>
