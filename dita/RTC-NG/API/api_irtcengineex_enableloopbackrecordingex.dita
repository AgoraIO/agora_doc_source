<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE reference PUBLIC "-//OASIS//DTD DITA Reference//EN" "reference.dtd">
<reference id="api_irtcengineex_enableloopbackrecordingex">
    <title><ph keyref="enableLoopbackRecordingEx"/></title>
    <shortdesc id="short"><ph id="shortdesc">开启声卡采集。</ph></shortdesc>
    <prolog>
        <metadata>
            <keywords>
                <indexterm keyref="enableLoopbackRecordingEx"/>
            </keywords>
        </metadata>
    </prolog>
    <refbody>
        <section id="prototype">
            <p outputclass="codeblock">
            <codeblock props="android" outputclass="language-java"/>
            <codeblock props="mac" outputclass="language-objectivec">- (int)enableLoopbackRecordingEx:(BOOL)enabled
                      deviceName:(NSString* _Nullable)deviceName
                      connection:(AgoraRtcConnection * _Nonnull)connection NS_SWIFT_NAME(enableLoopbackRecordingEx(_:deviceName:connection:));</codeblock>
            <codeblock props="cpp" outputclass="language-cpp">virtual int enableLoopbackRecordingEx(const RtcConnection&amp; connection, bool enabled, const char* deviceName = NULL) = 0;</codeblock>
            <codeblock props="electron" outputclass="language-typescript">abstract enableLoopbackRecordingEx(
    connection: RtcConnection,
    enabled: boolean,
    deviceName?: string
  ): number;</codeblock>
            <codeblock props="unity" outputclass="language-csharp">public abstract int EnableLoopbackRecordingEx(RtcConnection connection, bool enabled, string deviceName);</codeblock>
            <codeblock props="rn" outputclass="language-typescript">abstract enableLoopbackRecordingEx(
    connection: RtcConnection,
    enabled: boolean,
    deviceName?: string
  ): number;</codeblock>
            <codeblock props="flutter" outputclass="language-dart">Future&lt;void&gt; enableLoopbackRecordingEx(
      {required RtcConnection connection,
      required bool enabled,
      String? deviceName});</codeblock>
            <codeblock props="reserve" outputclass="language-cpp"/></p>
        </section>
        <section id="detailed_desc">
            <title>详情</title>
            <p>启用声卡采集功能后，声卡播放的声音会被合到本地音频流中，从而可以发送到远端。</p>
            <note id="note_v4j_tbx_jqb" type="attention">
            <ul>
            <li props="cpp unity electron flutter">该方法仅适用于 macOS 和 Windows 平台。</li>
            <li>macOS 系统默认声卡不支持采集功能，如果你需要使用该功能，请启用一个虚拟声卡，并将 <parmname>deviceName</parmname> 设为该虚拟声卡的设备名。声网推荐你使用声网自研的虚拟声卡 AgoraALD 进行采集。</li>
            <li>该方法目前仅支持一路声卡采集。</li>
        </ul></note></section>
        <section id="parameters">
            <title>参数</title>
            <parml>
            <plentry conkeyref="joinChannelEx/connection">
                <pt/>
                <pd/>
            </plentry>
            <plentry>
                <pt>enabled</pt>
                <pd>是否开启声卡采集：
                    
                    <ul id="ul_kgm_wbx_jqb">
                    <li><codeph><ph keyref="true"/></codeph>: 开启声卡采集。</li>
                    <li><codeph><ph keyref="false"/></codeph>:（默认）不开启声卡采集。</li>
                    </ul></pd>
            </plentry>
            <plentry conkeyref="enableLoopbackRecording/device_name">
                <pt></pt>
                <pd></pd>
            </plentry>
            </parml> </section>
        <section id="return_values">
            <title><ph keyref="return-section-title"/></title>
            <p props="flutter">方法成功调用时，无返回值；方法调用失败时，会抛出 <xref keyref="AgoraRtcException"/> 异常，你需要捕获异常并进行处理。</p>
            <ul id="ul_uvd_2cx_jqb">
            <li props="mac cpp unity rn electron">0: 方法调用成功。</li>
            <li>&lt; 0: 方法调用失败。</li>
            </ul> </section>
    </refbody>
</reference>
