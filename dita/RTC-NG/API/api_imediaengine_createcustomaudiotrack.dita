<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE reference PUBLIC "-//OASIS//DTD DITA Reference//EN" "reference.dtd">
<reference id="api_imediaengine_createcustomaudiotrack">
    <title><ph keyref="createCustomAudioTrack"/></title>
    <shortdesc id="short"><ph id="shortdesc">创建一个自定义音频采集轨道。</ph></shortdesc>
    <prolog>
        <metadata>
            <keywords>
                <indexterm keyref="createCustomAudioTrack"/>
            </keywords>
        </metadata>
    </prolog>
    <refbody>
        <section id="prototype">
            <p outputclass="codeblock">
            <codeblock props="android" outputclass="language-java">public abstract int createCustomAudioTrack(
      Constants.AudioTrackType trackType, AudioTrackConfig config);</codeblock>
            <codeblock props="ios mac" outputclass="language-objectivec">- (int)createCustomAudioTrack:(AgoraAudioTrackType)trackType
                       config:(AgoraAudioTrackConfig* _Nonnull)config;</codeblock>
            <codeblock props="cpp unreal" outputclass="language-cpp">virtual rtc::track_id_t createCustomAudioTrack(rtc::AUDIO_TRACK_TYPE trackType, const rtc::AudioTrackConfig&amp; config) = 0;</codeblock>
            <codeblock props="electron" outputclass="language-typescript">abstract createCustomAudioTrack(
    trackType: AudioTrackType,
    config: AudioTrackConfig
  ): number;</codeblock>
            <codeblock props="unity cs" outputclass="language-csharp">public abstract uint CreateCustomAudioTrack(AUDIO_TRACK_TYPE trackType, AudioTrackConfig config);</codeblock>
            <codeblock props="rn" outputclass="language-typescript">abstract createCustomAudioTrack(
    trackType: AudioTrackType,
    config: AudioTrackConfig
  ): number;</codeblock>
            <codeblock props="flutter" outputclass="language-dart">Future&lt;int> createCustomAudioTrack(
      {required AudioTrackType trackType, required AudioTrackConfig config});</codeblock>
            <codeblock props="reserve" outputclass="language-cpp"></codeblock></p>
        </section>
        <section id="detailed_desc">
            <title>详情</title>
            <dl outputclass="since">
            <dlentry props="native">
                <dt>自从</dt>
                <dd>v4.2.0</dd>
            </dlentry>
            </dl>
            <note type="attention">该方法需要在加入频道前调用。</note>
            <p>如需在频道中发布自定义采集音频，可参考以下步骤：
            <ol>
            <li>调用该方法创建音频轨道并获得音频轨道 ID。</li>
            <li>调用 <xref keyref="joinChannel2"/> 加入频道时，将 <xref keyref="ChannelMediaOptions"/> 中的 <parmname>publishCustomAudioTrackId</parmname> 设置为你想要发布的音频轨道 ID，并将 <parmname>publishCustomAudioTrack</parmname> 设置为 <codeph><ph keyref="true"/></codeph>。</li>
            <li>调用 <xref keyref="pushAudioFrame" props="cpp framework"/><xref keyref="pushAudioFrame2" props="android apple"/> 将 <parmname>trackId</parmname> 指定为步骤 2 中指定的音频轨道 ID，即可实现在频道内发布对应的自定义音频源。</li>
            </ol></p>
        </section>
        <section id="parameters">
            <title>参数</title>
            <parml>
            <plentry>
                <pt>trackType</pt>
                <pd>自定义音频轨道类型。详见 <xref keyref="AUDIO_TRACK_TYPE"/>。 
                <note type="attention">如指定 <apiname keyref="AUDIO_TRACK_DIRECT"/>，则必须在调用 <xref keyref="joinChannel2"/> 加入频道时，将 <xref keyref="ChannelMediaOptions"/> 中的 <codeph>publishMicrophoneTrack</codeph> 设为 <codeph><ph keyref="false"/></codeph>，否则加入频道失败并返回错误码 -2.</note></pd>
            </plentry>
            <plentry>
                <pt>config</pt>
                <pd>自定义音频轨道配置。详见 <xref keyref="AudioTrackConfig"/>。</pd>
            </plentry>
            </parml> </section>
        <section id="return_values">
            <title>返回值</title>
            <ul>
            <li>方法调用成功，返回音频轨道 ID 作为该音频轨道的唯一标识。</li>
            <li>方法调用失败，返回负值。</li>
            </ul> </section>
    </refbody>
</reference>
