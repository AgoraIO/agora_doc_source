<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE reference PUBLIC "-//OASIS//DTD DITA Reference//EN" "reference.dtd">
<reference id="api_imediaplayer_registerplayersourceobserver">
    <title><ph keyref="registerPlayerSourceObserver" /></title>
    <shortdesc id="short"><ph id="shortdesc">注册一个播放观测器。</ph></shortdesc>
    <prolog>
        <metadata>
            <keywords>
                <indexterm keyref="registerPlayerSourceObserver" />
            </keywords>
        </metadata>
    </prolog>
    <refbody>
        <section id="prototype">
            <p outputclass="codeblock">
            <codeblock props="android" outputclass="language-java">int registerPlayerObserver(IMediaPlayerObserver playerObserver);
</codeblock>
            <codeblock props="hmos" outputclass="language-arkts">public abstract registerPlayerObserver(playerObserver:IMediaPlayerObserver);</codeblock>
            <codeblock props="ios mac" outputclass="language-objectivec" />
            <codeblock props="cpp unreal" outputclass="language-cpp">virtual int registerPlayerSourceObserver(IMediaPlayerSourceObserver* observer) = 0;</codeblock>
         <codeblock props="bp" outputclass="language-cpp">UFUNCTION(BlueprintPure, Category = &quot;Agora|IRtcEngine&quot;)
	UAgoraBPuIMediaPlayerSourceObserver* GetMediaPlayerSourceObserver();</codeblock>
            <codeblock props="electron" outputclass="language-typescript">abstract registerPlayerSourceObserver(
    observer: IMediaPlayerSourceObserver
  ): number;</codeblock>
            <codeblock props="unity cs" outputclass="language-csharp" />
            <codeblock props="rn" outputclass="language-typescript">abstract registerPlayerSourceObserver(
    observer: IMediaPlayerSourceObserver
  ): number;</codeblock>
            <codeblock props="flutter" outputclass="language-dart">void registerPlayerSourceObserver(MediaPlayerSourceObserver observer);</codeblock>
            <codeblock props="reserve" outputclass="language-cpp"></codeblock></p>
        </section>
        <section id="detailed_desc" deliveryTarget="details" otherprops="no-title"/>
        <section id="timing" deliveryTarget="details">
            <title>调用时机</title>
            <p>加入频道前后均可调用。</p>
        </section>        
        <section id="restriction" deliveryTarget="details">
            <title>调用限制</title>
            <p>无。</p>
        </section>
        <section id="parameters" deliveryTarget="details">
            <title><ph props="android hmos cpp unreal rn electron flutter">参数</ph></title>
            <parml props="android hmos cpp unreal rn electron flutter">
            <plentry>
                <pt props="android hmos">playerObserver</pt>
                <pt props="cpp unreal rn electron flutter">observer</pt>
                <pd>播放观测器，报告播放中的事件，详见 <xref keyref="IMediaPlayerSourceObserver" />。</pd>
            </plentry>
            </parml> </section>
        <section id="return_values">
            <title><ph keyref="return-section-title"/></title>
            <p props="flutter">方法成功调用时，无返回值；方法调用失败时，会抛出 <xref keyref="AgoraRtcException"/> 异常，你需要捕获异常并进行处理。<ph props="cn">详见<xref keyref="error-code-link"/>了解详情和解决建议。</ph></p>
            <ul props="android hmos cpp unreal rn electron">
            <li>0: 方法调用成功。</li>
            <li>&lt; 0: 方法调用失败。<ph props="cn">详见<xref keyref="error-code-link"/>了解详情和解决建议。</ph></li>
            </ul>
            <p props="bp">指向 <apiname keyref="IMediaPlayerSourceObserver"/> 对象的指针。</p>
             </section>
    </refbody>
</reference>