<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE reference PUBLIC "-//OASIS//DTD DITA Reference//EN" "reference.dtd">
<reference id="api_imediaengine_registervideoencodedframeobserver">
    <title><ph keyref="registerVideoEncodedFrameObserver"/></title>
    <shortdesc id="short"><ph id="shortdesc">为编码后的视频图像注册视频帧接收观测器。</ph></shortdesc>
    <prolog>
        <metadata>
            <keywords>
                <indexterm keyref="registerVideoEncodedFrameObserver"/>
            </keywords>
        </metadata>
    </prolog>
    <refbody>
        <section id="prototype">
            <p outputclass="codeblock">
            <codeblock props="android" outputclass="language-java">public abstract int registerVideoEncodedFrameObserver(IVideoEncodedFrameObserver receiver);
</codeblock>
            <codeblock props="hmos" outputclass="language-arkts"></codeblock>
            <codeblock props="ios mac" outputclass="language-objectivec">- (BOOL)setEncodedVideoFrameDelegate:(id&lt;AgoraEncodedVideoFrameDelegate&gt; _Nullable)delegate;</codeblock>
            <codeblock props="cpp unreal" outputclass="language-cpp">virtual int registerVideoEncodedFrameObserver(IVideoEncodedFrameObserver* observer) = 0;</codeblock>           
            <codeblock props="electron" outputclass="language-typescript">abstract registerVideoEncodedFrameObserver(
    observer: IVideoEncodedFrameObserver
  ): number;</codeblock>
            <codeblock props="unity cs" outputclass="language-csharp">public abstract int RegisterVideoEncodedFrameObserver(IVideoEncodedFrameObserver videoEncodedImageReceiver, OBSERVER_MODE mode = OBSERVER_MODE.INTPTR);</codeblock>
            <codeblock props="rn" outputclass="language-typescript">abstract registerVideoEncodedFrameObserver(
    observer: IVideoEncodedFrameObserver
  ): number;</codeblock>
            <codeblock props="flutter" outputclass="language-dart">void registerVideoEncodedFrameObserver(VideoEncodedFrameObserver observer);</codeblock>
            <codeblock props="reserve" outputclass="language-cpp"></codeblock></p>
 </section>
        <section id="detailed_desc">
            <title>详情</title>
            <p>如果你只想要观测编码后的视频帧 (如 H.264 格式)，而不需要对视频进行解码和渲染，声网推荐你通过该方法注册一个 <xref keyref="IVideoEncodedFrameObserver"/> 类。<ph props="android cpp apple">有关详细的实现步骤，详见<xref keyref="video-processing"/>。</ph></p>
            <note type="attention">
            <p>该方法需要在加入频道前调用。</p>
            </note> </section>
        <section id="parameters">
            <title>参数</title>
            <parml>
            <plentry>
                <pt props="ios mac">delegate</pt>
                <pt props="android hmos">receiver</pt>
                <pt props="cpp unreal bp electron rn flutter">observer</pt>
                <pt props="unity cs">videoEncodedImageReceiver</pt>
                <pd props="android cpp unreal bp unity rn electron flutter cs">视频帧接收观测器，详见 <xref keyref="IVideoEncodedFrameObserver"/>。</pd>
                <pd props="ios mac">接口对象实例。详见 <xref keyref="IVideoEncodedFrameObserver"/>。如果传入 <ph keyref="NULL"/>，则表示取消注册。</pd>
            </plentry>
            <plentry props="unity cs">
                <pt>mode</pt>
                <pd>视频数据回调模式，详见 <xref keyref="OBSERVER_MODE"/>。</pd>
            </plentry>
            </parml> </section>
        <section id="return_values">
            <title><ph keyref="return-section-title"/></title>
            <p props="flutter">方法成功调用时，无返回值；方法调用失败时，会抛出 <xref keyref="AgoraRtcException"/> 异常，你需要捕获异常并进行处理。<ph props="cn">详见<xref keyref="error-code-link"/>了解详情和解决建议。</ph></p>
            <ul props="android cpp unreal bp electron rn unity cs">
            <li>0：方法调用成功。</li>
            <li>&lt; 0: 方法调用失败。<ph props="cn">详见<xref keyref="error-code-link"/>了解详情和解决建议。</ph></li>
            </ul>
            <ul props="mac ios">
            <li><codeph><ph keyref="true"/></codeph>: 方法调用成功。</li>
            <li><codeph><ph keyref="false"/></codeph>: 方法调用失败。<ph props="cn">详见<xref keyref="error-code-link"/>了解详情和解决建议。</ph></li>
            </ul> </section>
    </refbody>
</reference>
