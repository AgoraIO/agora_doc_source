<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE reference PUBLIC "-//OASIS//DTD DITA Reference//EN" "reference.dtd">
<reference id="callback_onvideosubscribestatechanged">
    <title><ph keyref="onVideoSubscribeStateChanged"/></title>
    <shortdesc id="short"><ph id="shortdesc">视频订阅状态发生改变回调。</ph></shortdesc>
    <prolog>
        <metadata>
            <keywords>
                <indexterm keyref="onVideoSubscribeStateChanged"/>
            </keywords>
        </metadata>
    </prolog>
    <refbody>
        <section id="prototype">
            <p outputclass="codeblock">
            <codeblock props="android" outputclass="language-java">public void onVideoSubscribeStateChanged(String channel, int uid, STREAM_SUBSCRIBE_STATE oldState,
      STREAM_SUBSCRIBE_STATE newState, int elapseSinceLastState) {}</codeblock>
            <codeblock props="ios mac" outputclass="language-objectivec">- (void)rtcEngine:(AgoraRtcEngineKit *_Nonnull)engine
    didVideoSubscribeStateChange:(NSString * _Nonnull)channelId
    uid:(unsigned int)uid
    oldState:(AgoraStreamSubscribeState)oldState
    newState:(AgoraStreamSubscribeState)newState
    elapseSinceLastState:(int)elapseSinceLastState;</codeblock>
            <codeblock props="cpp" outputclass="language-cpp">virtual void onVideoSubscribeStateChanged(const char* channel,
     uid_t uid,
     STREAM_SUBSCRIBE_STATE oldState,
     STREAM_SUBSCRIBE_STATE newState,
     int elapseSinceLastState) {
     (void)channel;
     (void)uid;
     (void)oldState;
     (void)newState;
     (void)elapseSinceLastState;
     }</codeblock>
            <codeblock props="electron" outputclass="language-typescript">on(evt: EngineEvents.VIDEO_SUBSCRIBE_STATE_CHANGED, cb: (
     channel: string,
     uid: number,
     oldState: STREAM_SUBSCRIBE_STATE,
     newState: STREAM_SUBSCRIBE_STATE,
     elapseSinceLastState: number
     ) =&gt; void): this;</codeblock>
            <codeblock props="unity" outputclass="language-csharp">public virtual void OnVideoSubscribeStateChanged(string channel, uint uid, STREAM_SUBSCRIBE_STATE oldState,
            STREAM_SUBSCRIBE_STATE newState, int elapseSinceLastState)</codeblock>
            <codeblock props="rn" outputclass="language-typescript"/>
            <codeblock props="flutter" outputclass="language-dart">StreamSubscribeStateCallback? videoSubscribeStateChanged;</codeblock>
            </p>
        </section>
        <section id="detailed_desc">
            <dl outputclass="since" props="rtc">
            <dlentry props="native">
                <dt>自从</dt>
                <dd>v3.1.0</dd>
            </dlentry>
            </dl>
        </section>
        <section id="parameters">
            <title><ph keyref="callback-section-title"/></title>
            <p conkeyref="onJoinChannelSuccess/callback-desc" props="flutter rn"
            />
            <parml>
            <plentry conkeyref="onJoinChannelSuccess/engine" props="ios mac">
                <pt/>
                <pd/>
            </plentry>
            <plentry>
                <pt>channel</pt>
                <pd>频道名。</pd>
            </plentry>
            <plentry>
                <pt>uid</pt>
                <pd>远端用户的 ID。</pd>
            </plentry>
            <plentry>
                <pt>oldState</pt>
                <pd>之前的订阅状态，详见 <xref keyref="STREAM_SUBSCRIBE_STATE"/>。</pd>
            </plentry>
            <plentry>
                <pt>newState</pt>
                <pd>当前的订阅状态，详见 <apiname keyref="STREAM_SUBSCRIBE_STATE"/>。</pd>
            </plentry>
            <plentry>
                <pt>elapseSinceLastState</pt>
                <pd>两次状态变化时间间隔（毫秒）。</pd>
            </plentry>
            </parml> </section>
    </refbody>
</reference>
