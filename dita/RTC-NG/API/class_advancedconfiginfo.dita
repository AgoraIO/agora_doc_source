<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE reference PUBLIC "-//OASIS//DTD DITA Reference//EN" "reference.dtd">
<reference id="class_advancedconfiginfo">
    <title><ph keyref="AdvancedConfigInfo"/></title>
    <shortdesc id="short"><ph id="shortdesc">Local Access Point 的高级选项。</ph></shortdesc>
    <refbody>
        <section id="prototype">
            <p outputclass="codeblock">
            <codeblock props="android" outputclass="language-java">public static class AdvancedConfigInfo {
  public LogUploadServerInfo logUploadServer = null;
  public AdvancedConfigInfo() {
    logUploadServer = new LogUploadServerInfo();
  }
  @CalledByNative("AdvancedConfigInfo")
  public LogUploadServerInfo getLogUploadServerInfo() {
    return logUploadServer;
  }
};</codeblock>
            <codeblock props="ios mac" outputclass="language-objectivec">NS_SWIFT_NAME(AdvancedConfigInfo) __attribute__((visibility("default"))) @interface AdvancedConfigInfo : NSObject
@property(strong, nonatomic) LogUploadServerInfo* _Nullable logUploadServer;
@end</codeblock>
            <codeblock props="cpp unreal bp" outputclass="language-cpp">struct AdvancedConfigInfo {
  LogUploadServerInfo logUploadServer;
};</codeblock>
            <codeblock props="electron" outputclass="language-typescript">export class AdvancedConfigInfo {
  logUploadServer?: LogUploadServerInfo;
}</codeblock>
            <codeblock props="unity cs" outputclass="language-csharp"/>
            <codeblock props="rn" outputclass="language-typescript">export class AdvancedConfigInfo {
  logUploadServer?: LogUploadServerInfo;
}</codeblock>
            <codeblock props="flutter" outputclass="language-dart">class AdvancedConfigInfo {
  const AdvancedConfigInfo({this.logUploadServer});

  @JsonKey(name: 'logUploadServer')
  final LogUploadServerInfo? logUploadServer;

  factory AdvancedConfigInfo.fromJson(Map&lt;String, dynamic> json) =>
      _$AdvancedConfigInfoFromJson(json);

  Map&lt;String, dynamic> toJson() => _$AdvancedConfigInfoToJson(this);
}</codeblock>            
            <codeblock props="reserve" outputclass="language-cpp"></codeblock></p>
        </section>
        <section id="detailed_desc">
            <dl outputclass="since">
            <dlentry props="native">
                <dt>自从</dt>
                <dd>v4.1.0</dd>
            </dlentry>
            </dl>
            <p/>
        </section>
        <section id="parameters">
            <title><text conref="../conref/conref_api_metadata.dita#conref_api_metadata/property"/></title>
            <parml>
            <plentry>
                <pt>logUploadServer</pt>
                <pd>自定义的日志上传服务器。默认情况下，SDK 会将日志上传至声网日志服务器。你可以通过该参数修改日志上传的服务器。详见 <xref keyref="LogUploadServerInfo"/>。</pd>
            </plentry>
            </parml> </section>
    </refbody>
</reference>
