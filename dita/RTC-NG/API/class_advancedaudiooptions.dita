<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE reference PUBLIC "-//OASIS//DTD DITA Reference//EN" "reference.dtd">
<reference id="class_advancedaudiooptions">
  <title> <ph keyref="AdvancedAudioOptions" /> </title>
  <shortdesc id="short"> <ph id="shortdesc">音频的高级选项。</ph> </shortdesc>
  <refbody>
    <section id="prototype">
      <p outputclass="codeblock">
      <codeblock props="android" outputclass="language-java">public class AdvancedAudioOptions {
  public enum AgoraAudioProcessChannels {
    AGORA_AUDIO_MONO_PROCESSING(1),
    AGORA_AUDIO_STEREO_PROCESSING(2);
    private int value;
    private AgoraAudioProcessChannels(int v) {
      value = v;
    }
    public int getValue() {
      return this.value;
    }
  }
  public AgoraAudioProcessChannels audioProcessingChannels;

  public AdvancedAudioOptions(AgoraAudioProcessChannels channels) {
    audioProcessingChannels = channels;
  }

  public AdvancedAudioOptions() {
    audioProcessingChannels = AgoraAudioProcessChannels.AGORA_AUDIO_MONO_PROCESSING;
  }
}</codeblock>
      <codeblock props="ios mac" outputclass="language-objectivec">__attribute__((visibility("default"))) @interface AgoraAdvancedAudioOptions: NSObject
@property(assign, nonatomic) AgoraAudioProcessChannels audioProcessingChannels;
@end</codeblock>
      <codeblock props="cpp unreal" outputclass="language-cpp">struct AdvancedAudioOptions {
  AUDIO_PROCESSING_CHANNELS audioProcessingChannels;
  AdvancedAudioOptions(): audioProcessingChannels(AUDIO_PROCESSING_MONO) {}
};</codeblock>
         <codeblock props="bp" outputclass="language-cpp">USTRUCT(BlueprintType)
struct FAdvancedAudioOptions
{
	GENERATED_BODY()
	UPROPERTY(VisibleAnywhere, BlueprintReadWrite, Category = &quot;Agora|AdvancedAudioOptions&quot;)
	bool audioProcessingChannels_SetValue;
	UPROPERTY(VisibleAnywhere, BlueprintReadWrite, Category = &quot;Agora|AdvancedAudioOptions&quot;)
	int audioProcessingChannels;
};</codeblock>
      <codeblock props="electron" outputclass="language-typescript">export class AdvancedAudioOptions {
  
  audioProcessingChannels?: number;
}</codeblock>
      <codeblock props="unity cs" outputclass="language-csharp">public class AdvancedAudioOptions : OptionalJsonParse
    {
        public Optional&lt;int&gt; audioProcessingChannels = new Optional&lt;int&gt;();

    };</codeblock>
      <codeblock props="rn" outputclass="language-typescript">export class AdvancedAudioOptions {
  
  audioProcessingChannels?: number;
}</codeblock>
      <codeblock props="flutter" outputclass="language-dart">class AdvancedAudioOptions {
  const AdvancedAudioOptions({this.audioProcessingChannels});

  @JsonKey(name: 'audioProcessingChannels')
  final AudioProcessingChannels? audioProcessingChannels;
  factory AdvancedAudioOptions.fromJson(Map&lt;String, dynamic&gt; json) =&gt;
      _$AdvancedAudioOptionsFromJson(json);
  Map&lt;String, dynamic&gt; toJson() =&gt; _$AdvancedAudioOptionsToJson(this);
}</codeblock>            
            <codeblock props="reserve" outputclass="language-cpp"></codeblock></p>
    </section>
    <section id="parameters">
      <title> <text conref="../conref/conref_api_metadata.dita#conref_api_metadata/property" />
      </title>
      <parml>
      <plentry>
        <pt>audioProcessingChannels</pt>
        <pd props="native unreal flutter unity cs electron rn">音频前处理的声道数。详见 <xref keyref="AUDIO_PROCESSING_CHANNELS" />。</pd>
        <pd props="bp">音频前处理的声道数：<ul>
            <li><ph keyref="AUDIO_PROCESSING_MONO"/>(1)：（默认）单声道。</li>
            <li><ph keyref="AUDIO_PROCESSING_STEREO"/>(2)：双声道。</li></ul>
          </pd>
      </plentry>
      </parml> </section>
  </refbody>
</reference>