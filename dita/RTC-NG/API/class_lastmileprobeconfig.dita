<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE reference PUBLIC "-//OASIS//DTD DITA Reference//EN" "reference.dtd">
<reference id="class_lastmileprobeconfig">
    <title><ph keyref="LastmileProbeConfig" /></title>
    <shortdesc id="short"><ph id="shortdesc">Last mile 网络探测配置。</ph></shortdesc>
    <refbody>
        <section id="prototype">
            <p outputclass="codeblock">
            <codeblock props="android" outputclass="language-java">public class LastmileProbeConfig {
  public boolean probeUplink;
  public boolean probeDownlink;
  public int expectedUplinkBitrate;
  public int expectedDownlinkBitrate;

  public LastmileProbeConfig() {}
}</codeblock>
            <codeblock props="ios mac" outputclass="language-objectivec">__attribute__((visibility("default"))) @interface AgoraLastmileProbeConfig : NSObject
@property (assign, nonatomic) BOOL probeUplink;
@property (assign, nonatomic) BOOL probeDownlink;
@property (assign, nonatomic) NSUInteger expectedUplinkBitrate;
@property (assign, nonatomic) NSUInteger expectedDownlinkBitrate;
@end</codeblock>
            <codeblock props="cpp" outputclass="language-cpp">struct LastmileProbeConfig {
    bool probeUplink;
    bool probeDownlink;
    unsigned int expectedUplinkBitrate;
    unsigned int expectedDownlinkBitrate;
    };</codeblock>
            <codeblock props="electron" outputclass="language-typescript">export class LastmileProbeConfig {
  
  probeUplink?: boolean;
  
  probeDownlink?: boolean;
  
  expectedUplinkBitrate?: number;
  
  expectedDownlinkBitrate?: number;
}</codeblock>
                <codeblock props="unity" outputclass="language-csharp">public class LastmileProbeConfig
    {
        public LastmileProbeConfig()
        {
        }

        public LastmileProbeConfig(bool probeUplink, bool probeDownlink, uint expectedUplinkBitrate,
            uint expectedDownlinkBitrate)
        {
            this.probeUplink = probeUplink;
            this.probeDownlink = probeDownlink;
            this.expectedUplinkBitrate = expectedUplinkBitrate;
            this.expectedDownlinkBitrate = expectedDownlinkBitrate;
        }
        public bool probeUplink { set; get; }
        public bool probeDownlink { set; get; }
        public uint expectedUplinkBitrate { set; get; }
        public uint expectedDownlinkBitrate { set; get; }
    }</codeblock>
            <codeblock props="rn" outputclass="language-typescript">export class LastmileProbeConfig {
  
  probeUplink?: boolean;
  
  probeDownlink?: boolean;
  
  expectedUplinkBitrate?: number;
  
  expectedDownlinkBitrate?: number;
}</codeblock>
            <codeblock props="flutter" outputclass="language-dart">class LastmileProbeConfig {
  const LastmileProbeConfig(
      {this.probeUplink,
      this.probeDownlink,
      this.expectedUplinkBitrate,
      this.expectedDownlinkBitrate});

  @JsonKey(name: 'probeUplink')
  final bool? probeUplink;
  @JsonKey(name: 'probeDownlink')
  final bool? probeDownlink;
  @JsonKey(name: 'expectedUplinkBitrate')
  final int? expectedUplinkBitrate;
  @JsonKey(name: 'expectedDownlinkBitrate')
  final int? expectedDownlinkBitrate;
  factory LastmileProbeConfig.fromJson(Map&lt;String, dynamic&gt; json) =&gt;
      _$LastmileProbeConfigFromJson(json);
  Map&lt;String, dynamic&gt; toJson() =&gt; _$LastmileProbeConfigToJson(this);
}</codeblock>
            <codeblock props="reserve" outputclass="language-cpp"></codeblock></p>
        </section>
        <section id="parameters">
            <title><text conref="../conref/conref_api_metadata.dita#conref_api_metadata/property" /></title>
            <parml>
            <plentry>
                <pt>probeUplink</pt>
                <pd>
                    <p>是否探测上行网络。有些用户，如直播频道中的普通观众，不需要进行网络探测:
                    <ul>
                    <li><codeph><ph keyref="true" /></codeph>: 探测上行网络。</li>
                    <li><codeph><ph keyref="false" /></codeph>: 不探测上行网络。</li>
                    </ul> </p>
                </pd>
            </plentry>
            <plentry>
                <pt>probeDownlink</pt>
                <pd>
                    <p>是否探测下行网络：
                    <ul>
                    <li><codeph><ph keyref="true" /></codeph>: 探测下行网络。</li>
                    <li><codeph><ph keyref="false" /></codeph>: 不探测下行网络。</li>
                    </ul> </p>
                </pd>
            </plentry>
            <plentry>
                <pt>expectedUplinkBitrate</pt>
                <pd>用户期望的最高发送码率，单位为 bps，范围为 [100000,5000000]。建议参考 <xref keyref="setVideoEncoderConfiguration" /> 中的码率值设置该参数的值。</pd>
            </plentry>
            <plentry>
                <pt>expectedDownlinkBitrate</pt>
                <pd>用户期望的最高接收码率，单位为 bps，范围为 [100000,5000000]。</pd>
            </plentry>
            </parml> </section>
    </refbody>
</reference>