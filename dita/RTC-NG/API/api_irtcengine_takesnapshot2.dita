<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE reference PUBLIC "-//OASIS//DTD DITA Reference//EN" "reference.dtd">
<reference id="api_irtcengine_takesnapshot2">
    <title><ph keyref="takeSnapshot2" /></title>
    <shortdesc id="short"><ph id="shortdesc">在指定观测位置进行视频截图。</ph></shortdesc>
    <prolog>
        <metadata>
            <keywords>
                <indexterm keyref="takeSnapshot2" />
            </keywords>
        </metadata>
    </prolog>
    <refbody>
        <section id="prototype">
            <p outputclass="codeblock">
            <codeblock props="android" outputclass="language-java">public abstract int takeSnapshot(int uid, SnapshotConfig config);</codeblock>
            <codeblock props="hmos" outputclass="language-arkts"></codeblock>
            <codeblock props="ios mac">- (NSInteger)takeSnapshotWithConfig:(NSInteger)uid config:(AgoraSnapshotConfig* _Nonnull)config NS_SWIFT_NAME(takeSnapshotWithConfig(_:config:));</codeblock>
            <codeblock props="cpp unreal" outputclass="language-cpp">virtual int takeSnapshot(uid_t uid, const media::SnapshotConfig&amp; config)  = 0;</codeblock>
         <codeblock props="bp" outputclass="language-cpp"></codeblock>
            <codeblock props="electron" outputclass="language-typescript"></codeblock>
            <codeblock props="unity cs" outputclass="language-csharp"></codeblock>
            <codeblock props="rn" outputclass="language-typescript"></codeblock>
            <codeblock props="flutter" outputclass="language-dart"></codeblock>
            <codeblock props="reserve" outputclass="language-cpp"></codeblock></p>
        </section>
        <section id="detailed_desc" deliveryTarget="details" otherprops="no-title">
            <p>该方法用于对指定用户的视频流进行截图，生成一张 JPG 格式的图片，并保存至指定的路径。</p>
         </section>
        <section id="timing" deliveryTarget="details">
            <title>调用时机</title>
            <p>该方法需要在加入频道后调用。</p>
        </section>        
        <section id="restriction" deliveryTarget="details">
            <title>调用限制</title>
            <ul>            
                <li id="desc2" props="native unreal bp unity electron flutter cs">该方法是异步操作，调用返回时 SDK 并没有真正获取截图。</li>
                <li props="rn">调用该方法返回时 SDK 并没有真正获取截图。</li>
                <li>该方法用于本地视频截图时，是对 <xref keyref="ChannelMediaOptions"/> 中指定发布的视频流进行截图。</li>
            </ul>
        </section>
        <section id="related" deliveryTarget="details">
            <title>相关回调</title>
            <p>成功调用该方法后，SDK 会触发 <xref keyref="onSnapshotTaken" /> 回调，报告截图是否成功和获取截图的详情。</p>
        </section>
        <section id="parameters" deliveryTarget="details">
            <title>参数</title>
            <parml>
            <plentry conkeyref="takeSnapshot/uid">
                <pt/>
                <pd/>
            </plentry>
            <plentry id="config">
                <pt>config</pt>
                <pd>截图设置，详见 <xref keyref="SnapshotConfig"/>。</pd>
            </plentry>
            </parml> </section>
        <section id="return_values">
            <title><ph keyref="return-section-title"/></title>
            <p props="flutter">方法成功调用时，无返回值；方法调用失败时，会抛出 <xref keyref="AgoraRtcException"/> 异常，你需要捕获异常并进行处理。<ph props="cn">详见<xref keyref="error-code-link"/>了解详情和解决建议。</ph></p>
            <ul props="native unreal bp unity rn electron cs">
            <li>0: 方法调用成功。</li>
            <li>&lt; 0: 方法调用失败。<ph props="cn">详见<xref keyref="error-code-link"/>了解详情和解决建议。</ph></li>
            </ul> </section>
    </refbody>
</reference>
