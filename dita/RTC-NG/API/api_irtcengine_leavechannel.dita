<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE reference PUBLIC "-//OASIS//DTD DITA Reference//EN" "reference.dtd">
<reference id="api_irtcengine_leavechannel">
    <title><ph keyref="leaveChannel"/></title>
    <shortdesc id="short"><ph id="shortdesc">离开频道。</ph></shortdesc>
    <prolog>
        <metadata>
            <keywords>
                <indexterm keyref="leaveChannel"/>
            </keywords>
        </metadata>
    </prolog>
    <refbody>
        <section id="prototype">
            <p outputclass="codeblock">
            <codeblock props="android" outputclass="language-java">public abstract int leaveChannel();</codeblock>
            <codeblock props="ios mac" outputclass="language-objectivec">- (int)leaveChannel:(void(^ _Nullable)(AgoraChannelStats * _Nonnull stat))leaveChannelBlock;</codeblock>
            <codeblock props="cpp" outputclass="language-cpp">virtual int leaveChannel() = 0;</codeblock>
            <codeblock props="electron" outputclass="language-typescript">abstract leaveChannel(options?: LeaveChannelOptions): number;</codeblock>
            <codeblock props="unity" outputclass="language-csharp">public abstract int LeaveChannel();</codeblock>
            <codeblock props="rn" outputclass="language-typescript">abstract leaveChannel(options?: LeaveChannelOptions): number;</codeblock>
            <codeblock props="flutter" outputclass="language-dart">Future&lt;void&gt; leaveChannel({LeaveChannelOptions? options});</codeblock>
            <codeblock props="reserve" outputclass="language-cpp"/></p>
        </section>
        <section id="detailed_desc">
            <title>详情</title>
            <p>该方法会把会话相关的所有资源释放掉。</p>
            <p props="native unity electron flutter">该方法是异步操作，调用返回时并没有真正退出频道。</p>
            <p props="rn">调用该方法返回时并没有真正退出频道。</p>
            <p>成功加入频道后，必须调用本方法或者 <apiname keyref="leaveChannel2"/> 结束通话，否则无法开始下一次通话。</p>
            <p>成功调用该方法、并且离开频道后会触发以下回调：           
            <ul id="ul_enf_q2p_lpb">
            <li>本地：<xref keyref="onLeaveChannel"/> 回调。</li>
            <li>远端：通信场景下的用户和直播场景下的主播离开频道后，远端会触发 <xref keyref="onUserOffline"/> 回调。</li>
            </ul></p>
            <note type="attention" id="note">
            <ul>
            <li>如果你调用了本方法后立即调用 <xref keyref="release"/> 方法，SDK 将无法触发 <apiname keyref="onLeaveChannel"/> 回调。</li>
            <li>如果你已调用 <xref keyref="joinChannelEx"/> 加入多频道，调用本方法后会同时离开 <xref keyref="joinChannel2"/> 和 <apiname keyref="joinChannelEx"/> 加入的频道。</li>
            <li props="hide">如果你在旁路推流过程中调用了本方法离开频道，SDK 将自动调用 <xref keyref="removePublishStreamUrl"/> 方法。</li>
            </ul> </note> </section>
        <section props="ios mac" id="parameters">
            <title>参数</title>
            <parml>
            <plentry conkeyref="leaveChannel2/leavechannelblock">
                <pt/>
                <pd/>
            </plentry>
            </parml> </section>
        <section id="return_values">
            <title><ph keyref="return-section-title"/></title>
            <p props="flutter">方法成功调用时，无返回值；方法调用失败时，会抛出 <xref keyref="AgoraRtcException"/> 异常，你需要捕获异常并进行处理。</p>
            <ul>
            <li props="native electron unity rn">0(ERR_OK): 方法调用成功。</li>
            <li>&lt; 0: 方法调用失败。
                <ul>
                <li>-1: 一般性的错误（未明确归类）。</li>
                <li>-2: 参数无效。</li>
                <li>-7: SDK 尚未初始化。</li>
                </ul></li>
            </ul> </section>
    </refbody>
</reference>
