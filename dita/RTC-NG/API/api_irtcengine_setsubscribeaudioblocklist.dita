<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE reference PUBLIC "-//OASIS//DTD DITA Reference//EN" "reference.dtd">
<reference id="api_irtcengine_setsubscribeaudioblocklist">
    <title><ph keyref="setSubscribeAudioBlocklist" /></title>
    <shortdesc id="short"><ph id="shortdesc">设置音频订阅黑名单。</ph></shortdesc>
    <prolog>
        <metadata>
            <keywords>
                <indexterm keyref="setSubscribeAudioBlocklist" />
            </keywords>
        </metadata>
    </prolog>
    <refbody>
        <section id="prototype">
            <p outputclass="codeblock">
            <codeblock props="android" outputclass="language-java">public abstract int setSubscribeAudioBlocklist(int[] uidList);</codeblock>
            <codeblock props="ios mac" outputclass="language-objectivec">- (int)setSubscribeAudioBlocklist:(NSArray &lt;NSNumber *&gt; *_Nonnull)blocklist;</codeblock>
            <codeblock props="cpp unreal" outputclass="language-cpp">virtual int setSubscribeAudioBlocklist(uid_t* uidList, int uidNumber) = 0;</codeblock>
         <codeblock props="bp" outputclass="language-cpp">UFUNCTION(BlueprintCallable, Category = &quot;Agora|RtcEngineProxy&quot;)
	int SetSubscribeAudioBlocklist(TArray&lt;int64&gt; uidList, int uidNumber);</codeblock>
            <codeblock props="electron" outputclass="language-typescript">abstract setSubscribeAudioBlocklist(
    uidList: number[],
    uidNumber: number
  ): number;</codeblock>
            <codeblock props="unity cs" outputclass="language-csharp">public abstract int SetSubscribeAudioBlocklist(uint[] uidList, int uidNumber);</codeblock>
            <codeblock props="rn" outputclass="language-typescript">abstract setSubscribeAudioBlocklist(
    uidList: number[],
    uidNumber: number
  ): number;</codeblock>
            <codeblock props="flutter" outputclass="language-dart">Future&lt;void> setSubscribeAudioBlocklist(
      {required List&lt;int> uidList, required int uidNumber});</codeblock>
            <codeblock props="reserve" outputclass="language-cpp"></codeblock></p>
        </section>
        <section id="detailed_desc">
            <title>详情</title>
            <p>你可以调用该方法指定不订阅的音频流。</p>
            <note type="attention" id="note">
            <ul>
            <li id="order">该方法在加入频道前后均可调用。</li>
            <li>音频订阅黑名单不受 <xref keyref="muteRemoteAudioStream" />、<xref keyref="muteAllRemoteAudioStreams" /> 以及 <xref keyref="ChannelMediaOptions" /> 中的 <parmname>autoSubscribeAudio</parmname> 影响。</li>
            <li id="effect">设置订阅黑名单后，如果离开当前频道后再重新加入频道，黑名单依然生效。</li>
            <li id="priority">如果某个用户同时在音频订阅黑名单和白名单中，仅订阅黑名单生效。</li>
            </ul> </note> </section>
        <section id="parameters">
            <title>参数</title>
            <parml>
            <plentry id="list">
                <pt props="android cpp unreal bp electron unity rn flutter cs">uidList</pt>
                <pt props="apple">blocklist</pt>
                <pd>
                    <p>订阅黑名单的用户 ID 列表。</p>
                    <p>如果你想指定不订阅某一发流用户的音频流，将该用户的 ID 加入此列表中。如果你想要将某一用户从订阅黑名单中移除，需要重新调用 <xref keyref="setSubscribeAudioBlocklist" /> 方法更新订阅黑名单的用户 ID 列表，使其不包含你想移除的用户的 <parmname>uid</parmname>。</p>
                </pd>
            </plentry>
            <plentry props="cpp unreal bp electron unity rn flutter cs" id="uidnumber">
                <pt>uidNumber</pt>
                <pd>黑名单用户 ID 列表中的用户数量。</pd>
            </plentry>
            </parml> </section>
        <section id="return_values">
            <title><ph keyref="return-section-title"/></title>
            <p props="flutter">方法成功调用时，无返回值；方法调用失败时，会抛出 <xref keyref="AgoraRtcException"/> 异常，你需要捕获异常并进行处理。<ph props="cn">详见<xref keyref="error-code-link"/>了解详情和解决建议。</ph></p>
            <ul>
            <li props="native unreal bp electron unity rn cs">0: 方法调用成功。</li>
            <li>&lt; 0: 方法调用失败。<ph props="cn">详见<xref keyref="error-code-link"/>了解详情和解决建议。</ph></li>
            </ul> </section>
    </refbody>
</reference>
