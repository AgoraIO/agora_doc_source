<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE reference PUBLIC "-//OASIS//DTD DITA Reference//EN" "reference.dtd">
<reference id="api_irtcengine_joinchannelwithuseraccountex">
    <title><ph keyref="joinChannelWithUserAccountEx" /></title>
    <shortdesc id="short"><ph id="shortdesc">使用 User Account 和 Token 加入频道，并设置频道媒体选项。</ph></shortdesc>
    <prolog>
        <metadata>
            <keywords>
                <indexterm keyref="joinChannelWithUserAccountEx" />
            </keywords>
        </metadata>
    </prolog>
    <refbody>
        <section id="prototype">
            <p outputclass="codeblock">
            <codeblock props="android" outputclass="language-java">public abstract int joinChannelWithUserAccountEx(String token, String channelId,
    String userAccount, ChannelMediaOptions options, IRtcEngineEventHandler eventHandler);</codeblock>
            <codeblock props="hmos" outputclass="language-arkts"></codeblock>
            <codeblock props="ios mac" outputclass="language-objectivec">- (int)joinChannelExByToken:(NSString* _Nullable)token
                  channelId:(NSString* _Nonnull)channelId
                userAccount:(NSString* _Nonnull)userAccount
                   delegate:(id&lt;AgoraRtcEngineDelegate&gt; _Nullable)delegate
               mediaOptions:(AgoraRtcChannelMediaOptions* _Nonnull)mediaOptions
                joinSuccess:(void(^ _Nullable)(NSString* _Nonnull channel, NSUInteger uid, NSInteger elapsed))joinSuccessBlock;</codeblock>
            <codeblock props="cpp unreal" outputclass="language-cpp">virtual int joinChannelWithUserAccountEx(const char* token, const char* channelId,
                                         const char* userAccount, const ChannelMediaOptions&amp; options,
                                         IRtcEngineEventHandler* eventHandler) = 0;</codeblock>
         <codeblock props="bp" outputclass="language-cpp">UFUNCTION(BlueprintCallable, Category = &quot;Agora|IRtcEngine&quot;)
	int JoinChannelWithUserAccountEx(const FString&amp; token, const FString&amp; channelId, const FString&amp; userAccount, const FChannelMediaOptions&amp; options);</codeblock>
            <codeblock props="electron" outputclass="language-typescript">abstract joinChannelWithUserAccountEx(
    token: string,
    channelId: string,
    userAccount: string,
    options: ChannelMediaOptions
  ): number;</codeblock>
            <codeblock props="unity cs" outputclass="language-csharp">public int JoinChannelWithUserAccountEx(string token, string channelId,
                                                string userAccount, ChannelMediaOptions options)</codeblock>
            <codeblock props="rn" outputclass="language-typescript">abstract joinChannelWithUserAccountEx(
    token: string,
    channelId: string,
    userAccount: string,
    options: ChannelMediaOptions
  ): number;</codeblock>
            <codeblock props="flutter" outputclass="language-dart">Future&lt;void&gt; joinChannelWithUserAccountEx(
    {required String token,
    required String channelId,
    required String userAccount,
    required ChannelMediaOptions options});</codeblock>
            <codeblock props="reserve" outputclass="language-cpp"></codeblock></p>
        </section>
        <section id="detailed_desc" deliveryTarget="details" otherprops="no-title">
            <p id="account">调用该方法前，如果你未调用 <xref keyref="registerLocalUserAccount"/> 注册一个 User Account，调用该方法加入频道时，SDK 会自动为你创建一个 User Account。先调用 <xref keyref="registerLocalUserAccount"/> 方法注册 Account，再调用此方法加入频道，可以缩短进入频道的时间。</p>
            <p>用户成功加入频道后，默认订阅频道内所有其他用户的音频流和视频流，因此产生用量并<b>影响计费</b>。如果想取消订阅，可以通过设置 <parmname props="cpp android framework">options</parmname><parmname props="apple">mediaOptions</parmname> 参数或调用相应的 <apiname>mute</apiname> 方法实现。</p>
            <note type="attention" id="note">为保证通信质量，请确保频道内使用同一类型的数据标识用户身份。即同一频道内需要统一使用 UID 或 User Account。如果有用户通过 Web SDK 加入频道，请确保 Web 加入的用户也是同样类型。</note>
        </section>
        <section id="timing" deliveryTarget="details" conkeyref="joinChannel2/timing">
        </section>
        <section id="restriction" deliveryTarget="details" conkeyref="joinChannel2/restriction">
        </section>
        <section id="related" deliveryTarget="details" conkeyref="joinChannelWithUserAccount2/related">
        </section>
        <section id="parameters">
            <title>参数</title>
            <parml>
            <plentry conkeyref="joinChannel2/token">
                <pt />
                <pd />
            </plentry>
            <plentry>
                <pt>channelId</pt>
                <pd>
                    <p conkeyref="joinChannel2/channelID_desc" />
                </pd>
            </plentry>
            <plentry props="native unreal bp flutter unity rn electron cs" conkeyref="joinChannelWithUserAccount2/userAccount">
                <pt />
                <pd />
            </plentry>
            <plentry>
                <pt props="cpp unreal bp android unity rn electron flutter cs">options</pt>
                <pt props="ios mac">mediaOptions</pt>
                <pd conkeyref="joinChannel2/options_desc" />
            </plentry>
            <plentry props="cpp unreal bp android unity cs" conkeyref="joinChannelEx/event">
                <pt />
                <pd />
            </plentry>
            <plentry conkeyref="joinChannel2/joinsuccessblock" props="ios mac">
                <pt />
                <pd />
            </plentry>
            </parml> </section>
        <section id="return_values" conkeyref="joinChannel2/return_values">
            </section>
    </refbody>
</reference>