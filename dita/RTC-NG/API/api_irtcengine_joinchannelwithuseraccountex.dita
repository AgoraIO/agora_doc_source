<?xml version='1.0' encoding='UTF-8'?>
<!DOCTYPE reference PUBLIC "-//OASIS//DTD DITA Reference//EN" "reference.dtd">
<reference id="api_irtcengine_joinchannelwithuseraccountex">
    <title><ph keyref="joinChannelWithUserAccountEx"/></title>
    <shortdesc id="short"><ph id="shortdesc">使用用户账号和 Token 加入频道，并设置媒体选项。</ph></shortdesc>
    <prolog>
        <metadata>
            <keywords>
                <indexterm keyref="joinChannelWithUserAccountEx"/>
            </keywords>
        </metadata>
    </prolog>
    <refbody>
        <section id="prototype">
            <p outputclass="codeblock">
            <codeblock props="android" outputclass="language-java">public abstract int joinChannelWithUserAccountEx(String token, String channelId,
    String userAccount, ChannelMediaOptions options, IRtcEngineEventHandler eventHandler);</codeblock>
            <codeblock props="hmos" outputclass="language-arkts"/>
            <codeblock props="ios mac" outputclass="language-objectivec">- (int)joinChannelExByToken:(NSString* _Nullable)token
                  channelId:(NSString* _Nonnull)channelId
                userAccount:(NSString* _Nonnull)userAccount
                   delegate:(id&lt;AgoraRtcEngineDelegate&gt; _Nullable)delegate
               mediaOptions:(AgoraRtcChannelMediaOptions* _Nonnull)mediaOptions
                joinSuccess:(void(^ _Nullable)(NSString* _Nonnull channel, NSUInteger uid, NSInteger elapsed))joinSuccessBlock;</codeblock>
            <codeblock props="cpp unreal" outputclass="language-cpp">virtual int joinChannelWithUserAccountEx(const char* token, const char* channelId, const char* userAccount, const ChannelMediaOptions&amp; options, IRtcEngineEventHandler* eventHandler) = 0;</codeblock>
         <codeblock props="bp" outputclass="language-cpp">UFUNCTION(BlueprintCallable, Category = "Agora|IRtcEngine")
	int JoinChannelWithUserAccountEx(const FString&amp; token, const FString&amp; channelId, const FString&amp; userAccount, const FChannelMediaOptions&amp; options);</codeblock>
            <codeblock props="electron" outputclass="language-typescript">abstract joinChannelWithUserAccountEx(
    token: string,
    channelId: string,
    userAccount: string,
    options: ChannelMediaOptions
  ): number;</codeblock>
            <codeblock props="unity cs" outputclass="language-csharp">public int JoinChannelWithUserAccountEx(string token, string channelId,
                                                string userAccount, ChannelMediaOptions options)</codeblock>
            <codeblock props="rn" outputclass="language-typescript">abstract joinChannelWithUserAccountEx(
    token: string,
    channelId: string,
    userAccount: string,
    options: ChannelMediaOptions
  ): number;</codeblock>
            <codeblock props="flutter" outputclass="language-dart">Future&lt;void&gt; joinChannelWithUserAccountEx(
    {required String token,
    required String channelId,
    required String userAccount,
    required ChannelMediaOptions options});</codeblock>
            <codeblock props="reserve" outputclass="language-cpp"/></p>
        </section>
        <section id="detailed_desc" deliveryTarget="details" otherprops="no-title">
            <p id="account">在调用该方法前，如果你没有调用 <xref keyref="registerLocalUserAccount"/> 注册用户账号，SDK 会在你调用该方法加入频道时自动为你创建一个用户账号。调用 <xref keyref="registerLocalUserAccount"/> 后再调用该方法，可以缩短加入频道所需的时间。一旦用户加入频道，默认会订阅频道中所有其他用户的音视频流，从而产生用量和计费。如果你希望停止订阅其他用户的媒体流，可以设置 <codeph>options</codeph> 参数或调用相应的 <xref keyref="mute"/> 方法。<xref keyref="registerLocalUserAccount"/> 注册一个 User Account，调用该方法加入频道时，SDK 会自动为你创建一个 User Account。先调用 <xref keyref="registerLocalUserAccount"/> 方法注册 Account，再调用此方法加入频道，可以缩短进入频道的时间。</p>
            <p>用户成功加入频道后，默认订阅频道内所有其他用户的音频流和视频流，因此产生用量并<b>影响计费</b>。如果想取消订阅，可以通过设置 <parmname props="android cpp framework">options</parmname><parmname props="apple">mediaOptions</parmname> 参数或调用相应的 <apiname>mute</apiname> 方法实现。</p>
            <note type="attention" id="note">为保证通信质量，请确保频道内使用同一类型的数据标识用户身份。即同一频道内需要统一使用 UID 或 User Account。如果有用户通过 Web SDK 加入频道，请确保 Web 加入的用户也是同样类型。</note>
        <note type="attention" props="cpp">该方法仅支持用户同时加入一个频道。
不同 App ID 的用户无法互通。
加入频道前，请确保用于生成 Token 的 App ID 与调用 <xref keyref="initialize_IMusicContentCenter"/> 方法时传入的 App ID 一致，否则可能导致使用该 Token 加入频道失败。
为确保通信顺畅，请使用相同的参数类型标识用户。例如，如果某用户使用 UID 加入频道，则其他用户也应使用 UID；使用用户账号加入频道时也应保持一致。如果用户使用声网 Web SDK 加入频道，请确保用户 ID 的参数类型一致。</note>
            </section>
        <section id="timing" deliveryTarget="details" conkeyref="joinChannel2/timing">
        </section>
        <section id="restriction" deliveryTarget="details" conkeyref="joinChannel2/restriction">
        </section>
        <section id="related" deliveryTarget="details" conkeyref="joinChannelWithUserAccount2/related">
        </section>
        <section id="scenario" deliveryTarget="details">
            <title>适用场景</title>
            <p>该方法适用于多频道场景。</p>
        </section>
        <section id="parameters">
            <title>参数</title>
            <parml>
            <plentry conkeyref="joinChannel2/token">
                <pt/>
                <pd/>
            </plentry>
            <plentry>
                <pt>channelId</pt>
                <pd props="android apple bp cs electron flutter rn unity unreal">
                    <p conkeyref="joinChannel2/channelID_desc"/>
                </pd>
            <pd props="cpp">频道名。该参数表示用户进行实时音视频互动的频道。在相同 App ID 的前提下，填写相同频道名的用户会进入同一个频道进行音视频互动。字符串长度不得超过 64 字节。支持的字符（共 89 个）包括：小写英文字母 a 到 z，大写英文字母 A 到 Z，数字 0 到 9，空格，以及以下符号："!", "#", "$", "%", "&amp;", "(", ")", "+", "-", ":", ";", "&lt;", "=", ".", "&gt;", "?", "@", "[", "]", "^", "_", "{", "}", "|", "~", ","。</pd>
                </plentry>
            <plentry props="bp cs electron flutter native rn unity unreal" conkeyref="joinChannelWithUserAccount2/userAccount">
                <pt/>
                <pd/>
            </plentry>
            <plentry>
                <pt>options</pt>
                <pt props="apple">mediaOptions</pt>
                <pd conkeyref="joinChannel2/options_desc" props="android apple bp cs electron flutter rn unity unreal"/>
            <pd props="cpp">频道媒体选项。详见 <xref keyref="ChannelMediaOptions"/>。</pd>
                </plentry>
            <plentry props="android bp cpp cs unity unreal" conkeyref="joinChannelEx/event">
                <pt/>
                <pd/>
            </plentry>
            <plentry conkeyref="joinChannel2/joinsuccessblock" props="apple">
                <pt/>
                <pd/>
            </plentry>
            <plentry props="cpp">
                <pt props="cpp">token</pt>
                <pd props="cpp">在你的服务器上生成的用于鉴权的 Token。</pd>
            </plentry>
            <plentry props="cpp">
                <pt props="cpp">userAccount</pt>
                <pd props="cpp">用户账号。该参数用于标识频道中的用户以进行实时音视频互动。你需要自行设置和管理用户账号，并确保同一频道中每个用户账号唯一。该参数的最大长度为 255 字节，不能为空。支持的字符（共 89 个）包括：小写英文字母 a 到 z，大写英文字母 A 到 Z，数字 0 到 9，空格，以及以下符号："!", "#", "$", "%", "&amp;", "(", ")", "+", "-", ":", ";", "&lt;", "=", ".", "&gt;", "?", "@", "[", "]", "^", "_", "{", "}", "|", "~", ","。</pd>
            </plentry>
            <plentry props="cpp">
                <pt props="cpp">eventHandler</pt>
                <pd props="cpp">回调接口类。你可以通过该参数传入的 <codeph>eventHandler</codeph> 对象获取多个频道的回调事件。详见 <xref keyref="IRtcEngineEventHandler"/>。</pd>
            </plentry>
        </parml> </section>
        <section id="return_values" conkeyref="joinChannel2/return_values">
            <p props="cpp"><ul>
                        <li>0：方法调用成功。</li>
                        <li>&lt; 0：方法调用失败。<ul>
                            <li>-2：参数无效。例如，Token 无效，<ph keyref="uid"/> 参数未设置为整数，或 <xref keyref="ChannelMediaOptions"/> 中的成员值无效。请传入有效参数并重新加入频道。</li>
                            <li>-3：<xref keyref="IRtcEngine"/> 对象初始化失败。请重新初始化 <xref keyref="IRtcEngine"/> 对象。</li>
                            <li>-7：<xref keyref="IRtcEngine"/> 对象尚未初始化。请先初始化 <xref keyref="IRtcEngine"/> 对象再调用该方法。</li>
                            <li>-8：<xref keyref="IRtcEngine"/> 对象内部状态错误。典型原因是在调用 <xref keyref="startEchoTest3"/> 开始通话回路测试后，未调用 <xref keyref="stopEchoTest"/> 停止测试就调用该方法加入频道。请先调用 <xref keyref="stopEchoTest"/> 再调用该方法。</li>
                            <li>-17：加入频道请求被拒绝。典型原因是用户已在频道中。声网建议使用 <xref keyref="onConnectionStateChanged"/> 回调判断用户是否在频道中，仅当收到 <ph keyref="CONNECTION_STATE_DISCONNECTED"/>（1）状态时再调用该方法。</li>
                            <li>-102：频道名无效。请在 <ph keyref="channelID"/> 中传入有效的频道名重新加入频道。</li>
                            <li>-121：用户 ID 无效。请在 <ph keyref="uid"/> 中传入有效的用户 ID 重新加入频道。</li>
                            </ul>
                        </li>
                        </ul>
                    </p>
    </section>
    </refbody>
</reference>
