<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE reference PUBLIC "-//OASIS//DTD DITA Reference//EN" "reference.dtd">
<reference id="api_irtcengineex_createdatastreamex2">
    <title><ph keyref="createDataStreamEx2" /></title>
    <shortdesc id="short"><ph id="shortdesc">创建数据流。</ph></shortdesc>
    <prolog>
        <metadata>
            <keywords>
                <indexterm keyref="createDataStreamEx2" />
            </keywords>
        </metadata>
    </prolog>
    <refbody>
        <section id="prototype">
            <p outputclass="codeblock">
            <codeblock props="android" outputclass="language-java">public abstract int createDataStreamEx(DataStreamConfig config, RtcConnection connection);
</codeblock>
            <codeblock props="ios mac" outputclass="language-objectivec">- (int)createDataStreamEx:(NSInteger * _Nonnull)streamId
                   config:(AgoraDataStreamConfig * _Nonnull)config
               connection:(AgoraRtcConnection * _Nonnull)connection NS_SWIFT_NAME(createDataStreamEx(_:config:connection:));</codeblock>
            <codeblock props="cpp unreal" outputclass="language-cpp">virtual int createDataStreamEx(int* streamId, DataStreamConfig&amp; config, const RtcConnection&amp; connection) = 0;</codeblock>
         <codeblock props="bp" outputclass="language-cpp">UFUNCTION(BlueprintCallable, Category = &quot;Agora|RtcEngineProxy&quot;)
	int CreateDataStreamEx(int&amp; streamId, const FDataStreamConfig&amp; config, const FRtcConnection&amp; connection);</codeblock>
            <codeblock props="electron" outputclass="language-typescript">abstract createDataStreamEx(
    config: DataStreamConfig,
    connection: RtcConnection
  ): number;</codeblock>
            <codeblock props="unity cs" outputclass="language-csharp">public abstract int CreateDataStreamEx(ref int streamId, DataStreamConfig config, RtcConnection connection);</codeblock>
            <codeblock props="rn" outputclass="language-typescript">abstract createDataStreamEx(
    config: DataStreamConfig,
    connection: RtcConnection
  ): number;</codeblock>
            <codeblock props="flutter" outputclass="language-dart">Future&lt;int&gt; createDataStreamEx(
      {required DataStreamConfig config, required RtcConnection connection});</codeblock>
            <codeblock props="reserve" outputclass="language-cpp"></codeblock></p>
        </section>
        <section id="detailed_desc">
            <title>详情</title>
            <p id="desc">创建数据流。每个用户在每个频道中最多只能创建 5 个数据流。</p>
            <p id="diff" props="native unreal unity">相比 <xref keyref="createDataStreamEx1" />，本方法不支持数据可靠。接收方会丢弃超出发送时间 5 秒后的数据包。</p>
        </section>
        <section id="parameters">
            <title>参数</title>
            <parml>
            <plentry props="cpp unreal bp ios mac unity cs" conkeyref="createDataStream2/streamId">
                <pt />
                <pd />
            </plentry>
            <plentry id="config">
                <pt>config</pt>
                <pd>数据流设置。详见 <xref keyref="DataStreamConfig" />。</pd>
            </plentry>
            <plentry conkeyref="joinChannelEx/connection">
                <pt />
                <pd />
            </plentry>
            </parml> </section>
        <section id="return_values">
            <title>返回值</title>
            <ul>
            <li props="cpp unreal bp unity cs">0: 创建数据流成功。</li>
            <li props="android ios mac electron rn flutter">创建的数据流的 ID：方法调用成功。</li>
            <li>&lt; 0：方法调用失败。<ph props="cn">详见<xref keyref="error-code-link"/>了解详情和解决建议。</ph></li>
            </ul> </section>
    </refbody>
</reference>