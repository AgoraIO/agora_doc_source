<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE reference PUBLIC "-//OASIS//DTD DITA Reference//EN" "reference.dtd">
<reference id="api_irtcengineex_sendstreammessageex">
    <title><ph keyref="sendStreamMessageEx" /></title>
    <shortdesc id="short"><ph id="shortdesc">发送数据流。</ph></shortdesc>
    <prolog>
        <metadata>
            <keywords>
                <indexterm keyref="sendStreamMessageEx" />
            </keywords>
        </metadata>
    </prolog>
    <refbody>
        <section id="prototype">
            <p outputclass="codeblock">
            <codeblock props="android" outputclass="language-java">public abstract int sendStreamMessageEx(int streamId, byte[] message, RtcConnection connection);</codeblock>
            <codeblock props="hmos" outputclass="language-arkts">public abstract sendStreamMessageEx(streamId:number,message:ArrayBuffer,connection:RtcConnection):number;</codeblock>
            <codeblock props="ios mac" outputclass="language-objectivec" />
            <codeblock props="cpp unreal" outputclass="language-cpp">virtual int sendStreamMessageEx(int streamId, const char* data, size_t length, const RtcConnection&amp; connection) = 0;</codeblock>
         <codeblock props="bp" outputclass="language-cpp">UFUNCTION(BlueprintCallable, Category = &quot;Agora|IRtcEngine&quot;)
	int SendStreamMessageEx(int streamId, const FString&amp; data, const  FRtcConnection&amp; connection);</codeblock>
            <codeblock props="electron" outputclass="language-typescript">abstract sendStreamMessageEx(streamId: number, data: Uint8Array, length: number, connection: RtcConnection): number;</codeblock>
            <codeblock props="unity cs" outputclass="language-csharp">public abstract int SendStreamMessageEx(int streamId, byte[] data, uint length, RtcConnection connection);</codeblock>
            <codeblock props="rn" outputclass="language-typescript">abstract sendStreamMessageEx(
  streamId: number,
  data: Uint8Array,
  length: number,
  connection: RtcConnection
): number;</codeblock>
            <codeblock props="flutter" outputclass="language-dart">Future&lt;void&gt; sendStreamMessageEx(
      {required int streamId,
      required Uint8List data,
      required int length,
      required RtcConnection connection});</codeblock>
            <codeblock props="reserve" outputclass="language-cpp"></codeblock></p>
        </section>
        <section id="detailed_desc">
            <title>详情</title>
            <p>调用 <xref keyref="createDataStreamEx2" /> 后，你可以调用本方法向频道内所有用户发送数据流消息。</p>
            <p conkeyref="sendStreamMessage/limit"/>
            <p conkeyref="sendStreamMessage/error"/>
            <note type="attention">
            <ul>
            <li>该方法需要在 <xref keyref="joinChannelEx"/> 后调用。</li>
            <li>请确保在调用该方法前，已调用 <apiname keyref="createDataStreamEx2" /> 创建了数据通道。</li>
            <li>该方法仅适用于通信场景以及直播场景下的主播用户，如果直播场景下的观众调用此方法可能会造成观众变主播。</li>
            </ul></note> </section>
        <section id="parameters">
            <title>参数</title>
            <parml>
            <plentry>
                <pt>streamId</pt>
                <pd>数据流 ID。可以通过 <apiname keyref="createDataStreamEx2" /> 获取。</pd>
            </plentry>
            <plentry>
                <pt props="android hmos">message</pt>
                <pt props="cpp unreal bp rn unity electron flutter cs">data</pt>
                <pd>待发送的数据。</pd>
            </plentry>
            <plentry props="cpp unreal bp rn unity electron flutter cs">
                    <pt>length</pt>
                    <pd>数据长度。</pd>
                </plentry>
            <plentry conkeyref="joinChannelEx/connection">
                <pt />
                <pd />
            </plentry>
            </parml> </section>
        <section id="return_values">
            <title><ph keyref="return-section-title"/></title>
            <p props="flutter">方法成功调用时，无返回值；方法调用失败时，会抛出 <xref keyref="AgoraRtcException"/> 异常，你需要捕获异常并进行处理。<ph props="cn">详见<xref keyref="error-code-link"/>了解详情和解决建议。</ph></p>
            <ul props="native unreal bp unity rn electron cs">
            <li>0: 方法调用成功。</li>
            <li>&lt; 0: 方法调用失败。<ph props="cn">详见<xref keyref="error-code-link"/>了解详情和解决建议。</ph></li>
            </ul> </section>
    </refbody>
</reference>