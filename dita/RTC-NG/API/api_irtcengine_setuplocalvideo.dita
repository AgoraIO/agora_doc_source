<?xml version='1.0' encoding='UTF-8'?>
<!DOCTYPE reference PUBLIC "-//OASIS//DTD DITA Reference//EN" "reference.dtd">
<reference id="api_irtcengine_setuplocalvideo">
    <title><ph keyref="setupLocalVideo"/></title>
    <shortdesc id="short"><ph id="shortdesc">初始化本地视频画面。</ph></shortdesc>
    <prolog>
        <metadata>
            <keywords>
                <indexterm keyref="setupLocalVideo"/>
            </keywords>
        </metadata>
    </prolog>
    <refbody>
        <section id="prototype">
            <p outputclass="codeblock">
            <codeblock props="android" outputclass="language-java">public abstract int setupLocalVideo(VideoCanvas local);</codeblock>
            <codeblock props="hmos" outputclass="language-arkts">public abstract setupLocalVideo(canvas: VideoCanvas): number;</codeblock>
            <codeblock props="ios mac" outputclass="language-objectivec">- (int)setupLocalVideo:(AgoraRtcVideoCanvas * _Nullable)local NS_SWIFT_NAME(setupLocalVideo(_:));</codeblock>
            <codeblock props="cpp unreal" outputclass="language-cpp">virtual int setupLocalVideo(const VideoCanvas&amp; canvas) = 0;</codeblock>
            <codeblock props="bp" outputclass="language-cpp">UFUNCTION(BlueprintCallable, Category = "Agora|IRtcEngine")
	int SetupLocalVideo(const FVideoCanvas&amp; canvas);</codeblock>
            <codeblock props="electron" outputclass="language-typescript">abstract setupLocalVideo(canvas: VideoCanvas): number;</codeblock>
            <codeblock props="unity cs" outputclass="language-csharp">public abstract int SetupLocalVideo(VideoCanvas canvas);</codeblock>
            <codeblock props="rn" outputclass="language-typescript">abstract setupLocalVideo(canvas: VideoCanvas): number;</codeblock>
            <codeblock props="flutter" outputclass="language-dart">Future&lt;void&gt; setupLocalVideo(VideoCanvas canvas);</codeblock>
            <codeblock props="reserve" outputclass="language-cpp"/></p>
        </section>
        <section id="detailed_desc" deliveryTarget="details" otherprops="no-title">
            <p>该方法在本地设备上初始化本地视频流的画面，仅影响本地用户看到的视频内容，不影响本地视频流的发布。你可以通过该方法将本地视频流绑定到指定的视频画面（<codeph>view</codeph>），并设置画面的渲染模式和镜像模式。绑定关系在离开频道后仍然有效。若要停止渲染或解绑本地视频流，请将 <codeph>view</codeph> 设置为 <codeph><ph keyref="NULL"/></codeph>。

适用场景：初始化后调用该方法设置本地视频画面，再加入频道。

在实时互动场景中，如果你需要在本地预览中同时查看多个画面，并且每个画面位于视频链路的不同观测位置，可以多次调用该方法，设置不同的 <codeph>view</codeph>，并为每个 <codeph>view</codeph> 设置不同的观测位置。例如，将视频源设置为摄像头后，配置两个 <codeph>view</codeph>，分别设置 <codeph>position</codeph> 为 <ph keyref="POSITION_POST_CAPTURER_ORIGIN"/> 和 <ph keyref="POSITION_POST_CAPTURER"/>，即可在本地预览中同时查看原始未处理的视频帧和经过图像增强、虚拟背景、水印等预处理后的视频帧。<codeph>view</codeph>），并设置画面的渲染模式和镜像模式。绑定关系在离开频道后仍然有效。若要停止渲染或解绑本地视频流，请将 <codeph>view</codeph> 设置为 <codeph><ph keyref="NULL"/></codeph>。

适用场景：初始化后调用该方法设置本地视频画面，再加入频道。

在实时互动场景中，如果你需要在本地预览中同时查看多个画面，并且每个画面位于视频链路的不同观测位置，可以多次调用该方法，设置不同的 <codeph>view</codeph>，并为每个 <codeph>view</codeph> 设置不同的观测位置。例如，将视频源设置为摄像头后，配置两个 <codeph>view</codeph>，分别设置 <codeph>position</codeph> 为 <parmname>view</parmname>)，并设置本地用户视图的渲染模式和镜像模式。</p>
            <p>退出频道后绑定仍然有效。如果需要停止渲染或解除绑定，可以调用该方法将参数 <parmname>view</parmname> 设为 <codeph><ph keyref="NULL"/></codeph>，以停止渲染并清理渲染缓存。</p>
            <note type="attention">
            <ul>
            <li conkeyref="setupRemoteVideo/render" props="flutter"/>
            <li props="cs unity">如果你想要在原生窗口上渲染图像，请调用此方法；如果你仅需在 Unity 项目内渲染图像，可直接通过 <xref keyref="VideoSurface"/> 类来实现。</li>
            <li props="bp cs flutter native rn unity unreal">如果你希望在通话中仅更新本地用户视图的渲染或镜像模式，请使用 <xref keyref="setLocalRenderMode2"/> 方法。</li>
            </ul> </note> <note type="attention" props="cpp">若只需在通话中更新本地视频画面的渲染模式或镜像模式，请改用 <codeph>setLocalRenderMode</codeph>。</note>
            <note type="attention" props="apple">若只需在通话过程中更新本地视频画面的渲染模式或镜像模式，请调用 <xref keyref="setLocalRenderMode2"/> 方法。</note>
            <note type="attention" props="android">若只需在通话中更新本地视频视图的渲染模式或镜像模式，请调用 <codeph>setLocalRenderMode</codeph> 方法。</note>
            </section>
            <section id="scenario" deliveryTarget="details">
                <title>适用场景</title>
                <p>在 App 开发中，通常在初始化后调用该方法进行本地视频设置，然后再加入频道。</p>
                <p>如果你需要在本地视频预览的画面中同时看到多个预览画面、且不同画面分别处于视频链路上不同观测点，可以重复调用该方法设置不同的 <parmname>view</parmname>，并针对每个 <parmname>view</parmname> 设置不同的观测位置。例如：将视频源设置为摄像头，然后对应两个 <parmname>view</parmname> 分别设置 <parmname>position</parmname> 为 <ph keyref="POSITION_POST_CAPTURER_ORIGIN"/> 和 <ph keyref="POSITION_POST_CAPTURER"/>，即可在本地视频预览中同时看到没有经过视频前处理的原始画面和已经过视频前处理（美颜、虚拟背景、水印本地预览）的画面。</p>
            </section>
            <section id="timing" deliveryTarget="details">
                <title>调用时机</title>
                <p>你可以在加入频道前或后调用该方法。</p>
        </section>        
            <section id="restriction" deliveryTarget="details">
                <title>调用限制</title>
                <p>无。</p>
        </section>
            <section id="parameters" deliveryTarget="details">
                <title>参数</title>
            <parml>
            <plentry>
                <pt>canvas</pt>
                <pt props="android apple">local</pt>
                <pd props="bp cs electron flutter mac rn unity unreal">本地视频显示属性。详见 <xref keyref="VideoCanvas"/>。</pd>
            <pd props="cpp ios">本地视频画面及相关设置，详见 <xref keyref="VideoCanvas"/>。</pd>
                <pd props="android">本地视频视图及相关设置。详见 <xref keyref="VideoCanvas"/>。</pd>
                </plentry>
        </parml> </section>
        <section id="return_values" props="bp cs electron flutter native rn unity unreal">
            <title><ph keyref="return-section-title"/></title>
        <p props="flutter">方法成功调用时，无返回值；方法调用失败时，会抛出 <xref keyref="AgoraRtcException"/> 异常，你需要捕获异常并进行处理。<ph props="cn">详见<xref keyref="error-code-link"/>了解详情和解决建议。</ph></p>
        <ul>
            <li props="bp cs electron rn unity unreal">0：方法调用成功。</li>
            <li>&lt; 0：方法调用失败。<ph props="cn">详见<xref keyref="error-code-link"/>了解详情和解决建议。</ph></li>
            </ul>
        <p props="native"><ul>
                        <li>0：方法调用成功。</li>
                        <li>&lt; 0：方法调用失败。</li>
                        </ul>
                    </p>
    </section>
    </refbody>
</reference>
