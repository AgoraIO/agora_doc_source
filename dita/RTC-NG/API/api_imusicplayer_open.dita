<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE reference PUBLIC "-//OASIS//DTD DITA Reference//EN" "reference.dtd">
<reference id="api_imusicplayer_open">
    <title><ph keyref="open_IMusicPlayer"/></title>
    <shortdesc id="short"><ph id="shortdesc">通过音乐资源编号打开音乐资源。</ph></shortdesc>
    <prolog>
        <metadata>
            <keywords>
                <indexterm keyref="open_IMusicPlayer"/>
            </keywords>
        </metadata>
    </prolog>
    <refbody>
        <section id="prototype">
            <p outputclass="codeblock">
            <codeblock props="android" outputclass="language-java">int open(long songCode, long startPos);</codeblock>
            <codeblock props="ios mac" outputclass="language-objectivec">- (NSInteger)openMediaWithSongCode:(NSInteger)songCode startPos:(NSInteger)startPos NS_SWIFT_NAME(openMedia(songCode:startPos:));</codeblock>
            <codeblock props="cpp" outputclass="language-cpp">virtual int open(int64_t songCode, int64_t startPos = 0) = 0;</codeblock>
            <codeblock props="cs" outputclass="language-csharp"/>
            <codeblock props="electron" outputclass="language-typescript">abstract openWithSongCode(songCode: number, startPos?: number): number;</codeblock>
            <codeblock props="unity" outputclass="language-csharp">public abstract int Open(Int64 songCode, Int64 startPos);</codeblock>
            <codeblock props="rn" outputclass="language-typescript">abstract openWithSongCode(songCode: number, startPos?: number): number;</codeblock>
            <codeblock props="flutter" outputclass="language-dart">Future&lt;void> openWithSongCode({required int songCode, int startPos = 0});</codeblock>
            <codeblock props="reserve" outputclass="language-cpp"/></p>
        </section>
        <section id="detailed_desc">
            <title>详情</title>
            <dl outputclass="since">
            <dlentry props="native">
                <dt>自从</dt>
                <dd>v4.1.0</dd>
            </dlentry>
            </dl>
            <note type="note" id="note">如果你想要打开的音乐资源受数字版权保护，则需要调用此方法打开。对于不受数字版权保护的音乐资源，你可以选择通过调用此方法或 <apiname keyref="IMediaPlayer"/> 类下的 <xref keyref="open"/> 方法来打开。</note>
            <p>在调用此方法之前，请确保需要播放的音乐资源已加载完成。你可以调用 <xref keyref="isPreloaded"/> 方法来检测音乐资源是否已被预加载，或通过 <xref keyref="onPreLoadEvent_IMusicContentCenterEventHandler"/> 回调得知。</p>
            <p conkeyref="open/open"/>
        </section>
        <section id="parameters">
            <title>参数</title>
            <parml>
            <plentry id="code">
                <pt>songCode</pt>
                <pd>音乐资源的编号，用于标识一个音乐资源。</pd>
            </plentry>
            <plentry id="pos">
                <pt>startPos</pt>
                <pd>设置起始播放位置（毫秒），默认值为 0。</pd>
            </plentry>
            </parml> </section>
        <section id="return_values">
            <title><ph keyref="return-section-title"/></title>
            <p props="flutter">方法成功调用时，无返回值；方法调用失败时，会抛出 <xref keyref="AgoraRtcException"/> 异常，你需要捕获异常并进行处理。</p>
            <ul>
            <li props="native unity rn electron">0: 方法调用成功。</li>
            <li>&lt; 0: 方法调用失败。</li>
            </ul> </section>
    </refbody>
</reference>
