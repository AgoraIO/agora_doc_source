<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE reference PUBLIC "-//OASIS//DTD DITA Reference//EN" "reference.dtd">
<reference id="api_irtcengine_setlocalvoicereverb">
    <title><ph keyref="setLocalVoiceReverb" /></title>
    <shortdesc id="short"><ph id="shortdesc">设置本地音效混响。</ph></shortdesc>
    <prolog>
        <metadata>
            <keywords>
                <indexterm keyref="setLocalVoiceReverb" />
            </keywords>
        </metadata>
    </prolog>
    <refbody>
        <section id="prototype">
            <p outputclass="codeblock">
            <codeblock props="android" outputclass="language-java">public abstract int setLocalVoiceReverb(Constants.AUDIO_REVERB_TYPE reverbKey, int value);</codeblock>
            <codeblock props="ios mac" outputclass="language-objectivec">- (int)setLocalVoiceReverbOfType:(AgoraAudioReverbType)reverbType withValue:(NSInteger)value;</codeblock>
            <codeblock props="cpp unreal" outputclass="language-cpp">virtual int setLocalVoiceReverb(AUDIO_REVERB_TYPE reverbKey, int value) = 0;</codeblock>
         <codeblock props="bp" outputclass="language-cpp">UFUNCTION(BlueprintCallable, Category = &quot;Agora|RtcEngineProxy&quot;)
	int SetLocalVoiceReverb(EAUDIO_REVERB_TYPE reverbKey, int value);</codeblock>
            <codeblock props="electron" outputclass="language-typescript">abstract setLocalVoiceReverb(
    reverbKey: AudioReverbType,
    value: number
  ): number;</codeblock>
            <codeblock props="unity cs" outputclass="language-csharp">public abstract int SetLocalVoiceReverb(AUDIO_REVERB_TYPE reverbKey, int value);</codeblock>
            <codeblock props="rn" outputclass="language-typescript">abstract setLocalVoiceReverb(
    reverbKey: AudioReverbType,
    value: number
  ): number;</codeblock>
            <codeblock props="flutter" outputclass="language-dart">Future&lt;void&gt; setLocalVoiceReverb(
  {required AudioReverbType reverbKey, required int value});</codeblock>
            <codeblock props="reserve" outputclass="language-cpp"></codeblock></p>
        </section>
        <section id="detailed_desc">
            <title>详情</title>
            <p>SDK 提供一个使用更为简便的方法 <xref keyref="setAudioEffectPreset" />，直接实现流行、R&amp;B、KTV 等预置的混响效果。</p>
            <note type="note">该方法在加入频道前后都能调用。</note> </section>
        <section id="parameters">
            <title>参数</title>
            <parml>
            <plentry>
                <pt props="android cpp unreal bp unity flutter rn electron cs">reverbKey</pt>
                <pt props="ios mac">reverbType</pt>
                <pd>混响音效 Key。该方法共有 5 个混响音效 Key，详见 <xref keyref="AUDIO_REVERB_TYPE" />。</pd>
            </plentry>
            <plentry>
                <pt>value</pt>
                <pd>各混响音效 Key 所对应的值。</pd>
            </plentry>
            </parml> </section>
        <section id="return_values">
            <title><ph keyref="return-section-title"/></title>
            <p props="flutter">方法成功调用时，无返回值；方法调用失败时，会抛出 <xref keyref="AgoraRtcException"/> 异常，你需要捕获异常并进行处理。<ph props="cn">详见<xref keyref="error-code-link"/>了解详情和解决建议。</ph></p>
            <ul props="native unreal bp electron unity rn cs">
            <li>0: 方法调用成功。</li>
            <li>&lt; 0: 方法调用失败。<ph props="cn">详见<xref keyref="error-code-link"/>了解详情和解决建议。</ph></li>
            </ul> </section>
    </refbody>
</reference>