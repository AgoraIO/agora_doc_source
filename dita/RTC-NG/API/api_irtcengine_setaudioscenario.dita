<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE reference PUBLIC "-//OASIS//DTD DITA Reference//EN" "reference.dtd">
<reference id="api_irtcengine_setaudioscenario">
    <title><ph keyref="setAudioScenario" /></title>
    <shortdesc id="short"><ph id="shortdesc">设置音频场景。</ph></shortdesc>
    <prolog>
        <metadata>
            <keywords>
                <indexterm keyref="setAudioScenario" />
            </keywords>
        </metadata>
    </prolog>
    <refbody>
        <section id="prototype">
            <p outputclass="codeblock">
            <codeblock props="android" outputclass="language-java">public abstract int setAudioScenario(int scenario);</codeblock>
            <codeblock props="hmos" outputclass="language-arkts">public abstract setAudioScenario(scenario: Constants.AudioScenarioType): number;</codeblock>
            <codeblock props="ios mac" outputclass="language-objectivec">- (int)setAudioScenario:(AgoraAudioScenario)scenario;</codeblock>
            <codeblock props="cpp unreal" outputclass="language-cpp">virtual int setAudioScenario(AUDIO_SCENARIO_TYPE scenario) = 0;</codeblock>
            <codeblock props="bp" outputclass="language-cpp">UFUNCTION(BlueprintCallable, Category = &quot;Agora|IRtcEngine&quot;)
	int SetAudioScenario(EAUDIO_SCENARIO_TYPE scenario = EAUDIO_SCENARIO_TYPE::AUDIO_SCENARIO_DEFAULT);</codeblock>
            <codeblock props="electron" outputclass="language-typescript">abstract setAudioScenario(scenario: AudioScenarioType): number;</codeblock>
            <codeblock props="unity cs" outputclass="language-csharp">public abstract int SetAudioScenario(AUDIO_SCENARIO_TYPE scenario);</codeblock>
            <codeblock props="rn" outputclass="language-typescript">abstract setAudioScenario(scenario: AudioScenarioType): number;</codeblock>
            <codeblock props="flutter" outputclass="language-dart">Future&lt;void&gt; setAudioScenario(AudioScenarioType scenario);</codeblock>
            <codeblock props="reserve" outputclass="language-cpp"></codeblock></p>
        </section>
        <section id="detailed_desc" deliveryTarget="details" otherprops="no-title">
            <p/>
        </section>
        <section id="scenario" deliveryTarget="details">
            <title>适用场景</title>
            <p>该方法适用于各种音频场景，你可以按需选择。例如，在音乐教学等高音质需求的场景中，建议将 <parmname>scenario</parmname> 设置为 <codeph><ph keyref="AUDIO_SCENARIO_GAME_STREAMING" /></codeph>(3)。</p>
        </section>
        <section id="timing" deliveryTarget="details">
            <title>调用时机</title>
            <p>该方法在加入频道前后均可调用。</p>
        </section>
        <section id="restriction" deliveryTarget="details" conkeyref="setAudioProfile/restriction"/>
        <section id="parameters" deliveryTarget="details">
            <title>参数</title>
            <parml>
            <plentry>
                <pt>scenario</pt>
                <pd id="scenario-ng"><ph>音频场景。不同的音频场景下，设备的音量类型是不同的。</ph>
                    <ph props="hmos ios mac cpp framework">详见 <xref keyref="AUDIO_SCENARIO_TYPE" /> 。</ph>
                    <ul props="android">
                    <li><codeph><ph keyref="AUDIO_SCENARIO_DEFAULT" /></codeph>(0):（默认）自动场景，根据用户角色和音频路由自动匹配合适的音质。</li>
                    <li><codeph><ph keyref="AUDIO_SCENARIO_GAME_STREAMING" /></codeph>(3): 高音质场景，适用于音乐为主的场景。</li>
                    <li><codeph><ph keyref="AUDIO_SCENARIO_CHATROOM" /></codeph>(5): 聊天室场景，适用于用户需要频繁上下麦的场景。</li>
                    <li><codeph><ph keyref="AUDIO_SCENARIO_CHORUS" /></codeph>(7): 合唱场景。适用于网络条件良好，要求极低延时的实时合唱场景。
                        <note conkeyref="AUDIO_SCENARIO_TYPE/chorus" /></li>
                    <li><codeph><ph keyref="AUDIO_SCENARIO_MEETING" /></codeph>(8): 会议场景，适用于人声为主的多人会议。</li>
                    </ul>
                </pd>
            </plentry></parml></section>
        <section id="return_values">
            <title><ph keyref="return-section-title"/></title>
            <p props="flutter">方法成功调用时，无返回值；方法调用失败时，会抛出 <xref keyref="AgoraRtcException"/> 异常，你需要捕获异常并进行处理。<ph props="cn">详见<xref keyref="error-code-link"/>了解详情和解决建议。</ph></p>
            <ul props="native unreal bp rn electron unity cs">
            <li>0: 方法调用成功。</li>
            <li>&lt; 0: 方法调用失败。<ph props="cn">详见<xref keyref="error-code-link"/>了解详情和解决建议。</ph></li>
            </ul> </section>
        </refbody>
</reference>