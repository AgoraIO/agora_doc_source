<?xml version='1.0' encoding='UTF-8'?>
<!DOCTYPE reference PUBLIC "-//OASIS//DTD DITA Reference//EN" "reference.dtd">
<reference id="callback_irtcengineeventhandler_onrtcstats">
    <title> <ph keyref="onRtcStats"/> </title>
    <shortdesc id="short"> <ph id="shortdesc">报告当前通话的统计数据回调。</ph> </shortdesc>
    <prolog>
        <metadata>
            <keywords>
                <indexterm keyref="onRtcStats"/>
            </keywords>
        </metadata>
    </prolog>
    <refbody>
        <section id="prototype">
            <p outputclass="codeblock">
            <codeblock props="android" outputclass="language-java">public void onRtcStats(RtcStats stats) {}</codeblock>
            <codeblock props="hmos" outputclass="language-arkts">onRtcStats ? : (stats: RtcStats)  =&gt; void</codeblock>
            <codeblock props="ios mac" outputclass="language-objectivec">- (void)rtcEngine:(AgoraRtcEngineKit * _Nonnull)engine reportRtcStats:(AgoraChannelStats * _Nonnull)stats NS_SWIFT_NAME(rtcEngine(_:reportRtcStats:));</codeblock>
            <codeblock props="cpp unreal" outputclass="language-cpp">virtual void onRtcStats(const RtcStats&amp; stats) { (void)stats; }</codeblock>
         <codeblock props="bp" outputclass="language-cpp">UFUNCTION(BlueprintNativeEvent, Category = "Agora|Event")
	void OnRtcStats(const FRtcStats&amp; stats);</codeblock>
            <codeblock props="electron" outputclass="language-typescript">  onRtcStats?(connection: RtcConnection, stats: RtcStats): void;</codeblock>
            <codeblock props="unity cs" outputclass="language-csharp">public virtual void OnRtcStats(RtcConnection connection, RtcStats stats) {}</codeblock>
            <codeblock props="rn" outputclass="language-typescript">  onRtcStats?(connection: RtcConnection, stats: RtcStats): void;</codeblock>
            <codeblock props="flutter" outputclass="language-dart">final void Function(RtcConnection connection, RtcStats stats)? onRtcStats;</codeblock>
            <codeblock props="reserve" outputclass="language-cpp"/></p>
        </section>
        <section id="detailed_desc" deliveryTarget="details" otherprops="no-title">
            <p>该回调每两秒触发一次，用于报告当前通话的统计数据，包括发送/接收比特率、丢包率、CPU 占用率等信息。你可以通过该回调获取通话质量的实时数据。</p>
            </section>
        <section id="timing" deliveryTarget="details">
            <title>触发时机</title>
            <p>SDK 在用户加入频道后每两秒触发一次该回调。</p>
        </section>
        <section id="restriction" deliveryTarget="details">
            <title>使用限制</title>
            <p>无。</p>
        </section>
        <section id="parameters" deliveryTarget="details">
            <title> <ph keyref="callback-section-title"/> </title>
            <parml>
            <plentry conkeyref="onJoinChannelSuccess/engine" props="apple">
                <pt/>
                <pd/>
            </plentry>
            <plentry props="cs electron flutter rn unity">
                <pt>connection</pt>
                <pd> Connection 信息。详见 <xref keyref="RtcConnection"/>。</pd>
            </plentry>
            <plentry id="param">
                <pt>stats</pt>
                <pd props="bp cs electron flutter mac rn unity unreal">
                    <p>RTC 引擎统计数据，详见 <xref keyref="RtcStats"/>。</p>
                </pd>
            <pd props="android">通话的统计信息。详见 <xref keyref="RtcStats"/>。</pd>
                <pd props="ios">通话统计信息。详见 <xref keyref="RtcStats"/>。</pd>
                <pd props="cpp">RTC 引擎的统计数据。详见 <xref keyref="RtcStats"/>。</pd>
                </plentry>
            <plentry props="ios">
                <pt props="ios">engine</pt>
                <pd props="ios">引擎对象。详见 <xref keyref="IRtcEngine"/>。</pd>
            </plentry>
        </parml> </section>
    </refbody>
</reference>
