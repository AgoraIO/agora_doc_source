<?xml version='1.0' encoding='UTF-8'?>
<!DOCTYPE reference PUBLIC "-//OASIS//DTD DITA Reference//EN" "reference.dtd">
<reference id="callback_irtcengineeventhandler_onactivespeaker">
    <title><ph keyref="onActiveSpeaker"/></title>
    <shortdesc id="short"><ph id="shortdesc">最活跃远端说话人检测回调。</ph></shortdesc>
    <prolog>
        <metadata>
            <keywords>
                <indexterm keyref="onActiveSpeaker"/>
            </keywords>
        </metadata>
    </prolog>
    <refbody>
        <section id="prototype">
            <p outputclass="codeblock">
            <codeblock props="android" outputclass="language-java">public void onActiveSpeaker(int uid) {}</codeblock>
            <codeblock props="hmos" outputclass="language-arkts"/>
            <codeblock props="ios mac" outputclass="language-objectivec">- (void)rtcEngine:(AgoraRtcEngineKit * _Nonnull)engine activeSpeaker:(NSUInteger)speakerUid NS_SWIFT_NAME(rtcEngine(_:activeSpeaker:));</codeblock>
            <codeblock props="cpp unreal" outputclass="language-cpp">virtual void onActiveSpeaker(uid_t uid)</codeblock>
         <codeblock props="bp" outputclass="language-cpp">UFUNCTION(BlueprintNativeEvent, Category = "Agora|Event")
	void OnActiveSpeaker(int64 uid);</codeblock>
            <codeblock props="electron" outputclass="language-typescript">  onActiveSpeaker?(connection: RtcConnection, uid: number): void;</codeblock>
            <codeblock props="unity cs" outputclass="language-csharp">public virtual void OnActiveSpeaker(RtcConnection connection, uint uid) { }</codeblock>
            <codeblock props="rn" outputclass="language-typescript">  onActiveSpeaker?(connection: RtcConnection, uid: number): void;</codeblock>
            <codeblock props="flutter" outputclass="language-dart">final void Function(RtcConnection connection, int uid)? onActiveSpeaker;</codeblock>
            <codeblock props="reserve" outputclass="language-cpp"/></p>
        </section>
        <section id="detailed_desc">
            <p>成功调用 <xref keyref="enableAudioVolumeIndication"/> 方法后，SDK 会持续检测哪位远端用户的音量最大。在当前周期内，被检测为音量最大次数最多的远端用户即为最活跃用户。
                    <xref keyref="enableAudioVolumeIndication"/> 后，SDK 会持续监测音量最大的远端用户，并统计该用户被判断为音量最大者的次数。当前时间段内，该次数累积最多的远端用户为最活跃的用户。<ul>
                        <li>当频道内用户数不少于两人，且存在活跃的远端说话人时，SDK 会触发该回调，并报告最活跃远端说话人的用户 ID。</li>
                        <li>如果最活跃的远端说话人始终是同一用户，SDK 只会触发一次该回调。</li>
                        <li>如果最活跃的远端说话人变更为其他用户，SDK 会再次触发该回调，并报告新的最活跃远端说话人的用户 ID。</li>
                        </ul>
                    </p>
            <p>当频道内用户数量大于或等于 2 且有远端活跃用户时，SDK 会触发该回调并报告远端最活跃用户的 <parmname>uid</parmname>。



            <ul>
            <li>如果远端最活跃用户一直是同一位用户，则 SDK 不会再次触发 <apiname keyref="onActiveSpeaker"/> 回调。</li>
            <li>如果远端最活跃用户有变化，则 SDK 会再次触发该回调并报告新的远端最活跃用户的 <parmname>uid</parmname>。</li>
            </ul> </p>
            <p/>
        </section>
        <section id="timing" deliveryTarget="details">
            <title>调用时机</title>
            <p>当频道内用户数不少于两人，且存在活跃的远端说话人时触发。</p>
        </section>
        <section id="parameters">
            <title><ph keyref="callback-section-title"/></title>
            <parml>
            <plentry conkeyref="onJoinChannelSuccess/engine" props="apple">
                <pt/>
                <pd/>
            </plentry>
            <plentry props="cs electron flutter rn unity" conkeyref="joinChannelEx/connection">
                <pt/>
                <pd/>
            </plentry>
            <plentry id="uid">
                <pt props="bp">userId</pt>
                <pt props="android cpp cs electron flutter rn unity unreal">uid</pt>
                <pt props="apple">speakerUid</pt>
                <pd>远端最活跃用户的 ID。</pd>
            </plentry>
            <plentry props="android cpp">
                <pt props="android cpp">uid</pt>
                <pd props="android cpp">最活跃远端说话人的用户 ID。</pd>
                </plentry>
            <plentry props="ios">
                <pt props="ios">speakerUid</pt>
                <pd props="ios">最活跃远端说话人的用户 ID。</pd>
            </plentry>
            <plentry props="ios">
                <pt props="ios">engine</pt>
                <pd props="ios">引擎实例对象。详见 <xref keyref="IRtcEngine"/>。</pd>
            </plentry>
        </parml> </section>
    </refbody>
</reference>
