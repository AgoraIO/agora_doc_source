<?xml version='1.0' encoding='UTF-8'?>
<!DOCTYPE reference PUBLIC "-//OASIS//DTD DITA Reference//EN" "reference.dtd">
<reference id="api_irtcengine_setavsyncsource">
    <title> <ph keyref="setAVSyncSource"/> </title>
    <shortdesc id="short"> <ph id="shortdesc">将本地用户与远端用户绑定为音视频同步组。</ph> </shortdesc>
    <prolog>
        <metadata>
            <keywords>
                <indexterm keyref="setAVSyncSource"/>
            </keywords>
        </metadata>
    </prolog>
    <refbody>
        <section id="prototype">
            <p outputclass="codeblock">
            <codeblock props="android" outputclass="language-java">public abstract int setAVSyncSource(String channelId, int uid);</codeblock>
            <codeblock props="hmos" outputclass="language-arkts"/>
            <codeblock props="ios mac" outputclass="language-objectivec">- (int) setAVSyncSource:(NSString* _Nonnull)channelId uid:(NSUInteger)uid;</codeblock>
            <codeblock props="cpp unreal" outputclass="language-cpp">virtual int setAVSyncSource(const char* channelId, uid_t uid) = 0;</codeblock>
         <codeblock props="bp" outputclass="language-cpp">UFUNCTION(BlueprintCallable, Category = "Agora|IRtcEngine")
	int SetAVSyncSource(const FString&amp; channelId, int64 uid);</codeblock>
            <codeblock props="electron" outputclass="language-typescript">abstract setAVSyncSource(channelId: string, uid: number): number;</codeblock>
            <codeblock props="unity cs" outputclass="language-csharp">public abstract int SetAVSyncSource(string channelId, uint uid);</codeblock>
            <codeblock props="rn" outputclass="language-typescript">abstract setAVSyncSource(channelId: string, uid: number): number;</codeblock>
            <codeblock props="flutter" outputclass="language-dart">Future&lt;void&gt; setAVSyncSource({required String channelId, required int uid});</codeblock>
            <codeblock props="reserve" outputclass="language-cpp"/></p>
        </section>
        <section id="detailed_desc">
            <title>详情</title>
            <p>远端用户由频道 ID 和用户 ID 定义。本地用户必须是视频流发送端。在接收端，同一同步组中的媒体流将进行时间同步。</p>
            <note type="attention">建议你在加入频道前调用该方法。</note> </section>
        <section id="parameters">
            <title>参数</title>
            <parml>
            <plentry props="cpp">
                <pt props="cpp">channelId</pt>
                <pd>标识音频发送端所在频道的频道名。</pd>
                <pd props="cpp">频道 ID。</pd>
            </plentry>
            <plentry props="cpp">
                <pt props="cpp">uid</pt>
                <pd>音频发送端的用户 ID。</pd>
                <pd props="cpp">要与本地用户绑定的远端用户 ID。</pd>
            </plentry>
            </parml> </section>
        <section id="return_values">
            <title><ph keyref="return-section-title"/></title>
            <p props="flutter">方法成功调用时，无返回值；方法调用失败时，会抛出 <xref keyref="AgoraRtcException"/> 异常，你需要捕获异常并进行处理。<ph props="cn">详见<xref keyref="error-code-link"/>了解详情和解决建议。</ph></p>
            <ul props="bp cs electron native rn unity unreal">
            <li>0: 方法调用成功。</li>
            <li>&lt; 0: 方法调用失败。<ph props="cn">详见<xref keyref="error-code-link"/>了解详情和解决建议。</ph></li>
            </ul> </section>
    </refbody>
</reference>
