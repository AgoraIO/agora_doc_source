<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE reference PUBLIC "-//OASIS//DTD DITA Reference//EN" "reference.dtd">
<reference id="api_imusiccontentcenter_renewtoken">
    <title><ph keyref="renewToken_IMusicContentCenter"/></title>
    <shortdesc id="short"><ph id="shortdesc">更新 Token。</ph></shortdesc>
    <prolog>
        <metadata>
            <keywords>
                <indexterm keyref="renewToken_IMusicContentCenter"/>
            </keywords>
        </metadata>
    </prolog>
    <refbody>
        <section id="prototype">
            <p outputclass="codeblock">
            <codeblock props="android" outputclass="language-java">public abstract int renewToken(String token);</codeblock>
            <codeblock props="ios mac" outputclass="language-objectivec">- (NSInteger)renewToken:(NSString * _Nonnull)token;</codeblock>
            <codeblock props="cpp unreal" outputclass="language-cpp">virtual int renewToken(const char* token) = 0;</codeblock>
            <codeblock props="electron" outputclass="language-typescript">abstract renewToken(token: string): number;</codeblock>
            <codeblock props="unity cs" outputclass="language-csharp">public override int RenewToken(string token)
 	 	        {
 	 	            if (_rtcEngineInstance == null || _musicContentCenterImpl == null)
 	 	            {
 	 	                return ErrorCode;
 	 	            }
 	 	            return _musicContentCenterImpl.RenewToken(token);
 	 	        }</codeblock>
            <codeblock props="rn" outputclass="language-typescript">abstract renewToken(token: string): number;</codeblock>
            <codeblock props="flutter" outputclass="language-dart">Future&lt;void> renewToken(String token);</codeblock>
            <codeblock props="reserve" outputclass="language-cpp"></codeblock></p>
        </section>
        <section id="detailed_desc">
            <title>详情</title>
            <dl outputclass="since">
            <dlentry props="native">
                <dt>自从</dt>
                <dd>v4.1.0</dd>
            </dlentry>
            </dl>
            <p>当你用于鉴权的 Token 快要过期或已过期时，你可以调用该方法来传入新生成的 Token。 </p>
        </section>
        <section id="parameters">
            <title>参数</title>
            <parml>
            <plentry>
                <pt>token</pt>
                <pd>新的 Token。</pd>
            </plentry>
            </parml> </section>
        <section id="return_values">
            <title><ph keyref="return-section-title"/></title>
            <p props="flutter">方法成功调用时，无返回值；方法调用失败时，会抛出 <xref keyref="AgoraRtcException"/> 异常，你需要捕获异常并进行处理。<ph props="cn">详见<xref keyref="error-code-link"/>了解详情和解决建议。</ph></p>
            <ul props="native unreal bp unity rn electron cs">
            <li>0: 方法调用成功。</li>
            <li>&lt; 0: 方法调用失败。<ph props="cn">详见<xref keyref="error-code-link"/>了解详情和解决建议。</ph></li>
            </ul> </section>
    </refbody>
</reference>
