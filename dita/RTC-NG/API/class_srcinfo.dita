<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE reference PUBLIC "-//OASIS//DTD DITA Reference//EN" "reference.dtd">
<reference id="class_srcinfo">
    <title><ph keyref="SrcInfo" /></title>
    <shortdesc id="short"><ph id="shortdesc">媒体资源播放时的视频码率相关信息。</ph></shortdesc>
    <refbody>
        <section id="prototype">
            <p outputclass="codeblock">
            <codeblock props="android" outputclass="language-java">public class SrcInfo {
  private int bitrateInKbps;
  private String name;

  public SrcInfo() {}
}</codeblock>
            <codeblock props="hmos" outputclass="language-arkts">export class SrcInfo
{
  
  public bitrateInKbps:number = 0
  
  public name:string = &quot;&quot;
}</codeblock>
            <codeblock props="ios mac" outputclass="language-objectivec">__attribute__((visibility("default"))) @interface AgoraMediaPlayerSrcInfo : NSObject
@property(assign, nonatomic) int bitrateInKbps;
@property(copy, nonatomic) NSString *_Nullable name;
@end</codeblock>
            <codeblock props="cpp unreal" outputclass="language-cpp">struct SrcInfo {
  int bitrateInKbps;
  const char* name;
};</codeblock>
         <codeblock props="bp" outputclass="language-cpp">USTRUCT(BlueprintType)
struct FSrcInfo {
	GENERATED_BODY()
public:
	UPROPERTY(VisibleAnywhere, BlueprintReadWrite, Category = &quot;Agora|SrcInfo&quot;)
	int bitrateInKbps = 0;
	UPROPERTY(VisibleAnywhere, BlueprintReadWrite, Category = &quot;Agora|SrcInfo&quot;)
	FString name = &quot;&quot;;
	FSrcInfo(){}
	FSrcInfo(const agora::media::base::SrcInfo&amp; srcInfo) {
		bitrateInKbps = srcInfo.bitrateInKbps;
		name = UTF8_TO_TCHAR(srcInfo.name);
	}
	agora::media::base::SrcInfo CreateAgoraData() const {
		agora::media::base::SrcInfo srcInfo;
		srcInfo.bitrateInKbps = bitrateInKbps;
		SET_UABT_FSTRING_TO_CONST_CHAR___MEMALLOC(srcInfo.name,name)
		return srcInfo;
	}
	void FreeAgoraData(agora::media::base::SrcInfo&amp; srcInfo) const {
		SET_UABT_FSTRING_TO_CONST_CHAR___MEMFREE(srcInfo.name)
	}
};</codeblock>
            <codeblock props="electron" outputclass="language-typescript">export class SrcInfo {
  
  bitrateInKbps?: number;
  
  name?: string;
}</codeblock>
            <codeblock props="unity cs" outputclass="language-csharp">public class SrcInfo
    {
        public int bitrateInKbps { set; get; }
        public string name { set; get; }
    }</codeblock>
            <codeblock props="rn" outputclass="language-typescript">export class SrcInfo {
  
  bitrateInKbps?: number;
  
  name?: string;
}</codeblock>
            <codeblock props="flutter" outputclass="language-dart">class SrcInfo {
  const SrcInfo({this.bitrateInKbps, this.name});

  @JsonKey(name: 'bitrateInKbps')
  final int? bitrateInKbps;
  @JsonKey(name: 'name')
  final String? name;
  factory SrcInfo.fromJson(Map&lt;String, dynamic&gt; json) =&gt;
      _$SrcInfoFromJson(json);
  Map&lt;String, dynamic&gt; toJson() =&gt; _$SrcInfoToJson(this);
}</codeblock>
            <codeblock props="reserve" outputclass="language-cpp"></codeblock></p>
        </section>
        <section id="parameters">
            <title><text conref="../conref/conref_api_metadata.dita#conref_api_metadata/property" /></title>
            <parml>
            <plentry>
                <pt>bitrateInKbps</pt>
                <pd>媒体资源播放时的视频码率（Kbps）。</pd>
            </plentry>
            <plentry>
                <pt>name</pt>
                <pd>媒体资源的名字。</pd>
            </plentry>
            </parml> </section>
    </refbody>
</reference>