<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE reference PUBLIC "-//OASIS//DTD DITA Reference//EN" "reference.dtd">
<reference id="class_livestreamadvancedfeature">
    <title><ph keyref="LiveStreamAdvancedFeature" /></title>
    <shortdesc id="short"><ph id="shortdesc">转码推流的高级功能配置。</ph></shortdesc>
    <refbody>
        <section id="prototype">
            <p outputclass="codeblock">
            <codeblock props="android" outputclass="language-java" />
            <codeblock props="ios mac" outputclass="language-objectivec">__attribute__((visibility("default"))) @interface AgoraLiveStreamAdvancedFeature : NSObject

@property(copy, nonatomic) NSString* _Nullable featureName;
@property(assign, nonatomic) BOOL opened;
@end</codeblock>
            <codeblock props="cpp" outputclass="language-cpp">
  struct LiveStreamAdvancedFeature {
  LiveStreamAdvancedFeature() : featureName(NULL), opened(false) {}
  LiveStreamAdvancedFeature(const char* feat_name, bool open) : featureName(feat_name), opened(open) {}
  const char* featureName;
  bool opened;
} ;</codeblock>
            <codeblock props="electron" outputclass="language-typescript">export class LiveStreamAdvancedFeature {
  
  featureName?: string;
  
  opened?: boolean;
}</codeblock>
            <codeblock props="unity" outputclass="language-csharp">public class LiveStreamAdvancedFeature
    {
        public LiveStreamAdvancedFeature()
        {
            featureName = null;
            opened = false;
        }

        public LiveStreamAdvancedFeature(string feat_name, bool open)
        {
            featureName = feat_name;
            opened = open;
        }
        public string featureName { set; get; }
        public bool opened { set; get; }
    };</codeblock>
            <codeblock props="rn" outputclass="language-typescript">export class LiveStreamAdvancedFeature {
  
  featureName?: string;
  
  opened?: boolean;
}</codeblock>
            <codeblock props="flutter" outputclass="language-dart">class LiveStreamAdvancedFeature {
  const LiveStreamAdvancedFeature({this.featureName, this.opened});

  @JsonKey(name: 'featureName')
  final String? featureName;
  @JsonKey(name: 'opened')
  final bool? opened;
  factory LiveStreamAdvancedFeature.fromJson(Map&lt;String, dynamic&gt; json) =&gt;
      _$LiveStreamAdvancedFeatureFromJson(json);
  Map&lt;String, dynamic&gt; toJson() =&gt; _$LiveStreamAdvancedFeatureToJson(this);
}</codeblock>            
            <codeblock props="unreal" outputclass="language-cpp"></codeblock></p>
        </section>
        <section id="detailed_desc">
            <p>如需使用转码推流高级功能，请联系 <xref keyref="mailto-link" />。</p>
        </section>
        <section id="parameters">
            <title><text conref="../conref/conref_api_metadata.dita#conref_api_metadata/property" /></title>
            <parml>
            <plentry>
                <pt>featureName</pt>
                <pd>转码推流高级功能的名称，包含 LBHQ（低码率的高清视频功能） 和 VEO（优化的视频编码器功能）。</pd>
            </plentry>
            <plentry>
                <pt>opened</pt>
                <pd>是否启用转码推流的高级功能：

                    
                    <ul>
                    <li><codeph><ph keyref="true" /></codeph>：开启转码推流的高级功能。</li>
                    <li><codeph><ph keyref="false" /></codeph>：（默认）关闭转码推流的高级功能。</li>
                    </ul></pd>
            </plentry>
            </parml></section>
    </refbody>
</reference>