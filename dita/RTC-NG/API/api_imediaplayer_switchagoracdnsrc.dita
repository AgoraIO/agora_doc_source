<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE reference PUBLIC "-//OASIS//DTD DITA Reference//EN" "reference.dtd">
<reference id="api_imediaplayer_switchagoracdnsrc">
  <title> <ph keyref="switchAgoraCDNSrc" /> </title>
  <shortdesc id="short"><ph id="shortdesc">切换媒体资源。</ph> </shortdesc>
  <prolog>
    <metadata>
      <keywords>
        <indexterm keyref="switchAgoraCDNSrc" />
      </keywords>
    </metadata>
  </prolog>
  <refbody>
    <section id="prototype">
      <p outputclass="codeblock">
      <codeblock props="android" outputclass="language-java">int switchAgoraCDNSrc(String src, boolean syncPts);
</codeblock>
      <codeblock props="ios mac" outputclass="language-objectivec">- (int)switchAgoraCDNSrc:(NSString *)src syncPts:(BOOL)syncPts;
</codeblock>
      <codeblock props="cpp" outputclass="language-cpp">virtual int switchAgoraCDNSrc(const char* src, bool syncPts = false) = 0;
</codeblock>
      <codeblock props="electron" outputclass="language-typescript">abstract switchAgoraCDNSrc(src: string, syncPts?: boolean): number;</codeblock>
      <codeblock props="unity" outputclass="language-csharp">public abstract int SwitchAgoraCDNSrc(string src, bool syncPts = false);</codeblock>
      <codeblock props="rn" outputclass="language-typescript">abstract switchAgoraCDNSrc(src: string, syncPts?: boolean): number;</codeblock>
      <codeblock props="flutter" outputclass="language-dart">Future&lt;void&gt; switchAgoraCDNSrc({required String src, bool syncPts = false});</codeblock>
            <codeblock props="reserve" outputclass="language-cpp"></codeblock></p>
    </section>
    <section id="detailed_desc">
            <title>详情</title>
      <p>如果用户需要自定义播放线路，你可以调用该方法实现媒体资源切换。声网会通过自研调度中心支持调度线路，提升观看用户体验。如果用户不需要自定义播放线路，你可以调用 <xref keyref="switchSrc" /> 实现媒体资源切换。
</p>
      <note type="note">
      <ul>
      <li>请在 <xref keyref="openWithAgoraCDNSrc" /> 后调用该方法。</li>
      <li>该方法在 <xref keyref="play" /> 前后均可调用。如果你在 <apiname keyref="play" /> 前调用该方法，SDK 会等你调用 <apiname keyref="play" /> 后再完成线路切换。
</li>
      </ul> </note>
      <p conkeyref="openWithAgoraCDNSrc/auth" />
    </section>
    <section id="parameters">
      <title>参数</title>
      <parml>
      <plentry id="src">
        <pt>src</pt>
        <pd>媒体资源的网络路径。</pd>
      </plentry>
      <plentry id="syncPts">
        <pt>syncPts</pt>
        <pd>是否同步切换前后的起始播放位置:


          <ul>
          <li><codeph><ph keyref="true" /></codeph>：同步。</li>
          <li><codeph><ph keyref="false" /></codeph>：(默认) 不同步。</li>
          </ul>
          <p>如果媒体资源为直播流，你只能将该参数设置为 <codeph><ph keyref="false" /></codeph>，否则 SDK 切换媒体资源会失败。如果媒体资源为点播流，你可以根据场景需求对该参数赋值。</p>
        </pd>
      </plentry>
      </parml> </section>
    <section id="return_values">
      <title><ph keyref="return-section-title"/></title>
            <p props="flutter">方法成功调用时，无返回值；方法调用失败时，会抛出 <xref keyref="AgoraRtcException"/> 异常，你需要捕获异常并进行处理。</p>
      <ul>
      <li props="native electron unity">0: 方法调用成功。</li>
      <li>&lt; 0: 方法调用失败。</li>
      </ul> </section>
  </refbody>
</reference>