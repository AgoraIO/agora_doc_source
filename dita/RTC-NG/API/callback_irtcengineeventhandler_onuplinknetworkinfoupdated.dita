<?xml version='1.0' encoding='UTF-8'?>
<!DOCTYPE reference PUBLIC "-//OASIS//DTD DITA Reference//EN" "reference.dtd">
<reference id="callback_irtcengineeventhandler_onuplinknetworkinfoupdated">
    <title><ph keyref="onUplinkNetworkInfoUpdated"/></title>
    <shortdesc id="short"><ph id="shortdesc">上行网络信息发生变化时触发的回调。</ph></shortdesc>
    <prolog>
        <metadata>
            <keywords>
                <indexterm keyref="onUplinkNetworkInfoUpdated"/>
            </keywords>
        </metadata>
    </prolog>
    <refbody>
        <section id="prototype">
            <p outputclass="codeblock">
            <codeblock props="android" outputclass="language-java">public void onUplinkNetworkInfoUpdated(UplinkNetworkInfo info) {}</codeblock>
            <codeblock props="hmos" outputclass="language-arkts"/>
            <codeblock props="ios mac" outputclass="language-objectivec">- (void)rtcEngine:(AgoraRtcEngineKit *_Nonnull)engine uplinkNetworkInfoUpdate:(AgoraUplinkNetworkInfo *_Nonnull)networkInfo NS_SWIFT_NAME(rtcEngine(_:uplinkNetworkInfoUpdate:));</codeblock>
            <codeblock props="cpp unreal" outputclass="language-cpp">virtual void onUplinkNetworkInfoUpdated(const UplinkNetworkInfo&amp; info)</codeblock>
         <codeblock props="bp" outputclass="language-cpp">UFUNCTION(BlueprintNativeEvent, Category = "Agora|Event")
	void OnUplinkNetworkInfoUpdated(const FUplinkNetworkInfo&amp; info);</codeblock>
            <codeblock props="electron" outputclass="language-typescript">  onUplinkNetworkInfoUpdated?(info: UplinkNetworkInfo): void;</codeblock>
            <codeblock props="unity cs" outputclass="language-csharp">public virtual void OnUplinkNetworkInfoUpdated(UplinkNetworkInfo info) {}</codeblock>
            <codeblock props="rn" outputclass="language-typescript">  onUplinkNetworkInfoUpdated?(info: UplinkNetworkInfo): void;</codeblock>
            <codeblock props="flutter" outputclass="language-dart">final void Function(UplinkNetworkInfo info)? onUplinkNetworkInfoUpdated;</codeblock>
            <codeblock props="reserve" outputclass="language-cpp"/></p>
        </section>
        <section id="detailed_desc">
            <p></p>
            <note type="attention">该回调仅适用于向 SDK 推送 H.264 格式的外部编码视频数据的场景。</note> <note type="attention" props="cpp">该回调仅适用于向 SDK 推送外部编码的 H.264 格式视频数据的场景。</note>
            <note type="attention" props="apple">该回调仅适用于你将外部编码的 H.264 格式视频数据推送至 SDK 的场景。</note>
            <note type="attention" props="android">该回调仅适用于将外部编码的 H.264 格式视频数据推送至 SDK 的场景。</note>
            </section>
        <section id="parameters">
            <title>参数</title>
            <parml>
            <plentry conkeyref="onJoinChannelSuccess/engine" props="apple">
                <pt/>
                <pd/>
            </plentry>
            <plentry>
                <pt>info</pt>
                <pt props="apple">networkInfo</pt>
                <pd props="apple bp cs electron flutter rn unity unreal">上行网络信息，详见 <xref keyref="UplinkNetworkInfo"/>。</pd>
            <pd props="android cpp">上行网络信息。详见 <xref keyref="UplinkNetworkInfo"/>。</pd>
                </plentry>
            <plentry props="ios">
                <pt props="ios">networkInfo</pt>
                <pd props="ios">上行网络信息，详见 <xref keyref="UplinkNetworkInfo"/>。</pd>
                </plentry>
            <plentry props="ios">
                <pt props="ios">engine</pt>
                <pd props="ios"><xref keyref="IRtcEngine"/> 对象，详见 <xref keyref="IRtcEngine"/>。</pd>
                </plentry>
        </parml> </section>
    </refbody>
</reference>
