<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE reference PUBLIC "-//OASIS//DTD DITA Reference//EN" "reference.dtd">
<reference id="api_imediarecorder_release">
    <title><ph keyref="releaseRecorder"/></title>
    <shortdesc id="short"><ph id="shortdesc">释放 <xref keyref="IMediaRecorder"/> 对象。</ph></shortdesc>
    <prolog>
        <metadata>
            <keywords>
                <indexterm keyref="releaseRecorder"/>
            </keywords>
        </metadata>
    </prolog>
    <refbody>
        <section id="prototype">
            <p outputclass="codeblock">
            <codeblock props="android" outputclass="language-java">public void release() {
    RtcEngineImpl engine = null;
    if (mEngineReference != null &amp;&amp; (engine = mEngineReference.get()) != null) {
      engine.releaseRecorder();
    }
    mEngineReference = null;
    return;
  }</codeblock>
            <codeblock props="ios mac" outputclass="language-objectivec">+ (void)destroy;</codeblock>
            <codeblock props="cpp" outputclass="language-cpp">virtual void release() = 0;</codeblock>
            <codeblock props="electron" outputclass="language-typescript">abstract release(): void;</codeblock>
            <codeblock props="unity" outputclass="language-csharp"/>
            <codeblock props="rn" outputclass="language-typescript">abstract release(): void;</codeblock>
            <codeblock props="flutter" outputclass="language-dart">Future&lt;void> release();</codeblock>
            <codeblock props="reserve" outputclass="language-cpp"></codeblock></p>
        </section>
        <section id="detailed_desc">
            <p><ph>该方法释放 <xref keyref="IMediaRecorder"/> 对象使用的 <xref keyref="IRtcEngine"/> 对象和其他所有资源。</ph><ph props="android apple rn electron flutter">调用该方法后，如果需要再次开启录制，需要重新调用 <xref keyref="getMediaRecorder"/> 获取 <xref keyref="IMediaRecorder"/> 对象。</ph></p>
        </section>
    </refbody>
</reference>
