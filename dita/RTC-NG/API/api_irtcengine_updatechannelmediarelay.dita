<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE reference PUBLIC "-//OASIS//DTD DITA Reference//EN" "reference.dtd">
<reference id="api_irtcengine_updatechannelmediarelay">
    <title><ph keyref="updateChannelMediaRelay" /></title>
    <shortdesc id="short"><ph id="shortdesc">更新媒体流转发的频道。</ph></shortdesc>
    <prolog>
        <metadata>
            <keywords>
                <indexterm keyref="updateChannelMediaRelay" />
            </keywords>
        </metadata>
    </prolog>
    <refbody>
        <section id="prototype">
            <p outputclass="codeblock">
            <codeblock props="android" outputclass="language-java">public abstract int updateChannelMediaRelay(
      ChannelMediaRelayConfiguration channelMediaRelayConfiguration);</codeblock>
            <codeblock props="ios mac" outputclass="language-objectivec">- (int)updateChannelMediaRelay:(AgoraChannelMediaRelayConfiguration * _Nonnull)config;</codeblock>
            <codeblock props="cpp" outputclass="language-cpp">virtual int updateChannelMediaRelay(const ChannelMediaRelayConfiguration &amp;configuration) = 0;</codeblock>
            <codeblock props="electron" outputclass="language-typescript">abstract updateChannelMediaRelay(
    configuration: ChannelMediaRelayConfiguration
  ): number;</codeblock>
            <codeblock props="unity" outputclass="language-csharp">public abstract int UpdateChannelMediaRelay(ChannelMediaRelayConfiguration configuration);</codeblock>
            <codeblock props="rn" outputclass="language-typescript">abstract updateChannelMediaRelay(
    configuration: ChannelMediaRelayConfiguration
  ): number;</codeblock>
            <codeblock props="flutter" outputclass="language-dart">Future&lt;void&gt; updateChannelMediaRelay(
      ChannelMediaRelayConfiguration configuration);</codeblock>
            <codeblock props="unreal" outputclass="language-cpp"></codeblock></p>
        </section>
        <section id="detailed_desc">
            <p id="desc">成功开始跨频道转发媒体流后，如果你希望将流转发到多个目标频道，或退出当前的转发频道，可以调用该方法。</p>
            <p>成功调用该方法后，SDK 会触发 <xref keyref="onChannelMediaRelayEvent" /> 回调， 并在回调中报告状态码 <apiname keyref="RELAY_EVENT_PACKET_UPDATE_DEST_CHANNEL" /> (7)。</p>
            <note type="attention">请在成功调用 <xref keyref="startChannelMediaRelay" /> 方法并收到 <codeph><xref keyref="onChannelMediaRelayStateChanged" />(<ph keyref="RELAY_STATE_RUNNING" />, <ph keyref="RELAY_OK" />)</codeph> 后调用该方法；否则，方法调用会失败。</note> </section>
        <section id="parameters">
            <title>参数</title>
            <parml>
            <plentry>
                <pt props="android">channelMediaRelayConfiguration</pt>
                <pt props="ios mac">config</pt>
                <pt props="cpp unity rn electron flutter">configuration</pt>
                <pd>跨频道媒体流转发参数配置。详见 <xref keyref="ChannelMediaRelayConfiguration" /> 。</pd>
            </plentry>
            </parml> </section>
        <section id="return_values" props="native electron unity rn">
            <title>返回值</title>
            <ul>
            <li>0：方法调用成功</li>
            <li>&lt; 0：方法调用失败</li>
            </ul> </section>
    </refbody>
</reference>