<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE reference PUBLIC "-//OASIS//DTD DITA Reference//EN" "reference.dtd">
<reference id="api_irtcengine_enableechocancellationexternal">
    <title><ph keyref="enableEchoCancellationExternal" /></title>
    <shortdesc id="short"><ph id="shortdesc">开启/关闭自定义回声消除。</ph></shortdesc>
    <prolog>
        <metadata>
            <keywords>
                <indexterm keyref="enableEchoCancellationExternal" />
            </keywords>
        </metadata>
    </prolog>
    <refbody>
        <section id="prototype">
            <p outputclass="codeblock">
            <codeblock props="android" outputclass="language-java">public abstract int enableEchoCancellationExternal(boolean enabled, int audioSourceDelay);</codeblock>
            <codeblock props="ios mac" outputclass="language-objectivec">- (int)enableEchoCancellationExternal:(BOOL)enabled
                    audioSourceDelay:(NSInteger)audioSourceDelay;</codeblock>
            <codeblock props="cpp unreal bp" outputclass="language-cpp">virtual int enableEchoCancellationExternal(bool enabled, int audioSourceDelay) = 0;</codeblock>
            <codeblock props="electron" outputclass="language-typescript">abstract enableEchoCancellationExternal(
    enabled: boolean,
    audioSourceDelay: number
  ): number;</codeblock>
            <codeblock props="unity cs" outputclass="language-csharp"> public abstract int EnableEchoCancellationExternal(bool enabled, int audioSourceDelay);</codeblock>
            <codeblock props="rn" outputclass="language-typescript">abstract enableEchoCancellationExternal(
    enabled: boolean,
    audioSourceDelay: number
  ): number;</codeblock>
  <codeblock props="flutter" outputclass="language-dart">Future&lt;void&gt; enableEchoCancellationExternal(
    {required bool enabled, required int audioSourceDelay});</codeblock>
            <codeblock props="reserve" outputclass="language-cpp"></codeblock></p>
        </section>
        <section id="detailed_desc">
            <title>详情</title>
            <p>调用该方法后，你可以将外部音频帧推送到自定义音频模块进行回声消除。</p>
            <note type="attention">你需要在调用 <xref keyref="setExternalAudioSink" /> 之后、加入频道之前调用该方法。</note> </section>
        <section id="parameters">
            <title>参数</title>
            <parml>
            <plentry>
                <pt>enabled</pt>
                <pd>设置是否开启自定义回声消除：

                    <ul>
                    <li><codeph><ph keyref="true" /></codeph>：开启。</li>
                    <li><codeph><ph keyref="false" /></codeph>：关闭。</li>
                    </ul> </pd>
            </plentry>
            <plentry>
                <pt>audioSourceDelay</pt>
                <pd>设置推送音频帧到发布音频帧中间的时间（毫秒）。取值范围为 [0,30]。

                    <ul>
                    <li>如需调用 <xref keyref="pushCaptureAudioFrame1" />，请确保该参数设为 0。</li>
                    <li>如需调用 <xref keyref="pushReverseAudioFrame1" /> 或处理声卡采集的音频帧，请确保该参数为 10 的整数倍。</li>
                    </ul></pd>
            </plentry>
            </parml> </section>
        <section id="return_values">
            <title><ph keyref="return-section-title"/></title>
            <p props="flutter">方法成功调用时，无返回值；方法调用失败时，会抛出 <xref keyref="AgoraRtcException"/> 异常，你需要捕获异常并进行处理。</p>
            <ul>
            <li props="native unreal bp unity cs">0：方法调用成功。</li>
            <li>&lt; 0：方法调用失败。</li>
            </ul> </section>
    </refbody>
</reference>