<?xml version='1.0' encoding='UTF-8'?>
<!DOCTYPE reference PUBLIC "-//OASIS//DTD DITA Reference//EN" "reference.dtd">
<reference id="callback_playerobserver_onevent">
    <title><ph keyref="onEvent"/></title>
    <shortdesc id="short"><ph id="shortdesc">播放器状态变化时触发的回调。</ph></shortdesc>
    <prolog>
        <metadata>
            <keywords>
                <indexterm keyref="onEvent"/>
            </keywords>
        </metadata>
    </prolog>
    <refbody>
        <section id="prototype">
            <p outputclass="codeblock">
            <codeblock props="android" outputclass="language-java">public void onEvent(int event)</codeblock>
            <codeblock props="hmos" outputclass="language-arkts"/>
            <codeblock props="ios mac" outputclass="language-objectivec">- (void)onEvent:(AgoraRtePlayerEvent)event;</codeblock>
            <codeblock props="cpp unreal" outputclass="language-cpp">virtual void onEvent(PlayerEvent event) {}</codeblock>
            <codeblock props="bp" outputclass="language-cpp"/>
            <codeblock props="cs" outputclass="language-csharp"/>
            <codeblock props="electron" outputclass="language-typescript"/>
            <codeblock props="unity cs" outputclass="language-csharp"/>
            <codeblock props="rn" outputclass="language-typescript"/>
            <codeblock props="flutter" outputclass="language-dart"/> </p>
        </section>
        <section id="detailed_desc" deliveryTarget="details" otherprops="no-title">
            <dl outputclass="since">
            <dlentry props="native">
                <dt>自从：</dt>
                <dd props="native">自 v4.4.0 版本新增。</dd>
                </dlentry>
            </dl>
            <p>当播放器状态发生变化时触发。</p>
            </section>
        <section id="timing" deliveryTarget="details">
            <title>触发时机</title>
            <p>当播放器状态发生变化时触发。</p>
        </section>        
        <section id="restriction" deliveryTarget="details">
            <title>使用限制</title>
            <p>无。</p>
        </section>
        <section id="parameters" deliveryTarget="details">
            <title>参数</title>
            <parml>
            <plentry props="android cpp ios">
                <pt props="android cpp ios">event</pt>
                <pd props="android">回调通知的事件。详见 <xref keyref="PlayerEvent"/>。
                    <ul>
                        <li><ph keyref="AgoraRtePlayerEventFreezeStart"/>：发生卡顿或显示加载动画。</li>
                        <li><ph keyref="AgoraRtePlayerEventFreezeStop"/>：卡顿结束或停止加载动画。</li>
                        <li><ph keyref="AgoraRtePlayerEventAuthenticationWillExpire"/>：Token 即将过期。你需要重新生成 Token，使用新 Token 构造 RTE URL，并调用 <xref keyref="OpenWithUrl"/> 刷新 Token。</li>
                        <li><ph keyref="AgoraRtePlayerEventAbrFallbackToAudioOnlyLayer"/>：由于网络原因，已退回到纯音频模式。</li>
                        <li><ph keyref="AgoraRtePlayerEventAbrRecoverFromAudioOnlyLayer"/>：已从纯音频模式恢复为视频模式。</li>
                        </ul>
                    </pd>
                <pd props="ios">回调通知的事件，详见 <xref keyref="PlayerEvent"/>。
                    <ul>
                        <li><ph keyref="AgoraRtePlayerEventFreezeStart"/>：表示发生卡顿或显示加载动画。</li>
                        <li><ph keyref="AgoraRtePlayerEventFreezeStop"/>：表示卡顿结束或停止加载动画。</li>
                        <li><ph keyref="AgoraRtePlayerEventAuthenticationWillExpire"/>：你需要重新生成 Token，使用新 Token 构建 RTE URL，并调用 <xref keyref="OpenWithUrl"/> 刷新 Token。</li>
                        <li><ph keyref="AgoraRtePlayerEventAbrFallbackToAudioOnlyLayer"/>：表示由于网络原因，已退回为纯音频模式。</li>
                        <li><ph keyref="AgoraRtePlayerEventAbrRecoverFromAudioOnlyLayer"/>：表示已从纯音频模式恢复为视频模式。</li>
                        </ul>
                    </pd>
                <pd props="cpp">回调通知的事件，详见 <xref keyref="PlayerEvent"/>。
                    <ul>
                        <li><codeph>kRtePlayerEventFreezeStart</codeph>：发生卡顿或显示加载动画。</li>
                        <li><codeph>kRtePlayerEventFreezeStop</codeph>：卡顿结束或停止加载动画。</li>
                        <li><codeph>kRtePlayerEventAuthenticationWillExpire</codeph>：Token 即将过期。你需要重新生成 Token，使用新 Token 创建 RTE URL，并调用 <xref keyref="OpenWithUrl"/> 刷新 Token。</li>
                        <li><codeph>kRtePlayerEventAbrFallbackToAudioOnlyLayer</codeph>：由于网络原因，已降级为纯音频模式。</li>
                        <li><codeph>kRtePlayerEventAbrRecoverFromAudioOnlyLayer</codeph>：已从纯音频模式恢复为视频模式。</li>
                        </ul>
                    </pd>
            </plentry>
            </parml> </section>
        <section id="return_values" props="bp electron flutter rn unity unreal">
            <title><ph keyref="return-section-title"/></title>
        <p props="flutter">方法成功调用时，无返回值；方法调用失败时，会抛出 <xref keyref="AgoraRtcException"/> 异常，你需要捕获异常并进行处理。</p>
        <ul props="bp electron rn unity unreal">
                <li>0: 方法调用成功。</li>
                <li>&lt; 0: 方法调用失败。<ph props="cn">详见<xref keyref="error-code-link"/>了解详情和解决建议。</ph></li>
                </ul>
    </section>
    </refbody>
</reference>
