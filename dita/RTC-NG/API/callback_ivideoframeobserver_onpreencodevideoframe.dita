<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE reference PUBLIC "-//OASIS//DTD DITA Reference//EN" "reference.dtd">
<reference id="callback_ivideoframeobserver_onpreencodevideoframe">
    <title><ph keyref="onPreEncodeVideoFrame"/></title>
    <shortdesc id="short"><ph id="shortdesc">获取本地视频编码前的视频数据。</ph></shortdesc>
    <prolog>
        <metadata>
            <keywords>
                <indexterm keyref="onPreEncodeVideoFrame"/>
            </keywords>
        </metadata>
    </prolog>
    <refbody>
        <section id="prototype">
            <p outputclass="codeblock">
            <codeblock props="android" outputclass="language-java">boolean onPreEncodeVideoFrame(int sourceType, VideoFrame videoFrame);</codeblock>
            <codeblock props="ios mac" outputclass="language-objectivec">- (BOOL)onPreEncodeVideoFrame:(AgoraOutputVideoFrame * _Nonnull)videoFrame sourceType:(AgoraVideoSourceType)sourceType;</codeblock>
            <codeblock props="cpp unreal bp" outputclass="language-cpp">virtual bool onPreEncodeVideoFrame(agora::rtc::VIDEO_SOURCE_TYPE sourceType, VideoFrame&amp; videoFrame) = 0;</codeblock>
            <codeblock props="electron" outputclass="language-typescript">  onPreEncodeVideoFrame?(videoFrame: VideoFrame): boolean;</codeblock>
            <codeblock props="unity cs" outputclass="language-csharp">public virtual bool OnPreEncodeVideoFrame(VIDEO_SOURCE_TYPE sourceType, VideoFrame videoFrame)</codeblock>
            <codeblock props="rn" outputclass="language-typescript">  onPreEncodeVideoFrame?(videoFrame: VideoFrame): boolean;</codeblock>
            <codeblock props="flutter" outputclass="language-dart">final void Function(VideoFrame videoFrame)? onPreEncodeVideoFrame;</codeblock>
            <codeblock props="reserve" outputclass="language-cpp"></codeblock></p>
        </section>
        <section id="detailed_desc">
            <p>成功注册视频数据观测器后，SDK 会在捕捉到每个视频帧时触发该回调。你可以在回调中获取编码前的视频数据，然后根据场景需要，对视频数据进行处理。</p>
            <p props="native unreal bp unity electron rn cs">完成处理后，你可以在该回调中，传入处理后的视频数据将其发送回 SDK。</p>
            <note type="attention">
            <ul>
                <li props="native unreal bp unity cs">你需要通过 <xref keyref="getObservedFramePosition"/> 设置观测 <apiname keyref="POSITION_PRE_ENCODER"/>(1 &lt;&lt; 2) 后，才能使用该回调获取本地视频编码前的视频数据。</li>
                <li props="flutter">由于 Flutter 框架的限制，该回调不支持将处理后的视频数据发送回 SDK。</li>
                <li>此处获取的视频数据已经过前处理，如裁剪、旋转和美颜等。</li>
            </ul></note>
        </section>
        <section id="parameters">
            <title>参数</title>
            <parml>
                <plentry conkeyref="enableDualStreamMode2/sourcetype">
                    <pt/>
                    <pd/>
                </plentry>
                <plentry conkeyref="onCaptureVideoFrame/videoframe">
                    <pt/>
                    <pd/>
                </plentry>
            </parml> </section>
        <section id="return_values" props="native unreal bp electron unity rn cs">
            <title>返回值</title>
            <p conkeyref="onCaptureVideoFrame/return"/>
        </section>
    </refbody>
</reference>
