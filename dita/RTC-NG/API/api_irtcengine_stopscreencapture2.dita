<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE reference PUBLIC "-//OASIS//DTD DITA Reference//EN" "reference.dtd">
<reference id="api_irtcengine_stopscreencapture2">
    <title><ph keyref="stopScreenCapture2" /></title>
    <shortdesc id="short"><ph id="shortdesc">停止对指定的视频源进行屏幕采集。</ph></shortdesc>
    <prolog>
        <metadata>
            <keywords>
                <indexterm keyref="stopScreenCapture2" />
            </keywords>
        </metadata>
    </prolog>
    <refbody>
        <section id="prototype">
            <p outputclass="codeblock">
            <codeblock props="android" outputclass="language-java" />
            <codeblock props="hmos" outputclass="language-arkts"></codeblock>
            <codeblock props="ios mac" outputclass="language-objectivec">- (int)stopScreenCapture:(AgoraVideoSourceType)sourceType NS_SWIFT_NAME(stopScreenCapture(_:));</codeblock>
            <codeblock props="cpp unreal" outputclass="language-cpp">virtual int stopScreenCapture(VIDEO_SOURCE_TYPE sourceType) = 0;</codeblock>
         <codeblock props="bp" outputclass="language-cpp">UFUNCTION(BlueprintCallable, Category = &quot;Agora|IRtcEngine&quot;)
	int StopScreenCaptureBySourceType(EVIDEO_SOURCE_TYPE sourceType);</codeblock>
            <codeblock props="electron" outputclass="language-typescript">abstract stopScreenCaptureBySourceType(sourceType: VideoSourceType): number;</codeblock>
            <codeblock props="unity cs" outputclass="language-csharp">public abstract int StopScreenCapture(VIDEO_SOURCE_TYPE sourceType);</codeblock>
            <codeblock props="rn" outputclass="language-typescript"/>
            <codeblock props="flutter" outputclass="language-dart">Future&lt;void> stopScreenCaptureBySourceType(VideoSourceType sourceType);</codeblock>
            <codeblock props="reserve" outputclass="language-cpp"></codeblock></p>
        </section>
        <section id="detailed_desc" deliveryTarget="details" otherprops="no-title">
            <dl outputclass="since">
            <dlentry props="android apple cpp">
                <dt>自从</dt>
                <dd>v4.2.0</dd>
            </dlentry>
            </dl>
            <note props="cpp unreal bp flutter unity" type="attention">该方法仅适用于 macOS 和 Windows 平台。</note>
        </section>
        <section id="scenario" deliveryTarget="details">
            <title>适用场景</title>
            <p>如果你调用了 <xref keyref="startScreenCapture2"/> 开启一路或多路屏幕采集，则停止屏幕采集时需要调用该方法，并通过 <parmname>sourceType</parmname> 参数指定屏幕。</p>
        </section>
        <section id="timing" deliveryTarget="details">
            <title>调用时机</title>
            <p>该方法在加入频道前后均可调用。</p>
        </section>        
        <section id="restriction" deliveryTarget="details">
            <title>调用限制</title>
            <p>无。</p>
        </section>
        <section id="parameters" deliveryTarget="details">
            <title>参数</title>
            <parml>
            <plentry>
                <pt>sourceType</pt>
                <pd>视频源的类型，详见 <xref keyref="VIDEO_SOURCE_TYPE"/>。</pd>
            </plentry></parml>
        </section>
        <section id="return_values">
            <title><ph keyref="return-section-title"/></title>
            <p props="flutter">方法成功调用时，无返回值；方法调用失败时，会抛出 <xref keyref="AgoraRtcException"/> 异常，你需要捕获异常并进行处理。<ph props="cn">详见<xref keyref="error-code-link"/>了解详情和解决建议。</ph></p>
            <ul props="native unreal bp electron unity cs">
            <li>0: 方法调用成功。</li>
            <li>&lt; 0: 方法调用失败。<ph props="cn">详见<xref keyref="error-code-link"/>了解详情和解决建议。</ph></li>
            </ul> </section>
    </refbody>
</reference>
