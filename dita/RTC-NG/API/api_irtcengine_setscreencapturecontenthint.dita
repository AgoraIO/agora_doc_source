<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE reference PUBLIC "-//OASIS//DTD DITA Reference//EN" "reference.dtd">
<reference id="api_irtcengine_setscreencapturecontenthint">
    <title><ph keyref="setScreenCaptureContentHint" /></title>
    <shortdesc id="short"><ph id="shortdesc">设置屏幕共享内容类型。</ph></shortdesc>
    <prolog>
        <metadata>
            <keywords>
                <indexterm keyref="setScreenCaptureContentHint" />
            </keywords>
        </metadata>
    </prolog>
    <refbody>
        <section id="prototype">
            <p outputclass="codeblock">
            <codeblock props="android" outputclass="language-java" />
            <codeblock props="ios mac" outputclass="language-objectivec" />
            <codeblock props="cpp unreal" outputclass="language-cpp">virtual int setScreenCaptureContentHint(VIDEO_CONTENT_HINT contentHint) = 0;
            </codeblock>
         <codeblock props="bp" outputclass="language-cpp">UFUNCTION(BlueprintCallable, Category = &quot;Agora|RtcEngineProxy&quot;)
	int SetScreenCaptureContentHint(EVIDEO_CONTENT_HINT contentHint);</codeblock>
            <codeblock props="electron" outputclass="language-typescript">abstract setScreenCaptureContentHint(contentHint: VideoContentHint): number;</codeblock>
            <codeblock props="unity cs" outputclass="language-csharp">public abstract int SetScreenCaptureContentHint(VIDEO_CONTENT_HINT contentHint);</codeblock>
            <codeblock props="rn" outputclass="language-typescript">abstract setScreenCaptureContentHint(contentHint: VideoContentHint): number;</codeblock>
            <codeblock props="flutter" outputclass="language-dart">Future&lt;void&gt; setScreenCaptureContentHint(VideoContentHint contentHint);</codeblock>
            <codeblock props="reserve" outputclass="language-cpp"></codeblock></p>
        </section>
        <section id="detailed_desc">
            <title>详情</title>
   <p id="desc">SDK 会根据不同的内容类型，使用不同的算法对共享效果进行优化。如果不调用该方法，SDK 会将屏幕共享的内容默认为 <ph keyref="CONTENT_HINT_NONE" />，即无指定的内容类型。</p>
   <note type="attention" id="note">该方法在开始屏幕共享前后都能调用。</note>
        </section>
        <section id="parameters"><title>参数</title>
   <parml>
       <plentry>
  <pt>contentHint</pt>
  <pd>屏幕共享的内容类型。详见 <xref keyref="VIDEO_CONTENT_HINT" />。</pd>
       </plentry>
   </parml>
        </section>
        <section id="return_values">
   <title><ph keyref="return-section-title"/></title>
            <p props="flutter">方法成功调用时，无返回值；方法调用失败时，会抛出 <xref keyref="AgoraRtcException"/> 异常，你需要捕获异常并进行处理。<ph props="cn">详见<xref keyref="error-code-link"/>了解详情和解决建议。</ph></p>
    <ul props="native unreal bp electron unity rn cs">
       <li>0: 方法调用成功。</li>
       <li>&lt; 0: 方法调用失败。<ph props="cn">详见<xref keyref="error-code-link"/>了解详情和解决建议。</ph>
        <ul conkeyref="startScreenCaptureByDisplayId/err"><li /></ul>
       </li>
   </ul>
        </section></refbody>
</reference>