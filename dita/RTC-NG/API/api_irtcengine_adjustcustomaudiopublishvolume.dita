<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE reference PUBLIC "-//OASIS//DTD DITA Reference//EN" "reference.dtd">
<reference id="api_irtcengine_adjustcustomaudiopublishvolume">
    <title><ph keyref="adjustCustomAudioPublishVolume" /></title>
    <shortdesc id="short"><ph id="shortdesc">调节自定义音频采集轨道在远端播放的音量。</ph></shortdesc>
    <prolog>
        <metadata>
            <keywords>
                <indexterm keyref="adjustCustomAudioPublishVolume" />
            </keywords>
        </metadata>
    </prolog>
    <refbody>
        <section id="prototype">
            <p outputclass="codeblock">
            <codeblock props="android" outputclass="language-java">public abstract int adjustCustomAudioPublishVolume(int trackId, int volume);</codeblock>
            <codeblock props="ios mac" outputclass="language-objectivec">- (int)adjustCustomAudioPublishVolume:(NSInteger)trackId volume:(NSInteger)volume NS_SWIFT_NAME(adjustCustomAudioPublishVolume(_:volume:));</codeblock>
            <codeblock props="cpp unreal" outputclass="language-cpp">virtual int adjustCustomAudioPublishVolume(track_id_t trackId, int volume) = 0;</codeblock>
         <codeblock props="bp" outputclass="language-cpp">UFUNCTION(BlueprintCallable, Category = &quot;Agora|RtcEngineProxy&quot;)
	int AdjustCustomAudioPublishVolume(int64 trackId, int volume);</codeblock>
            <codeblock props="electron" outputclass="language-typescript">abstract adjustCustomAudioPublishVolume(
    trackId: number,
    volume: number
  ): number;</codeblock>
            <codeblock props="unity cs" outputclass="language-csharp">public abstract int AdjustCustomAudioPublishVolume(uint trackId, int volume);</codeblock>
            <codeblock props="rn" outputclass="language-typescript">abstract adjustCustomAudioPublishVolume(
    trackId: number,
    volume: number
  ): number;</codeblock>
            <codeblock props="flutter" outputclass="language-dart">Future&lt;void> adjustCustomAudioPublishVolume(
      {required int trackId, required int volume});</codeblock>
            <codeblock props="reserve" outputclass="language-cpp"></codeblock></p>
        </section>
        <section id="detailed_desc">
            <title>详情</title>
            <note type="attention">在调用该方法前，请确保你已经调用 <xref keyref="createCustomAudioTrack" /> 方法创建自定义音频采集轨道。</note>
            <p>调用该方法设置音频在远端播放的音量后，如果你想重新调整音量，你可以再次调用该方法。</p>
        </section>
        <section id="parameters">
            <title>参数</title>
            <parml>
            <plentry id="trackid">
                <pt>trackId</pt>
                <pd>音频轨道 ID。将该参数设置为调用 <apiname keyref="createCustomAudioTrack"/> 方法返回的自定义音频轨道 ID。</pd>
            </plentry>
            <plentry id="volume">
                <pt>volume</pt>
                <pd>自定义采集音频的播放音量，取值范围为 [0,100]。0 表示静音，100 表示原始音量。</pd>
            </plentry>
            </parml> </section>
        <section id="return_values">
            <title><ph keyref="return-section-title"/></title>
            <p props="flutter">方法成功调用时，无返回值；方法调用失败时，会抛出 <xref keyref="AgoraRtcException"/> 异常，你需要捕获异常并进行处理。<ph props="cn">详见<xref keyref="error-code-link"/>了解详情和解决建议。</ph></p>
            <ul>
            <li props="native unreal bp rn electron unity cs">0：方法调用成功。</li>
            <li>&lt; 0：方法调用失败。<ph props="cn">详见<xref keyref="error-code-link"/>了解详情和解决建议。</ph></li>
            </ul>
        </section>
    </refbody>
</reference>