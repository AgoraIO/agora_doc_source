<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE reference PUBLIC "-//OASIS//DTD DITA Reference//EN" "reference.dtd">
<reference id="class_faceshapeareaoptions">
    <title> <ph keyref="FaceShapeAreaOptions" /> </title>
    <shortdesc id="short"> <ph id="shortdesc">滤镜效果选项。</ph> </shortdesc>
    <refbody>
        <section id="prototype">
            <p outputclass="codeblock">
            <codeblock props="android" outputclass="language-java">public class FaceShapeAreaOptions {
  public static final int FACE_SHAPE_AREA_NONE = -1;
  public static final int FACE_SHAPE_AREA_HEADSCALE = 0;
  public static final int FACE_SHAPE_AREA_FOREHEAD = 1;
  public static final int FACE_SHAPE_AREA_FACECONTOUR = 2;
  public static final int FACE_SHAPE_AREA_FACELENGTH = 3;
  public static final int FACE_SHAPE_AREA_FACEWIDTH = 4;
  public static final int FACE_SHAPE_AREA_CHEEKBONE = 5;
  public static final int FACE_SHAPE_AREA_CHEEK = 6;
  public static final int FACE_SHAPE_AREA_CHIN = 7;
  public static final int FACE_SHAPE_AREA_EYESCALE = 8;
  public static final int FACE_SHAPE_AREA_NOSELENGTH = 9;
  public static final int FACE_SHAPE_AREA_NOSEWIDTH = 10;
  public static final int FACE_SHAPE_AREA_MOUTHSCALE = 11;

  public int shapeArea;
  public int shapeIntensity;

}</codeblock>
            <codeblock props="hmos" outputclass="language-arkts"></codeblock>
            <codeblock props="ios mac" outputclass="language-objectivec">__attribute__((visibility("default"))) @interface AgoraFaceShapeAreaOptions : NSObject
@property(nonatomic, assign) AgoraFaceShapeArea shapeArea;
@property(nonatomic, assign) int shapeIntensity;
@end</codeblock>
            <codeblock props="cpp unreal" outputclass="language-cpp">struct FaceShapeAreaOptions {
  enum FACE_SHAPE_AREA {
    FACE_SHAPE_AREA_NONE = -1,
    FACE_SHAPE_AREA_HEADSCALE = 0,
    FACE_SHAPE_AREA_FOREHEAD = 1,
    FACE_SHAPE_AREA_FACECONTOUR = 2,
    FACE_SHAPE_AREA_FACELENGTH = 3,
    FACE_SHAPE_AREA_FACEWIDTH = 4,
    FACE_SHAPE_AREA_CHEEKBONE = 5,
    FACE_SHAPE_AREA_CHEEK = 6,
    FACE_SHAPE_AREA_CHIN = 7,
    FACE_SHAPE_AREA_EYESCALE = 8,
    FACE_SHAPE_AREA_NOSELENGTH = 9,
    FACE_SHAPE_AREA_NOSEWIDTH = 10,
    FACE_SHAPE_AREA_MOUTHSCALE = 11,
  };
  
  FACE_SHAPE_AREA shapeArea;
  int shapeIntensity;
  
  FaceShapeAreaOptions(FACE_SHAPE_AREA shapeArea, int areaIntensity) : shapeArea(shapeArea), shapeIntensity(areaIntensity) {}

  FaceShapeAreaOptions() : shapeArea(FACE_SHAPE_AREA_NONE), shapeIntensity(0) {}
};
</codeblock>
            <codeblock props="bp" outputclass="language-cpp"></codeblock>
            <codeblock props="electron" outputclass="language-typescript"></codeblock>
            <codeblock props="unity cs" outputclass="language-csharp"></codeblock>
            <codeblock props="flutter" outputclass="language-dart"></codeblock>
            </p>
        </section>
        <section id="parameters">
            <title> <text conref="../conref/conref_api_metadata.dita#conref_api_metadata/property" />
            </title>
            <parml>
            <plentry>
                <pt>shapeArea</pt>
                <pd>
                    <p props="cpp ios mac unreal bp unity flutter electron rn cs">美型部位，详见 <xref keyref="FACE_SHAPE_AREA" />。</p>
                    <p props="android hmos">美型部位：
                        <ul>
                            <li><ph keyref="FACE_SHAPE_AREA_NONE" /> (-1)：（默认）无效部位，美型效果不生效。</li>
                            <li><ph keyref="FACE_SHAPE_AREA_HEADSCALE" /> (0)：头部，用于实现小头效果。对应修饰力度范围为 [0,100]，值越大头越小，预设值为 100。</li>
                            <li><ph keyref="FACE_SHAPE_AREA_FOREHEAD" /> (1)：额头，修饰发际线高度。对应修饰力度范围为 [-100,100]，正值为调高，负值为调低，绝对值越大修饰效果越强，预设值为 50。</li>
                            <li><ph keyref="FACE_SHAPE_AREA_FACECONTOUR" /> (2)：脸部轮廓，用于实现瘦脸效果。对应修饰力度范围为 [0,100]，值越大瘦脸效果越强，预设值为 10。</li>
                            <li><ph keyref="FACE_SHAPE_AREA_FACELENGTH" /> (3)：脸部长度，用于实现长脸效果。对应修饰力度范围为 [-100,100]，正值为拉长，负值为变短，绝对值越大修饰效果越强，预设值为 0。</li>
                            <li><ph keyref="FACE_SHAPE_AREA_FACEWIDTH" /> (4)：脸部宽度，用于实现窄脸效果。对应修饰力度范围为 [0,100]，值越大窄脸效果越强，预设值为 10。</li>
                            <li><ph keyref="FACE_SHAPE_AREA_CHEEKBONE" /> (5)：颧骨，修饰颧骨宽度。对应修饰力度范围为 [0,100]，值越大颧骨越窄，预设值为 43。</li>
                            <li><ph keyref="FACE_SHAPE_AREA_CHEEK" /> (6)：脸颊，修饰脸颊宽度。对应修饰力度范围为 [0,100]，值越大脸颊越窄，预设值为 50。</li>
                            <li><ph keyref="FACE_SHAPE_AREA_CHIN" /> (7)：下巴，修饰下巴长度。对应修饰力度范围为 [-100,100]，正值为拉长，负值为变短，绝对值越大修饰效果越强，预设值为 -20。</li>
                            <li><ph keyref="FACE_SHAPE_AREA_EYESCALE" /> (8)：眼睛，用于实现大眼效果。对应修饰力度范围为 [0,100]，值越大，眼睛尺寸越大，预设值为 53，。</li>
                            <li><ph keyref="FACE_SHAPE_AREA_NOSELENGTH" /> (9)：鼻子长度，用于实现长鼻效果。对应修饰力度范围为 [-100,100]，正值为拉长，负值为变短，绝对值越大修饰效果越强，预设值为 -10。</li>
                            <li><ph keyref="FACE_SHAPE_AREA_NOSEWIDTH" /> (10)：鼻子宽度，用于实现瘦鼻效果。对应修饰力度范围为 [-100,100]，正值为变胖/变宽，负值为变瘦/变窄，绝对值越大修饰效果越强，预设值为 72。</li>
                            <li><ph keyref="FACE_SHAPE_AREA_MOUTHSCALE" /> (11)：嘴巴，修饰嘴巴尺寸。对应修饰力度范围为 [-100,100]，正值为变大，负值为变小，绝对值越大修饰效果越强，预设值为 20。</li>
                        </ul>
                    </p>
                </pd>
            </plentry>
            <plentry>
                <pt>shapeIntensity</pt>
                <pd>修饰力度。各部位的修饰力度定义（包括修饰的方向、范围、预设值等）有所不同，<ph props="android hmos">详见 <parmname>shapeArea</parmname> 中的描述。</ph><ph props="cpp ios mac unreal bp unity flutter electron rn cs">详见 <xref keyref="FACE_SHAPE_AREA" /></ph>。</pd>
            </plentry>
            </parml> </section>
    </refbody>
</reference>