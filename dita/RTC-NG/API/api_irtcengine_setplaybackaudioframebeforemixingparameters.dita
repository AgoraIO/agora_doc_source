<?xml version='1.0' encoding='UTF-8'?>
<!DOCTYPE reference PUBLIC "-//OASIS//DTD DITA Reference//EN" "reference.dtd">
<reference id="api_irtcengine_setplaybackaudioframebeforemixingparameters">
    <title><ph keyref="setPlaybackAudioFrameBeforeMixingParameters"/></title>
    <shortdesc id="short"><ph id="shortdesc">设置 <xref keyref="onPlaybackAudioFrameBeforeMixing"/> 回调中返回的音频播放格式。</ph></shortdesc>
    <prolog>
        <metadata>
            <keywords>
                <indexterm keyref="setPlaybackAudioFrameBeforeMixingParameters"/>
            </keywords>
        </metadata>
    </prolog>
    <refbody>
        <section id="prototype">
            <p outputclass="codeblock">
            <codeblock props="android" outputclass="language-java">public abstract int setPlaybackAudioFrameBeforeMixingParameters(int sampleRate, int channel, int samplesPerCall);</codeblock>
            <codeblock props="hmos" outputclass="language-arkts"/>
            <codeblock props="ios mac" outputclass="language-objectivec">- (int)setPlaybackAudioFrameBeforeMixingParametersWithSampleRate:(NSInteger)sampleRate
                                                         channel:(NSInteger)channel
                                                  samplesPerCall:(NSInteger)samplesPerCall NS_SWIFT_NAME(setPlaybackAudioFrameBeforeMixingParametersWithSampleRate(_:channel:samplesPerCall:));</codeblock>
            <codeblock props="cpp unreal" outputclass="language-cpp">virtual int setPlaybackAudioFrameBeforeMixingParameters(int sampleRate, int channel, int samplesPerCall) = 0;</codeblock>
            <codeblock props="bp" outputclass="language-cpp"/>
            <codeblock props="electron" outputclass="language-typescript"/>
            <codeblock props="unity cs" outputclass="language-csharp"/>
            <codeblock props="rn" outputclass="language-typescript"/>
            <codeblock props="flutter" outputclass="language-dart"/> </p>
        </section>
        <section id="detailed_desc" deliveryTarget="details" otherprops="no-title">
            <p></p>
        </section>
        <section id="restriction" deliveryTarget="details">
            <title>调用限制</title>
            <p>无。</p>
        </section>
        <section id="parameters" deliveryTarget="details">
            <title>参数</title>
            <parml>
            <plentry props="android cpp ios">
                <pt props="android cpp ios">sampleRate</pt>
                <pd props="android">设置 <xref keyref="onPlaybackAudioFrameBeforeMixing"/> 回调中返回的采样率。可设置为以下值：
                    <ul>
                        <li>8000：8 kHz。</li>
                        <li>16000：16 kHz。</li>
                        <li>32000：32 kHz。</li>
                        <li>44100：44.1 kHz。</li>
                        <li>48000：48 kHz。</li>
                        </ul>
                    </pd>
                <pd props="ios">输入参数，<xref keyref="onPlaybackAudioFrameBeforeMixing"/> 回调中包含的采样率（Hz）。你可以设置为 8000、16000、32000、44100 或 48000。</pd>
                <pd props="cpp"><xref keyref="onPlaybackAudioFrameBeforeMixing"/> 回调中返回的音频数据的采样率（Hz）。可设置为 8000、16000、32000、44100 或 48000。</pd>
            </plentry>
            <plentry props="android cpp ios">
                <pt props="android cpp ios">channel</pt>
                <pd props="android">设置 <xref keyref="onPlaybackAudioFrameBeforeMixing"/> 回调中返回的音频数据的声道数。可设置为以下值：
                    <ul>
                        <li>1：单声道。</li>
                        <li>2：立体声。</li>
                        </ul>
                    </pd>
                <pd props="ios">输入参数，<xref keyref="onPlaybackAudioFrameBeforeMixing"/> 回调中包含的声道数。
                    <ul>
                        <li>1：单声道。</li>
                        <li>2：立体声。</li>
                        </ul>
                    </pd>
                <pd props="cpp"><xref keyref="onPlaybackAudioFrameBeforeMixing"/> 回调中返回的音频数据的声道数。可设置为：
                    <ul>
                        <li>1：单声道。</li>
                        <li>2：立体声。</li>
                        </ul>
                    </pd>
            </plentry>
            <plentry props="android cpp ios">
                <pt props="android cpp ios">samplesPerCall</pt>
                <pd props="android">设置 <xref keyref="onMixedAudioFrame"/> 回调返回的采样点数。在 RTMP 推流场景中，建议设置为 1024。</pd>
                <pd props="ios">输入参数，<xref keyref="onPlaybackAudioFrameBeforeMixing"/> 回调中返回的数据的采样点数。例如，推流时通常设置为 1024。</pd>
                <pd props="cpp"><xref keyref="onPlaybackAudioFrameBeforeMixing"/> 回调中返回的音频数据的采样点数。例如，推流时通常设置为 1024。</pd>
            </plentry>
            </parml> </section>
        <section id="return_values" props="bp cs electron flutter native rn unity unreal">
            <title><ph keyref="return-section-title"/></title>
        <p props="flutter">方法成功调用时，无返回值；方法调用失败时，会抛出 <xref keyref="AgoraRtcException"/> 异常，你需要捕获异常并进行处理。<ph props="cn">详见<xref keyref="error-code-link"/>了解详情和解决建议。</ph></p>
        <ul props="bp cs electron rn unity unreal">
                <li>0: 方法调用成功。</li>
                <li>&lt; 0: 方法调用失败。<ph props="cn">详见<xref keyref="error-code-link"/>了解详情和解决建议。</ph></li>
                </ul>
        <p props="native"><ul>
                        <li>0：方法调用成功。</li>
                        <li>&lt; 0：方法调用失败。</li>
                        </ul>
                    </p>
    </section>
        </refbody>
</reference>
