<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE reference PUBLIC "-//OASIS//DTD DITA Reference//EN" "reference.dtd">
<reference id="api_irtcengine_setdirectcdnstreamingaudioconfiguration">
    <title><ph keyref="setDirectCdnStreamingAudioConfiguration" /></title>
    <shortdesc id="short"><ph id="shortdesc">设置主播端直接向 CDN 推流时的音频编码属性。</ph></shortdesc>
    <prolog>
        <metadata>
            <keywords>
                <indexterm keyref="setDirectCdnStreamingAudioConfiguration" />
            </keywords>
        </metadata>
    </prolog>
    <refbody>
        <section id="prototype">
            <p outputclass="codeblock">
            <codeblock props="android" outputclass="language-java">public abstract int setDirectCdnStreamingAudioConfiguration(int profile);</codeblock>
            <codeblock props="ios mac" outputclass="language-objectivec">- (int)setDirectCdnStreamingAudioConfiguration:(AgoraAudioProfile)profile;</codeblock>
            <codeblock props="cpp unreal" outputclass="language-cpp">virtual int setDirectCdnStreamingAudioConfiguration(AUDIO_PROFILE_TYPE profile) = 0;</codeblock>
         <codeblock props="bp" outputclass="language-cpp">UFUNCTION(BlueprintCallable, Category = &quot;Agora|RtcEngineProxy&quot;)
	int SetDirectCdnStreamingAudioConfiguration(EAUDIO_PROFILE_TYPE profile);</codeblock>
            <codeblock props="electron" outputclass="language-typescript">abstract setDirectCdnStreamingAudioConfiguration(
    profile: AudioProfileType
  ): number;</codeblock>
            <codeblock props="unity cs" outputclass="language-csharp">public abstract int SetDirectCdnStreamingAudioConfiguration(AUDIO_PROFILE_TYPE profile);</codeblock>
            <codeblock props="rn" outputclass="language-typescript">abstract setDirectCdnStreamingAudioConfiguration(
    profile: AudioProfileType
  ): number;</codeblock>
            <codeblock props="flutter" outputclass="language-dart">Future&lt;void&gt; setDirectCdnStreamingAudioConfiguration(
      AudioProfileType profile);</codeblock>
            <codeblock props="reserve" outputclass="language-cpp"></codeblock></p>
        </section>
        <section id="detailed_desc" props="native unreal bp rn flutter">
            <p>该方法仅对麦克风采集或自采集的音频有效，即对在 <xref keyref="DirectCdnStreamingMediaOptions" /> 中设置 <parmname>publishMicrophoneTrack</parmname> 或 <parmname>publishCustomAudioTrack</parmname> 为 <codeph><ph keyref="true" /></codeph> 时所采集的音频有效。</p>
        </section>
        <section id="parameters">
            <title>参数</title>
            <parml>
            <plentry>
                <pt>profile</pt>
                <pd>
                    <p conkeyref="setAudioProfile/profile" />
                </pd>
            </plentry>
            </parml> </section>
        <section id="return_values">
            <title><ph keyref="return-section-title"/></title>
            <p props="flutter">方法成功调用时，无返回值；方法调用失败时，会抛出 <xref keyref="AgoraRtcException"/> 异常，你需要捕获异常并进行处理。<ph props="cn">详见<xref keyref="error-code-link"/>了解详情和解决建议。</ph></p>
            <ul props="native unreal bp unity rn cs">
            <li>0: 方法调用成功。</li>
            <li>&lt; 0: 方法调用失败。<ph props="cn">详见<xref keyref="error-code-link"/>了解详情和解决建议。</ph></li>
            </ul> </section>
    </refbody>
</reference>