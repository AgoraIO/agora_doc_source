<?xml version='1.0' encoding='UTF-8'?>
<!DOCTYPE reference PUBLIC "-//OASIS//DTD DITA Reference//EN" "reference.dtd">
<reference id="class_imagetrackoptions">
    <title><ph keyref="ImageTrackOptions"/></title>
    <shortdesc id="short"><ph id="shortdesc">用于配置图像相关的参数。</ph></shortdesc>
    <refbody>
        <section id="prototype">
            <p outputclass="codeblock">
            <codeblock props="android" outputclass="language-java">public class ImageTrackOptions {
  public String getImageUrl() {
  return imageUrl;
  }
  public int getFps() {
    return fps;
  }
  public ImageTrackOptions(String url, int fps) {
    this.imageUrl = url;
    this.fps = fps;
  }
}</codeblock>
            <codeblock props="hmos" outputclass="language-arkts"/>
            <codeblock props="ios mac" outputclass="language-objectivec">__attribute__((visibility("default"))) @interface AgoraImageTrackOptions : NSObject
@property(copy, nonatomic) NSString *_Nullable imageUrl;
@property(assign, nonatomic) int fps;
@property(assign, nonatomic) AgoraVideoMirrorMode mirrorMode;
@end</codeblock>
            <codeblock props="cpp unreal" outputclass="language-cpp">struct ImageTrackOptions {
  const char* imageUrl;
  int fps;
  VIDEO_MIRROR_MODE_TYPE mirrorMode;
};</codeblock>
         <codeblock props="bp" outputclass="language-cpp">USTRUCT(BlueprintType)
struct FImageTrackOptions
{
	GENERATED_BODY()
public:
	UPROPERTY(VisibleAnywhere, BlueprintReadWrite, Category = "Agora|ImageTrackOptions")
	FString imageUrl = "";
	UPROPERTY(VisibleAnywhere, BlueprintReadWrite, Category = "Agora|ImageTrackOptions")
	int fps = 1;
	FImageTrackOptions(){}
	FImageTrackOptions(const agora::rtc::ImageTrackOptions &amp; AgoraData){
		imageUrl = UTF8_TO_TCHAR(AgoraData.imageUrl);
		fps = AgoraData.fps;
	}
	agora::rtc::ImageTrackOptions CreateAgoraData() const {
		agora::rtc::ImageTrackOptions AgoraData;
		SET_UABT_FSTRING_TO_CONST_CHAR___MEMALLOC(AgoraData.imageUrl,this-&gt;imageUrl)
		AgoraData.fps = fps;
		return AgoraData;
	}
	void FreeAgoraData(agora::rtc::ImageTrackOptions &amp; AgoraData) const {
		SET_UABT_FSTRING_TO_CONST_CHAR___MEMFREE(AgoraData.imageUrl)
	}
};</codeblock>
            <codeblock props="electron" outputclass="language-typescript">export class ImageTrackOptions {

  imageUrl?: string;

  fps?: number;
}</codeblock>
            <codeblock props="unity cs" outputclass="language-csharp">public class ImageTrackOptions
    {
        public string imageUrl { set; get; }
        public int fps { set; get; }

        public ImageTrackOptions()
        {
            imageUrl = "";
            fps = 1;
        }
    };</codeblock>
            <codeblock props="rn" outputclass="language-typescript">export class ImageTrackOptions {

  imageUrl?: string;

  fps?: number;
}</codeblock>
            <codeblock props="flutter" outputclass="language-dart">class ImageTrackOptions {
  const ImageTrackOptions({this.imageUrl, this.fps});

  @JsonKey(name: 'imageUrl')
  final String? imageUrl;

  @JsonKey(name: 'fps')
  final int? fps;

  factory ImageTrackOptions.fromJson(Map&lt;String, dynamic&gt; json) =&gt;
      _$ImageTrackOptionsFromJson(json);

  Map&lt;String, dynamic&gt; toJson() =&gt; _$ImageTrackOptionsToJson(this);
}</codeblock>
            <codeblock props="reserve" outputclass="language-cpp"/></p>
        </section>
        <section id="parameters">
            <title><text conref="../conref/conref_api_metadata.dita#conref_api_metadata/property"/></title>
            <parml>
            <plentry props="cpp ios">
                <pt props="cpp ios">imageUrl</pt>
                <pd>垫片图片的 URL，目前支持 JPEG、JPG、PNG、GIF 格式的图片。支持从本地绝对路径或相对路径添加垫片图片。
                  <note props="android bp cpp flutter rn unity unreal">在 Android 平台上，不支持从 <codeph>/assets/</codeph> 中添加垫片图片。</note>
                </pd>
                <pd props="cpp">图像的 URL。支持的图像格式包括 JPEG、JPG、PNG 和 GIF。支持从本地的绝对路径或相对路径添加图像。在 Android 平台上，不支持从 <codeph>/assets/</codeph> 添加图像。</pd>
                <pd props="ios">图像的 URL。支持的图像格式包括 JPEG、JPG、PNG 和 GIF。支持通过本地的绝对路径或相对路径添加图像。</pd>
                </plentry>
            <plentry props="cpp ios">
                <pt props="cpp ios">fps</pt>
                <pd>视频帧率，取值范围为 [1,30]。默认值为 1。</pd>
                <pd props="cpp">发布的视频流的帧率，取值范围为 [1, 30]，默认值为 1。</pd>
                <pd props="ios">发布的视频流的帧率。取值范围为 [1, 30]，默认值为 1。</pd>
            </plentry>
            <plentry props="cpp ios">
                <pt props="cpp ios">mirrorMode</pt>
                <pd props="cpp ios">视频镜像模式。</pd>
            </plentry>
            </parml> </section>
    </refbody>
</reference>
