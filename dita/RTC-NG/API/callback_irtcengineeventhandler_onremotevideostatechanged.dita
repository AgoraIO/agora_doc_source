<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE reference PUBLIC "-//OASIS//DTD DITA Reference//EN" "reference.dtd">
<reference id="callback_irtcengineeventhandler_onremotevideostatechanged">
     <title> <ph keyref="onRemoteVideoStateChanged" /> </title>
     <shortdesc id="short"> <ph id="shortdesc">远端视频状态发生改变回调。</ph> </shortdesc>
     <prolog>
          <metadata>
               <keywords>
                    <indexterm keyref="onRemoteVideoStateChanged" />
               </keywords>
          </metadata>
     </prolog>
     <refbody>
          <section id="prototype">
               <p outputclass="codeblock">
               <codeblock props="android" outputclass="language-java">public void onRemoteVideoStateChanged(int uid, int state, int reason, int elapsed) {}</codeblock>
               <codeblock props="ios mac" outputclass="language-objectivec">- (void)rtcEngine:(AgoraRtcEngineKit * _Nonnull)engine
     remoteVideoStateChangedOfUid:(NSUInteger)uid state:(AgoraVideoRemoteState)state reason:(AgoraVideoRemoteReason)reason elapsed:(NSInteger)elapsed;</codeblock>
               <codeblock props="cpp unreal bp" outputclass="language-cpp">virtual void onRemoteVideoStateChanged(uid_t uid,
     REMOTE_VIDEO_STATE state,
     REMOTE_VIDEO_STATE_REASON reason,
     int elapsed) {
     (void)uid;
     (void)state;
     (void)reason;
     (void)elapsed;
     }</codeblock>
               <codeblock props="electron" outputclass="language-typescript">  onRemoteVideoStateChanged?(
    connection: RtcConnection,
    remoteUid: number,
    state: RemoteVideoState,
    reason: RemoteVideoStateReason,
    elapsed: number
  ): void;</codeblock>
               <codeblock props="unity cs" outputclass="language-csharp">public virtual void OnRemoteVideoStateChanged(RtcConnection connection, uint remoteUid, REMOTE_VIDEO_STATE state, REMOTE_VIDEO_STATE_REASON reason, int elapsed) {}</codeblock>
               <codeblock props="rn" outputclass="language-typescript">  onRemoteVideoStateChanged?(
    connection: RtcConnection,
    remoteUid: number,
    state: RemoteVideoState,
    reason: RemoteVideoStateReason,
    elapsed: number
  ): void;</codeblock>
               <codeblock props="flutter" outputclass="language-dart">final void Function(
      RtcConnection connection,
      int remoteUid,
      RemoteVideoState state,
      RemoteVideoStateReason reason,
      int elapsed)? onRemoteVideoStateChanged;</codeblock>
            <codeblock props="reserve" outputclass="language-cpp"></codeblock></p>
          </section>
          <section id="detailed_desc">
               <note id="note" type="attention">频道内的用户（通信场景）或主播（直播场景）人数超过 17 人时，该回调可能不准确。</note> </section>
          <section id="parameters">
               <title> <ph keyref="callback-section-title" /> </title>
               <parml>
               <plentry conkeyref="onJoinChannelSuccess/engine" props="ios mac">
                    <pt />
                    <pd />
               </plentry>
               <plentry props="rn unity electron flutter cs">
                         <pt>connection</pt>
                         <pd>Connection 信息。详见 <xref keyref="RtcConnection"/>。</pd>
                    </plentry>
               <plentry id="uid">
                    <pt props="native unreal bp">uid</pt>
                    <pt props="rn unity electron flutter cs">remoteUid</pt>
                    <pd>发生视频状态改变的远端用户 ID。</pd>
               </plentry>
               <plentry id="state">
                    <pt>state</pt>
                    <pd>
                         <p props="ios mac cpp unreal bp unity flutter electron rn cs">远端视频流状态，详见 <xref keyref="REMOTE_VIDEO_STATE" />。</p>
                         <p props="android">远端视频流状态：




                         <ul>
                         <li> <ph keyref="REMOTE_VIDEO_STATE_STOPPED"/>(0)：远端视频默认初始状态。在 <codeph>REMOTE_VIDEO_STATE_REASON_LOCAL_MUTED(3)</codeph>、<codeph>REMOTE_VIDEO_STATE_REASON_REMOTE_MUTED(5)</codeph>、<codeph>REMOTE_VIDEO_STATE_REASON_REMOTE_OFFLINE(7)</codeph> 或 <codeph>REMOTE_VIDEO_STATE_REASON_AUDIO_FALLBACK(8)</codeph> 的情况下，会报告该状态。</li>
                         <li> <ph keyref="REMOTE_VIDEO_STATE_STARTING"/>(1)：本地用户已接收远端视频首包。</li>
                         <li> <ph keyref="REMOTE_VIDEO_STATE_DECODING"/>(2)：远端视频流正常解码播放。在 <codeph>REMOTE_VIDEO_STATE_REASON_NETWORK_RECOVERY(2)</codeph>、<codeph>REMOTE_VIDEO_STATE_REASON_LOCAL_UNMUTED(4)</codeph>、<codeph>REMOTE_VIDEO_STATE_REASON_REMOTE_UNMUTED(6)</codeph> 或 <codeph>REMOTE_VIDEO_STATE_REASON_AUDIO_FALLBACK_RECOVERY(9)</codeph> 的情况下，会报告该状态。</li>
                         <li> <ph keyref="REMOTE_VIDEO_STATE_FROZEN"/>(3)：远端视频流卡顿。在 <codeph>REMOTE_VIDEO_STATE_REASON_NETWORK_CONGESTION(1)</codeph> 的情况下，会报告该状态。</li>
                         <li> <ph keyref="REMOTE_VIDEO_STATE_FAILED"/>(4)：远端视频流播放失败。在 <codeph>REMOTE_VIDEO_STATE_REASON_INTERNAL(0)</codeph> 的情况下，会报告该状态。</li>
                         </ul> </p>
                    </pd>
               </plentry>
               <plentry id="reason">
                    <pt>reason</pt>
                    <pd>
                         <p props="ios mac cpp unreal bp unity flutter electron rn cs">远端视频流状态改变的具体原因，详见 <xref keyref="REMOTE_VIDEO_STATE_REASON" />。</p>
                         <p props="android">远端视频流状态改变的具体原因：
                         <ul>
                         <li> <ph keyref="REMOTE_VIDEO_STATE_REASON_INTERNAL" />(0)：内部原因。</li>
                         <li> <ph keyref="REMOTE_VIDEO_STATE_REASON_NETWORK_CONGESTION" />(1)：网络阻塞。</li>
                         <li> <ph keyref="REMOTE_VIDEO_STATE_REASON_NETWORK_RECOVERY" />(2)：网络恢复正常。</li>
                         <li> <ph keyref="REMOTE_VIDEO_STATE_REASON_LOCAL_MUTED" />(3)：本地用户停止接收远端视频流或本地用户禁用视频模块。</li>
                         <li> <ph keyref="REMOTE_VIDEO_STATE_REASON_LOCAL_UNMUTED" />(4)：本地用户恢复接收远端视频流或本地用户启动视频模块。</li>
                         <li> <ph keyref="REMOTE_VIDEO_STATE_REASON_REMOTE_MUTED" />(5)：远端用户停止发送视频流或远端用户禁用视频模块。</li>
                         <li> <ph keyref="REMOTE_VIDEO_STATE_REASON_REMOTE_UNMUTED" />(6)：远端用户恢复发送视频流或远端用户启用视频模块。</li>
                         <li> <ph keyref="REMOTE_VIDEO_STATE_REASON_REMOTE_OFFLINE" />(7)：远端用户离开频道。</li>
                         <li> <ph keyref="REMOTE_VIDEO_STATE_REASON_AUDIO_FALLBACK" />(8)：远端视频流已回退为音频流。</li>
                         <li> <ph keyref="REMOTE_VIDEO_STATE_REASON_AUDIO_FALLBACK_RECOVERY" />(9)：回退的远端音频流恢复为视频流。</li>
                         </ul> </p>
                    </pd>
               </plentry>
               <plentry>
                    <pt>elapsed</pt>
                    <pd>从本地用户调用 <apiname keyref="joinChannel2" /> 方法到发生本事件经历的时间，单位为毫秒。</pd>
               </plentry>
               </parml> </section>
     </refbody>
</reference>
