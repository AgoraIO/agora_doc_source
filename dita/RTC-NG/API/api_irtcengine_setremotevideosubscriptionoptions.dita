<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE reference PUBLIC "-//OASIS//DTD DITA Reference//EN" "reference.dtd">
<reference id="api_irtcengine_setremotevideosubscriptionoptions">
    <title><ph keyref="setRemoteVideoSubscriptionOptions"/></title>
    <shortdesc id="short"><ph id="shortdesc">设置远端视频流的订阅选项。</ph></shortdesc>
    <prolog>
        <metadata>
            <keywords>
                <indexterm keyref="setRemoteVideoSubscriptionOptions"/>
            </keywords>
        </metadata>
    </prolog>
    <refbody>
        <section id="prototype">
            <p outputclass="codeblock">
            <codeblock props="android" outputclass="language-java">public abstract int setRemoteVideoSubscriptionOptions(int uid, VideoSubscriptionOptions options);</codeblock>
            <codeblock props="ios mac" outputclass="language-objectivec">- (int)setRemoteVideoSubscriptionOptions:(NSUInteger)uid
                                 options:(AgoraVideoSubscriptionOptions* _Nonnull)options NS_SWIFT_NAME(setRemoteVideoSubscriptionOptions(_:options:));</codeblock>
            <codeblock props="cpp" outputclass="language-cpp">virtual int setRemoteVideoSubscriptionOptions(uid_t uid, const VideoSubscriptionOptions &amp;options) = 0;</codeblock>
            <codeblock props="cs" outputclass="language-csharp"/>
            <codeblock props="electron" outputclass="language-typescript">abstract setRemoteVideoSubscriptionOptions(
    uid: number,
    options: VideoSubscriptionOptions
  ): number;</codeblock>
            <codeblock props="unity" outputclass="language-csharp"> public abstract int SetRemoteVideoSubscriptionOptions(uint uid, VideoSubscriptionOptions options);</codeblock>
            <codeblock props="rn" outputclass="language-typescript">abstract setRemoteVideoSubscriptionOptions(
    uid: number,
    options: VideoSubscriptionOptions
  ): number;</codeblock>
            <codeblock props="flutter" outputclass="language-dart">Future&lt;void> setRemoteVideoSubscriptionOptions(
      {required int uid, required VideoSubscriptionOptions options});</codeblock>
            <codeblock props="reserve" outputclass="language-cpp"/></p>
        </section>
        <section id="detailed_desc">
            <title>详情</title>
            <p>当远端发送双流时，可调用此方法来设置远端视频流的订阅选项。</p>
            <p>
            <ul>
            <li>如果你只注册了 <xref keyref="IVideoFrameObserver"/> 对象，则默认订阅原始视频数据和编码后的视频数据 (效果等同于 <parmname>encodedFrameOnly</parmname> 设置为 <codeph><ph keyref="false"/></codeph>)。</li>
            <li>如果你只注册了 <xref keyref="IVideoEncodedFrameObserver"/> 对象，则默认只订阅编码后的视频数据 (效果等同于 <parmname>encodedFrameOnly</parmname> 设置为 <codeph><ph keyref="true"/></codeph>)。</li>
            <li>如果你先后注册了 <apiname keyref="IVideoFrameObserver"/> 和 <apiname keyref="IVideoEncodedFrameObserver"/> 对象，则默认订阅原始视频数据和编码后的视频数据 (效果等同于 <parmname>encodedFrameOnly</parmname> 设置为 <codeph><ph keyref="false"/></codeph>)。</li>
            <li>如果你先调用该方法设置了 <parmname>options</parmname> 参数、然后再注册 <apiname keyref="IVideoFrameObserver"/> 或 <apiname keyref="IVideoEncodedFrameObserver"/> 对象，则需要再次调用该方法并按照以上两项描述设置 <parmname>options</parmname> 参数，以获得预期的效果。</li>
            </ul> </p>
            <note>声网推荐你按照以下步骤调用该方法：
            
            <ol>
            <li>调用 <xref keyref="joinChannel2"/> 加入频道时设置 <parmname>autoSubscribeVideo</parmname> 为 <codeph><ph keyref="false"/></codeph>。</li>
            <li>在收到 <xref keyref="onUserJoined"/> 回调后调用该方法，设置对指定远端用户视频流的订阅选项。</li>
            <li>调用 <xref keyref="muteRemoteVideoStream"/> 方法，开始恢复订阅指定远端用户的视频流。如果你在上一步中将 <parmname>encodedFrameOnly</parmname> 设置为 <codeph><ph keyref="true"/></codeph>，SDK 会在本地触发 <xref keyref="onEncodedVideoFrameReceived"/> 回调，上报接收到的编码后视频帧信息。</li>
            </ol> </note> </section>
        <section id="parameters">
            <title>参数</title>
            <parml>
            <plentry id="uid">
                <pt>uid</pt>
                <pd>远端用户 ID。</pd>
            </plentry>
            <plentry id="op">
                <pt>options</pt>
                <pd>视频流的订阅设置，详见 <xref keyref="VideoSubscriptionOptions"/>。</pd>
            </plentry>
            </parml> </section>
        <section id="return_values">
            <title><ph keyref="return-section-title"/></title>
            <p props="flutter">方法成功调用时，无返回值；方法调用失败时，会抛出 <xref keyref="AgoraRtcException"/> 异常，你需要捕获异常并进行处理。</p>
            <ul>
            <li props="native electron unity rn">0: 方法调用成功。</li>
            <li>&lt; 0: 方法调用失败。</li>
            </ul> </section>
    </refbody>
</reference>
