<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE reference PUBLIC "-//OASIS//DTD DITA Reference//EN" "reference.dtd">
<reference id="callback_imediarecorderobserver_onrecorderstatechanged">
    <title><ph keyref="onRecorderStateChanged"/></title>
    <shortdesc id="short"><ph id="shortdesc">录制状态发生改变回调。</ph></shortdesc>
    <prolog>
        <metadata>
            <keywords>
                <indexterm keyref="onRecorderStateChanged"/>
            </keywords>
        </metadata>
    </prolog>
    <refbody>
        <section id="prototype">
            <p outputclass="codeblock">
            <codeblock props="android" outputclass="language-java">void onRecorderStateChanged(String channelId, int uid, int state, int error);</codeblock>
            <codeblock props="ios mac" outputclass="language-objectivec">- (void)mediaRecorder:(AgoraMediaRecorder* _Nonnull)recorder stateDidChanged:(NSString * _Nonnull)channelId uid:(NSUInteger)uid state:(AgoraMediaRecorderState)state error:(AgoraMediaRecorderErrorCode)error;</codeblock>
            <codeblock props="cpp" outputclass="language-cpp">virtual void onRecorderStateChanged(const char* channelId, rtc::uid_t uid, RecorderState state, RecorderErrorCode error) = 0;</codeblock>
            <codeblock props="electron" outputclass="language-typescript">  onRecorderStateChanged?(state: RecorderState, error: RecorderErrorCode): void;</codeblock>
            <codeblock props="unity" outputclass="language-csharp">public virtual void OnRecorderStateChanged(string channelId, uint uid, RecorderState state, RecorderErrorCode error) {}</codeblock>
            <codeblock props="rn" outputclass="language-typescript">  onRecorderStateChanged?(state: RecorderState, error: RecorderErrorCode): void;</codeblock>
            <codeblock props="flutter" outputclass="language-dart">final void Function(RecorderState state, RecorderErrorCode error)?
      onRecorderStateChanged;</codeblock>
            <codeblock props="reserve" outputclass="language-cpp"/></p>
        </section>
        <section id="detailed_desc">
            <p>音视频流录制状态发生改变时，SDK 会触发该回调，报告当前的录制状态和引起录制状态改变的原因。</p>
        </section>
        <section id="parameters">
            <title><ph keyref="callback-section-title"/></title>
            <parml>
            <plentry props="apple">
                <pt>recorder</pt>
                <pd><xref keyref="IMediaRecorder"/> 对象。</pd>
            </plentry>
            <plentry id="id">
                <pt>channelId</pt>
                <pd>频道名称。</pd>
            </plentry>
            <plentry id="uid">
                <pt>uid</pt>
                <pd>用户 ID。</pd>
            </plentry>
            <plentry>
                <pt>state</pt>
                <pd props="apple cpp rn unity electron flutter">当前的录制状态。详见 <xref keyref="RecorderState"/>。</pd>
                <pd props="android">当前的录制状态：
                    
                    
                    <ul>
                    <li><ph keyref="RECORDER_STATE_ERROR"/>（-1）：音视频流录制出错。</li>
                    <li><ph keyref="RECORDER_STATE_START"/>（2）：音视频流录制开始。</li>
                    <li><ph keyref="RECORDER_STATE_STOP"/>（3）：音视频流录制停止。</li>
                    </ul> </pd>
            </plentry>
            <plentry>
                <pt>error</pt>
                <pd props="apple cpp rn unity electron flutter">录制状态出错的原因。详见 <xref keyref="RecorderErrorCode"/>。</pd>
                <pd props="android">录制状态出错的原因：
                    
                    
                    <ul>
                    <li><ph keyref="RECORDER_ERROR_NONE"/>（0）：一切正常。</li>
                    <li><ph keyref="RECORDER_ERROR_WRITE_FAILED"/>（1）：录制文件写入失败。</li>
                    <li><ph keyref="RECORDER_ERROR_NO_STREAM"/>（2）：没有可录制的音视频流或者录制的音视频流中断超过 5 秒。</li>
                    <li><ph keyref="RECORDER_ERROR_OVER_MAX_DURATION"/>（3）：录制时长超出上限。</li>
                    <li><ph keyref="RECORDER_ERROR_CONFIG_CHANGED"/>（4）：录制配置改变。</li>
                    </ul> </pd>
            </plentry>
            </parml> </section>
    </refbody>
</reference>
