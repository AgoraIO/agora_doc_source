<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE reference PUBLIC "-//OASIS//DTD DITA Reference//EN" "reference.dtd">
<reference id="api_imediaplayer_registeraudioframeobserver">
    <title><ph keyref="registerAudioFrameObserver1_IMediaPlayer"/></title>
    <shortdesc id="short"><ph id="shortdesc">注册音频帧观测器。</ph></shortdesc>
    <prolog>
        <metadata>
            <keywords>
                <indexterm keyref="registerAudioFrameObserver1_IMediaPlayer"/>
            </keywords>
        </metadata>
    </prolog>
    <refbody>
        <section id="prototype">
            <p outputclass="codeblock">
            <codeblock props="android" outputclass="language-java"/>
            <codeblock props="ios mac" outputclass="language-objectivec"/>
            <codeblock props="cpp" outputclass="language-cpp">virtual int registerAudioFrameObserver(media::base::IAudioFrameObserver* observer) = 0;</codeblock>
            <codeblock props="electron" outputclass="language-typescript">abstract registerAudioFrameObserver(
    observer: IMediaPlayerAudioFrameObserver
  ): number;</codeblock>
            <codeblock props="unity" outputclass="language-csharp">public abstract int RegisterAudioFrameObserver(IMediaPlayerAudioFrameObserver observer);</codeblock>
            <codeblock props="rn" outputclass="language-typescript">abstract registerAudioFrameObserver(
    observer: IMediaPlayerAudioFrameObserver
  ): number;</codeblock>
            <codeblock props="flutter" outputclass="language-dart">void registerAudioFrameObserver(MediaPlayerAudioFrameObserver observer);</codeblock>
            <codeblock props="reserve" outputclass="language-cpp"></codeblock></p>
        </section>
        <section id="detailed_desc">
            <title>详情</title>
            <p>你需要在该方法中实现一个 <xref props="cpp" keyref="IAudioFrameObserver"/><xref props="electron unity rn flutter" keyref="IMediaPlayerAudioFrameObserver" /> 类，并根据场景需要，注册该类的回调。成功注册音频帧观测器后，SDK 会在捕捉到每个音频帧时，触发你所注册的回调。</p>
        </section>
        <section id="parameters">
            <title>参数</title>
            <parml>
            <plentry>
                <pt>observer</pt>
                <pd props="cpp">音频帧观测器，观测每帧音频的接收，详见 <xref keyref="IAudioFrameObserver" />。</pd>
                <pd props="electron unity rn flutter">音频帧观测器，观测每帧音频的接收，详见 <xref keyref="IMediaPlayerAudioFrameObserver" />。</pd>
            </plentry>
            </parml> </section>
        <section id="return_values">
            <title><ph keyref="return-section-title"/></title>
            <p props="flutter">方法成功调用时，无返回值；方法调用失败时，会抛出 <xref keyref="AgoraRtcException"/> 异常，你需要捕获异常并进行处理。</p>
            <ul id="ul_uns_l2y_hqb">
                <li props="cpp rn unity electron">0: 方法调用成功。</li>
                <li>&lt; 0: 方法调用失败。</li>
            </ul>
        </section>
    </refbody>
</reference>
