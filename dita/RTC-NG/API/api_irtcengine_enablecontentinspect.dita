<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE reference PUBLIC "-//OASIS//DTD DITA Reference//EN" "reference.dtd">
<reference id="api_irtcengine_enablecontentinspect">
    <title><ph keyref="enableContentInspect"/></title>
    <shortdesc id="short"><ph id="shortdesc">开启/关闭视频截图上传。</ph></shortdesc>
    <prolog>
        <metadata>
            <keywords>
                <indexterm keyref="enableContentInspect"/>
            </keywords>
        </metadata>
    </prolog>
    <refbody>
        <section id="prototype">
            <p outputclass="codeblock">
            <codeblock props="android" outputclass="language-java">public abstract int enableContentInspect(boolean enabled, ContentInspectConfig config);</codeblock>
            <codeblock props="ios mac" outputclass="language-objectivec">- (int)enableContentInspect:(BOOL)enabled config:(AgoraContentInspectConfig* _Nonnull)config;</codeblock>
            <codeblock props="cpp unreal" outputclass="language-cpp">virtual int enableContentInspect(bool enabled, const media::ContentInspectConfig &amp;config) = 0;</codeblock>
         <codeblock props="bp" outputclass="language-cpp">UFUNCTION(BlueprintCallable, Category = &quot;Agora|RtcEngineProxy&quot;)
	int EnableContentInspect(bool enabled, FContentInspectConfig&amp; config);</codeblock>
            <codeblock props="electron" outputclass="language-typescript">abstract enableContentInspect(
    enabled: boolean,
    config: ContentInspectConfig
  ): number;</codeblock>
            <codeblock props="unity cs" outputclass="language-csharp">public abstract int EnableContentInspect(bool enabled, ContentInspectConfig config);</codeblock>
            <codeblock props="rn" outputclass="language-typescript">abstract enableContentInspect(
    enabled: boolean,
    config: ContentInspectConfig
  ): number;</codeblock>
            <codeblock props="flutter" outputclass="language-dart">Future&lt;void> enableContentInspect(
      {required bool enabled, required ContentInspectConfig config});</codeblock>
            <codeblock props="reserve" outputclass="language-cpp"></codeblock></p>
        </section>
        <section id="detailed_desc">
            <title>详情</title>
            <p>开启视频截图上传后，SDK 会根据你在 <xref keyref="ContentInspectConfig"/> 中设置的模块类型和频率对本地用户发送的视频进行截图和上传。截图完成后，声网服务器会以 HTTPS 请求的形式，向你的服务器发送回调通知，并将所有截图发送至你指定的第三方云存储。</p>
            <note>调用该方法前，请确保已<xref keyref="ticket-link"/>开通视频截图上传服务。</note> 
        </section>
        <section id="parameters">
            <title>参数</title>
            <parml>
            <plentry id="enabled">
                <pt>enabled</pt>
                <pd>设置是否开启<ph>视频截图上传</ph><ph props="hide">视频内容审核</ph>：                                                  
                    <ul>
                    <li><codeph><ph keyref="true"/></codeph>：开启视频截图上传</li>
                    <li><codeph><ph keyref="false"/></codeph>：关闭视频截图上传</li>
                    </ul></pd>
            </plentry>
            <plentry id="config">
                <pt>config</pt>
                <pd><ph>视频截图上传配置。详见 <xref keyref="ContentInspectConfig"/>。</ph>
                    <note>视频审核模块选择声网自研插件截图上传（<apiname keyref="CONTENT_INSPECT_SUPERVISION"/>）时需集成视频截图上传动态库 <codeph><ph keyref="moderation"/></codeph>，如果删除该动态库会导致无法正常开启视频截图上传功能。</note>
                </pd>
            </plentry>
            </parml> </section>
        <section id="return_values">
            <title><ph keyref="return-section-title"/></title>
            <p props="flutter">方法成功调用时，无返回值；方法调用失败时，会抛出 <xref keyref="AgoraRtcException"/> 异常，你需要捕获异常并进行处理。<ph props="cn">详见<xref keyref="error-code-link"/>了解详情和解决建议。</ph></p>
            <ul props="native unreal bp unity rn electron cs">
            <li>0: 方法调用成功。</li>
            <li>&lt; 0: 方法调用失败。<ph props="cn">详见<xref keyref="error-code-link"/>了解详情和解决建议。</ph></li>
            </ul></section>
    </refbody>
</reference>
