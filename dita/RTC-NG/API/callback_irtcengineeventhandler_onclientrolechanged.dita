<?xml version='1.0' encoding='UTF-8'?>
<!DOCTYPE reference PUBLIC "-//OASIS//DTD DITA Reference//EN" "reference.dtd">
<reference id="callback_irtcengineeventhandler_onclientrolechanged">
    <title><ph keyref="onClientRoleChanged"/></title>
    <shortdesc id="short"><ph id="shortdesc">用户角色或观众延迟等级发生变化时触发的回调。</ph></shortdesc>
    <refbody>
        <section id="prototype">
            <p outputclass="codeblock">
            <codeblock props="android" outputclass="language-java">public void onClientRoleChanged(int oldRole, int newRole, ClientRoleOptions newRoleOptions)</codeblock>
            <codeblock props="hmos" outputclass="language-arkts">onClientRoleChanged?:(oldRole:Constants.ClientRole, newRole:Constants.ClientRole, newRoleOptions:ClientRoleOptions) =&gt; void;</codeblock>
            <codeblock props="ios mac" outputclass="language-objectivec">- (void)rtcEngine:(AgoraRtcEngineKit * _Nonnull)engine didClientRoleChanged:(AgoraClientRole)oldRole newRole:(AgoraClientRole)newRole newRoleOptions:(AgoraClientRoleOptions * _Nullable)newRoleOptions NS_SWIFT_NAME(rtcEngine(_:didClientRoleChanged:newRole:newRoleOptions:));</codeblock>
            <codeblock props="cpp unreal" outputclass="language-cpp">virtual void onClientRoleChanged(CLIENT_ROLE_TYPE oldRole, CLIENT_ROLE_TYPE newRole, const ClientRoleOptions&amp; newRoleOptions)</codeblock>
         <codeblock props="bp" outputclass="language-cpp">UFUNCTION(BlueprintNativeEvent, Category = "Agora|Event")
	void OnClientRoleChanged(ECLIENT_ROLE_TYPE oldRole, ECLIENT_ROLE_TYPE newRole, const FClientRoleOptions&amp; newRoleOptions);</codeblock>
            <codeblock props="electron" outputclass="language-typescript">  onClientRoleChanged?(
    connection: RtcConnection,
    oldRole: ClientRoleType,
    newRole: ClientRoleType
    newRoleOptions: ClientRoleOptions
  ): void;</codeblock>
            <codeblock props="unity cs" outputclass="language-csharp"> public virtual void OnClientRoleChanged(RtcConnection connection, CLIENT_ROLE_TYPE oldRole, CLIENT_ROLE_TYPE newRole, ClientRoleOptions newRoleOptions) { }</codeblock>
            <codeblock props="rn" outputclass="language-typescript">  onClientRoleChanged?(
    connection: RtcConnection,
    oldRole: ClientRoleType,
    newRole: ClientRoleType
    newRoleOptions: ClientRoleOptions
  ): void;</codeblock>
            <codeblock props="flutter" outputclass="language-dart">final void Function(
      RtcConnection connection,
      ClientRoleType oldRole,
      ClientRoleType newRole,
      ClientRoleOptions newRoleOptions)? onClientRoleChanged;</codeblock>
            <codeblock props="reserve" outputclass="language-cpp"/></p>
        </section>
        <section id="detailed_desc" deliveryTarget="details" otherprops="no-title">
        <note type="attention" props="android cpp">当你在加入频道前调用 <codeph>setClientRole</codeph> 并将用户角色设置为 <codeph>BROADCASTER</codeph> 时，该回调不会被触发。</note>
            <note type="attention" props="apple">当在加入频道前调用 <xref keyref="setClientRole1"/> 或 <xref keyref="setClientRole2"/> 并将用户角色设置为 <codeph>BROADCASTER</codeph> 时，该回调不会被触发。</note>
            </section>
        <section id="timing" deliveryTarget="details">
            <title>触发时机</title>
            <p>该回调会在以下任一情况下触发：
                    <ul>
                        <li>加入频道后调用 <codeph>setClientRole</codeph> 设置用户角色或观众延迟等级。</li>
                        <li>加入频道前调用 <codeph>setClientRole</codeph> 并将用户角色设置为 <codeph>AUDIENCE</codeph>。</li>
                        </ul>
                    </p>
        <p props="bp electron flutter hmos rn">在以下任意一种情况时，会触发此回调：<ul>
                    <li>在<b>加入频道后</b>调用 <xref keyref="setClientRole2"/> 设置用户角色或观众端延时级别。</li>
                    <li>在<b>加入频道前</b>调用 <xref keyref="setClientRole2"/> 并将用户角色设为 <parmname>AUDIENCE</parmname>。</li></ul></p>
        </section>
        <section id="restriction" deliveryTarget="details">
            <title>使用限制</title>
            <p>无。</p>
        <p props="bp electron flutter hmos rn">当你在<b>加入频道前</b>调用 <xref keyref="setClientRole2"/> 并将用户角色设为 <parmname>BROADCASTER</parmname> 时，不会触发此回调。</p>
        </section>
        <section id="parameters" deliveryTarget="details">
            <title><ph keyref="callback-section-title"/></title>
            <parml>
            <plentry conkeyref="onJoinChannelSuccess/engine" props="apple">
                <pt/>
                <pd/>
            </plentry>
            <plentry props="cs electron flutter rn unity">
                <pt>connection</pt>
                <pd>Connection 信息。详见 <xref keyref="RtcConnection"/>。</pd>
            </plentry>
            <plentry id="oldRole">
                <pt>oldRole</pt>
                <pd props="bp cs electron flutter mac rn unity unreal">切换前的角色：<ph props="apple bp cpp cs electron flutter hmos rn unity unreal"><xref keyref="CLIENT_ROLE_TYPE"/>。</ph>
                    <ul conkeyref="setClientRole1/clientroletype" props="android">
                    <li/>
                    </ul> </pd>
            <pd props="android">用户切换前的角色：
                    <ul>
                        <li><ph keyref="CLIENT_ROLE_BROADCASTER"/> (1)：主播。</li>
                        <li><ph keyref="CLIENT_ROLE_AUDIENCE"/> (2)：观众。</li>
                        </ul>
                    </pd>
                <pd props="cpp ios">用户切换前的角色，详见 <xref keyref="CLIENT_ROLE_TYPE"/>。</pd>
                </plentry>
            <plentry id="newRole">
                <pt>newRole</pt>
                <pd props="bp cs electron flutter mac rn unity unreal">切换后的角色：<ph props="apple bp cpp cs electron flutter hmos rn unity unreal"><xref keyref="CLIENT_ROLE_TYPE"/>。</ph>
                    <ul conkeyref="setClientRole1/clientroletype" props="android">
                    <li/>
                    </ul> </pd>
            <pd props="android">用户切换后的角色：
                    <ul>
                        <li><ph keyref="CLIENT_ROLE_BROADCASTER"/> (1)：主播。</li>
                        <li><ph keyref="CLIENT_ROLE_AUDIENCE"/> (2)：观众。</li>
                        </ul>
                    </pd>
                <pd props="cpp ios">用户切换后的角色，详见 <xref keyref="CLIENT_ROLE_TYPE"/>。</pd>
                </plentry>
            <plentry>
                <pt>newRoleOptions</pt>
                <pd props="bp cs electron flutter mac rn unity unreal">
                    <dl outputclass="since">
                    <dlentry props="android apple cpp">
                        <dt>自从</dt>
                        <dd>v4.1.0</dd>
                    </dlentry>
                    </dl>
                    <p>切换后的角色属性。详见 <xref keyref="ClientRoleOptions"/>。</p>
                </pd>
            <pd props="android">用户切换后的角色属性。详见 <xref keyref="ClientRoleOptions"/>。</pd>
                <pd props="ios">用户切换后的角色属性，详见 <xref keyref="ClientRoleOptions"/>。</pd>
                <pd props="cpp">用户切换后角色的属性。详见 <xref keyref="ClientRoleOptions"/>。</pd>
                </plentry>
            <plentry props="ios">
                <pt props="ios">engine</pt>
                <pd props="ios">引擎实例对象。</pd>
                </plentry>
        </parml> </section>
    </refbody>
</reference>
