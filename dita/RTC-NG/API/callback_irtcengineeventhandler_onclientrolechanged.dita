<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE reference PUBLIC "-//OASIS//DTD DITA Reference//EN" "reference.dtd">
<reference id="callback_irtcengineeventhandler_onclientrolechanged">
    <title><ph keyref="onClientRoleChanged"/></title>
    <shortdesc id="short"><ph id="shortdesc">直播场景下用户角色已切换回调。</ph></shortdesc>
    <refbody>
        <section id="prototype">
            <p outputclass="codeblock">
            <codeblock props="android" outputclass="language-java">public void onClientRoleChanged(int oldRole, int newRole, ClientRoleOptions newRoleOptions) {}
</codeblock>
            <codeblock props="ios mac" outputclass="language-objectivec">- (void)rtcEngine:(AgoraRtcEngineKit * _Nonnull)engine didClientRoleChanged:(AgoraClientRole)oldRole
newRole:(AgoraClientRole)newRole newRoleOptions:(AgoraClientRoleOptions * _Nullable)newRoleOptions
NS_SWIFT_NAME(rtcEngine(_:didClientRoleChanged:newRole:newRoleOptions:));</codeblock>
            <codeblock props="cpp" outputclass="language-cpp">virtual void onClientRoleChanged(CLIENT_ROLE_TYPE oldRole, CLIENT_ROLE_TYPE newRole, const ClientRoleOptions&amp; newRoleOptions) {
    (void)oldRole;
    (void)newRole;
    (void)newRoleOptions;
}</codeblock>
            <codeblock props="electron" outputclass="language-typescript">  onClientRoleChanged?(
    connection: RtcConnection,
    oldRole: ClientRoleType,
    newRole: ClientRoleType
    newRoleOptions: ClientRoleOptions
  ): void;</codeblock>
            <codeblock props="unity" outputclass="language-csharp"> public virtual void OnClientRoleChanged(RtcConnection connection, CLIENT_ROLE_TYPE oldRole, CLIENT_ROLE_TYPE newRole, ClientRoleOptions newRoleOptions) { }</codeblock>
            <codeblock props="rn" outputclass="language-typescript">  onClientRoleChanged?(
    connection: RtcConnection,
    oldRole: ClientRoleType,
    newRole: ClientRoleType
    newRoleOptions: ClientRoleOptions
  ): void;</codeblock>
            <codeblock props="flutter" outputclass="language-dart">final void Function(
      RtcConnection connection,
      ClientRoleType oldRole,
      ClientRoleType newRole,
      ClientRoleOptions newRoleOptions)? onClientRoleChanged;</codeblock>
            <codeblock props="reserve" outputclass="language-cpp"></codeblock></p>
        </section>
        <section id="detailed_desc">
            <p>该回调是由本地用户在加入频道后调用 <xref keyref="setClientRole2"/> 改变用户角色触发的。</p>
        </section>
        <section id="parameters">
            <title><ph keyref="callback-section-title"/></title>
            <parml>
            <plentry conkeyref="onJoinChannelSuccess/engine" props="ios mac">
                <pt/>
                <pd/>
            </plentry>
            <plentry props="unity flutter rn electron">
                <pt>connection</pt>
                <pd>Connection 信息。详见 <xref keyref="RtcConnection"/>。</pd>
            </plentry>
            <plentry id="oldRole">
                <pt>oldRole</pt>
                <pd>切换前的角色：<ph props="cpp ios mac electron unity flutter rn"><xref keyref="CLIENT_ROLE_TYPE"/>。</ph>
                    <ul conkeyref="setClientRole1/clientroletype" props="android">
                    <li/>
                    </ul> </pd>
            </plentry>
            <plentry id="newRole">
                <pt>newRole</pt>
                <pd>切换后的角色：<ph props="cpp ios mac electron unity flutter rn"><xref keyref="CLIENT_ROLE_TYPE"/>。</ph>
                    <ul conkeyref="setClientRole1/clientroletype" props="android">
                    <li/>
                    </ul> </pd>
            </plentry>
            <plentry>
                <pt>newRoleOptions</pt>
                <pd>
                    <dl outputclass="since">
                    <dlentry props="native">
                        <dt>自从</dt>
                        <dd>v4.1.0</dd>
                    </dlentry>
                    </dl>
                    <p>切换后的角色属性。详见 <xref keyref="ClientRoleOptions"/>。</p>
                </pd>
            </plentry>
            </parml> </section>
    </refbody>
</reference>
