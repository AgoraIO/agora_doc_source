<?xml version='1.0' encoding='UTF-8'?>
<!DOCTYPE reference PUBLIC "-//OASIS//DTD DITA Reference//EN" "reference.dtd">
<reference id="api_irtcengine_querycamerafocallengthcapability">
    <title><ph keyref="queryCameraFocalLengthCapability"/></title>
    <shortdesc id="short"><ph id="shortdesc">查询摄像头支持的焦距能力。</ph></shortdesc>
    <prolog>
        <metadata>
            <keywords>
                <indexterm keyref="queryCameraFocalLengthCapability"/>
            </keywords>
        </metadata>
    </prolog>
    <refbody>
        <section id="prototype">
            <p outputclass="codeblock">
            <codeblock props="android" outputclass="language-java">public abstract AgoraFocalLengthInfo[] queryCameraFocalLengthCapability();</codeblock>
            <codeblock props="hmos" outputclass="language-arkts"/>
            <codeblock props="ios mac" outputclass="language-objectivec">- (NSArray&lt;AgoraFocalLengthInfo *&gt;* _Nullable)queryCameraFocalLengthCapability NS_SWIFT_NAME(queryCameraFocalLengthCapability());</codeblock>
            <codeblock props="cpp unreal" outputclass="language-cpp">virtual int queryCameraFocalLengthCapability(agora::rtc::FocalLengthInfo* focalLengthInfos, int&amp; size) = 0;</codeblock>
         <codeblock props="bp" outputclass="language-cpp">UFUNCTION(BlueprintCallable, Category = "Agora|IRtcEngine")
	int QueryCameraFocalLengthCapability(const TArray&lt;FFocalLengthInfo&gt; &amp; focalLengthInfos);</codeblock>
            <codeblock props="electron" outputclass="language-typescript"/>
            <codeblock props="unity cs" outputclass="language-csharp">public abstract int QueryCameraFocalLengthCapability(ref FocalLengthInfo[] focalLengthInfos, ref int size);</codeblock>
            <codeblock props="rn" outputclass="language-typescript">abstract queryCameraFocalLengthCapability(): {
    focalLengthInfos: FocalLengthInfo[];
    size: number;
  };</codeblock>
            <codeblock props="flutter" outputclass="language-dart">Future&lt;List&lt;FocalLengthInfo&gt;&gt; queryCameraFocalLengthCapability();</codeblock>
            <codeblock props="reserve" outputclass="language-cpp"/></p>
        </section>
        <section id="detailed_desc">
            <title>详情</title>
            <p>如果你希望在视频采集中启用广角或超广角模式，建议先调用该方法检查设备是否支持所需的焦距能力。然后根据查询结果调用 <xref keyref="setCameraCapturerConfiguration"/> 方法调整摄像头的焦距配置，以确保最佳的视频采集性能。<xref keyref="setCameraCapturerConfiguration"/> 调整摄像头的焦距配置，以达到最佳的摄像头采集效果。</p>
            <note type="attention" props="bp cpp flutter unity unreal">该方法仅适用于 Android 和 iOS。</note> <note type="attention" props="cpp">该方法仅适用于 Android 和 iOS 平台。</note>
            </section>
        <section id="parameters" props="bp cpp unity unreal">
            <title>参数</title>
            <parml>
            <plentry>
                <pt>focalLengthInfos</pt>
                <pd props="bp unreal">输入和输出参数。指向 <xref keyref="FocalLengthInfo"/> 对象数组的指针：<ul>
                    <li>输入值：指向一个 <xref keyref="FocalLengthInfo"/> 对象数组，用于存储焦距信息。</li>
                    <li>输出值：方法执行后，输出查询到的焦距信息。</li></ul>
                </pd>
                <pd props="unity">输出参数。方法执行后，输出包含摄像头焦距信息的 <xref keyref="FocalLengthInfo"/> 对象数组。</pd>
            <pd props="cpp">输入输出参数，指向 <xref keyref="FocalLengthInfo"/> 对象数组的指针。方法执行后，输出查询到的焦距信息。详见 <xref keyref="FocalLengthInfo"/>。</pd>
                </plentry>
            <plentry props="cpp unity unreal">
                <pt props="cpp unity unreal">size</pt>
                <pd props="unreal">输入和输出参数。焦距信息数量：<ul>
                    <li>输入值：指定 <parmname>focalLengthInfos</parmname> 数组可以容纳的最大焦距信息数量。请确保该值不小于 8，即 <parmname>focalLengthInfos</parmname> 至少有空间存储 8 个焦距信息。</li>
                    <li>输出值：方法执行后，输出查询到的焦距信息数量。</li></ul>
                </pd>
                <pd props="unity">输出参数。方法执行后，输出查询到的焦距信息数量。</pd>
            <pd props="cpp">输入输出参数，表示焦距信息项的数量。输入时指定 <codeph>focalLengthInfos</codeph> 可容纳的最大焦距信息项数量，确保该值不小于 8。方法执行后，输出实际获取的焦距信息项数量。</pd>
                </plentry>
        </parml> </section>
        <section id="return_values" props="bp flutter native rn unity unreal">
            <title><ph keyref="return-section-title"/></title>
        <p props="flutter">返回 <xref keyref="FocalLengthInfo"/> 对象数组，其中包含摄像头的方向和焦距类型。</p>
        <p props="rn">返回一个包含以下属性的对象：
            <ul>
                <li><parmname>focalLengthInfos</parmname>：<xref keyref="FocalLengthInfo"/> 对象数组，其中包含摄像头的方向和焦距类型。</li>
                <li><parmname>size</parmname>：实际查询到的焦距信息数量。</li></ul>
            </p>
        <ul props="bp unity unreal">
            <li>0: 方法调用成功。</li>
            <li>&lt; 0: 方法调用失败。<ph props="cn">详见<xref keyref="error-code-link"/>了解详情和解决建议。</ph></li>
            </ul>
        <p props="apple"><ul>
                        <li>方法调用成功，返回一个包含 <xref keyref="FocalLengthInfo"/> 对象的数组，详见 <xref keyref="FocalLengthInfo"/>。</li>
                        <li>方法调用失败，返回 <codeph><ph keyref="NULL"/></codeph>。</li>
                        </ul>
                    </p>
        <p props="cpp"><ul>
                        <li>0：方法调用成功。</li>
                        <li>&lt; 0：方法调用失败。</li>
                        </ul>
                    </p>
        <p props="android"><ul>
                        <li>方法调用成功，返回 <xref keyref="FocalLengthInfo"/> 对象数组，包含摄像头的方向和焦距类型。</li>
                        <li>方法调用失败，返回空数组。</li>
                        </ul>
                    </p>
    </section>
    </refbody>
</reference>
