<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE reference PUBLIC "-//OASIS//DTD DITA Reference//EN" "reference.dtd">
<reference id="callback_irtcengineeventhandler_onapicallexecuted">
    <title><ph keyref="onApiCallExecuted"/></title>
    <shortdesc id="short"><ph id="shortdesc">API 方法已执行回调。</ph></shortdesc>
    <prolog>
        <metadata>
            <keywords>
                <indexterm keyref="onApiCallExecuted"/>
            </keywords>
        </metadata>
    </prolog>
    <refbody>
        <section id="prototype">
            <p outputclass="codeblock">
            <codeblock props="android" outputclass="language-java">public void onApiCallExecuted(int error, String api, String result) {}</codeblock>
            <codeblock props="ios mac" outputclass="language-objectivec">- (void)rtcEngine:(AgoraRtcEngineKit * _Nonnull)engine
                    didApiCallExecute:(NSInteger)error
                    api:(NSString * _Nonnull)api
                    result:(NSString * _Nonnull)result;</codeblock>
            <codeblock props="cpp unreal bp" outputclass="language-cpp">virtual void onApiCallExecuted(int err,
     const char* api,
     const char* result) {
     (void)err;
     (void)api;
     (void)result;
     }</codeblock>
            <codeblock props="electron" outputclass="language-typescript">  onApiCallExecuted?(err: ErrorCodeType, api: string, result: string): void;</codeblock>
            <codeblock props="unity cs" outputclass="language-csharp">public virtual void OnApiCallExecuted(int err, string api, string result)</codeblock>
            <codeblock props="rn" outputclass="language-typescript">  onApiCallExecuted?(err: ErrorCodeType, api: string, result: string): void;</codeblock>
            <codeblock props="flutter" outputclass="language-dart">final void Function(ErrorCodeType err, String api, String result)?
      onApiCallExecuted;</codeblock>
            <codeblock props="reserve" outputclass="language-cpp"></codeblock></p>
        </section>
        <section id="detailed_desc">
            <dl outputclass="deprecated">
            <dlentry>
                <dt>弃用：</dt>
                <dd>自 v4.1.0 废弃。该方法既不能准确表征具体的 API 方法，也不能代表 API 的执行结果。</dd>
                <dd>声网建议你通过相关频道和媒体的事件通知得知 API 的执行结果。例如，当调用 <xref keyref="enableLocalAudio"/> 方法开启麦克风后，通过 <xref keyref="onLocalAudioStateChanged"/> 回调判断麦克风的开启状态。</dd>
            </dlentry>
            </dl>
        </section>
        <section id="parameters">
            <title><ph keyref="callback-section-title"/></title>
            <parml>
            <plentry conkeyref="onJoinChannelSuccess/engine" props="ios mac">
                <pt/>
                <pd/>
            </plentry>
            <plentry>
                <pt props="cpp unreal bp unity electron rn flutter cs">err</pt>
                <pt props="android ios mac">error</pt>
                <pd>当方法调用失败时 SDK 返回的错误码。如果该方法调用成功，SDK 会返回 0。</pd>
            </plentry>
            <plentry>
                <pt>api</pt>
                <pd>SDK 执行的 API 方法。</pd>
            </plentry>
            <plentry>
                <pt>result</pt>
                <pd>SDK 调用 API 的结果。</pd>
            </plentry>
            </parml> </section>
    </refbody>
</reference>
