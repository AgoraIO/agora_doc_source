<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE reference PUBLIC "-//OASIS//DTD DITA Reference//EN" "reference.dtd">
<reference id="api_irtcengine_enableextension">
    <title><ph keyref="enableExtension" /></title>
    <shortdesc id="short"><ph id="shortdesc">启用/禁用插件。</ph></shortdesc>
    <prolog>
        <metadata>
            <keywords>
                <indexterm keyref="enableExtension" />
            </keywords>
        </metadata>
    </prolog>
    <refbody>
        <section id="prototype">
            <p outputclass="codeblock">
            <codeblock props="android" outputclass="language-java">public abstract int enableExtension(String provider, String extension, boolean enable);</codeblock>
            <codeblock props="ios mac" outputclass="language-objectivec">- (int)enableExtensionWithVendor:(NSString * __nonnull)provider extension:(NSString * __nonnull)extension enabled:(BOOL)enabled;
                </codeblock>
            <codeblock props="cpp" outputclass="language-cpp">virtual int enableExtension(
                    const char* provider, const char* extension, bool enable=true, agora::media::MEDIA_SOURCE_TYPE type = agora::media::UNKNOWN_MEDIA_SOURCE) = 0;
                </codeblock>
            <codeblock props="electron" outputclass="language-typescript">abstract enableExtension(
    provider: string,
    extension: string,
    enable?: boolean,
    type?: MediaSourceType
  ): number;</codeblock>
            <codeblock props="unity" outputclass="language-csharp">public abstract int EnableExtension(string provider, string extension, bool enable = true, MEDIA_SOURCE_TYPE type = MEDIA_SOURCE_TYPE.UNKNOWN_MEDIA_SOURCE);</codeblock>
            <codeblock props="rn" outputclass="language-typescript">abstract enableExtension(
    provider: string,
    extension: string,
    enable?: boolean,
    type?: MediaSourceType
  ): number;</codeblock>
            <codeblock props="flutter" outputclass="language-dart">Future&lt;void&gt; enableExtension(
    {required String provider,
    required String extension,
    bool enable = true,
    MediaSourceType type = MediaSourceType.unknownMediaSource});</codeblock>
            <codeblock props="unreal" outputclass="language-cpp"></codeblock></p>
        </section>
        <section id="detailed_desc">
            <p>如需调用本方法，请在初始化 <xref keyref="IRtcEngine" /> 对象后立即调用。</p>
            <note>
                <ul>
            <li>如果要开启多个插件，需要多次调用该方法。</li>
            <li>不同插件在 SDK 中处理数据的顺序由插件的开通顺序决定。即先开启的插件会先处理数据。</li>
            </ul> </note> </section>
        <section id="parameters">
            <title>参数</title>
            <parml>
            <plentry conkeyref="setExtensionProperty/vendor">
                <pt />
                <pd />
            </plentry>
            <plentry conkeyref="setExtensionProperty/extension">
                <pt />
                <pd />
            </plentry>
            <plentry id="enable">
                <pt props="android cpp unity rn electron flutter">enable</pt>
                <pt props="ios mac">enabled</pt>
                <pd>
                    <p>是否启用插件：

                    <ul id="ul_c3b_d22_3qb">
                    <li><codeph><ph keyref="true" /></codeph>: 启用插件。</li>
                    <li><codeph><ph keyref="false" /></codeph>: 禁用插件。</li>
                    </ul></p>
                </pd>
            </plentry>
            <plentry id="source" props="cpp unity rn electron flutter">
                    <pt>type</pt>
                    <pd>媒体资源类型。详见 <xref keyref="MEDIA_SOURCE_TYPE" />。
                        <note type="attention">在该方法中，该参数仅支持以下两种设置：
                        <ul>
                        <li>默认值为 <apiname keyref="UNKNOWN_MEDIA_SOURCE" />。</li>
                        <li>如果要使用第二个摄像头采集视频，将该参数设置为 <apiname keyref="SECONDARY_CAMERA_SOURCE" />。</li>
                        </ul></note></pd>
                </plentry>
            </parml> </section>
        <section id="return_values" props="native unity rn electron">
            <title>返回值</title>
            <ul>
            <li>0: 方法调用成功</li>
            <li>&lt; 0: 方法调用失败</li>
            </ul> </section>
    </refbody>
</reference>