<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE reference PUBLIC "-//OASIS//DTD DITA Reference//EN" "reference.dtd">
<reference id="api_imusiccontentcenter_getinternalsongcode">
    <title><ph keyref="getInternalSongCode"/></title>
    <shortdesc id="short"><ph id="shortdesc">创建音乐资源的副歌片段编号。</ph></shortdesc>
    <prolog>
        <metadata>
            <keywords>
                <indexterm keyref="getInternalSongCode"/>
            </keywords>
        </metadata>
    </prolog>
    <refbody>
        <section id="prototype">
            <p outputclass="codeblock">
            <codeblock props="android" outputclass="language-java">public abstract long getInternalSongCode(long songCode, String jsonOption);</codeblock>
            <codeblock props="ios mac" outputclass="language-objectivec">- (NSInteger)getInternalSongCode:(NSInteger)songCode jsonOption:(NSString * _Nullable)jsonOption  NS_SWIFT_NAME(getInternalSongCode(songCode:jsonOption:));</codeblock>
            <codeblock props="cpp unreal" outputclass="language-cpp">virtual int getInternalSongCode(int64_t songCode, const char* jsonOption, int64_t&amp; internalSongCode) = 0;</codeblock>
            <codeblock props="electron" outputclass="language-typescript">abstract getInternalSongCode(songCode: number, jsonOption: string): number;</codeblock>
            <codeblock props="unity cs" outputclass="language-csharp">public abstract int GetInternalSongCode(Int64 songCode, string jsonOption, ref Int64 internalSongCode);</codeblock>
            <codeblock props="rn" outputclass="language-typescript">abstract getInternalSongCode(songCode: number, jsonOption: string): number;</codeblock>
            <codeblock props="flutter" outputclass="language-dart">Future&lt;int> getInternalSongCode(
      {required int songCode, required String jsonOption});</codeblock> </p>
        </section>
        <section id="detailed_desc">
            <title>详情</title>
            <dl outputclass="since">
            <dlentry props="native">
                <dt>自从</dt>
                <dd>v4.2.2</dd>
            </dlentry>
            </dl>
        </section>
        <section id="scenario">
            <title>适用场景</title>
            <p>当你需要播放某一音乐资源的副歌片段前，你需要调用此方法，通过 <parmname>jsonOption</parmname> 参数和该音乐资源的 <parmname>songCode</parmname> 来为该音乐资源的副歌片段创建一个编号，作为该资源的唯一标识。当你获取到该片段的编号后，在你调用相应方法打开、预加载、移除该资源时，将该内部歌曲编号传入 <parmname>songCode</parmname> 参数。</p>
        </section>
        <section id="parameters">
            <title>参数</title>
            <parml>
            <plentry>
                <pt>songCode</pt>
                <pd>音乐资源编号，用于标识音乐资源。你可以通过调用 <xref keyref="getMusicCollectionByMusicChartId"/> 或 <xref keyref="searchMusic"/> 方法来获取音乐资源，并通过由此触发的 <xref keyref="onMusicCollectionResult"/> 回调获取音乐资源的编号（<parmname>songCode</parmname>）。</pd>
            </plentry>
            <plentry>
                <pt>jsonOption</pt>
                <pd>扩展 JSON 字段，默认为 <ph keyref="NULL"/>。目前支持传入下列值：
                <simpletable>
                    <sthead>
                        <stentry>Key 值</stentry>
                        <stentry>Value 值</stentry>
                        <stentry>示例</stentry>
                    </sthead>
                    <strow>
                        <stentry>sceneType</stentry>
                        <stentry>场景类型：
                            <ul>
                    <li>1：直播场景：K 歌及背景音乐播放。</li>
                    <li>2：直播场景：背景音乐播放。</li>
                    <li>3：（默认）语聊场景：K 歌。</li>
                    <li>4：语聊场景：背景音乐播放。</li>
                    <li>5：VR 场景：K 歌及背景音乐播放。</li>
                    </ul><note>声网会根据你在 <parmname>sceneType</parmname> 传入的应用场景进行收费。不同的应用场景对应不同的费率，你可以参考 <xref keyref="ktv-billing"/> 查看详细的计费。如果需要切换到不同场景，需要重新调用此方法并传入 <parmname>sceneType</parmname> 的值。</note></stentry>
                        <stentry>{"sceneType":1}</stentry>
                    </strow>
                    <strow>
                        <stentry>highPart</stentry>
                        <stentry>副歌片段的索引。你可以从 <xref keyref="onMusicCollectionResult"/> 回调中获取副歌片段的索引然后传值。索引序号从 0 开始。
                        </stentry>
                        <stentry>{"format": {"highpart": 0}}</stentry>
                    </strow>
                </simpletable></pd>
            </plentry>
            <plentry props="cpp unreal bp unity cs">
                <pt>internalSongCode</pt>
                <pd>输出参数，音乐资源的内部歌曲编号。</pd>
            </plentry>
            </parml> </section>
        <section id="return_values">
            <title><ph keyref="return-section-title"/></title>
            <ul props="cpp unreal bp unity cs">
                <li>0: 方法调用成功。</li>
                <li>&lt; 0: 方法调用失败。<ph props="cn">详见<xref keyref="error-code-link"/>了解详情和解决建议。</ph></li>
                </ul>
        <ul props="android apple electron rn flutter">
                <li>方法调用成功，返回创建的音乐资源内部编号。</li>
                <li>&lt; 0: 方法调用失败。<ph props="cn">详见<xref keyref="error-code-link"/>了解详情和解决建议。</ph></li>
            </ul></section>
        </refbody>
</reference>
