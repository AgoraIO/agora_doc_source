<?xml version='1.0' encoding='UTF-8'?>
<!DOCTYPE reference PUBLIC "-//OASIS//DTD DITA Reference//EN" "reference.dtd">
<reference id="api_irtcengine_destroymediarecorder">
    <title><ph keyref="destroyMediaRecorder"/></title>
    <shortdesc id="short"><ph id="shortdesc">销毁一个音视频录制对象。</ph></shortdesc>
    <prolog>
        <metadata>
            <keywords>
                <indexterm keyref="destroyMediaRecorder"/>
            </keywords>
        </metadata>
    </prolog>
    <refbody>
        <section id="prototype">
            <p outputclass="codeblock">
            <codeblock props="android" outputclass="language-java">public abstract void destroyMediaRecorder(AgoraMediaRecorder mediaRecorder);</codeblock>
            <codeblock props="hmos" outputclass="language-arkts">public abstract destroyMediaRecorder(recorder: AgoraMediaRecorder): void;</codeblock>
            <codeblock props="ios mac" outputclass="language-objectivec">- (int)destroyMediaRecorder:(AgoraMediaRecorder * _Nullable)mediaRecorder;</codeblock>
            <codeblock props="cpp unreal" outputclass="language-cpp">virtual int destroyMediaRecorder(agora_refptr&lt;IMediaRecorder&gt; mediaRecorder) = 0;</codeblock>
         <codeblock props="bp" outputclass="language-cpp">UFUNCTION(BlueprintCallable, Category = "Agora|RtcEngineProxy")
	int DestroyMediaRecorder(UIMediaRecorder* mediaRecorder);</codeblock>
            <codeblock props="electron" outputclass="language-typescript">abstract destroyMediaRecorder(mediaRecorder: IMediaRecorder): number;</codeblock>
            <codeblock props="unity cs" outputclass="language-csharp">public abstract int DestroyMediaRecorder(IMediaRecorder mediaRecorder);</codeblock>
            <codeblock props="rn" outputclass="language-typescript">abstract destroyMediaRecorder(mediaRecorder: IMediaRecorder): number;</codeblock>
            <codeblock props="flutter" outputclass="language-dart">Future&lt;void&gt; destroyMediaRecorder(MediaRecorder mediaRecorder);</codeblock> </p>
        </section>
        <section id="detailed_desc">
            <title>详情</title>
            <p>当你不再需要录制音频和视频流时，可以调用此方法销毁对应的录制对象。如果录制尚未停止，请先调用 <xref keyref="stopRecording"/> 停止录制，然后再调用此方法销毁录制对象。<xref keyref="stopRecording"/> 停止录制，再调用该方法来销毁音视频录制对象。</p>
            </section>
        <section id="parameters">
            <title>参数</title>
            <parml>
            <plentry>
                <pt>mediaRecorder</pt>
                <pt props="hmos">recorder</pt>
                <pd props="bp cs electron flutter mac rn unity unreal">待销毁的 <xref keyref="IMediaRecorder"/> 对象。</pd>
            <pd props="android ios">要销毁的录制器实例对象。详见 <xref keyref="IMediaRecorder"/>。</pd>
                <pd props="cpp"><xref keyref="IMediaRecorder"/> 对象，表示要销毁的录制对象。详见 <xref keyref="IMediaRecorder"/>。</pd>
                </plentry>
        </parml> </section>
        <section id="return_values" conkeyref="setMediaRecorderObserver/return_values" props="native"> <p props="apple"><ul>
                        <li>0：方法调用成功。</li>
                        <li>&lt; 0：方法调用失败。详见错误码获取排查建议。</li>
                        </ul>
                    </p>
        <p props="cpp"><ul>
                        <li>0：方法调用成功。</li>
                        <li>&lt; 0：方法调用失败。详见错误码及其对应的解决方案。</li>
                        </ul>
                    </p>
        <p props="android"><ul>
                        <li>0：方法调用成功。</li>
                        <li>&lt; 0：方法调用失败。详见 <codeph>Error Codes</codeph>。</li>
                        </ul>
                    </p>
    </section>
    </refbody>
</reference>
