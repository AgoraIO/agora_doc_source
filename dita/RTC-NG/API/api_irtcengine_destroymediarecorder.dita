<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE reference PUBLIC "-//OASIS//DTD DITA Reference//EN" "reference.dtd">
<reference id="api_irtcengine_destroymediarecorder">
    <title><ph keyref="destroyMediaRecorder"/></title>
    <shortdesc id="short"><ph id="shortdesc">销毁音视频录制对象。</ph></shortdesc>
    <prolog>
        <metadata>
            <keywords>
                <indexterm keyref="destroyMediaRecorder"/>
            </keywords>
        </metadata>
    </prolog>
    <refbody>
        <section id="prototype">
            <p outputclass="codeblock">
            <codeblock props="android" outputclass="language-java">public abstract void destroyMediaRecorder(AgoraMediaRecorder mediaRecorder);</codeblock>
            <codeblock props="ios mac" outputclass="language-objectivec">- (int)destroyMediaRecorder:(AgoraMediaRecorder * _Nullable)mediaRecorder;</codeblock>
            <codeblock props="cpp unreal" outputclass="language-cpp">virtual int destroyMediaRecorder(agora_refptr&lt;IMediaRecorder> mediaRecorder) = 0;</codeblock>
         <codeblock props="bp" outputclass="language-cpp">UFUNCTION(BlueprintCallable, Category = &quot;Agora|RtcEngineProxy&quot;)
	int DestroyMediaRecorder(UIMediaRecorder* mediaRecorder);</codeblock>
            <codeblock props="electron" outputclass="language-typescript">abstract destroyMediaRecorder(mediaRecorder: IMediaRecorder): number;</codeblock>
            <codeblock props="unity cs" outputclass="language-csharp">public abstract int DestroyMediaRecorder(IMediaRecorder mediaRecorder);</codeblock>
            <codeblock props="rn" outputclass="language-typescript">abstract destroyMediaRecorder(mediaRecorder: IMediaRecorder): number;</codeblock>
            <codeblock props="flutter" outputclass="language-dart">Future&lt;void> destroyMediaRecorder(MediaRecorder mediaRecorder);</codeblock> </p>
        </section>
        <section id="detailed_desc">
            <title>详情</title>
            <dl outputclass="since">
            <dlentry props="native">
                <dt>自从</dt>
                <dd>v4.2.0</dd>
            </dlentry>
            </dl>
            <p>当你不需要再录制音视频流时，可以调用该方法销毁对应的音视频录制对象。如果你正在录制，请先调用 <xref keyref="stopRecording"/> 停止录制，再调用该方法来销毁音视频录制对象。</p>
        </section>
        <section id="parameters">
            <title>参数</title>
            <parml>
            <plentry>
                <pt>mediaRecorder</pt>
                <pd>待销毁的音视频录制对象。</pd>
            </plentry>
            </parml> </section>
        <section id="return_values" conkeyref="setMediaRecorderObserver/return_values"> </section>
    </refbody>
</reference>
