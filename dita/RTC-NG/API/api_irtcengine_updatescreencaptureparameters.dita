<?xml version='1.0' encoding='UTF-8'?>
<!DOCTYPE reference PUBLIC "-//OASIS//DTD DITA Reference//EN" "reference.dtd">
<reference id="api_irtcengine_updatescreencaptureparameters">
    <title><ph keyref="updateScreenCaptureParameters"/></title>
    <shortdesc id="short"><ph id="shortdesc">更新屏幕采集参数。</ph></shortdesc>
    <prolog>
        <metadata>
            <keywords>
                <indexterm keyref="updateScreenCaptureParameters"/>
            </keywords>
        </metadata>
    </prolog>
    <refbody>
        <section id="prototype">
            <p outputclass="codeblock">
            <codeblock props="android" outputclass="language-java">public abstract int updateScreenCaptureParameters(ScreenCaptureParameters screenCaptureParameters);</codeblock>
            <codeblock props="ios" outputclass="language-objectivec"/>
            <codeblock props="hmos" outputclass="language-arkts">public abstract updateScreenCaptureParameters(screenCaptureParameters: ScreenCaptureParameters): number;</codeblock>
            <codeblock props="mac" outputclass="language-objectivec">- (int)updateScreenCaptureParameters:(AgoraScreenCaptureParameters * _Nonnull)captureParams;</codeblock>
            <codeblock props="cpp unreal" outputclass="language-cpp">virtual int updateScreenCaptureParameters(const ScreenCaptureParameters&amp; captureParams) = 0;</codeblock>
         <codeblock props="bp" outputclass="language-cpp">UFUNCTION(BlueprintCallable, Category = "Agora|IRtcEngine")
	int UpdateScreenCaptureParameters(const FScreenCaptureParameters&amp; captureParams);</codeblock>
            <codeblock props="electron" outputclass="language-typescript">abstract updateScreenCaptureParameters(
    captureParams: ScreenCaptureParameters
  ): number;</codeblock>
            <codeblock props="unity cs" outputclass="language-csharp">public abstract int UpdateScreenCaptureParameters(ScreenCaptureParameters captureParams);</codeblock>
            <codeblock props="rn" outputclass="language-typescript">abstract updateScreenCaptureParameters(
    captureParams: ScreenCaptureParameters
  ): number;</codeblock>
            <codeblock props="flutter" outputclass="language-dart">Future&lt;void&gt; updateScreenCaptureParameters(
      ScreenCaptureParameters captureParams);</codeblock>
            <codeblock props="reserve" outputclass="language-cpp"/></p>
        </section>
        <section id="detailed_desc">
            <dl outputclass="since">
            <dlentry props="android">
                <dt>自从：</dt>
                <dd props="android cpp">自 v3.7.0 版本新增。</dd>
            </dlentry>
            </dl>
            <title>详情</title>
            <note type="attention">
            <ul>
            <li props="bp cpp flutter unity unreal">该方法仅适用于 Windows 和 macOS 平台。</li>
            <li>请在开启屏幕共享或窗口共享后调用该方法。</li>
            </ul> </note> <note type="attention" props="cpp">该方法仅适用于 Windows 和 macOS 平台。请在开始屏幕共享或窗口共享后调用该方法。</note>
            <note type="attention" props="android">请在开始屏幕共享或窗口共享后调用此方法。</note>
            </section>
        <section id="parameters">
            <title>参数</title>
            <parml>
            <plentry>
                <pt props="android hmos">screenCaptureParameters</pt>
                <pt props="bp cpp cs electron flutter mac rn unity unreal">captureParams</pt>
                <pd>屏幕共享的编码参数配置。详见 <xref keyref="ScreenCaptureParameters" props="bp cpp cs electron flutter mac unity unreal"/><xref props="android ios" keyref="ScreenCaptureParameters2"/>。
                    <note type="attention">屏幕共享流的视频属性只需通过该参数设置，与 <xref keyref="setVideoEncoderConfiguration"/> 无关。</note>
                </pd>
            </plentry>
            <plentry props="android cpp">
                <pt props="android cpp">captureParams</pt>
                <pd props="android cpp">屏幕共享的编码参数。屏幕共享视频流的视频属性仅需通过该参数设置，与 <xref keyref="setVideoEncoderConfiguration"/> 无关。详见 <xref keyref="ScreenCaptureParameters2"/>。</pd>
                </plentry>
        </parml> </section>
        <section id="return_values" props="bp cs electron flutter rn unity unreal">
            <title><ph keyref="return-section-title"/></title>
        <p props="flutter">方法成功调用时，无返回值；方法调用失败时，会抛出 <xref keyref="AgoraRtcException"/> 异常，你需要捕获异常并进行处理。<ph props="cn">详见<xref keyref="error-code-link"/>了解详情和解决建议。</ph></p>
        <ul props="apple bp cs electron rn unity unreal">
            <li>0: 方法调用成功。</li>
            <li>&lt; 0: 方法调用失败。<ph props="cn">详见<xref keyref="error-code-link"/>了解详情和解决建议。</ph>
                <ul conkeyref="startScreenCaptureByDisplayId/err">
                <li/>
                </ul> </li>
            </ul>
        <p props="android cpp"><ul>
                        <li>0：方法调用成功。</li>
                        <li>&lt; 0：方法调用失败。<ul>
                            <li>-2：参数无效。</li>
                            <li>-8：屏幕共享状态无效。可能是因为你已共享了其他屏幕或窗口。请尝试调用 <xref keyref="stopScreenCapture"/> 停止当前共享，然后重新开始共享屏幕。</li>
                            </ul>
                        </li>
                        </ul>
                    </p>
    </section>
    </refbody>
</reference>
