<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE reference PUBLIC "-//OASIS//DTD DITA Reference//EN" "reference.dtd">
<reference id="api_irtcengine_updatescreencaptureparameters">
    <title><ph keyref="updateScreenCaptureParameters" /></title>
    <shortdesc id="short"><ph id="shortdesc">更新屏幕采集的参数配置。</ph></shortdesc>
    <prolog>
        <metadata>
            <keywords>
                <indexterm keyref="updateScreenCaptureParameters" />
            </keywords>
        </metadata>
    </prolog>
    <refbody>
        <section id="prototype">
            <p outputclass="codeblock">
            <codeblock props="android" outputclass="language-java">public abstract int updateScreenCaptureParameters(
      ScreenCaptureParameters screenCaptureParameters);</codeblock>
            <codeblock props="ios" outputclass="language-objectivec" />
            <codeblock props="mac" outputclass="language-objectivec">- (int)updateScreenCaptureParameters:(AgoraScreenCaptureParameters * _Nonnull)captureParams;</codeblock>
            <codeblock props="cpp unreal bp" outputclass="language-cpp">virtual int updateScreenCaptureParameters(const ScreenCaptureParameters&amp; captureParams) = 0;</codeblock>
            <codeblock props="electron" outputclass="language-typescript">abstract updateScreenCaptureParameters(
    captureParams: ScreenCaptureParameters
  ): number;</codeblock>
            <codeblock props="unity cs" outputclass="language-csharp">public abstract int UpdateScreenCaptureParameters(ScreenCaptureParameters captureParams);</codeblock>
            <codeblock props="rn" outputclass="language-typescript">abstract updateScreenCaptureParameters(
    captureParams: ScreenCaptureParameters
  ): number;</codeblock>
            <codeblock props="flutter" outputclass="language-dart">Future&lt;void&gt; updateScreenCaptureParameters(
      ScreenCaptureParameters captureParams);</codeblock>
            <codeblock props="reserve" outputclass="language-cpp"></codeblock></p>
        </section>
        <section id="detailed_desc">
            <title>详情</title>
            <note type="attention">
            <ul>
            <li props="cpp unreal bp unity flutter">该方法仅适用于 Windows 和 macOS 平台。</li>
            <li>请在开启屏幕共享或窗口共享后调用该方法。</li>
            </ul> </note> </section>
        <section id="parameters">
            <title>参数</title>
            <parml>
            <plentry>
                <pt props="android">screenCaptureParameters</pt>
                <pt props="mac cpp unreal bp unity electron rn flutter cs">captureParams</pt>
                <pd>屏幕共享的编码参数配置。默认的分辨率为 1920 x 1080，即 2073600 像素。该像素值为计费标准。详见 <xref keyref="ScreenCaptureParameters" props="cpp unreal bp electron flutter mac unity cs" /><xref props="android" keyref="ScreenCaptureParameters2" />。</pd>
            </plentry>
            </parml> </section>
        <section id="return_values">
            <title><ph keyref="return-section-title"/></title>
            <p props="flutter">方法成功调用时，无返回值；方法调用失败时，会抛出 <xref keyref="AgoraRtcException"/> 异常，你需要捕获异常并进行处理。</p>
            <ul>
            <li props="native unreal bp electron unity rn cs">0: 方法调用成功。</li>
            <li>&lt; 0: 方法调用失败。
                <ul conkeyref="startScreenCaptureByDisplayId/err">
                <li />
                </ul> </li>
            </ul> </section>
    </refbody>
</reference>