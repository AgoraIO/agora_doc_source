<?xml version='1.0' encoding='UTF-8'?>
<!DOCTYPE reference PUBLIC "-//OASIS//DTD DITA Reference//EN" "reference.dtd">
<reference id="api_ivideodevicemanager_getcapability">
    <title><ph keyref="getCapability"/></title>
    <shortdesc id="short"><ph id="shortdesc">获取指定视频格式下视频采集设备的详细视频帧信息。</ph></shortdesc>
    <prolog>
        <metadata>
            <keywords>
                <indexterm keyref="getCapability"/>
            </keywords>
        </metadata>
    </prolog>
    <refbody>
        <section id="prototype">
            <p outputclass="codeblock">
            <codeblock props="android" outputclass="language-java"/>
            <codeblock props="hmos" outputclass="language-arkts"/>
            <codeblock props="ios mac" outputclass="language-objectivec"/>
            <codeblock props="cpp unreal" outputclass="language-cpp">virtual int getCapability(const char* deviceIdUTF8, const uint32_t deviceCapabilityNumber, VideoFormat&amp; capability) = 0;</codeblock>
         <codeblock props="bp" outputclass="language-cpp">UFUNCTION(BlueprintCallable, Category = "Agora|IVideoDeviceManager")
	int GetCapability(const FString &amp; deviceIdUTF8, int deviceCapabilityNumber, FVideoFormat&amp; capability);</codeblock>
            <codeblock props="electron" outputclass="language-typescript">abstract getCapability(
    deviceIdUTF8: string,
    deviceCapabilityNumber: number
  ): VideoFormat;</codeblock>
            <codeblock props="unity cs" outputclass="language-csharp">public abstract int GetCapability(string deviceIdUTF8, uint deviceCapabilityNumber, out VideoFormat capability);</codeblock>
            <codeblock props="rn" outputclass="language-typescript">abstract getCapability(
    deviceIdUTF8: string,
    deviceCapabilityNumber: number
  ): VideoFormat;</codeblock>
            <codeblock props="flutter" outputclass="language-dart">Future&lt;VideoFormat&gt; getCapability(
      {required String deviceIdUTF8, required int deviceCapabilityNumber});</codeblock>
            <codeblock props="reserve" outputclass="language-cpp"/></p>
        </section>
        <section id="detailed_desc">
            <title>详情</title>
            <note type="attention" props="bp cpp flutter unity unreal">该方法仅适用于 Windows 和 macOS。</note>
            <p>调用 <xref keyref="numberOfCapabilities"/> 获取视频采集设备支持的视频格式数量后，可调用该方法获取指定索引对应的视频帧详细信息。<xref keyref="numberOfCapabilities"/> 获取视频采集设备支持的视频格式数量后，你可以调用该方法获取指定索引号支持的具体视频帧信息。</p>
            <note type="attention" props="cpp">该方法仅适用于 Windows 和 macOS 平台。</note>
            </section>
        <section id="parameters">
            <title>参数</title>
            <parml>
            <plentry conkeyref="numberOfCapabilities/id">
                <pt/>
                <pd/>
            </plentry>
            <plentry>
                <pt>deviceCapabilityNumber</pt>
                <pd props="android apple bp cs electron flutter rn unity unreal">视频格式的索引号。如果 <apiname keyref="numberOfCapabilities"/> 的返回值为 i，则该参数取值范围为[0,i)。</pd>
            <pd props="cpp">视频格式的索引号。如果 <xref keyref="numberOfCapabilities"/> 的返回值为 i，则该参数的取值范围为 [0, i)。</pd>
                </plentry>
            <plentry props="bp cpp cs unity unreal">
                <pt props="bp cpp cs unity unreal">capability</pt>
                <pd props="android apple bp cs electron flutter rn unity unreal">输出参数。表示指定视频格式的具体信息，包括宽度（px），高度（px）和帧率（fps）。详见 <xref keyref="VideoFormat"/>。</pd>
            <pd props="cpp">输出参数，表示指定视频格式的详细信息，包括宽度（px）、高度（px）和帧率（fps）。详见 <xref keyref="VideoFormat"/>。</pd>
                </plentry>
            <plentry props="cpp">
                <pt props="cpp">deviceIdUTF8</pt>
                <pd props="cpp">视频采集设备的 ID。</pd>
            </plentry>
        </parml> </section>
        <section id="return_values" props="bp cs electron flutter rn unity unreal">
            <title>返回值</title>
        <ul props="bp cs unity unreal">
            <li>0: 方法调用成功。</li>
            <li>&lt; 0: 方法调用失败。<ph props="cn">详见<xref keyref="error-code-link"/>了解详情和解决建议。</ph></li></ul>
        <p props="electron flutter rn">指定视频格式的具体信息，包括宽度（px），高度（px）和帧率（fps）。详见 <xref keyref="VideoFormat"/>。</p>
        <p props="cpp"><ul>
                        <li>0：方法调用成功。</li>
                        <li>&lt; 0：方法调用失败。</li>
                        </ul>
                    </p>
    </section>
    </refbody>
</reference>
