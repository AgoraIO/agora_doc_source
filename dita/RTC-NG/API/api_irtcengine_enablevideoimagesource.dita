<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE reference PUBLIC "-//OASIS//DTD DITA Reference//EN" "reference.dtd">
<reference id="api_irtcengine_enablevideoimagesource">
    <title><ph keyref="enableVideoImageSource" /></title>
    <shortdesc id="short"><ph id="shortdesc">设置是否开启垫片推流功能。</ph></shortdesc>
    <prolog>
        <metadata>
            <keywords>
                <indexterm keyref="enableVideoImageSource" />
            </keywords>
        </metadata>
    </prolog>
    <refbody>
        <section id="prototype">
            <p outputclass="codeblock">
            <codeblock props="android" outputclass="language-java">public abstract int enableVideoImageSource(boolean enabled, ImageTrackOptions options);</codeblock>
            <codeblock props="ios mac" outputclass="language-objectivec">- (int) enableVideoImageSource:(BOOL)enable
                       options:(AgoraImageTrackOptions *_Nullable)options;</codeblock>
            <codeblock props="cpp" outputclass="language-cpp">virtual int enableVideoImageSource(bool enable, const ImageTrackOptions&amp; options) = 0;</codeblock>
            <codeblock props="cs" outputclass="language-csharp" />
            <codeblock props="electron" outputclass="language-typescript">abstract enableVideoImageSource(
    enable: boolean,
    options: ImageTrackOptions
  ): number;</codeblock>
            <codeblock props="unity" outputclass="language-csharp">public abstract int EnableVideoImageSource(bool enable, ImageTrackOptions options);</codeblock>
            <codeblock props="rn" outputclass="language-typescript">abstract enableVideoImageSource(
    enable: boolean,
    options: ImageTrackOptions
  ): number;</codeblock>
            <codeblock props="flutter" outputclass="language-dart">Future&lt;void> enableVideoImageSource(
      {required bool enable, required ImageTrackOptions options});</codeblock>
            <codeblock props="reserve" outputclass="language-cpp"></codeblock></p>
        </section>
        <section id="detailed_desc">
            <title>详情</title>
            <note type="attention">建议你在加入频道后调用该方法。</note>
            <p>在发布视频流时，你可以调用该方法使用自定义图片来替代当前发布的视频流画面进行推流。</p>
            <p>开启该功能后，你可以通过 <xref keyref="ImageTrackOptions" /> 参数自定义垫片图片；在你关闭垫片功能之后，远端用户看到的依旧是当前你发布的视频流画面。</p>
        </section>
        <section id="parameters">
            <title>参数</title>
            <parml>
            <plentry>
                <pt>enable</pt>
                <pd>是否开启垫片推流：
                <ul>
                    <li><codeph><ph keyref="true" /></codeph>：开启垫片推流。</li>
                    <li><codeph><ph keyref="false" /></codeph>：（默认）关闭垫片推流。</li>
                </ul></pd>
            </plentry>
                <plentry>
                    <pt>options</pt>
                    <pd>垫片图片设置，详见 <xref keyref="ImageTrackOptions" />。</pd>
                </plentry>
            </parml> </section>
        <section id="return_values">
            <title><ph keyref="return-section-title"/></title>
            <p props="flutter">方法成功调用时，无返回值；方法调用失败时，会抛出 <xref keyref="AgoraRtcException"/> 异常，你需要捕获异常并进行处理。</p>
            <ul>
            <li props="native electron unity rn">0：方法调用成功。</li>
            <li>&lt; 0：方法调用失败。</li></ul>
        </section>
    </refbody>
</reference>
