<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE reference PUBLIC "-//OASIS//DTD DITA Reference//EN" "reference.dtd">
<reference id="class_playerupdatedinfo">
    <title><ph keyref="PlayerUpdatedInfo" /></title>
    <shortdesc id="short"><ph id="shortdesc">媒体播放器相关信息。</ph></shortdesc>
    <refbody>
        <section id="prototype">
            <p outputclass="codeblock">
            <codeblock props="android" outputclass="language-java">public class PlayerUpdatedInfo {
  private String deviceId;
  private long videoHeight;
  private long videoWidth;
  private long audioSampleRate;
  private long audioChannels;
  private long audioBitsPerSample;
}</codeblock>
            <codeblock props="hmos" outputclass="language-arkts">export class PlayerUpdatedInfo
{
  
  public internalPlayerUuid:string = &quot;&quot;
  
  public deviceId:string = &quot;&quot;
  
  public videoHeight:number = 0
  
  public videoWidth:number = 0
  
  public audioSampleRate:number = 0
  
  public audioChannels:number = 0
  
  public audioBitsPerSample:number = 0
}</codeblock>
            <codeblock props="ios mac" outputclass="language-objectivec">__attribute__((visibility("default"))) @interface AgoraMediaPlayerUpdatedInfo : NSObject
@property(copy, nonatomic) NSString *_Nullable deviceId;
@property(assign, nonatomic) NSInteger videoHeight;
@property(assign, nonatomic) NSInteger videoWidth;
@property(assign, nonatomic) NSInteger audioSampleRate;
@property(assign, nonatomic) NSInteger audioChannels;
@property(assign, nonatomic) NSInteger audioBitsPerSample;
@end</codeblock>
            <codeblock props="cpp unreal" outputclass="language-cpp">struct PlayerUpdatedInfo {
  const char* deviceId;
  int videoHeight;
  int videoWidth;
  int audioSampleRate;
  int audioChannels;
  int audioBitsPerSample;
};</codeblock>
         <codeblock props="bp" outputclass="language-cpp">USTRUCT(BlueprintType)
struct FPlayerUpdatedInfo {
	GENERATED_BODY()
public:

	UPROPERTY(VisibleAnywhere, BlueprintReadWrite, Category = &quot;Agora|PlayerUpdatedInfo&quot;)
	FString internalPlayerUuid = &quot;&quot;;
	UPROPERTY(VisibleAnywhere, BlueprintReadWrite, Category = &quot;Agora|PlayerUpdatedInfo&quot;)
	FString deviceId = &quot;&quot;;
	UPROPERTY(VisibleAnywhere, BlueprintReadWrite, Category = &quot;Agora|PlayerUpdatedInfo&quot;)
	int videoHeight = 0;
	UPROPERTY(VisibleAnywhere, BlueprintReadWrite, Category = &quot;Agora|PlayerUpdatedInfo&quot;)
	int videoWidth = 0;
	UPROPERTY(VisibleAnywhere, BlueprintReadWrite, Category = &quot;Agora|PlayerUpdatedInfo&quot;)
	int audioSampleRate = 0;
	UPROPERTY(VisibleAnywhere, BlueprintReadWrite, Category = &quot;Agora|PlayerUpdatedInfo&quot;)
	int audioChannels = 0;
	UPROPERTY(VisibleAnywhere, BlueprintReadWrite, Category = &quot;Agora|PlayerUpdatedInfo&quot;)
	int audioBitsPerSample = 0;

	FPlayerUpdatedInfo(){}
	FPlayerUpdatedInfo(const agora::media::base::PlayerUpdatedInfo&amp; playerUpdatedInfo) {
		
		internalPlayerUuid = UTF8_TO_TCHAR(playerUpdatedInfo.internalPlayerUuid);
		deviceId = UTF8_TO_TCHAR(playerUpdatedInfo.deviceId);
		videoHeight = playerUpdatedInfo.videoHeight;
		videoWidth = playerUpdatedInfo.videoWidth;
		audioSampleRate = playerUpdatedInfo.audioSampleRate;
		audioChannels = playerUpdatedInfo.audioChannels;
		audioBitsPerSample = playerUpdatedInfo.audioBitsPerSample;
	}
	agora::media::base::PlayerUpdatedInfo CreateAgoraData() const {
		agora::media::base::PlayerUpdatedInfo AgoraData;
		SET_UABT_FSTRING_TO_CONST_CHAR___MEMALLOC(AgoraData.internalPlayerUuid,this-&gt;internalPlayerUuid)
		SET_UABT_FSTRING_TO_CONST_CHAR___MEMALLOC(AgoraData.deviceId,this-&gt;deviceId)
		AgoraData.videoHeight = videoHeight;
		AgoraData.videoWidth = videoWidth;
		AgoraData.audioSampleRate = audioSampleRate;
		AgoraData.audioChannels = audioChannels;
		AgoraData.audioBitsPerSample = audioBitsPerSample;
		return AgoraData;
	}
	void FreeAgoraData(agora::media::base::PlayerUpdatedInfo &amp; AgoraData) const {
		SET_UABT_FSTRING_TO_CONST_CHAR___MEMFREE(AgoraData.internalPlayerUuid)
		SET_UABT_FSTRING_TO_CONST_CHAR___MEMFREE(AgoraData.deviceId)
	}
};</codeblock>
            <codeblock props="electron" outputclass="language-typescript">export class PlayerUpdatedInfo {
  
  playerId?: string;
  
  deviceId?: string;
  
  cacheStatistics?: CacheStatistics;
}</codeblock>
            <codeblock props="unity cs" outputclass="language-csharp">public class PlayerUpdatedInfo : OptionalJsonParse
    {
        public Optional&lt;string&gt; playerId = new Optional&lt;string&gt;();

        public Optional&lt;string&gt; deviceId = new Optional&lt;string&gt;();

        public Optional&lt;CacheStatistics&gt; cacheStatistics = new Optional&lt;CacheStatistics&gt;();
    }</codeblock>
            <codeblock props="rn" outputclass="language-typescript">export class PlayerUpdatedInfo {
  
  playerId?: string;
  
  deviceId?: string;
  
  cacheStatistics?: CacheStatistics;
}</codeblock>
            <codeblock props="flutter" outputclass="language-dart">class PlayerUpdatedInfo {
  const PlayerUpdatedInfo({this.playerId, this.deviceId});

  @JsonKey(name: 'playerId')
  final String? playerId;
  @JsonKey(name: 'deviceId')
  final String? deviceId;
  factory PlayerUpdatedInfo.fromJson(Map&lt;String, dynamic&gt; json) =&gt;
      _$PlayerUpdatedInfoFromJson(json);
  Map&lt;String, dynamic&gt; toJson() =&gt; _$PlayerUpdatedInfoToJson(this);
}</codeblock>
            <codeblock props="reserve" outputclass="language-cpp"></codeblock></p>
        </section>
        <section id="parameters">
            <title><text conref="../conref/conref_api_metadata.dita#conref_api_metadata/property" /></title>
            <parml>
            <plentry>
                <pt>deviceId</pt>
                <pd>设备 ID，标识一个设备。</pd>
            </plentry>
            <plentry>
                <pt>videoHeight</pt>
                <pd>视频高度 (pixel)。</pd>
            </plentry>
            <plentry>
                <pt>videoWidth</pt>
                <pd>视频宽度 (pixel)。</pd>
            </plentry>
             <plentry>
                 <pt>audioSampleRate</pt>
                 <pd>音频采样率 (Hz)。</pd>
             </plentry>
              <plentry>
                  <pt>audioChannels</pt>
                  <pd>声道数。</pd>
              </plentry>
               <plentry>
                   <pt>audioBitsPerSample</pt>
                   <pd>每个音频采样点的位数 (bit)。</pd>
               </plentry>
            </parml> </section>
    </refbody>
</reference>
