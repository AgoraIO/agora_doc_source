<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE reference PUBLIC "-//OASIS//DTD DITA Reference//EN" "reference.dtd">
<reference id="class_playerupdatedinfo">
    <title><ph keyref="PlayerUpdatedInfo" /></title>
    <shortdesc id="short"><ph id="shortdesc">媒体播放器相关信息。</ph></shortdesc>
    <refbody>
        <section id="prototype">
            <p outputclass="codeblock">
            <codeblock props="android" outputclass="language-java">public class PlayerUpdatedInfo {
  public String playerId;
  public String deviceId;
  public CacheStatistics cacheStatistics;
}</codeblock>
            <codeblock props="ios mac" outputclass="language-objectivec">__attribute__((visibility("default"))) @interface AgoraMediaPlayerUpdatedInfo : NSObject
@property(copy, nonatomic) NSString *_Nullable playerId;
@property(copy, nonatomic) NSString *_Nullable deviceId;
@property(strong, nonatomic) AgoraMediaPlayerCacheStatistics *_Nullable cacheStatistics;
@end</codeblock>
            <codeblock props="cpp unreal" outputclass="language-cpp">struct PlayerUpdatedInfo {
  Optional&lt;const char*> playerId;
  Optional&lt;const char*> deviceId;
  Optional&lt;CacheStatistics> cacheStatistics;
};</codeblock>
         <codeblock props="bp" outputclass="language-cpp">USTRUCT(BlueprintType)
struct FPlayerUpdatedInfo {
	GENERATED_BODY()
	UPROPERTY(VisibleAnywhere, BlueprintReadWrite, Category = &quot;Agora|PlayerUpdatedInfo&quot;)
	bool playerId_SetValue;
	UPROPERTY(VisibleAnywhere, BlueprintReadWrite, Category = &quot;Agora|PlayerUpdatedInfo&quot;)
	FString playerId;
	UPROPERTY(VisibleAnywhere, BlueprintReadWrite, Category = &quot;Agora|PlayerUpdatedInfo&quot;)
	bool deviceId_SetValue;
	UPROPERTY(VisibleAnywhere, BlueprintReadWrite, Category = &quot;Agora|PlayerUpdatedInfo&quot;)
	FString deviceId;
	UPROPERTY(VisibleAnywhere, BlueprintReadWrite, Category = &quot;Agora|PlayerUpdatedInfo&quot;)
	bool cacheStatistics_SetValue;
	UPROPERTY(VisibleAnywhere, BlueprintReadWrite, Category = &quot;Agora|PlayerUpdatedInfo&quot;)
	FCacheStatistics cacheStatistics;
};</codeblock>
            <codeblock props="electron" outputclass="language-typescript">export class PlayerUpdatedInfo {
  
  playerId?: string;
  
  deviceId?: string;
  
  cacheStatistics?: CacheStatistics;
}</codeblock>
            <codeblock props="unity cs" outputclass="language-csharp">public class PlayerUpdatedInfo : OptionalJsonParse
    {
        public Optional&lt;string&gt; playerId = new Optional&lt;string&gt;();

        public Optional&lt;string&gt; deviceId = new Optional&lt;string&gt;();

        public Optional&lt;CacheStatistics&gt; cacheStatistics = new Optional&lt;CacheStatistics&gt;();
    }</codeblock>
            <codeblock props="rn" outputclass="language-typescript">export class PlayerUpdatedInfo {
  
  playerId?: string;
  
  deviceId?: string;
  
  cacheStatistics?: CacheStatistics;
}</codeblock>
            <codeblock props="flutter" outputclass="language-dart">class PlayerUpdatedInfo {
  const PlayerUpdatedInfo({this.playerId, this.deviceId});

  @JsonKey(name: 'playerId')
  final String? playerId;
  @JsonKey(name: 'deviceId')
  final String? deviceId;
  factory PlayerUpdatedInfo.fromJson(Map&lt;String, dynamic&gt; json) =&gt;
      _$PlayerUpdatedInfoFromJson(json);
  Map&lt;String, dynamic&gt; toJson() =&gt; _$PlayerUpdatedInfoToJson(this);
}</codeblock>
            <codeblock props="reserve" outputclass="language-cpp"></codeblock></p>
        </section>
        <section id="parameters">
            <title><text conref="../conref/conref_api_metadata.dita#conref_api_metadata/property" /></title>
            <parml>
            <plentry>
                <pt>playerId</pt>
                <pd>播放器 ID，标识一个播放器。</pd>
            </plentry>
            <plentry>
                <pt>deviceId</pt>
                <pd>设备 ID，标识一个设备。</pd>
            </plentry>
            <plentry>
                <pt>cacheStatistics</pt>
                <pd>
                    <p>当前缓存的媒体文件的相关统计数据。</p>
                    <p>调用 <xref keyref="openWithMediaSource" /> 方法且设置 <parmname>enableCache</parmname> 成员为 <codeph><ph keyref="true" /></codeph> 后，当前缓存的媒体文件的相关统计数据会在媒体文件开始播放后每秒更新一次，详见 <xref keyref="CacheStatistics" />。</p>
                </pd>
            </plentry>
            </parml> </section>
    </refbody>
</reference>
