<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE reference PUBLIC "-//OASIS//DTD DITA Reference//EN" "reference.dtd">
<reference id="api_imediaplayer_open">
    <title><ph keyref="open" /></title>
    <shortdesc id="short"><ph id="shortdesc">打开媒体资源。</ph></shortdesc>
    <prolog>
        <metadata>
            <keywords>
                <indexterm keyref="open" />
            </keywords>
        </metadata>
    </prolog>
    <refbody>
        <section id="prototype">
            <p outputclass="codeblock">
            <codeblock props="android" outputclass="language-java">int open(String url, long startPos);
</codeblock>
            <codeblock props="ios mac" outputclass="language-objectivec">- (int)open:(NSString *)url startPos:(NSInteger)startPos;
</codeblock>
            <codeblock props="cpp unreal" outputclass="language-cpp">virtual int open(const char* url, int64_t startPos) = 0;</codeblock>
         <codeblock props="bp" outputclass="language-cpp">UFUNCTION(BlueprintCallable, Category = &quot;Agora|IMediaPlayer&quot;)
	int Open(FString url, int64 startPos);</codeblock>
            <codeblock props="electron" outputclass="language-typescript">abstract open(url: string, startPos: number): number;</codeblock>
            <codeblock props="unity cs" outputclass="language-csharp">public abstract int Open(string url, Int64 startPos);</codeblock>
            <codeblock props="rn" outputclass="language-typescript">abstract open(url: string, startPos: number): number;</codeblock>
            <codeblock props="flutter" outputclass="language-dart">Future&lt;void&gt; open({required String url, required int startPos});</codeblock>
            <codeblock props="reserve" outputclass="language-cpp"></codeblock></p>
        </section>
        <section id="detailed_desc">
            <title>详情</title>
            <p props="hide">在 Android 平台上，如果你需要打开 URI 格式的文件，请使用 <xref keyref="open2" />。</p>
            <p id="uri" props="android">该方法支持打开以 <codeph>content://</codeph> 开头的 URI 文件。</p>
            <p props="hide">如果用户需要自定义播放线路，你可以调用 <xref keyref="openWithAgoraCDNSrc" />。声网会通过自研调度中心支持调度线路，提升观看用户体验。如果用户不需要自定义播放线路，你可以调用 <xref keyref="open" />。</p>
            <note type="attention" id="note">
            <p props="native unreal bp unity electron flutter cs">该方法为异步调用。</p>
            <p id="open">如需播放媒体文件，请在收到 <xref keyref="onPlayerSourceStateChanged" /> 回调报告播放状态为 <apiname keyref="PLAYER_STATE_OPEN_COMPLETED" /> 后再调用 <xref keyref="play" /> 方法播放媒体文件。</p>
            </note> </section>
        <section id="parameters">
            <title>参数</title>
            <parml>
            <plentry>
                <pt>url</pt>
                <pd>设置媒体文件的路径，支持本地和在线文件。</pd>
            </plentry>
            <plentry>
                <pt>startPos</pt>
                <pd>设置起始播放位置（毫秒），默认值为 0。</pd>
            </plentry>
            </parml> </section>
        <section id="return_values">
            <title><ph keyref="return-section-title"/></title>
            <p props="flutter">方法成功调用时，无返回值；方法调用失败时，会抛出 <xref keyref="AgoraRtcException"/> 异常，你需要捕获异常并进行处理。<ph props="cn">详见<xref keyref="error-code-link"/>了解详情和解决建议。</ph></p>
            <ul props="native unreal bp unity rn electron cs">
            <li>0: 方法调用成功。</li>
            <li>&lt; 0: 方法调用失败。<ph props="cn">详见<xref keyref="error-code-link"/>了解详情和解决建议。</ph></li>
            </ul> </section>
    </refbody>
</reference>
