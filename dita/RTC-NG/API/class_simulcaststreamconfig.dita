<?xml version='1.0' encoding='UTF-8'?>
<!DOCTYPE reference PUBLIC "-//OASIS//DTD DITA Reference//EN" "reference.dtd">
<reference id="class_simulcaststreamconfig">
    <title><ph keyref="SimulcastStreamConfig"/></title>
    <shortdesc id="short"><ph id="shortdesc">低质量视频流配置。</ph></shortdesc>
    <refbody>
        <section id="prototype">
            <p outputclass="codeblock">
            <codeblock props="android" outputclass="language-java">public class SimulcastStreamConfig {
  public VideoEncoderConfiguration.VideoDimensions dimensions;
  public int bitrate;
  public int framerate;

  public SimulcastStreamConfig() {
    this.dimensions = new VideoEncoderConfiguration.VideoDimensions(-1, -1);
    this.bitrate = -1;
    this.framerate = 5;
  }

  public SimulcastStreamConfig(
      VideoEncoderConfiguration.VideoDimensions dimensions, int bitrate, int framerate) {
    this.dimensions = dimensions;
    this.bitrate = bitrate;
    this.framerate = framerate;
  }
}</codeblock>
            <codeblock props="hmos" outputclass="language-arkts">export class SimulcastStreamConfig {
  public dimensions: VideoDimensions;

  public bitrate: number = -1;

  public framerate: number = 5;
  constructor() {
    this.dimensions = new VideoDimensions(-1, -1);
  }
}</codeblock>
            <codeblock props="ios mac" outputclass="language-objectivec">@interface AgoraSimulcastStreamConfig: NSObject
@property (assign, nonatomic) int kBitrate;
@property (assign, nonatomic) int framerate;
@property (assign, nonatomic) CGSize dimensions;
@end</codeblock>
            <codeblock props="cpp unreal" outputclass="language-cpp">struct SimulcastStreamConfig {

  VideoDimensions dimensions;

  int kBitrate;

  int framerate;
  SimulcastStreamConfig() : dimensions(160, 120), kBitrate(65), framerate(5) {}
  bool operator==(const SimulcastStreamConfig&amp; rhs) const {
    return dimensions == rhs.dimensions &amp;&amp; kBitrate == rhs.kBitrate &amp;&amp; framerate == rhs.framerate;
  }
};</codeblock>
         <codeblock props="bp" outputclass="language-cpp">USTRUCT(BlueprintType)
struct FSimulcastStreamConfig
{
	GENERATED_BODY()
public:
	UPROPERTY(VisibleAnywhere, BlueprintReadWrite, Category = "Agora|SimulcastStreamConfig")
	FVideoDimensions dimensions = FVideoDimensions();
	UPROPERTY(VisibleAnywhere, BlueprintReadWrite, Category = "Agora|SimulcastStreamConfig")
	int kBitrate = 0;
	UPROPERTY(VisibleAnywhere, BlueprintReadWrite, Category = "Agora|SimulcastStreamConfig")
	int framerate = 0;
	FSimulcastStreamConfig(){}
	FSimulcastStreamConfig(const agora::rtc::SimulcastStreamConfig &amp; AgoraData){
		dimensions = FVideoDimensions(AgoraData.dimensions);
		kBitrate = AgoraData.kBitrate;
		framerate = AgoraData.framerate;
	}
	agora::rtc::SimulcastStreamConfig CreateAgoraData() const {
		agora::rtc::SimulcastStreamConfig AgoraData;
		AgoraData.dimensions = dimensions.CreateAgoraData();
		AgoraData.kBitrate = kBitrate;
		AgoraData.framerate = framerate;
		return AgoraData;
	}
	void FreeAgoraData(agora::rtc::SimulcastStreamConfig&amp; AgoraData) const {
		dimensions.FreeAgoraData(AgoraData.dimensions);
	}
};</codeblock>
            <codeblock props="electron" outputclass="language-typescript">export class SimulcastStreamConfig {
  dimensions?: VideoDimensions;
  kBitrate?: number;
  framerate?: number;
}</codeblock>
            <codeblock props="unity cs" outputclass="language-csharp">public class SimulcastStreamConfig
    {
        public VideoDimensions dimensions;
        public int kBitrate;
        public int framerate;
    };</codeblock>
            <codeblock props="rn" outputclass="language-typescript">export class SimulcastStreamConfig {
  dimensions?: VideoDimensions;
  kBitrate?: number;
  framerate?: number;
}</codeblock>
            <codeblock props="flutter" outputclass="language-dart">class SimulcastStreamConfig {
  const SimulcastStreamConfig({this.dimensions, this.kBitrate, this.framerate});

  @JsonKey(name: 'dimensions')
  final VideoDimensions? dimensions;
  @JsonKey(name: 'kBitrate')
  final int? kBitrate;
  @JsonKey(name: 'framerate')
  final int? framerate;
  factory SimulcastStreamConfig.fromJson(Map&lt;String, dynamic&gt; json) =&gt;
      _$SimulcastStreamConfigFromJson(json);
  Map&lt;String, dynamic&gt; toJson() =&gt; _$SimulcastStreamConfigToJson(this);
}</codeblock>
            </p>
        </section>
        <section id="parameters">
            <title><text conref="../conref/conref_api_metadata.dita#conref_api_metadata/property"/></title>
            <parml>
            <plentry props="ios">
                <pt props="ios">dimensions</pt>
                <pd><ph>视频尺寸。</ph><ph props="android bp cpp cs electron flutter rn unity unreal">详见 <xref keyref="VideoDimensions"/>。</ph><ph>默认值为视频大流的 50%。</ph></pd>
                <pd props="ios">视频分辨率。默认值为高质量视频流分辨率的 50%。</pd>
            </plentry>
            <plentry props="ios">
                <pt props="android hmos">bitrate</pt>
                <pt props="apple cpp framework ios">kBitrate</pt>
                <pd>视频码率 (Kbps)，默认值为 -1。该参数无需设置，SDK 会根据你设定的视频分辨率和帧率自动匹配最合适的码率。</pd>
                <pd props="ios">视频码率（Kbps）。默认值为 -1。无需设置该参数，SDK 会根据设置的视频分辨率和帧率自动匹配最合适的码率。</pd>
            </plentry>
            <plentry props="ios">
                <pt props="ios">framerate</pt>
                <pd>视频帧率 (fps)。默认值为 5。</pd>
                <pd props="ios">本地视频的帧率（fps）。默认值为 5。</pd>
            </plentry>
            </parml> </section>
    </refbody>
</reference>
