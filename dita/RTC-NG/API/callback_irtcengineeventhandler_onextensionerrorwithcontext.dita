<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE reference PUBLIC "-//OASIS//DTD DITA Reference//EN" "reference.dtd">
<reference id="callback_irtcengineeventhandler_onextensionerrorwithcontext">
    <title><ph keyref="onExtensionErrorWithContext" /></title>
    <shortdesc id="short"><ph id="shortdesc">插件出错回调。</ph></shortdesc>
    <prolog>
        <metadata>
            <keywords>
                <indexterm keyref="onExtensionErrorWithContext" />
            </keywords>
        </metadata>
    </prolog>
    <refbody>
        <section id="prototype">
            <p outputclass="codeblock">
            <codeblock props="android" outputclass="language-java">void onErrorWithContext(ExtensionContext extContext, int error, String message){};</codeblock>
            <codeblock props="hmos" outputclass="language-arkts">onError?:(err:number,message:string) =&gt; void</codeblock>
            <codeblock props="ios mac" outputclass="language-objectivec">- (void)onExtensionErrorWithContext:(AgoraExtensionContext * _Nonnull)context
                   error:(int)error
                 message:(NSString * __nullable)message NS_SWIFT_NAME(onExtensionErrorWithContext(_:error:message:));</codeblock>
            <codeblock props="cpp unreal" outputclass="language-cpp">virtual void onExtensionErrorWithContext(const ExtensionContext &amp;context, int error, const char* message) {
    (void)context;
    (void)error;
    (void)message;
  }</codeblock>
         <codeblock props="bp" outputclass="language-cpp">UFUNCTION(BlueprintNativeEvent, Category = &quot;Agora|Event&quot;)
	void OnExtensionErrorWithContext(const FExtensionContext&amp; context, int error, const FString&amp; message);</codeblock>
            <codeblock props="electron" outputclass="language-typescript">onExtensionErrorWithContext?(
    context: ExtensionContext,
    error: number,
    message: string
  ): void;</codeblock>
            <codeblock props="unity cs" outputclass="language-csharp">public virtual void OnExtensionErrorWithContext(ExtensionContext context, int error, string message){}</codeblock>
            <codeblock props="rn" outputclass="language-typescript">onExtensionErrorWithContext?(
    context: ExtensionContext,
    error: number,
    message: string
  ): void;</codeblock>
            <codeblock props="flutter" outputclass="language-dart">final void Function(ExtensionContext context, int error, String message)?
    onExtensionErrorWithContext;</codeblock>
            <codeblock props="reserve" outputclass="language-cpp"></codeblock></p>
        </section>
        <section id="detailed_desc">
            <p>启用插件失败或者插件运行出错时，插件会触发该回调并报告错误码和错误原因。</p>
        </section>
        <section id="parameters">
            <title>参数</title>
            <parml>
            <plentry id="context">
                <pt props="cpp apple framework">context</pt>
                <pt props="android">extContext</pt>
                <pd>插件上下文信息，详见 <xref keyref="ExtensionContext"/>。</pd>
            </plentry>
            <plentry>
                <pt>error</pt>
                <pd>错误码。详见插件服务商提供的插件文档。</pd>
            </plentry>
            <plentry>
                <pt>message</pt>
                <pd>错误原因。详见插件服务商提供的插件文档。</pd>
            </plentry>
            </parml> </section>
    </refbody>
</reference>
