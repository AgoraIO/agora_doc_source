<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE reference PUBLIC "-//OASIS//DTD DITA Reference//EN" "reference.dtd">
<reference id="api_irtcengine_createmediaplayer">
    <title><ph keyref="createMediaPlayer" /></title>
    <shortdesc id="short"><ph props="android hmos cpp unreal bp unity rn electron flutter cs" id="shortdesc">创建媒体播放器对象。</ph><ph props="apple" id="shortdesc1">创建媒体播放器实例。</ph></shortdesc>
    <prolog>
        <metadata>
            <keywords>
                <indexterm keyref="createMediaPlayer" />
            </keywords>
        </metadata>
    </prolog>
    <refbody>
        <section id="prototype">
            <p outputclass="codeblock">
            <codeblock props="android" outputclass="language-java">public abstract IMediaPlayer createMediaPlayer();</codeblock>
            <codeblock props="hmos" outputclass="language-arkts">public abstract createMediaPlayer():IMediaPlayer|undefined;</codeblock>
            <codeblock props="ios mac" outputclass="language-objectivec">- (id&lt;AgoraRtcMediaPlayerProtocol&gt;_Nullable)createMediaPlayerWithDelegate:
                    (id&lt;AgoraRtcMediaPlayerDelegate&gt;_Nullable)delegate;</codeblock>
            <codeblock props="cpp unreal" outputclass="language-cpp">virtual agora_refptr &lt;IMediaPlayer&gt; createMediaPlayer() = 0;</codeblock>
         <codeblock props="bp" outputclass="language-cpp">UFUNCTION(BlueprintPure, Category = &quot;Agora|IAgoraMediaPlayer&quot;)
	static UAgoraBPuMediaPlayer* GetAgoraMediaPlayer();</codeblock>
            <codeblock props="electron" outputclass="language-typescript">abstract createMediaPlayer(): IMediaPlayer;</codeblock>
            <codeblock props="unity cs" outputclass="language-csharp">public abstract IMediaPlayer CreateMediaPlayer();</codeblock>
            <codeblock props="rn" outputclass="language-typescript">abstract createMediaPlayer(): IMediaPlayer;</codeblock>
            <codeblock props="flutter" outputclass="language-dart">Future&lt;MediaPlayer&gt; createMediaPlayer();</codeblock>
            <codeblock props="reserve" outputclass="language-cpp"></codeblock></p>
        </section>
        <section id="detailed_desc" deliveryTarget="details" otherprops="no-title">
            <p>在调用 <xref keyref="IMediaPlayer"/> 类下的其他 API 前，你需要先调用该方法创建一个媒体播放器实例。如果你需要创建多个实例，可以多次调用该方法。</p>
        </section>
        <section id="timing" deliveryTarget="details">
            <title>调用时机</title>
            <p>该方法在加入频道前后均可调用。</p>
        </section>
        <section id="restriction" deliveryTarget="details">
            <title>调用限制</title>
            <p>无。</p>
        </section>
        <section id="parameters" deliveryTarget="details">
            <title><ph props="apple">参数</ph></title>
            <parml props="apple">
            <plentry>
                <pt>delegate</pt>
                <pd conkeyref="create/handler" />
            </plentry>
            </parml> </section>
        <section id="return_values">
            <title>返回值</title>
            <ul id="ul_cwj_3ry_hqb" props="native unreal bp rn electron flutter unity cs">
            <li>方法调用成功：返回 <xref keyref="IMediaPlayer" /> 对象。</li>
            <li>方法调用失败：返回空指针。</li>
            </ul>
            <p props="apple">返回一个 <xref keyref="IMediaPlayer" /> 实例。</p>
            </section>
    </refbody>
</reference>
