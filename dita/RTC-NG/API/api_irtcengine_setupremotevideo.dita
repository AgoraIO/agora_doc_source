<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE reference PUBLIC "-//OASIS//DTD DITA Reference//EN" "reference.dtd">
<reference id="api_irtcengine_setupremotevideo">
    <title><ph keyref="setupRemoteVideo"/></title>
    <shortdesc id="short"><ph id="shortdesc">初始化远端用户视图。</ph></shortdesc>
    <prolog>
        <metadata>
            <keywords>
                <indexterm keyref="setupRemoteVideo"/>
            </keywords>
        </metadata>
    </prolog>
    <refbody>
        <section id="prototype">
            <p outputclass="codeblock">
            <codeblock props="android" outputclass="language-java">public abstract int setupRemoteVideo(VideoCanvas remote);</codeblock>
            <codeblock props="ios mac" outputclass="language-objectivec">- (int)setupRemoteVideo:(AgoraRtcVideoCanvas * _Nonnull)remote;</codeblock>
            <codeblock props="cpp" outputclass="language-cpp">virtual int setupRemoteVideo(const VideoCanvas&amp; canvas) = 0;</codeblock>
            <codeblock props="electron" outputclass="language-typescript">abstract setupRemoteVideo(canvas: VideoCanvas): number;</codeblock>
            <codeblock props="unity" outputclass="language-csharp">public abstract int SetupRemoteVideo(VideoCanvas canvas);</codeblock>
            <codeblock props="rn" outputclass="language-typescript">abstract setupRemoteVideo(canvas: VideoCanvas): number;</codeblock>
            <codeblock props="flutter" outputclass="language-dart">Future&lt;void&gt; setupRemoteVideo(VideoCanvas canvas);</codeblock>
            <codeblock props="reserve" outputclass="language-cpp"/></p>
        </section>
        <section id="detailed_desc">
            <title>详情</title>
            <p>该方法绑定远端用户和显示视图，并设置远端用户视图在本地显示时的渲染模式和镜像模式，只影响本地用户看到的视频画面。</p>
            <p>调用该方法时需要指定远端视频的用户 ID，一般可以在进频道前提前设置好。如果无法在加入频道前得到远端用户的 ID，可以在收到 <xref keyref="onUserJoined"/> 回调时调用该方法。</p>
            <p>如需解除某个远端用户的绑定视图，可以调用该方法并将 <parmname>view</parmname> 设置为空。</p>
            <p>离开频道后，SDK 会清除远端用户视图的绑定关系。</p>
            <note type="attention">
            <ul>
             <li props="unity">如果你想要在原生窗口上渲染图像，请调用此方法；如果你仅需在 Unity 项目内渲染图像，可直接通过 <xref keyref="AgoraVideoSurface"/> 类来实现。</li>
            <li props="native unity rn flutter unreal">如果你希望在通话中更新远端用户视图的渲染或镜像模式，请使用 <xref keyref="setRemoteRenderMode2"/> 方法。</li>
            <li>如果你使用了录制服务，录制服务会作为一个哑客户端加入频道，因此也会触发 <xref keyref="onUserJoined"/> 回调。由于录制服务不会发送视频流，app 无需为它绑定视图。如果 app 无法识别哑客户端，可以在收到 <xref keyref="onFirstRemoteVideoDecoded"/> 回调时再绑定远端用户视图。</li>
            </ul> </note> </section>
        <section id="parameters">
            <title>参数</title>
            <parml>
            <plentry>
                <pt props="cpp unity rn electron flutter">canvas</pt>
                <pt props="android ios mac">remote</pt>
                <pd>
                    <p>远端视频显示属性。详见 <xref keyref="VideoCanvas"/>。</p>
                </pd>
            </plentry>
            </parml> </section>
        <section id="return_values">
            <title><ph keyref="return-section-title"/></title>
            <p props="flutter">方法成功调用时，无返回值；方法调用失败时，会抛出 <xref keyref="AgoraRtcException"/> 异常，你需要捕获异常并进行处理。</p>
            <ul>
            <li props="native electron unity rn">0：方法调用成功。</li>
            <li>&lt; 0：方法调用失败。</li>
            </ul> </section>
    </refbody>
</reference>
