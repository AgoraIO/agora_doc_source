<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE reference PUBLIC "-//OASIS//DTD DITA Reference//EN" "reference.dtd">
<reference id="callback_ivideoframeobserver_oncapturevideoframe">
    <title><ph keyref="onCaptureVideoFrame"/></title>
    <shortdesc id="short"><ph id="shortdesc">获取本地设备采集到的视频数据。</ph></shortdesc>
    <prolog>
        <metadata>
            <keywords>
                <indexterm keyref="onCaptureVideoFrame"/>
            </keywords>
        </metadata>
    </prolog>
    <refbody>
        <section id="prototype">
            <p outputclass="codeblock">
            <codeblock props="android" outputclass="language-java">boolean onCaptureVideoFrame(int sourceType, VideoFrame videoFrame);</codeblock>
            <codeblock props="ios mac" outputclass="language-objectivec">- (BOOL)onCaptureVideoFrame:(AgoraOutputVideoFrame * _Nonnull)videoFrame sourceType:(AgoraVideoSourceType)sourceType;</codeblock>
            <codeblock props="cpp unreal" outputclass="language-cpp">virtual bool onCaptureVideoFrame(agora::rtc::VIDEO_SOURCE_TYPE sourceType, VideoFrame&amp; videoFrame) = 0;</codeblock>
         <codeblock props="bp" outputclass="language-cpp">DECLARE_DYNAMIC_MULTICAST_DELEGATE_TwoParams(FOnCaptureVideoFrame, EVIDEO_SOURCE_TYPE, sourceType, const FVideoFrame&amp;, videoFrame);</codeblock>
            <codeblock props="electron" outputclass="language-typescript">onCaptureVideoFrame?(
    sourceType: VideoSourceType,
    videoFrame: VideoFrame
  ): boolean;</codeblock>
            <codeblock props="unity cs" outputclass="language-csharp">public virtual bool OnCaptureVideoFrame(VIDEO_SOURCE_TYPE sourceType, VideoFrame videoFrame)</codeblock>
            <codeblock props="rn" outputclass="language-typescript">onCaptureVideoFrame?(
    sourceType: VideoSourceType,
    videoFrame: VideoFrame
  ): boolean;</codeblock>
            <codeblock props="flutter" outputclass="language-dart">final void Function(VideoSourceType sourceType, VideoFrame videoFrame)?
      onCaptureVideoFrame;</codeblock>
            <codeblock props="reserve" outputclass="language-cpp"></codeblock></p>
        </section>
        <section id="detailed_desc">
            <p>成功注册视频数据观测器后，SDK 会在捕捉到每个视频帧时触发该回调。你可以在回调中获取本地设备采集到的视频数据，然后根据场景需要，对视频数据进行前处理。</p>
            <p props="native unreal bp unity electron rn cs">完成前处理后，你可以在该回调中直接修改 <parmname>videoFrame</parmname>，并将返回值设置为 <codeph><ph keyref="true"/></codeph>，即可将修改后的视频数据发送给 SDK。</p>
            <note type="attention" id="note">
            <ul>
            <li>此处获取的视频数据未经过前处理，如水印、裁剪、旋转和美颜等。</li>
            <li>如果你获取到的视频数据类型为 RGBA，SDK 不支持对 alpha 通道的值进行处理。</li>
            <li props="flutter">由于 Flutter 框架的限制，该回调不支持将处理后的视频数据发送回 SDK。</li>
        </ul></note> </section>
        <section id="parameters">
            <title>参数</title>
            <parml>
                <plentry>
                    <pt>sourceType</pt>
                    <pd>视频源类型，可能的视频源包括：摄像头、屏幕或媒体播放器。详见 <xref keyref="VIDEO_SOURCE_TYPE"/> 。</pd>
                </plentry>
            <plentry id="videoframe">
                <pt>videoFrame</pt>
                <pd>视频帧数据。详见 <xref keyref="VideoFrame"/>。
                <note>通过该回调获取的视频帧数据格式默认值如下：
                    <ul>
                        <li props="android cpp unreal bp rn unity flutter">Android：texture</li>
                        <li props="ios cpp unreal bp rn unity flutter">iOS：cvPixelBuffer</li>
                        <li props="mac cpp unreal bp electron unity flutter">macOS：YUV 420</li>
                        <li props="cpp unreal bp electron unity flutter cs">Windows：YUV 420</li></ul></note></pd>
            </plentry>
            </parml> </section>
        <section id="return_values" props="native unreal bp unity electron rn cs">
            <title>返回值</title>
            <p id="return">
            <ul>
            <li props="native unreal bp electron rn">当视频处理模式为 <apiname keyref="PROCESS_MODE_READ_ONLY"/> 时：

                <ul>
                <li><codeph><ph keyref="true"/></codeph>：无实际含义。</li>
                <li><codeph><ph keyref="false"/></codeph>：无实际含义。</li>
                </ul></li>
            <li props="native unreal bp electron rn">当视频处理模式为 <apiname keyref="PROCESS_MODE_READ_WRITE"/> 时：

                <ul>
                <li><codeph><ph keyref="true"/></codeph>：设置 SDK 接收视频帧。</li>
                <li><codeph><ph keyref="false"/></codeph>：设置 SDK 丢弃视频帧。</li>
                </ul></li>
            </ul>
            <ul props="unity cs">
            <li><codeph><ph keyref="true"/></codeph>：设置 SDK 接收视频帧。</li>
            <li><codeph><ph keyref="false"/></codeph>：设置 SDK 丢弃视频帧。</li>
            </ul> </p>
        </section>
    </refbody>
</reference>
