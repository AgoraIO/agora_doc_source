<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE reference PUBLIC "-//OASIS//DTD DITA Reference//EN" "reference.dtd">
<reference id="class_playerplaybackstats">
    <title><ph keyref="PlayerPlaybackStats"/></title>
    <shortdesc id="short"><ph id="shortdesc">当前播放的媒体资源的相关信息。</ph></shortdesc>
    <refbody>
        <section id="prototype">
            <p outputclass="codeblock">
            <codeblock props="android" outputclass="language-java">public class PlayerPlaybackStats {
  private long videoFps;
  private long videoBitrateInKbps;
  private long audioBitrateInKbps;
  private long totalBitrateInKbps;
}</codeblock>
            <codeblock props="hmos" outputclass="language-arkts">export class PlayerPlaybackStats
{
  
  public videoFps:number = 0
  
  public videoBitrateInKbps:number = 0
  
  public audioBitrateInKbps:number = 0
  
  public totalBitrateInKbps:number = 0
}</codeblock>
            <codeblock props="ios mac" outputclass="language-objectivec">__attribute__((visibility("default"))) @interface AgoraMediaPlayerPlaybackStats : NSObject
@property(assign, nonatomic) NSInteger videoFps;
@property(assign, nonatomic) NSInteger videoBitrateInKbps;
@property(assign, nonatomic) NSInteger audioBitrateInKbps;
@property(assign, nonatomic) NSInteger totalBitrateInKbps;
@end</codeblock>
            <codeblock props="cpp unreal" outputclass="language-cpp">struct PlayerPlaybackStats {
  int videoFps;
  int videoBitrateInKbps;
  int audioBitrateInKbps;
  int totalBitrateInKbps;
};</codeblock>
            <codeblock props="bp" outputclass="language-cpp">USTRUCT(BlueprintType)
struct FPlayerPlaybackStats {
	
	GENERATED_BODY()
public:
	UPROPERTY(VisibleAnywhere, BlueprintReadWrite, Category = &quot;Agora|FPlayerPlaybackStats&quot;)
	int videoFps = 0;
	UPROPERTY(VisibleAnywhere, BlueprintReadWrite, Category = &quot;Agora|FPlayerPlaybackStats&quot;)
	int videoBitrateInKbps =0;
	UPROPERTY(VisibleAnywhere, BlueprintReadWrite, Category = &quot;Agora|FPlayerPlaybackStats&quot;)
	int audioBitrateInKbps =0;
	UPROPERTY(VisibleAnywhere, BlueprintReadWrite, Category = &quot;Agora|FPlayerPlaybackStats&quot;)
	int totalBitrateInKbps =0;
	FPlayerPlaybackStats(){}
	FPlayerPlaybackStats(const agora::media::base::PlayerPlaybackStats&amp; AgoraData) {
		videoFps = AgoraData.videoFps;
		videoBitrateInKbps = AgoraData.videoBitrateInKbps;
		audioBitrateInKbps = AgoraData.audioBitrateInKbps;
		totalBitrateInKbps = AgoraData.totalBitrateInKbps;
	}
	agora::media::base::PlayerPlaybackStats CreateAgoraData() const {
		agora::media::base::PlayerPlaybackStats AgoraData;
		AgoraData.videoFps = videoFps;
		AgoraData.videoBitrateInKbps = videoBitrateInKbps;
		AgoraData.audioBitrateInKbps = audioBitrateInKbps;
		AgoraData.totalBitrateInKbps = totalBitrateInKbps;
		return AgoraData;
	}
	void FreeAgoraData(agora::media::base::PlayerPlaybackStats &amp; AgoraData) const {
		
	}
};</codeblock>
            <codeblock props="electron" outputclass="language-typescript">export class PlayerPlaybackStats {
  videoFps?: number;
  videoBitrateInKbps?: number;
  audioBitrateInKbps?: number;
  totalBitrateInKbps?: number;
}</codeblock>
            <codeblock props="unity cs" outputclass="language-csharp">public class PlayerPlaybackStats
                {
                    public int videoFps;
                    public int videoBitrateInKbps;
                    public int audioBitrateInKbps;
                    public int totalBitrateInKbps;
                }</codeblock>
            <codeblock props="rn" outputclass="language-typescript">export class PlayerPlaybackStats {
  videoFps?: number;
  videoBitrateInKbps?: number;
  audioBitrateInKbps?: number;
  totalBitrateInKbps?: number;
}</codeblock>
            <codeblock props="flutter" outputclass="language-dart">@JsonSerializable(explicitToJson: true, includeIfNull: false)
class PlayerPlaybackStats {
  const PlayerPlaybackStats(
      {this.videoFps,
      this.videoBitrateInKbps,
      this.audioBitrateInKbps,
      this.totalBitrateInKbps});

  @JsonKey(name: &#x27;videoFps&#x27;)
  final int? videoFps;

  @JsonKey(name: &#x27;videoBitrateInKbps&#x27;)
  final int? videoBitrateInKbps;

  @JsonKey(name: &#x27;audioBitrateInKbps&#x27;)
  final int? audioBitrateInKbps;

  @JsonKey(name: &#x27;totalBitrateInKbps&#x27;)
  final int? totalBitrateInKbps;

  factory PlayerPlaybackStats.fromJson(Map&lt;String, dynamic&gt; json) =&gt;
      _$PlayerPlaybackStatsFromJson(json);

  Map&lt;String, dynamic&gt; toJson() =&gt; _$PlayerPlaybackStatsToJson(this);
}</codeblock> </p>
        </section>
        <section id="detailed_desc">
            <dl outputclass="since">
            <dlentry props="android apple cpp">
                <dt>自从</dt>
                <dd>v4.3.0</dd>
            </dlentry>
            </dl>
        </section>
        <section id="parameters">
            <title><text conref="../conref/conref_api_metadata.dita#conref_api_metadata/property"/></title>
            <parml>
            <plentry>
                <pt>videoFps</pt>
                <pd>视频帧率，单位为 fps。</pd>
            </plentry>
            <plentry>
                <pt>videoBitrateInKbps</pt>
                <pd>视频码率，单位为 kbps。</pd>
            </plentry>
            <plentry>
                <pt>audioBitrateInKbps</pt>
                <pd>音频码率，单位为 kbps。</pd>
            </plentry>
            <plentry>
                <pt>totalBitrateInKbps</pt>
                <pd>媒体流的总码率，单位为 kbps。</pd>
            </plentry>
            </parml> </section>
                </refbody>
</reference>
