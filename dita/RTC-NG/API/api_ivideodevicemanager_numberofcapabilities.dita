<?xml version='1.0' encoding='UTF-8'?>
<!DOCTYPE reference PUBLIC "-//OASIS//DTD DITA Reference//EN" "reference.dtd">
<reference id="api_ivideodevicemanager_numberofcapabilities">
    <title><ph keyref="numberOfCapabilities"/></title>
    <shortdesc id="short"><ph id="shortdesc">获取指定视频采集设备支持的视频格式数量。</ph></shortdesc>
    <prolog>
        <metadata>
            <keywords>
                <indexterm keyref="numberOfCapabilities"/>
            </keywords>
        </metadata>
    </prolog>
    <refbody>
        <section id="prototype">
            <p outputclass="codeblock">
            <codeblock props="android" outputclass="language-java"/>
            <codeblock props="hmos" outputclass="language-arkts"/>
            <codeblock props="ios mac" outputclass="language-objectivec"/>
            <codeblock props="cpp unreal" outputclass="language-cpp">virtual int numberOfCapabilities(const char* deviceIdUTF8) = 0;</codeblock>
         <codeblock props="bp" outputclass="language-cpp">UFUNCTION(BlueprintCallable, Category = "Agora|IVideoDeviceManager")
	int NumberOfCapabilities(const FString &amp; deviceIdUTF8);</codeblock>
            <codeblock props="electron" outputclass="language-typescript">abstract numberOfCapabilities(deviceIdUTF8: string): number;</codeblock>
            <codeblock props="unity cs" outputclass="language-csharp">public abstract int NumberOfCapabilities(string deviceIdUTF8);</codeblock>
            <codeblock props="rn" outputclass="language-typescript">abstract numberOfCapabilities(deviceIdUTF8: string): number;</codeblock>
            <codeblock props="flutter" outputclass="language-dart">Future&lt;void&gt; numberOfCapabilities(String deviceIdUTF8);</codeblock>
            <codeblock props="reserve" outputclass="language-cpp"/></p>
        </section>
        <section id="detailed_desc">
            <title>详情</title>
            <note type="attention" props="bp cpp flutter unity unreal">该方法仅适用于 Windows 和 macOS。</note>
            <p>视频采集设备可能支持多种视频格式，每种格式支持不同的视频帧宽度、高度和帧率组合。你可以调用该方法获取指定视频采集设备支持的视频格式数量，然后调用 <xref keyref="getCapability"/> 获取对应格式的视频帧信息。<xref keyref="getCapability"/> 获取对应格式的视频帧信息。</p>
            <p>你可以通过调用该方法，获取指定的视频采集设备可支持多少种视频格式，然后调用 <xref keyref="getCapability"/> 获取指定视频格式下的具体视频帧信息。</p>
        <note type="attention" props="cpp">该方法仅适用于 Windows 和 macOS 平台。</note>
            </section>
        <section id="parameters">
            <title>参数</title>
            <parml>
            <plentry id="id">
                <pt>deviceIdUTF8</pt>
                <pd props="bp cpp cs electron flutter native rn unity unreal">视频采集设备的 ID。</pd>
            </plentry>
        </parml> </section>
        <section id="return_values" props="bp cs electron flutter rn unity unreal">
            <title><ph keyref="return-section-title"/></title>
        <p props="flutter">方法成功调用时，无返回值；方法调用失败时，会抛出 <xref keyref="AgoraRtcException"/> 异常，你需要捕获异常并进行处理。<ph props="cn">详见<xref keyref="error-code-link"/>了解详情和解决建议。</ph></p>
        <ul>
            <li props="bp cs electron rn unity unreal">&gt; 0: 方法调用成功。返回该设备支持的视频格式数量。例如：如果指定的摄像头支持 10 种不同的视频格式，则返回值为 10。</li>
            <li>≤ 0: 方法调用失败。<ph props="cn">详见<xref keyref="error-code-link"/>了解详情和解决建议。</ph></li>
            </ul>
        <p props="cpp"><ul>
                        <li>&gt; 0：方法调用成功，返回该设备支持的视频格式数量。例如，如果指定摄像头支持 10 种不同的视频格式，返回值为 10。</li>
                        <li>≤ 0：方法调用失败。</li>
                        </ul>
                    </p>
    </section>
    </refbody>
</reference>
