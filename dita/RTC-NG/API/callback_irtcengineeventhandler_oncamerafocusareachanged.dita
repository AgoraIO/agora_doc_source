<?xml version='1.0' encoding='UTF-8'?>
<!DOCTYPE reference PUBLIC "-//OASIS//DTD DITA Reference//EN" "reference.dtd">
<reference id="callback_irtcengineeventhandler_oncamerafocusareachanged">
    <title><ph keyref="onCameraFocusAreaChanged"/></title>
    <shortdesc id="short"><ph id="shortdesc">摄像头对焦区域发生变化时触发的回调。</ph></shortdesc>
    <prolog>
        <metadata>
            <keywords>
                <indexterm keyref="onCameraFocusAreaChanged"/>
            </keywords>
        </metadata>
    </prolog>
    <refbody>
        <section id="prototype">
            <p outputclass="codeblock">
            <codeblock props="android" outputclass="language-java">public void onCameraFocusAreaChanged(Rect rect) {}</codeblock>
            <codeblock props="hmos" outputclass="language-arkts">onCameraFocusPointChanged?:(point:camera.Point) =&gt; void;</codeblock>
            <codeblock props="ios mac" outputclass="language-objectivec">- (void)rtcEngine:(AgoraRtcEngineKit * _Nonnull)engine cameraFocusDidChangedToRect:(CGRect)rect NS_SWIFT_NAME(rtcEngine(_:cameraFocusDidChangedTo:));</codeblock>
            <codeblock props="cpp unreal" outputclass="language-cpp">virtual void onCameraFocusAreaChanged(int x, int y, int width, int height)</codeblock>
         <codeblock props="bp" outputclass="language-cpp">UFUNCTION(BlueprintNativeEvent, Category = "Agora|Event")
	void OnCameraFocusAreaChanged(int x, int y, int width, int height);</codeblock>
            <codeblock props="electron" outputclass="language-typescript"/>
            <codeblock props="unity cs" outputclass="language-csharp">public virtual void OnCameraFocusAreaChanged(int x, int y, int width, int height)</codeblock>
            <codeblock props="rn" outputclass="language-typescript">  onCameraFocusAreaChanged?(
    x: number,
    y: number,
    width: number,
    height: number
  ): void;</codeblock>
            <codeblock props="flutter" outputclass="language-dart">final void Function(int x, int y, int width, int height)?
      onCameraFocusAreaChanged;</codeblock>
            <codeblock props="reserve" outputclass="language-cpp"/></p>
        </section>
        <section id="detailed_desc">
            <p id="desc" props="android cs flutter ios rn unity"><xref keyref="setCameraFocusPositionInPreview"/> 方法改变对焦位置触发的。</p>
            <note type="attention" props="bp cpp cs flutter rn unity unreal">该回调仅适用于 Android 和 iOS。</note> <note type="attention" props="cpp">该回调仅适用于 Android 和 iOS 平台。</note>
            </section>
        <section id="parameters">
            <title><ph keyref="callback-section-title"/></title>
            <parml props="bp cpp cs flutter rn unity unreal">
            <plentry>
                <pt>x</pt>
                <pd props="android apple bp cs electron flutter rn unity unreal">发生改变的对焦区域的 x 坐标。</pd>
            <pd props="cpp">发生变化的摄像头对焦区域的横坐标。</pd>
                </plentry>
            <plentry>
                <pt>y</pt>
                <pd props="android apple bp cs electron flutter rn unity unreal">发生改变的对焦区域的 y 坐标。</pd>
            <pd props="cpp">发生变化的摄像头对焦区域的纵坐标。</pd>
                </plentry>
            <plentry>
                <pt>width</pt>
                <pd props="android apple bp cs electron flutter rn unity unreal">发生改变的对焦区域的宽度。</pd>
            <pd props="cpp">发生变化的摄像头对焦区域的宽度。</pd>
                </plentry>
            <plentry>
                <pt>height</pt>
                <pd props="android apple bp cs electron flutter rn unity unreal">发生改变的对焦区域的高度。</pd>
            <pd props="cpp">发生变化的摄像头对焦区域的高度。</pd>
                </plentry>
            <plentry props="android ios">
                <pt props="android ios">rect</pt>
                <pd props="android">本地预览画面中的对焦矩形区域。详见 <codeph>Rect</codeph>。</pd>
                <pd props="ios">本地预览中的对焦区域矩形。</pd>
            </plentry>
            <plentry props="ios">
                <pt props="ios">engine</pt>
                <pd props="ios"><xref keyref="IRtcEngine"/> 对象，详见 <xref keyref="IRtcEngine"/>。</pd>
            </plentry>
        </parml>
            <parml props="android apple">
            <plentry>
                <pt>rect</pt>
                <pd>镜头内表示对焦的区域。详见 <xref keyref="rect-link"/>。</pd>
            </plentry>
            <plentry conkeyref="onJoinChannelSuccess/engine" props="apple">
                <pt/>
                <pd/>
            </plentry>
            </parml>
            <parml props="hmos">
            <plentry>
                <pt>point</pt>
                <pd>镜头内表示对焦的点。</pd>
            </plentry>
            <plentry conkeyref="onJoinChannelSuccess/engine" props="apple">
                <pt/>
                <pd/>
            </plentry>
            </parml>
        </section>
    </refbody>
</reference>
