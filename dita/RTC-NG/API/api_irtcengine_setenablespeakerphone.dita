<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE reference PUBLIC "-//OASIS//DTD DITA Reference//EN" "reference.dtd">
<reference id="api_irtcengine_setenablespeakerphone">
    <title><ph keyref="setEnableSpeakerphone" /></title>
    <shortdesc id="short"><ph id="shortdesc">开启或关闭扬声器播放。</ph></shortdesc>
    <prolog>
        <metadata>
            <keywords>
                <indexterm keyref="setEnableSpeakerphone" />
            </keywords>
        </metadata>
    </prolog>
    <refbody>
        <section id="prototype">
            <p outputclass="codeblock">
            <codeblock props="android" outputclass="language-java">public abstract int setEnableSpeakerphone(boolean enabled);</codeblock>
            <codeblock props="ios" outputclass="language-objectivec">- (int)setEnableSpeakerphone:(BOOL)enableSpeaker;</codeblock>
            <codeblock props="cpp unreal" outputclass="language-cpp">virtual int setEnableSpeakerphone(bool speakerOn) = 0;</codeblock>
         <codeblock props="bp" outputclass="language-cpp">UFUNCTION(BlueprintCallable, Category = &quot;Agora|RtcEngineProxy&quot;)
	int SetEnableSpeakerphone(bool speakerOn);</codeblock>
            <codeblock props="electron" outputclass="language-typescript">abstract setEnableSpeakerphone(speakerOn: boolean): number;</codeblock>
            <codeblock props="unity cs" outputclass="language-csharp">public abstract int SetEnableSpeakerphone(bool speakerOn);</codeblock>
            <codeblock props="rn" outputclass="language-typescript">abstract setEnableSpeakerphone(speakerOn: boolean): number;</codeblock>
            <codeblock props="flutter" outputclass="language-dart">Future&lt;void&gt; setEnableSpeakerphone(bool speakerOn);</codeblock></p> </section>
        <section id="detailed_desc">
            <title>详情</title>
            <p>如果 SDK 默认的音频路由<ph props="android ios unity rn flutter">（见<xref keyref="guide-audio-route">音频路由</xref>）</ph>或 <xref keyref="setDefaultAudioRouteToSpeakerphone" /> 的设置无法满足你的需求，你可以调用 <xref keyref="setEnableSpeakerphone" /> 切换当前的音频路由。成功改变音频路由后，SDK 会触发 <xref keyref="onAudioRoutingChanged" /> 回调。</ph>
            <p>该方法只设置用户在当前频道内使用的音频路由，不会影响 SDK 默认的音频路由。如果用户离开当前频道并加入新的频道，则用户还是会使用 SDK 默认的音频路由。</p>
            <note type="attention">
            <ul>
            <li props="cpp unreal bp unity flutter cs">该方法仅适用于 Android 和 iOS 平台。</li>
            <li>该方法需要在加入频道后调用。</li>
            <li>如果用户使用了蓝牙耳机、有线耳机等外接音频播放设备，则该方法的设置无效，音频只会通过外接设备播放。当有多个外接设备时，音频会通过最后一个接入的设备播放。</li>
            </ul></note> </section>
        <section id="parameters">
            <title>参数</title>
            <parml>
            <plentry>
                <pt props="android">enabled</pt>
                <pt props="ios mac">enableSpeaker</pt>
                <pt props="cpp unreal bp unity flutter rn electron cs">speakerOn</pt>
                <pd>
                    <p>设置是否开启扬声器播放：
                    
                    <ul>
                    <li><codeph><ph keyref="true" /></codeph>: 开启。音频路由为扬声器。</li>
                    <li><codeph><ph keyref="false" /></codeph>: 关闭。音频路由为听筒。</li>
                    </ul></p>
                </pd>
            </plentry>
            </parml> </section>
        <section id="return_values">
            <title><ph keyref="return-section-title"/></title>
            <p props="flutter">方法成功调用时，无返回值；方法调用失败时，会抛出 <xref keyref="AgoraRtcException"/> 异常，你需要捕获异常并进行处理。<ph props="cn">详见<xref keyref="error-code-link"/>了解详情和解决建议。</ph></p>
            <ul props="native unreal bp unity rn electron cs">
            <li>0: 方法调用成功。</li>
            <li>&lt; 0: 方法调用失败。<ph props="cn">详见<xref keyref="error-code-link"/>了解详情和解决建议。</ph></li>
            </ul> </section>
    </refbody>
</reference>
