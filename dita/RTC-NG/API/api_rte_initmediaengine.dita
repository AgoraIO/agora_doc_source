<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE reference PUBLIC "-//OASIS//DTD DITA Reference//EN" "reference.dtd">
<reference id="api_rte_initmediaengine">
    <title><ph keyref="InitMediaEngine"/></title>
    <shortdesc id="short"><ph id="shortdesc">初始化 RTE 引擎。</ph></shortdesc>
    <prolog>
        <metadata>
            <keywords>
                <indexterm keyref="InitMediaEngine"/>
            </keywords>
        </metadata>
    </prolog>
    <refbody>
        <section id="prototype">
            <p outputclass="codeblock">
            <codeblock props="android" outputclass="language-java">public void initMediaEngine(AsyncCallback callBack) throws RteException;</codeblock>
            <codeblock props="hmos" outputclass="language-arkts"/>
            <codeblock props="ios mac" outputclass="language-objectivec">- (BOOL)initMediaEngine:(void (^ _Nullable)(AgoraRteError* _Nullable err) )cb error:(AgoraRteError * _Nullable)error;</codeblock>
            <codeblock props="cpp unreal" outputclass="language-cpp">bool InitMediaEngine(std::function&lt;void(rte::Error *err)> cb, Error *err = nullptr);</codeblock>
            <codeblock props="bp" outputclass="language-cpp"/>
            <codeblock props="electron" outputclass="language-typescript"/>
            <codeblock props="unity cs" outputclass="language-csharp"/>
            <codeblock props="rn" outputclass="language-typescript"/>
            <codeblock props="flutter" outputclass="language-dart"/> </p>
        </section>
        <section id="detailed_desc" deliveryTarget="details" otherprops="no-title">
            <dl outputclass="since">
            <dlentry props="native">
                <dt>自从</dt>
                <dd>v4.5.0</dd>
            </dlentry>
            </dl>
            <p>此方法为异步方法，通过回调函数返回初始化结果。</p>
            <p props="android">如果初始化过程中出现错误，SDK 会抛出 <xref keyref="RteException"/> 异常，并返回相应的错误信息。你需要捕获异常并进行处理。</p>
        </section>
        <section id="timing" deliveryTarget="details">
            <title>调用时机</title>
            <p>在创建对象和设置appid之后。</p>
        </section>        
        <section id="restriction" deliveryTarget="details">
            <title>调用限制</title>
            <p>无。</p>
        </section>
        <section id="parameters" deliveryTarget="details">
            <title>参数</title>
            <parml>
            <plentry props="cpp apple">
                <pt>cb</pt>
                <pd>一个异步回调函数，用于返回引擎初始化结果。并向回调中的 <parmname>err</parmname> 传参。这个参数包含了引擎初始化的结果或错误码信息，详见 <xref keyref="Error"/>。//TODO 改下描述，不是所有情况都会调用这个会调。</pd>
            </plentry>
            <plentry props="android">
                <pt>callback</pt>
                <pd>一个异步回调函数，用于返回引擎初始化结果。根据情况返回下列状态或错误码：//TODO 是否直接链接到 Error 这个类？还是要写出来每个枚举值。
                <ul><li><ph keyref="OK"/> (0): 初始化成功。</li>
                <li><ph keyref="DEFAULT"/> (1): 初始化引擎失败。//TODO 错误信息通过 message 得知。这个方法应该也要写文档？</li>
                <li><ph keyref="DEFAULT"/></li></ul></pd>
            </plentry>
                <plentry>
                <pt props="cpp">err</pt>
                <pt props="apple">error</pt>
                <pd>初始化过程中的错误信息，详见 <xref keyref="Error"/>。在调用 <apiname keyref="InitMediaEngine"/> 方法初始化时，如果过程遇到立即可检测的错误（如参数无效、资源不足等），SDK 会通过此参数同步返回错误信息。</pd>
            </plentry>
            </parml>
        </section>
        <section id="return_values" props="cpp apple framework">
            <title><ph keyref="return-section-title"/></title>
            <p props="flutter">方法成功调用时，无返回值；方法调用失败时，会抛出 <xref keyref="AgoraRtcException"/> 异常，你需要捕获异常并进行处理。<ph props="cn">详见<xref keyref="error-code-link"/>了解详情和解决建议。</ph></p>
            <p props="cpp apple unreal bp electron unity rn cs">异步操作是否成功加入队列：<ul>
                <li><codeph><ph keyref="true"/></codeph>：成功加入队列。</li>
                <li><codeph><ph keyref="false"/></codeph>：未成功加入队列。</li>
                </ul>
            <note type="attention">该返回值仅表示初始化操作是否成功地被安排在异步任务队列中，不表示初始化是否成功。</note></p> </section>
        </refbody>
</reference>
