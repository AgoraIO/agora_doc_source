<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE reference PUBLIC "-//OASIS//DTD DITA Reference//EN" "reference.dtd">
<reference id="api_irtcengine_setloglevel">
    <title><ph keyref="setLogLevel" /></title>
    <shortdesc id="short"><ph id="shortdesc">设置 SDK 的日志输出级别。</ph></shortdesc>
    <prolog>
        <metadata>
            <keywords>
                <indexterm keyref="setLogLevel" />
            </keywords>
        </metadata>
    </prolog>
    <refbody>
        <section id="prototype">
            <p outputclass="codeblock">
            <codeblock props="android" outputclass="language-java">public abstract int setLogLevel(int level);</codeblock>
            <codeblock props="ios mac" outputclass="language-objectivec">- (int)setLogLevel:(AgoraLogLevel)level;</codeblock>
            <codeblock props="cpp unreal" outputclass="language-cpp">virtual int setLogLevel(commons::LOG_LEVEL level) = 0;
</codeblock>
         <codeblock props="bp" outputclass="language-cpp">UFUNCTION(BlueprintCallable, Category = &quot;Agora|RtcEngineProxy&quot;)
	int SetLogLevel(ELOG_LEVEL level);</codeblock>
            <codeblock props="electron" outputclass="language-typescript">abstract setLogLevel(level: LogLevel): number;</codeblock>
            <codeblock props="unity cs" outputclass="language-csharp">public abstract int SetLogLevel(LOG_LEVEL level);</codeblock>
            <codeblock props="rn" outputclass="language-typescript">abstract setLogLevel(level: LogLevel): number;</codeblock>
            <codeblock props="flutter" outputclass="language-dart">Future&lt;void&gt; setLogLevel(LogLevel level);</codeblock>
            <codeblock props="reserve" outputclass="language-cpp"></codeblock></p>
        </section>
        <section id="detailed_desc">
            <title>详情</title>
            <dl outputclass="deprecated">
            <dlentry>
                <dt>弃用：</dt>
                <dd>该方法已经废弃。请改用 <xref keyref="RtcEngineConfig" /> 设置日志输出级别。</dd>
            </dlentry>
            </dl>
            <p>选择一个级别，你就可以看到该级别的日志信息。</p>
        </section>
        <section id="parameters">
            <title>参数</title>
            <parml>
            <plentry>
                <pt>level</pt>
                <pd>日志级别: <xref keyref="LOG_LEVEL" />。</pd>
            </plentry>
            </parml> </section>
        <section id="return_values">
            <title><ph keyref="return-section-title"/></title>
            <p props="flutter">方法成功调用时，无返回值；方法调用失败时，会抛出 <xref keyref="AgoraRtcException"/> 异常，你需要捕获异常并进行处理。<ph props="cn">详见<xref keyref="error-code-link"/>了解详情和解决建议。</ph></p>
            <ul props="native unreal bp electron unity rn cs">
            <li>0: 方法调用成功。</li>
            <li>&lt; 0: 方法调用失败。<ph props="cn">详见<xref keyref="error-code-link"/>了解详情和解决建议。</ph></li>
            </ul> </section>
    </refbody>
</reference>