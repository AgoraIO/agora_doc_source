<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE reference PUBLIC "-//OASIS//DTD DITA Reference//EN" "reference.dtd">
<reference id="class_directcdnstreamingmediaoptions">
    <title><ph keyref="DirectCdnStreamingMediaOptions"/></title>
    <shortdesc id="short"><ph id="shortdesc">主播端的媒体选项。</ph></shortdesc>
    <refbody>
        <section id="prototype">
            <p outputclass="codeblock">
            <codeblock props="android" outputclass="language-java">public class DirectCdnStreamingMediaOptions {
  public Boolean publishCameraTrack;
  public Boolean publishMicrophoneTrack;
  public Boolean publishCustomAudioTrack;
  public Boolean publishCustomVideoTrack;
  public Integer customVideoTrackId;

  public DirectCdnStreamingMediaOptions() {
    publishCameraTrack = false;
    publishMicrophoneTrack = false;
    publishCustomAudioTrack = false;
    publishCustomVideoTrack = false;
  }
}</codeblock>
            <codeblock props="ios mac" outputclass="language-objectivec">__attribute__((visibility("default"))) @interface AgoraDirectCdnStreamingMediaOptions : NSObject

@property(assign, nonatomic) BOOL publishCameraTrack;
@property(assign, nonatomic) BOOL publishMicrophoneTrack;
@property(assign, nonatomic) BOOL publishCustomAudioTrack;
@property(assign, nonatomic) BOOL publishCustomVideoTrack;
@property(assign, nonatomic) BOOL publishMediaPlayerAudioTrack;
@property(assign, nonatomic) NSInteger publishMediaPlayerId;
@property(assign, nonatomic) NSInteger customVideoTrackId;</codeblock>
            <codeblock props="cpp" outputclass="language-cpp">struct DirectCdnStreamingMediaOptions {
    Optional&lt;bool&gt; publishCameraTrack;
    Optional&lt;bool&gt; publishMicrophoneTrack;
    Optional&lt;bool&gt; publishCustomAudioTrack;
    Optional&lt;bool&gt; publishCustomVideoTrack;
    Optional&lt;bool&gt; publishMediaPlayerAudioTrack;
    Optional&lt;int&gt; publishMediaPlayerId;
    Optional&lt;video_track_id_t&gt; customVideoTrackId;

  DirectCdnStreamingMediaOptions() {}
  ~DirectCdnStreamingMediaOptions() {}

};</codeblock>
<codeblock props="electron" outputclass="language-typescript">export class DirectCdnStreamingMediaOptions {
  publishCameraTrack?: boolean;
  publishMicrophoneTrack?: boolean;
  publishCustomAudioTrack?: boolean;
  publishCustomVideoTrack?: boolean;
  publishMediaPlayerAudioTrack?: boolean;
  publishMediaPlayerId?: number;
  customVideoTrackId?: number;
}</codeblock>
                <codeblock props="unity" outputclass="language-csharp">public class DirectCdnStreamingMediaOptions : OptionalJsonParse
    {
        public Optional&lt;bool&gt; publishCameraTrack = new Optional&lt;bool&gt;();
        public Optional&lt;bool&gt; publishMicrophoneTrack = new Optional&lt;bool&gt;();
        public Optional&lt;bool&gt; publishCustomAudioTrack = new Optional&lt;bool&gt;();
        public Optional&lt;bool&gt; publishCustomVideoTrack = new Optional&lt;bool&gt;();
        public Optional&lt;bool&gt; publishMediaPlayerAudioTrack = new Optional&lt;bool&gt;();
        public Optional&lt;int&gt; publishMediaPlayerId = new Optional&lt;int&gt;();
        public Optional&lt;video_track_id_t&gt; customVideoTrackId = new Optional&lt;video_track_id_t&gt;();
    }</codeblock>
<codeblock props="rn" outputclass="language-typescript">export class DirectCdnStreamingMediaOptions {
  publishCameraTrack?: boolean;
  publishMicrophoneTrack?: boolean;
  publishCustomAudioTrack?: boolean;
  publishCustomVideoTrack?: boolean;
  publishMediaPlayerAudioTrack?: boolean;
  publishMediaPlayerId?: number;
  customVideoTrackId?: number;
}</codeblock>
<codeblock props="flutter" outputclass="dart">class DirectCdnStreamingMediaOptions {
  const DirectCdnStreamingMediaOptions(
      {this.publishCameraTrack,
      this.publishMicrophoneTrack,
      this.publishCustomAudioTrack,
      this.publishCustomVideoTrack,
      this.publishMediaPlayerAudioTrack,
      this.publishMediaPlayerId,
      this.customVideoTrackId});

  @JsonKey(name: 'publishCameraTrack')
  final bool? publishCameraTrack;

  @JsonKey(name: 'publishMicrophoneTrack')
  final bool? publishMicrophoneTrack;

  @JsonKey(name: 'publishCustomAudioTrack')
  final bool? publishCustomAudioTrack;

  @JsonKey(name: 'publishCustomVideoTrack')
  final bool? publishCustomVideoTrack;

  @JsonKey(name: 'publishMediaPlayerAudioTrack')
  final bool? publishMediaPlayerAudioTrack;

  @JsonKey(name: 'publishMediaPlayerId')
  final int? publishMediaPlayerId;

  @JsonKey(name: 'customVideoTrackId')
  final int? customVideoTrackId;

  factory DirectCdnStreamingMediaOptions.fromJson(Map&lt;String, dynamic> json) =>
      _$DirectCdnStreamingMediaOptionsFromJson(json);

  Map&lt;String, dynamic> toJson() => _$DirectCdnStreamingMediaOptionsToJson(this);
}</codeblock>
            <codeblock props="unreal" outputclass="language-cpp"></codeblock></p>
        </section>
        <section>
            <title><text
            conref="../conref/conref_api_metadata.dita#conref_api_metadata/property"
            /></title>
            <parml>
            <plentry>
                <pt>publishCameraTrack</pt>
                <pd>设置是否发布摄像头采集的视频。


                    
                    <ul>
                    <li><codeph><ph keyref="true"/></codeph>: 发布摄像头采集的视频。</li>
                    <li><codeph><ph keyref="false"
                        /></codeph>:（默认）不发布摄像头采集的视频。</li>
                    </ul></pd>
            </plentry>
            <plentry>
                <pt>publishMicrophoneTrack</pt>
                <pd>设置是否发布麦克风采集的音频。


                    
                    <ul>
                    <li><codeph><ph keyref="true"/></codeph>: 发布麦克风采集的音频。</li>
                    <li><codeph><ph keyref="false"
                        /></codeph>:（默认）不发布麦克风采集的音频。</li>
                    </ul></pd>
            </plentry>
            <plentry>
                <pt>publishCustomAudioTrack</pt>
                <pd>设置是否发布自定义采集的音频。
                        
                    
                    <ul>
                    <li><codeph><ph keyref="true"/></codeph>: 发布自定义采集的音频。</li>
                    <li><codeph><ph keyref="false"
                        /></codeph>:（默认）不发布自定义采集的音频。</li>
                    </ul></pd>
            </plentry>
            <plentry props="hide">
                <pt>publishMediaPlayerAudioTrack</pt>
                <pd>设置是否发布媒体播放器的音频。
                    
                    <ul>
                    <li><codeph><ph keyref="true"/></codeph>: 发布媒体播放器的音频。</li>
                    <li><codeph><ph keyref="false"
                        /></codeph>:（默认）不发布媒体播放器的音频。</li>
                    </ul></pd>
            </plentry>
            <plentry>
                <pt>publishCustomVideoTrack</pt>
                <pd>设置是否发布自定义采集的视频。
                    
                    <ul>
                    <li><codeph><ph keyref="true"/></codeph>: 发布自定义采集的视频。</li>
                    <li><codeph><ph keyref="false"
                        /></codeph>:（默认）不发布自定义采集的视频。</li>
                    </ul></pd>
            </plentry>
            <plentry props="hide">
                <pt>publishMediaPlayerId</pt>
                <pd>待发布的媒体播放器的 ID。默认值为 0。</pd>
            </plentry>
            <plentry>
                <pt>customVideoTrackId</pt>
                <pd>调用 <xref keyref="createCustomVideoTrack"/> 方法返回的视频轨道 ID。默认值为 0。</pd>
            </plentry>
            </parml> </section>
    </refbody>
</reference>
