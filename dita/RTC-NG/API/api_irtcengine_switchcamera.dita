<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE reference PUBLIC "-//OASIS//DTD DITA Reference//EN" "reference.dtd">
<reference id="api_irtcengine_switchcamera">
    <title><ph keyref="switchCamera" /></title>
    <shortdesc id="short"><ph id="shortdesc">切换前置/后置摄像头。</ph></shortdesc>
    <prolog>
        <metadata>
            <keywords>
                <indexterm keyref="switchCamera" />
            </keywords>
        </metadata>
    </prolog>
    <refbody>
        <section id="prototype">
            <p outputclass="codeblock">
            <codeblock props="android" outputclass="language-java">public abstract int switchCamera();</codeblock>
            <codeblock props="ios mac" outputclass="language-objectivec">- (int)switchCamera;</codeblock>
            <codeblock props="cpp unreal" outputclass="language-cpp">virtual int switchCamera() = 0;</codeblock>
         <codeblock props="bp" outputclass="language-cpp">UFUNCTION(BlueprintCallable, Category = &quot;Agora|RtcEngineProxy&quot;)
	int SwitchCamera();</codeblock>
            <codeblock props="electron" outputclass="language-typescript">abstract switchCamera(): number;</codeblock>
            <codeblock props="unity cs" outputclass="language-csharp">public abstract int SwitchCamera();</codeblock>
            <codeblock props="rn" outputclass="language-typescript">abstract switchCamera(): number;</codeblock>
            <codeblock props="flutter" outputclass="language-dart">Future&lt;void&gt; switchCamera();</codeblock>
            <codeblock props="reserve" outputclass="language-cpp"></codeblock></p>
        </section>
        <section id="detailed_desc">
            <title>详情</title>
            <p id="desc0">你可以调用该方法在 App 运行期间基于可用摄像头的实际情况来动态切换摄像头，而无需重启视频流或重新配置视频源。</p>
            <note type="attention">
            <ul><li props="cpp unreal bp flutter unity">该方法仅适用于 Android 和 iOS。</li>
            <li id="desc1">该方法必须在摄像头成功开启后调用，即 SDK 触发 <xref keyref="onLocalVideoStateChanged" /> 回调，返回本地视频状态为 <apiname keyref="LOCAL_VIDEO_STREAM_STATE_CAPTURING"/> (1) 后。</li>
            <li id="desc2">该方法仅会对第一路摄像头采集的视频流进行摄像头切换操作，即调用 <xref keyref="startCameraCapture"/> 时设置为 <apiname keyref="VIDEO_SOURCE_CAMERA_PRIMARY" props="android"/><apiname keyref="VIDEO_SOURCE_CAMERA" props="apple cpp framework"/> (0) 的视频源。</li>
            <li props="android">该方法和 <xref keyref="switchCamera2"/> 均用于切换摄像头，区别在于 <apiname keyref="switchCamera2"/> 通过指定摄像头 ID 切换到特定的摄像头，该方法则切换摄像头的方向（前置或后置）。</li>
            </ul></note>
        </section>
        <section id="return_values">
            <title><ph keyref="return-section-title"/></title>
            <p props="flutter">方法成功调用时，无返回值；方法调用失败时，会抛出 <xref keyref="AgoraRtcException"/> 异常，你需要捕获异常并进行处理。<ph props="cn">详见<xref keyref="error-code-link"/>了解详情和解决建议。</ph></p>
            <ul props="native unreal bp unity rn cs">
            <li>0: 方法调用成功。</li>
            <li>&lt; 0: 方法调用失败。<ph props="cn">详见<xref keyref="error-code-link"/>了解详情和解决建议。</ph></li>
            </ul> </section>
    </refbody>
</reference>