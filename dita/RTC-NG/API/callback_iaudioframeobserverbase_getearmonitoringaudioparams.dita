<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE reference PUBLIC "-//OASIS//DTD DITA Reference//EN" "reference.dtd">
<reference id="callback_iaudioframeobserverbase_getearmonitoringaudioparams">
    <title><ph keyref="getEarMonitoringAudioParams"/></title>
    <shortdesc id="short"><ph id="shortdesc">设置 <xref keyref="onEarMonitoringAudioFrame"/> 回调数据的格式。</ph></shortdesc>
    <prolog>
        <metadata>
            <keywords>
                <indexterm keyref="getEarMonitoringAudioParams"/>
            </keywords>
        </metadata>
    </prolog>
    <refbody>
        <section id="prototype">
            <p outputclass="codeblock">
            <codeblock props="android" outputclass="language-java">public abstract AudioParams getEarMonitoringAudioParams();</codeblock>
            <codeblock props="ios mac" outputclass="language-objectivec">
- (AgoraAudioParams* _Nonnull)getEarMonitoringAudioParams NS_SWIFT_NAME(getEarMonitoringAudioParams());</codeblock>
            <codeblock props="cpp" outputclass="language-cpp">virtual AudioParams getEarMonitoringAudioParams() = 0;</codeblock>
            <codeblock props="cs" outputclass="language-csharp"/>
            <codeblock props="electron" outputclass="language-typescript"/>
            <codeblock props="unity" outputclass="language-csharp">public virtual AudioParams GetEarMonitoringAudioParams()
        {
            return new AudioParams();
        }</codeblock>
            <codeblock props="rn" outputclass="language-typescript"/>
           <codeblock props="flutter" outputclass="language-dart"/> 
            <codeblock props="reserve" outputclass="language-cpp"></codeblock></p>
        </section>
        <section id="detailed_desc">
            <dl outputclass="since" props="native">
            <dlentry>
                <dt>自从</dt>
                <dd>v4.0.1</dd>
            </dlentry>
            </dl>
            <p>你需要在调用 <xref keyref="registerAudioFrameObserver"/> 方法时注册该回调。成功注册音频数据观测器后，SDK 会触发该回调，你可以在该回调的返回值中设置耳返的音频数据格式。</p>
            <note type="attention">
            <p>SDK 会通过你在返回值中设置的 <xref keyref="AudioParams"/> 计算采样间隔触发 <apiname keyref="onEarMonitoringAudioFrame"/> 回调。计算公式为<equation-inline>采样间隔 = <parmname>samplesPerCall</parmname>/(<parmname>sampleRate</parmname> × <parmname>channel</parmname>)</equation-inline>。</p>
            <p>请确保采样间隔不小于 0.01 秒。</p>
            </note>
        </section>
        <section id="return_values">
            <title>返回值</title>
            <p>耳返的音频数据，详见 <xref keyref="AudioParams"/>。</p>
        </section>
    </refbody>
</reference>
