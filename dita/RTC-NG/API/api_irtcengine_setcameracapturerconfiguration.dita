<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE reference PUBLIC "-//OASIS//DTD DITA Reference//EN" "reference.dtd">
<reference id="api_irtcengine_setcameracapturerconfiguration">
    <title><ph keyref="setCameraCapturerConfiguration" /></title>
    <shortdesc id="short"><ph id="shortdesc">设置摄像头采集配置。</ph></shortdesc>
    <prolog>
        <metadata>
            <keywords>
                <indexterm keyref="setCameraCapturerConfiguration" />
            </keywords>
        </metadata>
    </prolog>
    <refbody>
        <section id="prototype">
            <p outputclass="codeblock">
            <codeblock props="android" outputclass="language-java">public abstract int setCameraCapturerConfiguration(CameraCapturerConfiguration config);</codeblock>
            <codeblock props="ios mac" outputclass="language-objectivec">- (int)setCameraCapturerConfiguration:(AgoraCameraCapturerConfiguration * _Nullable)config;</codeblock>
            <codeblock props="cpp unreal" outputclass="language-cpp">virtual int setCameraCapturerConfiguration(const CameraCapturerConfiguration&amp; config) = 0;</codeblock>
         <codeblock props="bp" outputclass="language-cpp">UFUNCTION(BlueprintCallable, Category = &quot;Agora|RtcEngineProxy&quot;)
	int SetCameraCapturerConfiguration(const FCameraCapturerConfiguration&amp; config);</codeblock>
            <codeblock props="electron" outputclass="language-typescript">abstract setCameraCapturerConfiguration(
    config: CameraCapturerConfiguration
  ): number;</codeblock>
            <codeblock props="unity cs" outputclass="language-csharp">public abstract int SetCameraCapturerConfiguration(CameraCapturerConfiguration config);</codeblock>
            <codeblock props="rn" outputclass="language-typescript">abstract setCameraCapturerConfiguration(
    config: CameraCapturerConfiguration
  ): number;</codeblock>
            <codeblock props="flutter" outputclass="language-dart">Future&lt;void&gt; setCameraCapturerConfiguration(
      CameraCapturerConfiguration config);</codeblock>
            <codeblock props="reserve" outputclass="language-cpp"></codeblock></p>
        </section>
        <section id="detailed_desc">
            <title>详情</title>
            <note type="attention">
            <ul>
            <li props="cpp unreal bp unity flutter cs">该方法仅适用于 Android 和 iOS。</li>
            <li>该方法必须在开启摄像头后调用，如 <xref keyref="startPreview2"/> 和 <xref keyref="enableVideo" /> 后调用。</li>
            </ul></note> </section>
        <section id="parameters">
            <title>参数</title>
            <parml>
            <plentry props="native unreal bp flutter unity rn cs">
                <pt>config</pt>
                <pd>摄像头采集配置，详见 <xref keyref="CameraCapturerConfiguration" />。
                        <note props="cpp unreal bp unity cs">在该方法中，不需要设置 <parmname>deviceId</parmname> 参数。</note></pd>
            </plentry>
            </parml> </section>
        <section id="return_values">
            <title><ph keyref="return-section-title"/></title>
            <p props="flutter">方法成功调用时，无返回值；方法调用失败时，会抛出 <xref keyref="AgoraRtcException"/> 异常，你需要捕获异常并进行处理。<ph props="cn">详见<xref keyref="error-code-link"/>了解详情和解决建议。</ph></p>
            <ul>
            <li props="native unreal bp unity rn cs">>0: 方法调用成功。</li>
            <li>&lt; 0: 方法调用失败。<ph props="cn">详见<xref keyref="error-code-link"/>了解详情和解决建议。</ph></li>
            </ul> </section>
    </refbody>
</reference>