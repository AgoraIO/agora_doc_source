<?xml version='1.0' encoding='UTF-8'?>
<!DOCTYPE reference PUBLIC "-//OASIS//DTD DITA Reference//EN" "reference.dtd">
<reference id="api_irtcengine_setcamerastabilizationmode">
    <title><ph keyref="setCameraStabilizationMode"/></title>
    <shortdesc id="short"><ph id="shortdesc">设置摄像头防抖模式。</ph></shortdesc>
    <prolog>
        <metadata>
            <keywords>
                <indexterm keyref="setCameraStabilizationMode"/>
            </keywords>
        </metadata>
    </prolog>
    <refbody>
        <section id="prototype">
            <p outputclass="codeblock">
            <codeblock props="android" outputclass="language-java"/>
            <codeblock props="hmos" outputclass="language-arkts"/>
            <codeblock props="ios mac" outputclass="language-objectivec">- (int) setCameraStabilizationMode:(AgoraCameraStabilizationMode)mode NS_SWIFT_NAME(setCameraStabilizationMode(_:));</codeblock>
            <codeblock props="cpp unreal" outputclass="language-cpp">virtual int setCameraStabilizationMode(CAMERA_STABILIZATION_MODE mode) = 0;</codeblock>
            <codeblock props="bp" outputclass="language-cpp">UFUNCTION(BlueprintCallable, Category = "Agora|IRtcEngine")
	int SetCameraStabilizationMode(FENUMWRAP_CAMERA_STABILIZATION_MODE mode);</codeblock>
            <codeblock props="electron" outputclass="language-typescript"/>
            <codeblock props="unity cs" outputclass="language-csharp">public abstract int SetCameraStabilizationMode(CAMERA_STABILIZATION_MODE mode);</codeblock>
            <codeblock props="rn" outputclass="language-typescript">abstract setCameraStabilizationMode(mode: CameraStabilizationMode): number;</codeblock>
            <codeblock props="flutter" outputclass="language-dart">Future&lt;void&gt; setCameraStabilizationMode(CameraStabilizationMode mode);</codeblock> </p>
        </section>
        <section id="detailed_desc" deliveryTarget="details" otherprops="no-title">
            <note type="attention" props="bp cpp flutter rn unity unreal">
                <p>该方法仅适用于 iOS。</p>
            </note>
            <p>摄像头防抖模式默认关闭，你需要调用该方法开启并设置合适的防抖模式。</p>
        </section>
        <section id="scenario" deliveryTarget="details">
            <title>适用场景</title>
            <p>在移动拍摄、暗光环境拍摄、手持拍摄时，你可以设置摄像头防抖模式，以减小摄像头晃动导致的影响，获得更加稳定、清晰的画面。</p>
        </section>
        <section id="timing" deliveryTarget="details">
            <title>调用时机</title>
            <p>必须在摄像头成功启用后调用此方法，即 SDK 触发 <xref keyref="onLocalVideoStateChanged"/> 回调并返回本地视频状态为 <ph keyref="LOCAL_VIDEO_STREAM_STATE_CAPTURING"/>（1）之后。</p>
        </section>        
        <section id="restriction" deliveryTarget="details">
            <title>调用限制</title>
            <ul>
                <li>摄像头防抖只对视频分辨率大于 1280 × 720 以上的场景生效。</li>
                <li>开启摄像头防抖后，摄像头防抖等级越高，相机的视角就越小、相机时延就越大。为保障用户体验，建议你将 <parmname>mode</parmname> 参数设置为 <apiname keyref="CAMERA_STABILIZATION_MODE_LEVEL_1"/>。</li>
            </ul>
        </section>
        <section id="parameters">
            <title>参数</title>
            <parml>
            <plentry>
                <pt>mode</pt>
                <pd props="android bp cs electron flutter mac rn unity unreal">摄像头的防抖模式。详见 <xref keyref="CAMERA_STABILIZATION_MODE"/>。</pd>
            <pd props="cpp ios">摄像头防抖模式。详见 <xref keyref="CAMERA_STABILIZATION_MODE"/>。</pd>
                </plentry>
        </parml> </section>
        <section id="return_values" props="bp electron flutter native rn unity unreal">
            <title><ph keyref="return-section-title"/></title>
        <p props="flutter">方法成功调用时，无返回值；方法调用失败时，会抛出 <xref keyref="AgoraRtcException"/> 异常，你需要捕获异常并进行处理。</p>
        <ul props="android bp electron rn unity unreal">
                <li>0: 方法调用成功。</li>
                <li>&lt; 0: 方法调用失败。<ph props="cn">详见<xref keyref="error-code-link"/>了解详情和解决建议。</ph></li>
                </ul>
        <p props="apple cpp"><ul>
                        <li>0：方法调用成功。</li>
                        <li>&lt; 0：方法调用失败。</li>
                        </ul>
                    </p>
    </section>
        </refbody>
</reference>
