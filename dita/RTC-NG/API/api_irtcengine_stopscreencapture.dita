<?xml version='1.0' encoding='UTF-8'?>
<!DOCTYPE reference PUBLIC "-//OASIS//DTD DITA Reference//EN" "reference.dtd">
<reference id="api_irtcengine_stopscreencapture">
    <title><ph keyref="stopScreenCapture"/></title>
    <shortdesc id="short"><ph id="shortdesc">停止屏幕采集。</ph></shortdesc>
    <prolog>
        <metadata>
            <keywords>
                <indexterm keyref="stopScreenCapture"/>
            </keywords>
        </metadata>
    </prolog>
    <refbody>
        <section id="prototype">
            <p outputclass="codeblock">
            <codeblock props="android" outputclass="language-java">public abstract int stopScreenCapture();</codeblock>
            <codeblock props="hmos" outputclass="language-arkts">public abstract stopScreenCapture(): number;</codeblock>
            <codeblock props="ios mac" outputclass="language-objectivec">- (int)stopScreenCapture NS_SWIFT_NAME(stopScreenCapture());</codeblock>
            <codeblock props="cpp unreal" outputclass="language-cpp">#if defined(_WIN32) || defined(__APPLE__) || defined(__ANDROID__)
  virtual int stopScreenCapture() = 0;
#endif</codeblock>
         <codeblock props="bp" outputclass="language-cpp">UFUNCTION(BlueprintCallable, Category = "Agora|IRtcEngine")
	int StopScreenCapture();</codeblock>
            <codeblock props="electron" outputclass="language-typescript">abstract stopScreenCapture(): number;</codeblock>
            <codeblock props="unity cs" outputclass="language-csharp">public abstract int StopScreenCapture();</codeblock>
            <codeblock props="rn" outputclass="language-typescript">abstract stopScreenCapture(): number;</codeblock>
            <codeblock props="flutter" outputclass="language-dart">Future&lt;void&gt; stopScreenCapture();</codeblock>
            <codeblock props="reserve" outputclass="language-cpp"/></p>
        </section>
        <section id="detailed_desc" deliveryTarget="details" otherprops="no-title">
        <dl outputclass="since">
            <dlentry props="android">
                <dt>自从：</dt>
                <dd props="native">自 v3.7.0 版本新增。</dd>
            </dlentry>
            </dl>
            <note type="attention" props="apple">该方法适用于 macOS / iOS。</note>
            </section>
        <section id="scenario" deliveryTarget="details">
            <title>适用场景</title>
            <p props="bp cpp flutter unity unreal">如果你调用了 <xref keyref="startScreenCapture"/>、<xref keyref="startScreenCaptureByWindowId"/> 或 <xref keyref="startScreenCaptureByDisplayId"/> 开启屏幕采集，则停止屏幕采集时需要调用该方法。</p>
            <p props="electron">如果你调用了 <xref keyref="startScreenCapture2"/>、<xref keyref="startScreenCaptureByWindowId"/> 或 <xref keyref="startScreenCaptureByDisplayId"/> 开启屏幕采集，则停止屏幕采集时需要调用该方法。</p>
            <p props="android hmos ios rn">如果你调用了 <xref keyref="startScreenCapture"/> 开启屏幕采集，则停止屏幕采集时需要调用该方法。</p>
            <p props="cs mac">如果你调用了 <xref keyref="startScreenCaptureByWindowId"/> 或 <xref keyref="startScreenCaptureByDisplayId"/> 开启屏幕采集，则停止屏幕采集时需要调用该方法。</p>
        </section>
        <section id="timing" deliveryTarget="details">
            <title>调用时机</title>
            <p>你可以在加入频道前或加入频道后调用该方法。</p>
        </section>        
        <section id="restriction" deliveryTarget="details">
            <title>调用限制</title>
            <p>无。</p>
        </section>
        <section id="return_values" props="bp cs electron flutter native rn unity unreal">
            <title><ph keyref="return-section-title"/></title>
        <p props="flutter">方法成功调用时，无返回值；方法调用失败时，会抛出 <xref keyref="AgoraRtcException"/> 异常，你需要捕获异常并进行处理。<ph props="cn">详见<xref keyref="error-code-link"/>了解详情和解决建议。</ph></p>
        <ul props="bp cpp cs electron rn unity unreal">
            <li>0: 方法调用成功。</li>
            <li>&lt; 0: 方法调用失败。<ph props="cn">详见<xref keyref="error-code-link"/>了解详情和解决建议。</ph></li>
            </ul>
        <p props="android apple"><ul>
                        <li>0：方法调用成功。</li>
                        <li>&lt; 0：方法调用失败。</li>
                        </ul>
                    </p>
    </section>
    </refbody>
</reference>
