<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE reference PUBLIC "-//OASIS//DTD DITA Reference//EN" "reference.dtd">
<reference id="api_irtcengineex_leavechannelex">
    <title><ph keyref="leaveChannelEx"/></title>
    <shortdesc id="short"><ph id="shortdesc">离开频道。</ph></shortdesc>
    <prolog>
        <metadata>
            <keywords>
                <indexterm keyref="leaveChannelEx"/>
            </keywords>
        </metadata>
    </prolog>
    <refbody>
        <section id="prototype">
            <p outputclass="codeblock">
            <codeblock props="android" outputclass="language-java">public abstract int leaveChannelEx(RtcConnection connection);</codeblock>
            <codeblock props="hmos" outputclass="language-arkts"></codeblock>
            <codeblock props="ios mac" outputclass="language-objectivec">- (int)leaveChannelEx:(AgoraRtcConnection * _Nonnull)connection
    leaveChannelBlock:(void(^ _Nullable)(AgoraChannelStats* _Nonnull stat))leaveChannelBlock NS_SWIFT_NAME(leaveChannelEx(_:leaveChannelBlock:));</codeblock>
            <codeblock props="cpp unreal" outputclass="language-cpp">virtual int leaveChannelEx(const RtcConnection&amp; connection) = 0;</codeblock>
            <codeblock props="electron" outputclass="language-typescript">abstract leaveChannelEx(
    connection: RtcConnection,
    options?: LeaveChannelOptions
  ): number;</codeblock>
            <codeblock props="unity cs" outputclass="language-csharp">public abstract int LeaveChannelEx(RtcConnection connection);</codeblock>
            <codeblock props="rn" outputclass="language-typescript"/>
            <codeblock props="flutter" outputclass="language-dart"/>
            <codeblock props="reserve" outputclass="language-cpp"/></p>
        </section>
        <section id="detailed_desc" deliveryTarget="details" otherprops="no-title">
            <p>调用该方法后，SDK 会终止音视频互动、离开当前频道，并会释放会话相关的所有资源。</p>
            <p>调用 <xref keyref="joinChannelEx"/> 成功加入频道后，必须调用本方法或 <xref keyref="leaveChannelEx2"/> 结束通话，否则无法开始下一次通话。</p>
            <note type="attention">
                <ul>
                    <li>该方法是异步操作，调用返回时并没有真正退出频道。</li>
                    <li>如果你调用了 <xref keyref="leaveChannel"/> 或 <xref keyref="leaveChannel2"/> ，会同时离开 <xref keyref="joinChannel1"/> 或 <xref keyref="joinChannel2"/> 及 <xref keyref="joinChannelEx"/> 加入的频道。</li>
                </ul></note>
        </section>
        <section id="scenario" deliveryTarget="details">
            <title>适用场景</title>
            <p>该方法适用于多频道场景。</p>
        </section>
        <section id="timing" deliveryTarget="details">
            <title>调用时机</title>
            <p>该方法需要在 <xref keyref="joinChannelEx"/> 后调用。</p>
        </section>
        <section id="restriction" deliveryTarget="details" conkeyref="leaveChannel2/restriction">
            <title>调用限制</title>
            <p/>
        </section>
        <section id="related" deliveryTarget="details" conkeyref="leaveChannel2/related">
            <title>相关回调</title>
            <p/>
        </section>
        <section id="parameters" deliveryTarget="details">
            <title>参数</title>
            <parml>
            <plentry conkeyref="joinChannelEx/connection">
                <pt/>
                <pd/>
            </plentry>
            <plentry props="ios mac" conkeyref="leaveChannel2/leavechannelblock">
                <pt/>
                <pd/>
            </plentry>
            </parml> </section>
        <section id="return_values">
            <title>返回值</title>
            <ul>
            <li>0: 方法调用成功。</li>
            <li>&lt; 0: 方法调用失败。<ph props="cn">详见<xref keyref="error-code-link"/>了解详情和解决建议。</ph></li>
            </ul> </section>
    </refbody>
</reference>
