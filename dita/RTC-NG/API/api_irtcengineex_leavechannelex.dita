<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE reference PUBLIC "-//OASIS//DTD DITA Reference//EN" "reference.dtd">
<reference id="api_irtcengineex_leavechannelex">
    <title><ph keyref="leaveChannelEx"/></title>
    <shortdesc id="short"><ph id="shortdesc">离开频道。</ph></shortdesc>
    <prolog>
        <metadata>
            <keywords>
                <indexterm keyref="leaveChannelEx"/>
            </keywords>
        </metadata>
    </prolog>
    <refbody>
        <section id="prototype">
            <p outputclass="codeblock">
            <codeblock props="android" outputclass="language-java">public abstract int leaveChannelEx(RtcConnection connection);</codeblock>
            <codeblock props="ios mac" outputclass="language-objectivec">- (int)leaveChannelEx:(AgoraRtcConnection * _Nonnull)connection
    leaveChannelBlock:(void(^ _Nullable)(AgoraChannelStats* _Nonnull stat))leaveChannelBlock NS_SWIFT_NAME(leaveChannelEx(_:leaveChannelBlock:));</codeblock>
            <codeblock props="cpp unreal bp" outputclass="language-cpp">virtual int leaveChannelEx(const RtcConnection&amp; connection) = 0;</codeblock>
            <codeblock props="electron" outputclass="language-typescript">abstract leaveChannelEx(
    connection: RtcConnection,
    options?: LeaveChannelOptions
  ): number;</codeblock>
            <codeblock props="unity cs" outputclass="language-csharp">public abstract int LeaveChannelEx(RtcConnection connection);</codeblock>
            <codeblock props="rn" outputclass="language-typescript"/>
            <codeblock props="flutter" outputclass="language-dart"/>
            <codeblock props="reserve" outputclass="language-cpp"/></p>
        </section>
        <section id="detailed_desc">
            <title>详情</title>
            <p>离开频道，即挂断或退出通话。</p>
            <p>调用 <xref keyref="joinChannelEx"/> 加入频道后，必须调用本方法结束通话，才能开始下一次通话。</p>
            <p>不管当前是否在通话中，都可以调用该方法。该方法会把会话相关的所有资源释放掉。</p>
            <p props="native unreal bp unity electron flutter cs">该方法是异步操作，调用返回时并没有真正退出频道。在真正退出频道后，SDK 会触发 <xref keyref="onLeaveChannel"/> 回调。</p>
            <p props="rn">调用该方法返回时并没有真正退出频道。在真正退出频道后，SDK 会触发 <xref keyref="onLeaveChannel"/> 回调。</p>
            <p>成功调用该方法离开频道后，本地会触发 <apiname keyref="onLeaveChannel"/> 回调；通信场景下的用户和直播场景下的主播离开频道后，远端会触发 <xref keyref="onUserOffline"/> 回调。</p>
            <note type="attention" id="note">
            <ul>
            <li>如果你调用了本方法后立即调用 <xref keyref="release"/> 方法，SDK 将无法触发 <apiname keyref="onLeaveChannel"/> 回调。</li>
            <li>调用 <xref keyref="leaveChannel"/> 后会同时离开 <xref keyref="joinChannel2"/> 和 <xref keyref="joinChannelEx"/> 加入的频道。</li>
            </ul> </note> </section>
        <section id="parameters">
            <title>参数</title>
            <parml>
            <plentry conkeyref="joinChannelEx/connection">
                <pt/>
                <pd/>
            </plentry>
            <plentry props="ios mac" conkeyref="leaveChannel2/leavechannelblock">
                <pt/>
                <pd/>
            </plentry>
            </parml> </section>
        <section id="return_values">
            <title>返回值</title>
            <ul>
            <li>0: 方法调用成功。</li>
            <li>&lt; 0: 方法调用失败。</li>
            </ul> </section>
    </refbody>
</reference>
