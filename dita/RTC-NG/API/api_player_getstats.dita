<?xml version='1.0' encoding='UTF-8'?>
<!DOCTYPE reference PUBLIC "-//OASIS//DTD DITA Reference//EN" "reference.dtd">
<reference id="api_player_getstats">
    <title><ph keyref="GetStats"/></title>
    <shortdesc id="short"><ph id="shortdesc">获取播放器的播放统计信息。</ph></shortdesc>
    <prolog>
        <metadata>
            <keywords>
                <indexterm keyref="GetStats"/>
            </keywords>
        </metadata>
    </prolog>
    <refbody>
        <section id="prototype">
            <p outputclass="codeblock">
            <codeblock props="android" outputclass="language-java">public void getStats(PlayerGetStatsCallback callback)</codeblock>
            <codeblock props="hmos" outputclass="language-arkts"/>
            <codeblock props="ios mac" outputclass="language-objectivec">- (void)getStats:(void (^_Nonnull)(AgoraRtePlayerStats* _Nonnull stats, AgoraRteError* _Nullable err))cb;</codeblock>
            <codeblock props="cpp unreal" outputclass="language-cpp">void GetStats(std::function&amp;lt;void(rte::PlayerStats *stats, rte::Error *err)&amp;gt; cb)</codeblock>
            <codeblock props="bp" outputclass="language-cpp"/>
            <codeblock props="electron" outputclass="language-typescript"/>
            <codeblock props="unity cs" outputclass="language-csharp"/>
            <codeblock props="rn" outputclass="language-typescript"/>
            <codeblock props="flutter" outputclass="language-dart"/> </p>
        </section>
        <section id="detailed_desc" deliveryTarget="details" otherprops="no-title">
            <dl outputclass="since">
            <dlentry props="native">
                <dt>自从：</dt>
                <dd props="native">自 v4.4.0 版本新增。</dd>
                </dlentry>
            </dl>
            <p>该方法用于异步获取播放器的播放统计信息。你可以通过回调参数获取统计数据和状态或错误信息。</p>
            </section>
        <section id="restriction" deliveryTarget="details">
            <title>调用限制</title>
            <p>无。</p>
        </section>
        <section id="parameters" deliveryTarget="details">
            <title>参数</title>
            <parml>
            <plentry props="android cpp ios">
                <pt props="cpp ios">cb</pt>
                <pt props="android">callback</pt>
                <pd props="cpp">异步获取播放统计信息的回调。你可以通过该回调的 <codeph>stats</codeph> 参数获取统计数据，通过 <codeph>err</codeph> 参数获取状态或错误信息，详见 <xref keyref="Error"/>。</pd>
                <pd props="ios">用于获取统计数据的异步回调。
                    <ul>
                        <li><codeph>stats</codeph>：播放统计信息，详见 <xref keyref="AgoraRtePlayerStats"/>。</li>
                        <li><codeph>err</codeph>：状态或错误信息，详见 <xref keyref="Error"/>。可能返回以下错误码：<ul>
                            <li><codeph>AgoraRteOk</codeph>：调用成功。</li>
                            </ul>
                        </li>
                        </ul>
                    </pd>
                <pd props="android">用于获取统计信息的异步回调。详见 <codeph>PlayerGetStatsCallback</codeph>。</pd>
            </plentry>
            </parml> </section>
        <section id="return_values" props="bp cs electron flutter rn unity unreal">
            <title><ph keyref="return-section-title"/></title>
        <p props="flutter">方法成功调用时，无返回值；方法调用失败时，会抛出 <xref keyref="AgoraRtcException"/> 异常，你需要捕获异常并进行处理。<ph props="cn">详见<xref keyref="error-code-link"/>了解详情和解决建议。</ph></p>
        <ul props="bp cs electron rn unity unreal">
                <li>0: 方法调用成功。</li>
                <li>&lt; 0: 方法调用失败。<ph props="cn">详见<xref keyref="error-code-link"/>了解详情和解决建议。</ph></li>
                </ul>
    </section>
        </refbody>
</reference>
