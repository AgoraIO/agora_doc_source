<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE reference PUBLIC "-//OASIS//DTD DITA Reference//EN" "reference.dtd">
<reference id="api_irtcengine_switchchannel2">
    <title><ph keyref="switchChannel2"/></title>
    <shortdesc id="short"><ph id="shortdesc">快速切换直播频道，并设置是否自动订阅音频流或视频流。</ph></shortdesc>
    <prolog>
        <metadata>
            <keywords>
                <indexterm keyref="switchChannel2"/>
            </keywords>
        </metadata>
    </prolog>
    <refbody>
        <section id="prototype">
            <p outputclass="codeblock">
            <codeblock props="android" outputclass="language-java"/>
            <codeblock props="ios mac" outputclass="language-objectivec"/>
            <codeblock props="cpp unreal" outputclass="language-cpp">virtual int switchChannel(const char* token,
    const char* channelId,
    const ChannelMediaOptions&amp; options) = 0;</codeblock>
            <codeblock props="electron" outputclass="language-typescript"/>
            <codeblock props="unity cs" outputclass="language-csharp">public abstract int SwitchChannel(string token, string channelId, ChannelMediaOptions options);</codeblock>
            <codeblock props="rn" outputclass="language-typescript"/>
           <codeblock props="flutter" outputclass="language-dart"/> 
            <codeblock props="reserve" outputclass="language-cpp"></codeblock></p>
        </section>
        <section id="detailed_desc">
            <title>详情</title>
            <p>当直播频道中的观众想从一个频道切换到另一个频道时，可以调用该方法，实现快速切换。</p>
            <p>成功调用该方切换频道后，本地会先收到离开原频道的回调 <xref keyref="onLeaveChannel"/>，再收到成功加入新频道的回调 <xref keyref="onJoinChannelSuccess"/>。</p>
            <p>用户成功切换频道后，默认订阅频道内所有其他用户的音频流和视频流，因此产生用量并影响计费。如果想取消订阅，可以通过调用相应的 <apiname>mute</apiname> 方法实现。</p>
        </section>
        <section id="parameters">
            <title>参数</title>
            <parml>
            <plentry>
                <pt>token</pt>
                <pd>
                    <p>动态秘钥。
                    <ul>
                    <li>安全要求不高: 将值设为 <ph keyref="NULL"/>。</li>
                    <li>安全要求高: 将值设置为从你的服务端生成的 Token。如果你的项目已经启用了 App Certificate, 请务必使用 Token。</li>
                    </ul>
                    <note type="caution">
 请确保用于生成 token 的 App ID 和 <xref keyref="initialize"/> 方法初始化引擎时用的 App ID，以及该方法中设置的频道名和用户名是一致的。
      </note> </p>
                </pd>
            </plentry>
            <plentry>
                <pt props="android ios mac unity electron cs">channelId</pt>
                <pt props="flutter">channelName</pt>
                <pd>
                    <p>频道名。该参数标识用户进行实时音视频互动的频道。App ID 一致的前提下，填入相同 <codeph>channelId</codeph> 的用户会进入同一个频道进行音视频互动。
          该参数为长度在 64 字节以内的字符串。以下为支持的字符集范围（共 89 个字符）:
                    <ul>
                    <li>26 个小写英文字母 a~z</li>
                    <li>26 个大写英文字母 A~Z</li>
                    <li>10 个数字 0~9</li>
                    <li>空格</li>
                    <li>"!"、"#"、"$"、"%"、"&amp;"、"("、")"、"+"、"-"、":"、";"、"&lt;"、"="、"."、"&gt;"、"?"、"@"、"["、"]"、"^"、"_"、"{"、"}"、"|"、"~"、","</li>
                    </ul></p>
                </pd>
            </plentry>
            <plentry>
                <pt>options</pt>
                <pd>频道媒体设置选项。详见 <xref href="class_channelmediaoptions.dita"/>。</pd>
            </plentry>
            </parml> </section>
        <section id="return_values" props="native unreal bp electron unity rn cs">
            <title>返回值</title>
            <ul>
            <li>0(ERR_OK): 方法调用成功。</li>
            <li>&lt; 0: 方法调用失败。<ph props="cn">详见<xref keyref="error-code-link"/>了解详情和解决建议。</ph>
                <ul>
                <li>-1: 一般性的错误（未明确归类）。</li>
                <li>-2: 参数无效。</li>
                <li>-5: 调用被拒绝。可能因为用户角色不是观众。</li>
                <li>-7: SDK 尚未初始化。</li>
                <li>-102: 频道名无效。请更换有效的频道名。</li>
                <li>-113: 用户不在频道内。</li>
                </ul></li>
            </ul> </section>
    </refbody>
</reference>
