<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE reference PUBLIC "-//OASIS//DTD DITA Reference//EN" "reference.dtd">
<reference id="api_imediaplayer_openwithagoracdnsrc">
    <title> <ph keyref="openWithAgoraCDNSrc" /> </title>
    <shortdesc id="short"><ph id="shortdesc">打开媒体资源，并通过自研调度中心请求媒体资源的所有 CDN 线路。</ph> </shortdesc>
    <prolog>
        <metadata>
            <keywords>
                <indexterm keyref="openWithAgoraCDNSrc" />
            </keywords>
        </metadata>
    </prolog>
    <refbody>
        <section id="prototype">
            <p outputclass="codeblock">
            <codeblock props="android" outputclass="language-java">int openWithAgoraCDNSrc(String src, long startPos);
</codeblock>
            <codeblock props="ios mac" outputclass="language-objectivec">- (int)openWithAgoraCDNSrc:(NSString *)src startPos:(NSInteger)startPos;
</codeblock>
            <codeblock props="cpp" outputclass="language-cpp">virtual int openWithAgoraCDNSrc(const char* src, int64_t startPos) = 0;
</codeblock>
            <codeblock props="electron" outputclass="language-typescript">abstract openWithAgoraCDNSrc(src: string, startPos: number): number;</codeblock>
            <codeblock props="unity" outputclass="language-csharp">public abstract int OpenWithAgoraCDNSrc(string src, Int64 startPos);</codeblock>
            <codeblock props="rn" outputclass="language-typescript">abstract openWithAgoraCDNSrc(src: string, startPos: number): number;</codeblock>
            <codeblock props="flutter" outputclass="language-dart">Future&lt;void&gt; openWithAgoraCDNSrc(
      {required String src, required int startPos});</codeblock>
            <codeblock props="unreal" outputclass="language-cpp"></codeblock></p>
        </section>
        <section id="detailed_desc">
            <note type="attention" conkeyref="open/note" />
            <p>调用该方法后，Agora 会打开媒体资源并通过自研调度中心请求媒体资源的所有 CDN 线路。Agora 默认使用第一个线路，你也可以通过 <xref keyref="switchAgoraCDNLineByIndex" /> 自行切换线路。</p>
            <p id="auth">如果你希望保障连接和播放媒体资源的安全性，你可以<xref keyref="ticket-link" />协商鉴权字段 (<parmname>sign</parmname>) 和鉴权过期时间 (<parmname>ts</parmname>)。确定字段后，请将其作为 URL 的 <codeph>query parameter</codeph> 以更新媒体资源的网路路径。例如：
            <ul>
            <li>媒体资源网络路径为 <codeph>rtmp://$domain/$appName/$streamName</codeph></li>
            <li>通过鉴权信息更新过的媒体资源网络路径为 <codeph>rtmp://$domain/$appName/$streamName?ts=$ts&amp;sign=$sign</codeph></li>
            </ul>
            <note>
            <p>鉴权信息说明：
            <ul>
            <li><parmname>sign</parmname> : 通过 <codeph>authKey</codeph> + <codeph>appName</codeph> + <codeph>streamName</codeph> + <codeph>ts</codeph> 进行 md5 算法加密得出的鉴权字段。你需要<xref keyref="ticket-link" />咨询你的 <codeph>authKey</codeph> 字段内容。</li>
            <li><parmname>ts</parmname> : 鉴权过期时间。你可以指定再过多久鉴权过期。例如， <codeph>24h</codeph> 或 <codeph>1h30m20s</codeph>。</li>
            </ul></p>
            </note></p>
        </section>
        <section id="parameters">
            <title>参数</title>
            <parml>
            <plentry>
                <pt>src</pt>
                <pd>媒体资源的网络路径。</pd>
            </plentry>
            <plentry>
                <pt>startPos</pt>
                <pd>设置起始播放位置 (毫秒)，默认值为 0。如果媒体资源为直播流，则无需赋值。</pd>
            </plentry>
            </parml> </section>
        <section id="return_values" props="native electron unity rn">
            <title>返回值</title>
            <ul>
            <li>0: 方法调用成功。</li>
            <li>&lt; 0: 方法调用失败。</li>
            </ul> </section>
    </refbody>
</reference>