<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE reference PUBLIC "-//OASIS//DTD DITA Reference//EN" "reference.dtd">
<reference id="callback_irtcengineeventhandler_onrhythmplayerstatechanged">
    <title><ph keyref="onRhythmPlayerStateChanged"/></title>
    <shortdesc id="short"><ph id="shortdesc">虚拟节拍器状态发生改变回调。</ph></shortdesc>
    <prolog>
        <metadata>
            <keywords>
                <indexterm keyref="onRhythmPlayerStateChanged"/>
            </keywords>
        </metadata>
    </prolog>
    <refbody>
        <section id="prototype">
            <p outputclass="codeblock">
            <codeblock props="android" outputclass="language-java">public void onRhythmPlayerStateChanged(int state, int errorCode) {}</codeblock>
            <codeblock props="ios mac" outputclass="language-objectivec">- (void)rtcEngine:(AgoraRtcEngineKit * _Nonnull)engine didRhythmPlayerStateChanged:(AgoraRhythmPlayerState)state
        errorCode:(AgoraRhythmPlayerError)errorCode NS_SWIFT_NAME(rtcEngine(_:didRhythmPlayerStateChanged:errorCode:));</codeblock>
            <codeblock props="cpp unreal" outputclass="language-cpp">virtual void onRhythmPlayerStateChanged(RHYTHM_PLAYER_STATE_TYPE state, RHYTHM_PLAYER_ERROR_TYPE errorCode) {
  (void)state;
  (void)errorCode;
}</codeblock>
         <codeblock props="bp" outputclass="language-cpp">DECLARE_DYNAMIC_MULTICAST_DELEGATE_TwoParams(FOnRhythmPlayerStateChanged, FENUMWRAP_RHYTHM_PLAYER_STATE_TYPE, state, FENUMWRAP_RHYTHM_PLAYER_ERROR_TYPE, errorCode);</codeblock>
            <codeblock props="electron" outputclass="language-typescript">onRhythmPlayerStateChanged?(
    state: RhythmPlayerStateType,
    errorCode: RhythmPlayerErrorType
  ): void;</codeblock>
            <codeblock props="unity cs" outputclass="language-csharp">public virtual void OnRhythmPlayerStateChanged(RHYTHM_PLAYER_STATE_TYPE state, RHYTHM_PLAYER_ERROR_TYPE errorCode) { }</codeblock>
            <codeblock props="rn" outputclass="language-typescript">onRhythmPlayerStateChanged?(
    state: RhythmPlayerStateType,
    errorCode: RhythmPlayerErrorType
  ): void;</codeblock>
            <codeblock props="flutter" outputclass="language-dart">final void Function(
          RhythmPlayerStateType state, RhythmPlayerErrorType errorCode)?
      onRhythmPlayerStateChanged;</codeblock>
            <codeblock props="reserve" outputclass="language-cpp"></codeblock></p>
        </section>
        <section id="detailed_desc">
            <p>虚拟节拍器状态发生改变时，SDK 会触发该回调报告当前的虚拟节拍器状态。在虚拟节拍器出现故障时，该回调可以帮助你了解当前虚拟节拍的状态以及出现故障的原因，方便你排查问题。</p>
            <note type="attention" props="cpp unreal bp unity flutter cs">该回调仅适用于 Android 和 iOS。</note> </section>
        <section id="parameters">
            <title><ph keyref="callback-section-title"/></title>
            <parml>
            <plentry props="ios mac cpp framework">
                <pt>state</pt>
                <pd>当前的虚拟节拍器状态，详见 <xref keyref="RHYTHM_PLAYER_STATE_TYPE"/>。</pd>
            </plentry>
            <plentry props="android">
                <pt>state</pt>
                <pd>当前的虚拟节拍器状态。
                    <ul>
                    <li><ph keyref="RHYTHM_PLAYER_STATE_IDLE"/> (810): 虚拟节拍器未开启或已关闭。</li>
                    <li><ph keyref="RHYTHM_PLAYER_STATE_OPENING"/> (811): 正在打开节拍音频文件。</li>
                    <li><ph keyref="RHYTHM_PLAYER_STATE_DECODING"/> (812): 正在解码节拍音频文件。</li>
                    <li><ph keyref="RHYTHM_PLAYER_STATE_PLAYING"/> (813): 正在播放节拍音频文件。</li>
                    <li><ph keyref="RHYTHM_PLAYER_STATE_FAILED"/> (814): 开启虚拟节拍器失败。你可以通过报告的错误码 <parmname>errorCode</parmname> 排查错误原因，也可以重新尝试开启虚拟节拍器。</li>
                    </ul></pd>
            </plentry>
            <plentry props="ios mac cpp framework">
                <pt>errorCode</pt>
                <pd>虚拟节拍器发生错误的错误码和错误信息，详见 <xref keyref="RHYTHM_PLAYER_ERROR_TYPE"/>。</pd>
            </plentry>
            <plentry props="android">
                <pt>errorCode</pt>
                <pd>虚拟节拍器发生错误的错误码和错误信息。
                    <ul>
                    <li><ph keyref="RHYTHM_PLAYER_ERROR_OK"/> (0): 正常播放节拍音频文件，没有错误。</li>
                    <li><ph keyref="RHYTHM_PLAYER_ERROR_FAILED"/> (1): 一般性错误，没有明确原因。</li>
                    <li><ph keyref="RHYTHM_PLAYER_ERROR_CAN_NOT_OPEN"/> (801): 打开节拍音频文件出错。</li>
                    <li><ph keyref="RHYTHM_PLAYER_ERROR_CAN_NOT_PLAY"/> (802): 播放节拍音频文件出错。</li>
                    <li><ph keyref="RHYTHM_PLAYER_ERROR_FILE_OVER_DURATION_LIMIT"/> (803): 节拍音频文件时长超出限制。最大时长为 1.2 秒。</li>
                    </ul></pd>
            </plentry>
            </parml> </section>
    </refbody>
</reference>
