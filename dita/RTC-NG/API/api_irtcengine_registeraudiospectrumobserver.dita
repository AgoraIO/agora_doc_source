<?xml version='1.0' encoding='UTF-8'?>
<!DOCTYPE reference PUBLIC "-//OASIS//DTD DITA Reference//EN" "reference.dtd">
<reference id="api_irtcengine_registeraudiospectrumobserver">
    <title><ph keyref="registerAudioSpectrumObserver"/></title>
    <shortdesc id="short"><ph id="shortdesc">注册音频频谱观察器。</ph></shortdesc>
    <prolog>
        <metadata>
            <keywords>
                <indexterm keyref="registerAudioSpectrumObserver"/>
            </keywords>
        </metadata>
    </prolog>
    <refbody>
        <section id="prototype">
            <p outputclass="codeblock">
            <codeblock props="android" outputclass="language-java">public abstract int registerAudioSpectrumObserver(IAudioSpectrumObserver observer);</codeblock>
            <codeblock props="hmos" outputclass="language-arkts"/>
            <codeblock props="ios mac" outputclass="language-objectivec">- (int)registerAudioSpectrumDelegate:(id&lt;AgoraAudioSpectrumDelegate&gt; _Nullable )delegate NS_SWIFT_NAME(registerAudioSpectrumDelegate(_:));</codeblock>
            <codeblock props="cpp unreal" outputclass="language-cpp">virtual int registerAudioSpectrumObserver(agora::media::IAudioSpectrumObserver * observer) = 0;</codeblock>
         <codeblock props="bp" outputclass="language-cpp">UFUNCTION(BlueprintCallable, Category = "Agora|RtcEngineProxy")
	int RegisterAudioSpectrumObserver(UIAudioSpectrumObserver* observer);</codeblock>
            <codeblock props="electron" outputclass="language-typescript">abstract registerAudioSpectrumObserver(
    observer: IAudioSpectrumObserver
  ): number;</codeblock>
            <codeblock props="unity cs" outputclass="language-csharp">public abstract int RegisterAudioSpectrumObserver(IAudioSpectrumObserver observer);</codeblock>
            <codeblock props="rn" outputclass="language-typescript">abstract registerAudioSpectrumObserver(
    observer: IAudioSpectrumObserver
  ): number;</codeblock>
            <codeblock props="flutter" outputclass="language-dart">void registerAudioSpectrumObserver(AudioSpectrumObserver observer);</codeblock>
            <codeblock props="reserve" outputclass="language-cpp"/></p>
        </section>
        <section id="detailed_desc">
            <title>详情</title>
            <p>调用 <xref keyref="registerAudioSpectrumObserver"/> 成功注册音频频谱观察器，并调用 <xref keyref="enableAudioSpectrumMonitor"/> 启用音频频谱监测后，SDK 会按照设置的时间间隔触发你在 <xref keyref="IAudioSpectrumObserver"/> 中实现的回调。<xref keyref="registerAudioSpectrumObserver"/> 成功注册音频频谱观察器，并调用 <xref keyref="enableAudioSpectrumMonitor"/> 启用音频频谱监测后，SDK 会按照设置的时间间隔触发你在 <xref keyref="IAudioSpectrumObserver"/> 中实现的回调。<xref keyref="enableAudioSpectrumMonitor"/> 开启音频频谱监测后，SDK 会按照你设置的时间间隔报告你在 <xref keyref="IAudioSpectrumObserver"/> 类中实现的回调。</p>
            <note type="attention" id="note_qwk_mjf_3qb">该方法在加入频道前后均可调用。</note> <note type="attention" props="native">你可以在加入频道前或加入频道后调用此方法。</note>
            </section>
        <section id="parameters">
            <title>参数</title>
            <parml>
            <plentry>
                <pt>observer</pt>
                <pt props="apple">delegate</pt>
                <pd props="apple bp cs electron flutter rn unity unreal">
                    <p>音频频谱观测器。详见 <xref keyref="IAudioSpectrumObserver"/>。</p>
                </pd>
            <pd props="android cpp">音频频谱观察器。详见 <xref keyref="IAudioSpectrumObserver"/>。</pd>
                </plentry>
            <plentry props="ios">
                <pt props="ios">delegate</pt>
                <pd props="ios">音频频谱观察者。详见 <xref keyref="IAudioSpectrumObserver"/>。</pd>
                </plentry>
        </parml> </section>
        <section id="return_values" props="bp cs electron flutter native rn unity unreal">
            <title><ph keyref="return-section-title"/></title>
        <p props="flutter">方法成功调用时，无返回值；方法调用失败时，会抛出 <xref keyref="AgoraRtcException"/> 异常，你需要捕获异常并进行处理。<ph props="cn">详见<xref keyref="error-code-link"/>了解详情和解决建议。</ph></p>
        <ul id="ul_jzc_zjf_3qb" props="bp cs unity unreal">
            <li>0: 方法调用成功。</li>
            <li>&lt; 0: 方法调用失败。<ph props="cn">详见<xref keyref="error-code-link"/>了解详情和解决建议。</ph></li>
            </ul>
        <p props="electron rn">一个 <xref keyref="IAudioSpectrumObserver"/> 对象。</p>
        <p props="native"><ul>
                        <li>0：方法调用成功。</li>
                        <li>&lt; 0：方法调用失败。</li>
                        </ul>
                    </p>
    </section>
    </refbody>
</reference>
