<?xml version='1.0' encoding='UTF-8'?>
<!DOCTYPE reference PUBLIC "-//OASIS//DTD DITA Reference//EN" "reference.dtd">
<reference id="api_irtcengine_unregisteraudiospectrumobserver">
    <title><ph keyref="unregisterAudioSpectrumObserver"/></title>
    <shortdesc id="short"><ph id="shortdesc">注销音频频谱观察器。</ph></shortdesc>
    <prolog>
        <metadata>
            <keywords>
                <indexterm keyref="unregisterAudioSpectrumObserver"/>
            </keywords>
        </metadata>
    </prolog>
    <refbody>
        <section id="prototype">
            <p outputclass="codeblock">
            <codeblock props="android" outputclass="language-java">public abstract int unRegisterAudioSpectrumObserver(IAudioSpectrumObserver observer);</codeblock>
            <codeblock props="hmos" outputclass="language-arkts"/>
            <codeblock props="ios mac" outputclass="language-objectivec">- (int)unregisterAudioSpectrumDelegate:(id&lt;AgoraAudioSpectrumDelegate&gt; _Nullable)delegate NS_SWIFT_NAME(unregisterAudioSpectrumDelegate(_:));</codeblock>
            <codeblock props="cpp unreal" outputclass="language-cpp">virtual int unregisterAudioSpectrumObserver(agora::media::IAudioSpectrumObserver * observer) = 0;</codeblock>
         <codeblock props="bp" outputclass="language-cpp">UFUNCTION(BlueprintCallable, Category = "Agora|RtcEngineProxy")
	int UnregisterAudioSpectrumObserver(UIAudioSpectrumObserver* observer);</codeblock>
            <codeblock props="electron" outputclass="language-typescript">abstract unregisterAudioSpectrumObserver(
    observer: IAudioSpectrumObserver
  ): number;</codeblock>
            <codeblock props="unity cs" outputclass="language-csharp">public abstract int UnregisterAudioSpectrumObserver();</codeblock>
            <codeblock props="rn" outputclass="language-typescript">abstract unregisterAudioSpectrumObserver(
    observer: IAudioSpectrumObserver
  ): number;</codeblock>
            <codeblock props="flutter" outputclass="language-dart">void unregisterAudioSpectrumObserver(AudioSpectrumObserver observer);</codeblock>
            <codeblock props="reserve" outputclass="language-cpp"/></p>
        </section>
        <section id="detailed_desc">
            <title>详情</title>
            <p>如果你希望关闭音频频谱监测，可以调用该方法。<xref keyref="registerAudioSpectrumObserver"/> 后，如果你想取消注册音频频谱观测器，请调用该方法。</p>
            <note type="attention" id="note_ymh_dhn_3qb">该方法在加入频道前后均可调用。</note> <note type="attention" props="cpp">你可以在加入频道前或加入频道后调用此方法。</note>
            <note type="attention" props="apple">你可以在加入频道前或后调用此方法。</note>
            </section>
        <section id="parameters" props="bp native unreal">
            <title>参数</title>
            <parml>
            <plentry>
                <pt>observer</pt>
                <pt props="apple">delegate</pt>
                <pd props="android bp cs electron flutter mac rn unity unreal">音频频谱观测器。详见 <xref keyref="IAudioSpectrumObserver"/>。
                    </pd>
            <pd props="cpp ios">音频频谱观察器。详见 <xref keyref="IAudioSpectrumObserver"/>。</pd>
                </plentry>
        </parml> </section>
        <section id="return_values" props="bp cs electron flutter native rn unity unreal">
            <title><ph keyref="return-section-title"/></title>
        <p props="flutter">方法成功调用时，无返回值；方法调用失败时，会抛出 <xref keyref="AgoraRtcException"/> 异常，你需要捕获异常并进行处理。<ph props="cn">详见<xref keyref="error-code-link"/>了解详情和解决建议。</ph></p>
        <ul props="android bp cs electron rn unity unreal">
            <li>0: 方法调用成功。</li>
            <li>&lt; 0: 方法调用失败。<ph props="cn">详见<xref keyref="error-code-link"/>了解详情和解决建议。</ph></li>
            </ul>
        <p props="apple cpp"><ul>
                        <li>0：方法调用成功。</li>
                        <li>&lt; 0：方法调用失败。</li>
                        </ul>
                    </p>
    </section>
    </refbody>
</reference>
