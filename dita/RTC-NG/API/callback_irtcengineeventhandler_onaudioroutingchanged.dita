<?xml version='1.0' encoding='UTF-8'?>
<!DOCTYPE reference PUBLIC "-//OASIS//DTD DITA Reference//EN" "reference.dtd">
<reference id="callback_irtcengineeventhandler_onaudioroutingchanged">
    <title><ph keyref="onAudioRoutingChanged"/></title>
    <shortdesc id="short"><ph id="shortdesc">本地音频路由发生变化时触发的回调。</ph></shortdesc>
    <prolog>
        <metadata>
            <keywords>
                <indexterm keyref="onAudioRoutingChanged"/>
            </keywords>
        </metadata>
    </prolog>
    <refbody>
        <section id="prototype">
            <p outputclass="codeblock">
            <codeblock props="android" outputclass="language-java">public void onAudioRouteChanged(int routing)</codeblock>
            <codeblock props="hmos" outputclass="language-arkts"/>
            <codeblock props="ios mac" outputclass="language-objectivec">- (void)rtcEngine:(AgoraRtcEngineKit * _Nonnull)engine didAudioRouteChanged:(AgoraAudioOutputRouting)routing NS_SWIFT_NAME(rtcEngine(_:didAudioRouteChanged:));</codeblock>
            <codeblock props="cpp unreal" outputclass="language-cpp">virtual void onAudioRoutingChanged(int routing) { (void)routing; }</codeblock>
            <codeblock props="bp" outputclass="language-cpp"/>
            <codeblock props="cs" outputclass="language-csharp"/>
            <codeblock props="electron" outputclass="language-typescript"/>
            <codeblock props="unity cs" outputclass="language-csharp"/>
            <codeblock props="rn" outputclass="language-typescript"/>
            <codeblock props="flutter" outputclass="language-dart"/> </p>
        </section>
        <section id="detailed_desc" deliveryTarget="details" otherprops="no-title">
            <p/>
        </section>
        <section id="restriction" deliveryTarget="details">
            <title>使用限制</title>
            <p>无。</p>
        </section>
        <section id="parameters" deliveryTarget="details">
            <title>参数</title>
            <parml>
            <plentry props="android cpp ios">
                <pt props="android cpp ios">routing</pt>
                <pd props="android">当前的音频路由：
                    <ul>
                        <li><ph keyref="ROUTE_DEFAULT"/>（-1）：默认音频路由。</li>
                        <li><ph keyref="ROUTE_HEADSET"/>（0）：音频路由为带麦克风的耳机。</li>
                        <li><ph keyref="ROUTE_EARPIECE"/>（1）：音频路由为听筒。</li>
                        <li><ph keyref="ROUTE_HEADSETNOMIC"/>（2）：音频路由为不带麦克风的耳机。</li>
                        <li><ph keyref="ROUTE_SPEAKERPHONE"/>（3）：音频路由为设备自带扬声器。</li>
                        <li><ph keyref="ROUTE_LOUDSPEAKER"/>（4）：音频路由为外接扬声器（预留）。</li>
                        <li><ph keyref="ROUTE_BLUETOOTH_DEVICE_HFP"/>（5）：音频路由为使用 HFP 协议的蓝牙设备。</li>
                        <li><ph keyref="ROUTE_BLUETOOTH_DEVICE_A2DP"/>（10）：音频路由为使用 A2DP 协议的蓝牙设备。</li>
                        </ul>
                    </pd>
                <pd props="ios">当前的音频路由，详见 <xref keyref="AudioRoute"/>。</pd>
                <pd props="cpp">当前的音频路由。详见 <xref keyref="AudioRoute"/>。</pd>
            </plentry>
            <plentry props="ios">
                <pt props="ios">engine</pt>
                <pd props="ios">引擎实例，详见 <xref keyref="IRtcEngine"/>。</pd>
            </plentry>
            </parml> </section>
        <section id="return_values" props="bp electron flutter rn unity unreal">
            <title><ph keyref="return-section-title"/></title>
        <p props="flutter">方法成功调用时，无返回值；方法调用失败时，会抛出 <xref keyref="AgoraRtcException"/> 异常，你需要捕获异常并进行处理。</p>
        <ul props="bp electron rn unity unreal">
                <li>0: 方法调用成功。</li>
                <li>&lt; 0: 方法调用失败。<ph props="cn">详见<xref keyref="error-code-link"/>了解详情和解决建议。</ph></li>
                </ul>
    </section>
    </refbody>
</reference>
