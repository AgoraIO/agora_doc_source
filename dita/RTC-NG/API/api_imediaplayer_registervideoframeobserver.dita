<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE reference PUBLIC "-//OASIS//DTD DITA Reference//EN" "reference.dtd">
<reference id="api_imediaplayer_registervideoframeobserver">
    <title><ph keyref="registerVideoFrameObserver_IMediaPlayer"/></title>
    <shortdesc id="short"><ph id="shortdesc">注册视频帧观测器。</ph></shortdesc>
    <prolog>
        <metadata>
            <keywords>
                <indexterm keyref="registerVideoFrameObserver_IMediaPlayer"/>
            </keywords>
        </metadata>
    </prolog>
    <refbody>
        <section id="prototype">
            <p outputclass="codeblock">
            <codeblock props="android" outputclass="language-java">int registerVideoFrameObserver(IMediaPlayerVideoFrameObserver videoFrameObserver);</codeblock>
            <codeblock props="ios mac" outputclass="language-objectivec"/>
            <codeblock props="cpp unreal" outputclass="language-cpp">virtual int registerVideoFrameObserver(media::base::IVideoFrameObserver* observer) = 0;</codeblock>
         <codeblock props="bp" outputclass="language-cpp">UFUNCTION(BlueprintCallable, Category = &quot;Agora|IMediaPlayer&quot;)
	int RegisterVideoFrameObserver(UIVideoFrameObserver* observer);</codeblock>
            <codeblock props="electron" outputclass="language-typescript">abstract registerVideoFrameObserver(
    observer: IMediaPlayerVideoFrameObserver
  ): number;</codeblock>
            <codeblock props="unity cs" outputclass="language-csharp">public abstract void RegisterVideoFrameObserver(IAgoraRtcMediaPlayerVideoFrameObserver observer);</codeblock>
            <codeblock props="rn" outputclass="language-typescript">abstract registerVideoFrameObserver(
    observer: IMediaPlayerVideoFrameObserver
  ): number;</codeblock>
            <codeblock props="flutter" outputclass="language-dart">void registerVideoFrameObserver(MediaPlayerVideoFrameObserver observer);</codeblock>
            <codeblock props="reserve" outputclass="language-cpp"></codeblock></p>
        </section>
        <section id="detailed_desc">
            <title>详情</title>
            <p>你需要在该方法中实现一个 <xref props="cpp unreal bp" keyref="IVideoFrameObserver"/><xref props="android electron rn flutter" keyref="IMediaPlayerVideoFrameObserver" /> 类，并根据场景需要，注册该类的回调。成功注册视频帧观测器后，SDK 会在捕捉到每个视频帧时，触发你所注册的回调。</p>
        </section>
        <section id="parameters">
            <title>参数</title>
            <parml>
            <plentry>
                <pt props="android">videoFrameObserver</pt>
                <pt props="cpp unreal bp electron rn flutter unity cs">observer</pt>
                <pd props="cpp unreal bp">视频帧观测器，观测每帧视频的接收。详见 <xref props="cpp unreal bp" keyref="IVideoFrameObserver"/>。</pd>
                <pd props="android electron rn flutter unity cs">视频帧观测器，观测每帧视频的接收。详见 <xref keyref="IMediaPlayerVideoFrameObserver"/>。</pd>
            </plentry>
            </parml> </section>
        <section id="return_values">
            <title><ph keyref="return-section-title"/></title>
            <p props="flutter">方法成功调用时，无返回值；方法调用失败时，会抛出 <xref keyref="AgoraRtcException"/> 异常，你需要捕获异常并进行处理。<ph props="cn">详见<xref keyref="error-code-link"/>了解详情和解决建议。</ph></p>
            <ul props="android cpp unreal bp electron rn">
            <li>0: 方法调用成功。</li>
            <li>&lt; 0: 方法调用失败。<ph props="cn">详见<xref keyref="error-code-link"/>了解详情和解决建议。</ph></li>
            </ul> </section>
    </refbody>
</reference>
