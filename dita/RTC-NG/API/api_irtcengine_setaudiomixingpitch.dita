<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE reference PUBLIC "-//OASIS//DTD DITA Reference//EN" "reference.dtd">
<reference id="api_irtcengine_setaudiomixingpitch">
    <title><ph keyref="setAudioMixingPitch" /></title>
    <shortdesc id="short"><ph id="shortdesc">调整本地播放的音乐文件的音调。</ph></shortdesc>
    <prolog>
        <metadata>
            <keywords>
                <indexterm keyref="setAudioMixingPitch" />
            </keywords>
        </metadata>
    </prolog>
    <refbody>
        <section id="prototype">
            <p outputclass="codeblock">
            <codeblock props="android" outputclass="language-java">public abstract int setAudioMixingPitch(int pitch);</codeblock>
            <codeblock props="ios mac" outputclass="language-objectivec">- (int)setAudioMixingPitch:(NSInteger)pitch;</codeblock>
            <codeblock props="cpp unreal" outputclass="language-cpp">virtual int setAudioMixingPitch(int pitch) = 0;</codeblock>
         <codeblock props="bp" outputclass="language-cpp">UFUNCTION(BlueprintCallable, Category = &quot;Agora|RtcEngineProxy&quot;)
	int SetAudioMixingPitch(int pitch);</codeblock>
            <codeblock props="electron" outputclass="language-typescript">abstract setAudioMixingPitch(pitch: number): number;</codeblock>
            <codeblock props="unity cs" outputclass="language-csharp">public abstract int SetAudioMixingPitch(int pitch);</codeblock>
            <codeblock props="rn" outputclass="language-typescript">abstract setAudioMixingPitch(pitch: number): number;</codeblock>
            <codeblock props="flutter" outputclass="language-dart">Future&lt;void&gt; setAudioMixingPitch(int pitch);</codeblock>
            <codeblock props="reserve" outputclass="language-cpp"></codeblock></p>
        </section>
        <section id="detailed_desc">
            <title>详情</title>
            <p>本地人声和播放的音乐文件混音时，调用该方法可以仅调节音乐文件的音调。</p>
            <note type="attention">你需要在调用 <apiname keyref="startAudioMixing2" /> 并收到 <apiname keyref="onAudioMixingStateChanged" /><codeph>(<ph keyref="AUDIO_MIXING_STATE_PLAYING" />)</codeph> 回调后调用该方法。</note> </section>
        <section id="parameters">
            <title>参数</title>
            <parml>
            <plentry id="pitch">
                <pt>pitch</pt>
                <pd>按半音音阶调整本地播放的音乐文件的音调，默认值为 0，即不调整音调。取值范围为 [-12,12]，每相邻两个值的音高距离相差半音。取值的绝对值越大，音调升高或降低得越多。</pd>
            </plentry>
            </parml> </section>
        <section id="return_values">
            <title><ph keyref="return-section-title"/></title>
            <p props="flutter">方法成功调用时，无返回值；方法调用失败时，会抛出 <xref keyref="AgoraRtcException"/> 异常，你需要捕获异常并进行处理。<ph props="cn">详见<xref keyref="error-code-link"/>了解详情和解决建议。</ph></p>
            <ul props="native unreal bp electron unity rn cs">
            <li>0: 方法调用成功。</li>
            <li>&lt; 0: 方法调用失败。<ph props="cn">详见<xref keyref="error-code-link"/>了解详情和解决建议。</ph></li>
            </ul> </section>
    </refbody>
</reference>