<?xml version='1.0' encoding='UTF-8'?>
<!DOCTYPE reference PUBLIC "-//OASIS//DTD DITA Reference//EN" "reference.dtd">
<reference id="api_irtcengine_setaudiomixingpitch">
    <title><ph keyref="setAudioMixingPitch"/></title>
    <shortdesc id="short"><ph id="shortdesc">设置本地音乐文件的音调。</ph></shortdesc>
    <prolog>
        <metadata>
            <keywords>
                <indexterm keyref="setAudioMixingPitch"/>
            </keywords>
        </metadata>
    </prolog>
    <refbody>
        <section id="prototype">
            <p outputclass="codeblock">
            <codeblock props="android" outputclass="language-java">public abstract int setAudioMixingPitch(int pitch);</codeblock>
            <codeblock props="hmos" outputclass="language-arkts"/>
            <codeblock props="ios mac" outputclass="language-objectivec">- (int)setAudioMixingPitch:(NSInteger)pitch NS_SWIFT_NAME(setAudioMixingPitch(_:));</codeblock>
            <codeblock props="cpp unreal" outputclass="language-cpp">virtual int setAudioMixingPitch(int pitch) = 0;</codeblock>
         <codeblock props="bp" outputclass="language-cpp">UFUNCTION(BlueprintCallable, Category = "Agora|IRtcEngine")
	int SetAudioMixingPitch(int pitch);</codeblock>
            <codeblock props="electron" outputclass="language-typescript">abstract setAudioMixingPitch(pitch: number): number;</codeblock>
            <codeblock props="unity cs" outputclass="language-csharp">public abstract int SetAudioMixingPitch(int pitch);</codeblock>
            <codeblock props="rn" outputclass="language-typescript">abstract setAudioMixingPitch(pitch: number): number;</codeblock>
            <codeblock props="flutter" outputclass="language-dart">Future&lt;void&gt; setAudioMixingPitch(int pitch);</codeblock>
            <codeblock props="reserve" outputclass="language-cpp"/></p>
        </section>
            <section id="detailed_desc" deliveryTarget="details" otherprops="no-title">
                <p></p>
            <note type="attention" props="cpp">你需要在调用 <codeph>startAudioMixing</codeph> 并收到 <xref keyref="onAudioMixingStateChanged"/>（<ph keyref="AUDIO_MIXING_STATE_PLAYING"/>）回调后调用此方法。</note>
            <note type="attention" props="apple">你需要在调用 <xref keyref="startAudioMixing2"/> 并收到 <codeph>audioMixingStateChanged:reasonCode:</codeph>（<ph keyref="AUDIO_MIXING_STATE_PLAYING"/>）回调后调用此方法。</note>
            </section>
            <section id="timing" deliveryTarget="details">
                <title>调用时机</title>
                <p>你需要在调用 <apiname keyref="startAudioMixing2"/> 并收到 <apiname keyref="onAudioMixingStateChanged"/><codeph>(<ph keyref="AUDIO_MIXING_STATE_PLAYING"/>)</codeph> 回调后调用该方法。</p>
            </section>
            <section id="restriction" deliveryTarget="details">
                <title>调用限制</title>
                <p>无。</p>
        </section>
            <section id="parameters" deliveryTarget="details">
            <title>参数</title>
            <parml>
            <plentry id="pitch">
                <pt>pitch</pt>
                <pd props="bp cs electron flutter mac rn unity unreal">按半音音阶调整本地播放的音乐文件的音调，默认值为 0，即不调整音调。取值范围为 [-12,12]，每相邻两个值的音高距离相差半音。取值的绝对值越大，音调升高或降低得越多。</pd>
            <pd props="android">按半音阶设置本地音乐文件的音调（默认值为 0，表示保持原始音调）。取值范围为 -12 到 12，相邻两个值之间的音调差为一个半音。该参数的绝对值越大，音调变化越明显。</pd>
                <pd props="ios">按半音阶设置本地音乐文件的音调。默认值为 0，表示保持原始音调。取值范围为 -12 到 12，相邻两个值之间的音调差为一个半音。该参数的绝对值越大，音调升高或降低的幅度越大。</pd>
                <pd props="cpp">按半音音阶设置本地音乐文件的音调。默认值为 0（默认），表示保持原始音调。取值范围为 -12 到 12，相邻两个值之间的音调差为一个半音。该参数的绝对值越大，音调变化越明显。</pd>
                </plentry>
        </parml> </section>
        <section id="return_values" props="bp cs electron flutter native rn unity unreal">
            <title><ph keyref="return-section-title"/></title>
        <p props="flutter">方法成功调用时，无返回值；方法调用失败时，会抛出 <xref keyref="AgoraRtcException"/> 异常，你需要捕获异常并进行处理。<ph props="cn">详见<xref keyref="error-code-link"/>了解详情和解决建议。</ph></p>
        <ul props="bp cs electron rn unity unreal">
            <li>0: 方法调用成功。</li>
            <li>&lt; 0: 方法调用失败。<ph props="cn">详见<xref keyref="error-code-link"/>了解详情和解决建议。</ph></li>
            </ul>
        <p props="native"><ul>
                        <li>0：方法调用成功。</li>
                        <li>&lt; 0：方法调用失败。</li>
                        </ul>
                    </p>
    </section>
    </refbody>
</reference>
