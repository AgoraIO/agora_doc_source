<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE reference PUBLIC "-//OASIS//DTD DITA Reference//EN" "reference.dtd">
<reference id="api_irtcengine_addvideowatermark">
    <title> <ph keyref="addVideoWatermark1" /> </title>
    <shortdesc id="short"> <ph id="shortdesc">添加本地视频水印。</ph> </shortdesc>
    <prolog>
        <metadata>
            <keywords>
                <indexterm keyref="addVideoWatermark1" />
            </keywords>
        </metadata>
    </prolog>
    <refbody>
        <section id="prototype">
            <p outputclass="codeblock">
            <codeblock props="android" outputclass="language-java">public abstract int addVideoWatermark(AgoraImage watermark);</codeblock>
            <codeblock props="ios mac" outputclass="language-objectivec">- (int)addVideoWatermark:(AgoraImage * _Nonnull)watermark</codeblock>
            <codeblock props="cpp unreal" outputclass="language-cpp">virtual int addVideoWatermark(const RtcImage&amp; watermark) = 0;</codeblock>
            <codeblock props="electron" outputclass="language-typescript">abstract addVideoWatermark(watermarkUrl: string, options: WatermarkOptions): number;</codeblock>
            <codeblock props="unity cs" outputclass="language-csharp">public abstract int AddVideoWatermark(RtcImage watermark);</codeblock>
            <codeblock props="rn" outputclass="language-typescript">abstract addVideoWatermark(
    watermarkUrl: string,
    options: WatermarkOptions
  ): number;</codeblock>
            <codeblock props="flutter" outputclass="language-dart">Future&lt;void&gt; addVideoWatermark(RtcImage watermark);</codeblock>
            <codeblock props="reserve" outputclass="language-cpp"></codeblock></p>
        </section>
        <section id="detailed_desc">
            <title>详情</title>
            <dl outputclass="deprecated">
            <dlentry>
                <dt>弃用：</dt>
                <dd>
                       该方法已废弃，请使用
                        <xref keyref="addVideoWatermark2" /> 作为替代。
                    </dd>
            </dlentry>
            </dl>
            <p>
               该方法将一张 PNG 图片作为水印添加到本地发布的直播视频流上，同一直播频道中的用户，旁路推流观众，甚至采集设备都能看到或采集到该水印图片。如果你仅仅希望在旁路直播推流中添加水印，请参考 <xref keyref="setLiveTranscoding" />中描述的用法。
            </p>
            <note type="attention">
            <ul>
            <li>在本地直播和旁路推流中，URL 的定义不同。本地直播中，URL 指本地直播视频上图片的本地绝对/相对路径；旁路推流中，URL 指旁路推流视频上图片的地址。</li>
            <li>待添加图片的源文件格式必须是 PNG。如果待添加的 PNG 图片的尺寸与你该方法中设置的尺寸不一致，SDK 会对 PNG 图片进行裁剪，以与设置相符。</li>
            <li>声网当前只支持在直播视频流中添加一个水印，后添加的水印会替换掉之前添加的水印。</li>
            </ul> </note> </section>
        <section id="parameters">
            <title>参数</title>
            <parml>
            <plentry>
                <pt>watermark</pt>
                <pd>
                        待添加在本地直播推流中的水印图片：<xref keyref="RtcImage" />。
                    </pd>
            </plentry>
            </parml> </section>
        <section id="return_values">
            <title><ph keyref="return-section-title"/></title>
            <p props="flutter">方法成功调用时，无返回值；方法调用失败时，会抛出 <xref keyref="AgoraRtcException"/> 异常，你需要捕获异常并进行处理。<ph props="cn">详见<xref keyref="error-code-link"/>了解详情和解决建议。</ph></p>
            <ul props="native unreal bp electron unity rn cs">
            <li>0: 方法调用成功。</li>
            <li>&lt; 0: 方法调用失败。<ph props="cn">详见<xref keyref="error-code-link"/>了解详情和解决建议。</ph></li>
            </ul> </section>
    </refbody>
</reference>