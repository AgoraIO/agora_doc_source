<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE reference PUBLIC "-//OASIS//DTD DITA Reference//EN" "reference.dtd">
<reference id="api_irtcengine_playalleffects">
    <title><ph keyref="playAllEffects" /></title>
    <shortdesc id="short"><ph id="shortdesc">播放所有音效文件。</ph></shortdesc>
    <prolog>
        <metadata>
            <keywords>
                <indexterm keyref="playAllEffects" />
            </keywords>
        </metadata>
    </prolog>
    <refbody>
        <section id="prototype">
            <p outputclass="codeblock">
            <codeblock props="android" outputclass="language-java" />
            <codeblock props="ios mac" outputclass="language-objectivec" />
            <codeblock props="cpp unreal bp" outputclass="language-cpp">virtual int playAllEffects(int loopCount, double pitch, double pan, int gain, bool publish = false) = 0;</codeblock>
            <codeblock props="electron" outputclass="language-typescript">abstract playAllEffects(
    loopCount: number,
    pitch: number,
    pan: number,
    gain: number,
    publish?: boolean
  ): number;</codeblock>
            <codeblock props="unity cs" outputclass="language-csharp">public abstract int PlayAllEffects(int loopCount, double pitch, double pan, int gain, bool publish = false);</codeblock>
            <codeblock props="rn" outputclass="language-typescript">abstract playAllEffects(
    loopCount: number,
    pitch: number,
    pan: number,
    gain: number,
    publish?: boolean
  ): number;</codeblock>
            <codeblock props="flutter" outputclass="language-dart">Future&lt;void&gt; playAllEffects(
    {required int loopCount,
    required double pitch,
    required double pan,
    required int gain,
    bool publish = false});</codeblock>
            <codeblock props="reserve" outputclass="language-cpp"></codeblock></p>
        </section>
        <section id="detailed_desc">
            <title>详情</title>
            <p>多次调用 <xref keyref="preloadEffect" /> 预加载多个音效文件后，你可以调用本方法播放所有预加载的音效文件。</p>
        </section>
        <section id="parameters">
            <title>参数</title>
            <parml>
            <plentry>
                <pt>loopCount</pt>
                <pd>音效文件循环播放的次数：









                    <ul>
                    <li>-1: 无限循环播放音效文件，直至调用 <xref keyref="stopEffect" /> 或 <xref keyref="stopAllEffects" /> 后停止。</li>
                    <li>0: 播放音效文件一次。</li>
                    <li>1: 播放音效文件两次。</li>
                    </ul></pd>
            </plentry>
            <plentry>
                <pt>pitch</pt>
                <pd>
                    <p>音效的音调。取值范围为 [0.5,2.0]。默认值为 1.0，代表原始音调。取值越小，则音调越低。</p>
                </pd>
            </plentry>
            </parml>
            <parml>
            <plentry>
                <pt>pan</pt>
                <pd>音效的空间位置。取值范围为 [-1.0,1.0]:










                    <ul>
                    <li>-1.0: 音效出现在左边。</li>
                    <li>0: 音效出现在正前边。</li>
                    <li>1.0: 音效出现在右边。</li>
                    </ul> </pd>
            </plentry>
            <plentry>
                <pt>gain</pt>
                <pd>
                    <p>音效的音量。取值范围为 [0,100]。100 为默认值，代表原始音量。取值越小，则音量越低。</p>
                </pd>
            </plentry>
            <plentry>
                <pt>publish</pt>
                <pd>是否将音效发布到远端：









                    <ul>
                    <li><codeph><ph keyref="true" /></codeph>: 将音效发布到远端。本地和远端用户都能听到该音效。</li>
                    <li><codeph><ph keyref="false" /></codeph>: （默认）不将音效发布到远端。只能本地用户能听到该音效。</li>
                    </ul></pd>
            </plentry>
            </parml> </section>
        <section id="return_values">
            <title><ph keyref="return-section-title"/></title>
            <p props="flutter">方法成功调用时，无返回值；方法调用失败时，会抛出 <xref keyref="AgoraRtcException"/> 异常，你需要捕获异常并进行处理。</p>
            <ul>
            <li props="native unreal bp unity rn electron cs">0: 方法调用成功。</li>
            <li>&lt; 0: 方法调用失败。</li>
            </ul></section>
    </refbody>
</reference>