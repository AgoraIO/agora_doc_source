<?xml version='1.0' encoding='UTF-8'?>
<!DOCTYPE reference PUBLIC "-//OASIS//DTD DITA Reference//EN" "reference.dtd">
<reference id="api_irtcengine_enablevideo">
    <title><ph keyref="enableVideo"/></title>
    <shortdesc id="short"><ph id="shortdesc">启用视频模块。</ph></shortdesc>
    <prolog>
        <metadata>
            <keywords>
                <indexterm keyref="enableVideo"/>
            </keywords>
        </metadata>
    </prolog>
    <refbody>
        <section id="prototype">
            <p outputclass="codeblock">
            <codeblock props="android" outputclass="language-java">public abstract int enableVideo();</codeblock>
            <codeblock props="hmos" outputclass="language-arkts">public abstract enableVideo(): number;</codeblock>
            <codeblock props="ios mac" outputclass="language-objectivec">- (int)enableVideo NS_SWIFT_NAME(enableVideo());</codeblock>
            <codeblock props="cpp unreal" outputclass="language-cpp">virtual int enableVideo() = 0;</codeblock>
         <codeblock props="bp" outputclass="language-cpp">UFUNCTION(BlueprintCallable, Category = "Agora|IRtcEngine")
	int EnableVideo();</codeblock>
            <codeblock props="electron" outputclass="language-typescript">abstract enableVideo(): number;</codeblock>
            <codeblock props="unity cs" outputclass="language-csharp">public abstract int EnableVideo();</codeblock>
            <codeblock props="rn" outputclass="language-typescript">abstract enableVideo(): number;</codeblock>
            <codeblock props="flutter" outputclass="language-dart">Future&lt;void&gt; enableVideo();</codeblock>
            <codeblock props="reserve" outputclass="language-cpp"/></p>
        </section>
        <section id="detailed_desc" deliveryTarget="details" otherprops="no-title">
            <p>默认情况下，视频模块处于禁用状态。调用该方法可启用视频模块。如需关闭视频模块，需调用 <xref keyref="disableVideo"/> 方法。

调用时机：你可以在加入频道前或加入频道后调用该方法：
                    <xref keyref="disableVideo"/> 方法。<ul>
                        <li>如果在加入频道前调用，则会启用视频模块。</li>
                        <li>如果在语音通话中调用，则语音通话会自动切换为视频通话。 相关回调：成功调用该方法后，远端会触发 <xref keyref="onRemoteVideoStateChanged"/> 回调。</li>
                        </ul>
                    </p>
            <note type="attention" props="cpp"><ul>
                        <li>该方法会启用内部引擎，即使离开频道后仍然有效。</li>
                        <li>调用该方法会重置整个引擎，可能导致响应变慢。你可以根据实际需求使用以下方法分别控制视频模块的具体功能：<ul>
                            <li><xref keyref="enableLocalVideo"/>：是否启用摄像头以创建本地视频流。</li>
                            <li><xref keyref="muteLocalVideoStream"/>：是否发布本地视频流。</li>
                            <li><xref keyref="muteRemoteVideoStream"/>：是否订阅并播放远端视频流。</li>
                            <li><xref keyref="muteAllRemoteVideoStreams"/>：是否订阅并播放所有远端视频流。</li>
                            </ul>
                        </li>
                        <li>成功调用该方法会重置 <xref keyref="enableLocalVideo"/>、<xref keyref="muteRemoteVideoStream"/> 和 <xref keyref="muteAllRemoteVideoStreams"/> 的状态，请谨慎使用。</li>
                        </ul>
                    </note>
            <note type="attention" props="apple"><ul>
                        <li>该方法启用内部引擎，即使在离开频道后仍然有效。</li>
                        <li>调用该方法会重置整个引擎，可能导致响应变慢。你可以根据实际需求使用以下方法分别控制视频模块的具体功能：<ul>
                            <li><xref keyref="enableLocalVideo"/>：是否启用摄像头以创建本地视频流。</li>
                            <li><xref keyref="muteLocalVideoStream"/>：是否发布本地视频流。</li>
                            <li><xref keyref="muteRemoteVideoStream"/>：是否订阅并播放远端视频流。</li>
                            <li><xref keyref="muteAllRemoteVideoStreams"/>：是否订阅并播放所有远端视频流。</li>
                            </ul>
                        </li>
                        <li>成功调用该方法会重置 <xref keyref="enableLocalVideo"/>、<xref keyref="muteRemoteVideoStream"/> 和 <xref keyref="muteAllRemoteVideoStreams"/> 的状态，请谨慎使用。</li>
                        </ul>
                    </note>
            <note type="attention" props="android"><ul>
                        <li>该方法启用内部引擎，即使离开频道后仍然有效。</li>
                        <li>调用该方法会重置整个引擎，可能导致响应变慢。你可以根据实际需求使用以下方法分别控制视频模块的具体功能：<ul>
                            <li><xref keyref="enableLocalVideo"/>：是否启用摄像头以创建本地视频流。</li>
                            <li><xref keyref="muteLocalVideoStream"/>：是否发布本地视频流。</li>
                            <li><xref keyref="muteRemoteVideoStream"/>：是否订阅并播放远端视频流。</li>
                            <li><xref keyref="muteAllRemoteVideoStreams"/>：是否订阅并播放所有远端视频流。</li>
                            </ul>
                        </li>
                        <li>成功调用该方法会重置 <xref keyref="enableLocalVideo"/>、<xref keyref="muteRemoteVideoStream"/> 和 <xref keyref="muteAllRemoteVideoStreams"/> 的状态，请谨慎使用。</li>
                        </ul>
                    </note>
            </section>
        <section id="timing" deliveryTarget="details">
            <title>调用时机</title>
            <p>该方法可以在加入频道前或者频道内调用： 
                <ul>
                <li>如果在加入频道前调用，则开启视频模块。</li>
                <li>如果在纯音频通话中调用，则音频通话将自动切换为视频通话。</li>
                </ul></p>
        </section>
                <section id="restriction" deliveryTarget="details">
            <title>调用限制</title>
                <ul>
                <li>该方法设置的是内部引擎为启用状态，在离开频道后仍然有效。</li>
                <li>调用该方法会重置整个引擎，响应时间较慢。你可以根据实际需求用以下方法来独立控制视频模块的某一项功能：
                    <ul>
                    <li><xref keyref="enableLocalVideo"/>: 是否启动摄像头采集并创建本地视频流。</li>
                    <li><xref keyref="muteLocalVideoStream"/>: 是否发布本地视频流。</li>
                    <li><xref keyref="muteRemoteVideoStream"/>: 是否接收并播放远端视频流。</li>
                    <li><xref keyref="muteAllRemoteVideoStreams"/>: 是否接收并播放所有远端视频流。</li>
                    </ul></li>
                <li>在频道内调用该方法时，会重置 <apiname keyref="enableLocalVideo"/>、<apiname keyref="muteRemoteVideoStream"/> 和 <apiname keyref="muteAllRemoteVideoStreams"/> 的设置，需谨慎使用。</li>
                </ul>
        </section>
        <section id="related" deliveryTarget="details">
            <title>相关回调</title>
                <p>成功调用该方法后，远端会触发 <xref keyref="onRemoteVideoStateChanged"/> 回调。</p>
        </section>
        <section id="return_values" props="bp cs electron flutter native rn unity unreal">
            <title><ph keyref="return-section-title"/></title>
        <p props="flutter">方法成功调用时，无返回值；方法调用失败时，会抛出 <xref keyref="AgoraRtcException"/> 异常，你需要捕获异常并进行处理。<ph props="cn">详见<xref keyref="error-code-link"/>了解详情和解决建议。</ph></p>
        <ul props="bp cs electron rn unity unreal">
            <li>0: 方法调用成功。</li>
            <li>&lt; 0: 方法调用失败。<ph props="cn">详见<xref keyref="error-code-link"/>了解详情和解决建议。</ph></li>
            </ul>
        <p props="native"><ul>
                        <li>0：方法调用成功。</li>
                        <li>&lt; 0：方法调用失败。</li>
                        </ul>
                    </p>
    </section>
    </refbody>
</reference>
