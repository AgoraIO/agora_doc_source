<?xml version='1.0' encoding='UTF-8'?>
<!DOCTYPE reference PUBLIC "-//OASIS//DTD DITA Reference//EN" "reference.dtd">
<reference id="class_canvasconfig">
    <title><ph keyref="CanvasConfig"/></title>
    <shortdesc id="short"><ph id="shortdesc">用于配置 <xref keyref="Canvas"/> 对象的类。</ph></shortdesc>
    <refbody>
        <section id="prototype">
            <p outputclass="codeblock">
            <codeblock props="android" outputclass="language-java">public class CanvasConfig {
  public CanvasConfig() {
    mNativeHandle = nativeCreateCanvasConfig();
  }

  @Override
  protected void finalize() {
    destroy();
  }

  public long getNativeHandle() {
    return mNativeHandle;
  };

  public void setCropArea(Rect rect) throws RteException {
    nativeSetCropArea(mNativeHandle, rect);
  }

  public Rect getCropArea() throws RteException {
    return nativeGetCropArea(mNativeHandle);
  }

  private void destroy() {
    nativeReleaseCanvasConfig(mNativeHandle);
    mNativeHandle = 0;
  }

  private native long nativeCreateCanvasConfig();
  private native void nativeReleaseCanvasConfig(long handle);

  private native void nativeSetVideoRenderMode(long handle, int mode);
  private native int nativeGetVideoRenderMode(long handle);

  private native void nativeSetVideoMirrorMode(long handle, int mode);
  private native int nativeGetVideoMirrorMode(long handle);

  private native void nativeSetCropArea(long handle, Rect rect);
  private native Rect nativeGetCropArea(long handle);

  private long mNativeHandle = 0;
}</codeblock>
            <codeblock props="hmos" outputclass="language-arkts"/>
            <codeblock props="ios mac" outputclass="language-objectivec">@interface AgoraRteCanvasConfig : NSObject
@end</codeblock>
            <codeblock props="cpp unreal" outputclass="language-cpp">class CanvasConfig {</codeblock>
            <codeblock props="bp" outputclass="language-cpp"/>
            <codeblock props="electron" outputclass="language-typescript"/>
            <codeblock props="unity cs" outputclass="language-csharp"/>
            <codeblock props="rn" outputclass="language-typescript"/>
            <codeblock props="flutter" outputclass="language-dart"/> </p>
        </section>
        <section id="detailed_desc">
            <dl outputclass="since">
            <dlentry props="native">
                <dt>自从：</dt>
                <dd>自 v4.4.0 版本新增。</dd>
                </dlentry>
            </dl>
            <p>该类用于配置 <xref keyref="Canvas"/> 或 <codeph>AgoraRteCanvas</codeph> 对象的相关参数。</p>
            </section>
        <section id="parameters">
            <title><text conref="../conref/conref_api_metadata.dita#conref_api_metadata/property"/></title>
            <parml>
            <plentry props="android">
                <pt props="android">getNativeHandle</pt>
                <pd props="android">获取原生 <xref keyref="Canvas"/> 配置对象的句柄。</pd>
            </plentry>
            <plentry props="android">
                <pt props="android">setCropArea</pt>
                <pd props="android">设置裁剪区域。详见 <codeph>Rect</codeph>。</pd>
            </plentry>
            <plentry props="android">
                <pt props="android">getCropArea</pt>
                <pd props="android">获取当前设置的裁剪区域。详见 <codeph>Rect</codeph>。</pd>
            </plentry>
            </parml> </section>
            </refbody>
</reference>
