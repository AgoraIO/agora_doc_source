<?xml version='1.0' encoding='UTF-8'?>
<!DOCTYPE reference PUBLIC "-//OASIS//DTD DITA Reference//EN" "reference.dtd">
<reference id="api_irtcengine_createmediarecorder">
    <title><ph keyref="createMediaRecorder"/></title>
    <shortdesc id="short"><ph id="shortdesc">创建一个音视频录制对象。</ph></shortdesc>
    <prolog>
        <metadata>
            <keywords>
                <indexterm keyref="createMediaRecorder"/>
            </keywords>
        </metadata>
    </prolog>
    <refbody>
        <section id="prototype">
            <p outputclass="codeblock">
            <codeblock props="android" outputclass="language-java">public abstract AgoraMediaRecorder createMediaRecorder(RecorderStreamInfo info);</codeblock>
            <codeblock props="hmos" outputclass="language-arkts">public abstract createMediaRecorder(info: RecorderStreamInfo): AgoraMediaRecorder;</codeblock>
            <codeblock props="ios mac" outputclass="language-objectivec">- (AgoraMediaRecorder * _Nullable)createMediaRecorder:(AgoraRecorderStreamInfo * _Nonnull)info NS_SWIFT_NAME(createMediaRecorder(withInfo:));</codeblock>
            <codeblock props="cpp unreal" outputclass="language-cpp">virtual agora_refptr&lt;IMediaRecorder&gt; createMediaRecorder(const RecorderStreamInfo&amp; info) = 0;</codeblock>
         <codeblock props="bp" outputclass="language-cpp">UFUNCTION(BlueprintCallable, Category = "Agora|RtcEngineProxy")
	UIMediaRecorder* CreateMediaRecorder(FRecorderStreamInfo info);</codeblock>
            <codeblock props="electron" outputclass="language-typescript">abstract createMediaRecorder(info: RecorderStreamInfo): IMediaRecorder;</codeblock>
            <codeblock props="unity cs" outputclass="language-csharp"> public abstract IMediaRecorder CreateMediaRecorder(RecorderStreamInfo info);</codeblock>
            <codeblock props="rn" outputclass="language-typescript">abstract createMediaRecorder(info: RecorderStreamInfo): IMediaRecorder;</codeblock>
            <codeblock props="flutter" outputclass="language-dart"> Future&lt;MediaRecorder?&gt; createMediaRecorder(RecorderStreamInfo info);</codeblock> </p>
        </section>
        <section id="detailed_desc">
            <title>详情</title>
            <p>在开始录制音视频流之前，你需要调用此方法创建一个录制对象。SDK 支持录制来自本地或远端用户的多个音视频流。你可以多次调用此方法创建多个录制对象，并通过 <ph keyref="info"/> 参数指定要录制的频道名和用户 ID。成功创建后，你需要调用 <xref keyref="setMediaRecorderObserver"/> 为录制对象注册观察者以监听相关回调，然后调用 <xref keyref="startRecording"/> 开始录制。<parmname>info</parmname> 参数指定需要录制的频道名称和发流的用户 ID。</p>
            <p>成功创建后，你需要调用 <xref keyref="setMediaRecorderObserver"/> 注册录制对象的观测器来监听录制的相关回调，然后再调用 <xref keyref="startRecording"/> 开始录制。</p>
        </section>
        <section id="parameters">
            <title>参数</title>
            <parml>
            <plentry>
                <pt>info</pt>
                <pd props="bp cs electron flutter mac rn unity unreal">需要录制的音视频流相关信息，详见 <xref keyref="RecorderStreamInfo"/>。</pd>
            <pd props="android cpp">要录制的音视频流的信息。详见 <xref keyref="RecorderStreamInfo"/>。</pd>
                <pd props="ios">要录制的音视频流的信息，详见 <xref keyref="RecorderStreamInfo"/>。</pd>
                </plentry>
        </parml> </section>
        <section id="return_values" props="bp cs electron flutter native rn unity unreal">
            <title>返回值</title>
        <ul>
            <li props="apple bp cs electron flutter rn unity unreal">方法调用成功：返回一个 <xref keyref="IMediaRecorder"/> 对象。</li>
            <li props="hmos">方法调用成功：返回一个 <xref keyref="IMediaRecorder"/> 实例。</li>
            <li>方法调用失败：返回空指针。</li>
            </ul>
        <p props="apple">方法调用成功，返回 <xref keyref="IMediaRecorder"/> 对象，详见 <xref keyref="IMediaRecorder"/>。方法调用失败，返回 <codeph><ph keyref="NULL"/></codeph>。</p>
        <p props="cpp"><ul>
                        <li>方法调用成功，返回 <xref keyref="IMediaRecorder"/> 对象。详见 <xref keyref="IMediaRecorder"/>。</li>
                        <li>方法调用失败，返回 <codeph><ph keyref="NULL"/></codeph>。</li>
                        </ul>
                    </p>
        <p props="android">方法调用成功，返回 <xref keyref="IMediaRecorder"/> 实例。方法调用失败，返回 <codeph><ph keyref="NULL"/></codeph>。</p>
    </section>
    </refbody>
</reference>
