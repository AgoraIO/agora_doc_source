<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE reference PUBLIC "-//OASIS//DTD DITA Reference//EN" "reference.dtd">
<reference id="class_musiccacheinfo">
    <title><ph keyref="MusicCacheInfo"/></title>
    <shortdesc id="short"><ph id="shortdesc">缓存的音乐资源的相关信息。</ph></shortdesc>
    <refbody>
        <section id="prototype">
            <p outputclass="codeblock">
            <codeblock props="android" outputclass="language-java">public class MusicCacheInfo {
  public long songCode;
  public int status;

  public MusicCacheInfo() {}
}</codeblock>
            <codeblock props="ios mac" outputclass="language-objectivec">__attribute__((visibility("default"))) @interface AgoraMusicCacheInfo : NSObject

@property(nonatomic, assign) NSInteger songCode;
@property(nonatomic, assign) AgoraMusicCacheStatusType statusType;
@end</codeblock>
            <codeblock props="cpp unreal bp" outputclass="language-cpp">struct MusicCacheInfo {

    int64_t songCode;

    MUSIC_CACHE_STATUS_TYPE status;
    MusicCacheInfo():songCode(0), status(MUSIC_CACHE_STATUS_TYPE_CACHED) {}
};</codeblock>
            <codeblock props="electron" outputclass="language-typescript">export class MusicCacheInfo {
  songCode?: number;
  status?: MusicCacheStatusType;
}</codeblock>
            <codeblock props="unity cs" outputclass="language-csharp">public class MusicCacheInfo
    {
        public Int64 songCode;
        public MUSIC_CACHE_STATUS_TYPE status;
    };</codeblock>
            <codeblock props="rn" outputclass="language-typescript">export class MusicCacheInfo {
  songCode?: number;
  status?: MusicCacheStatusType;
}</codeblock>
            <codeblock props="flutter" outputclass="language-dart">@JsonSerializable(explicitToJson: true, includeIfNull: false)
class MusicCacheInfo {
  const MusicCacheInfo({this.songCode, this.status});

  @JsonKey(name: 'songCode')
  final int? songCode;

  @JsonKey(name: 'status')
  final MusicCacheStatusType? status;

  factory MusicCacheInfo.fromJson(Map&lt;String, dynamic> json) =>
      _$MusicCacheInfoFromJson(json);

  Map&lt;String, dynamic> toJson() => _$MusicCacheInfoToJson(this);
}</codeblock> </p>
        </section>
        <section id="detailed_desc">
            <dl outputclass="since">
            <dlentry props="native">
                <dt>自从</dt>
                <dd>v4.2.0</dd>
            </dlentry>
            </dl>
        </section>
        <section id="parameters">
            <title><text conref="../conref/conref_api_metadata.dita#conref_api_metadata/property"/></title>
            <parml>
            <plentry conkeyref="open_IMusicPlayer/code">
                <pt/>
                <pd/>
            </plentry>
             <plentry>
                 <pt props="android cpp framework">status</pt>
                 <pt props="apple">statusType</pt>
                 <pd><p props="cpp apple framework">音乐资源的缓存状态，详见 <xref keyref="MUSIC_CACHE_STATUS_TYPE"/>。</p>
                 <p props="android">音乐资源的缓存状态：
                 <ul><li><ph keyref="MUSIC_CACHE_STATUS_TYPE_CACHED"/> (0)：音乐资源已缓存。</li>
                 <li><ph keyref="MUSIC_CACHE_STATUS_TYPE_CACHING"/> (1)：音乐资源正在缓存。</li></ul></p></pd>
             </plentry>
            </parml> </section>
    </refbody>
</reference>
