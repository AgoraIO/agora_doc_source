<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE reference PUBLIC "-//OASIS//DTD DITA Reference//EN" "reference.dtd">
<reference id="api_imusiccontentcenter_destroymusicplayer">
    <title><ph keyref="destroyMusicPlayer"/></title>
    <shortdesc id="short"><ph id="shortdesc">销毁音乐播放器对象。</ph></shortdesc>
    <prolog>
        <metadata>
            <keywords>
                <indexterm keyref="destroyMusicPlayer"/>
            </keywords>
        </metadata>
    </prolog>
    <refbody>
        <section id="prototype">
            <p outputclass="codeblock">
            <codeblock props="android" outputclass="language-java">public abstract int destroyMusicPlayer(IAgoraMusicPlayer player);</codeblock>
            <codeblock props="ios mac" outputclass="language-objectivec">- (NSInteger)destroyMusicPlayer:(id&lt;AgoraMusicPlayerProtocol>)musicPlayer;</codeblock>
            <codeblock props="cpp unreal" outputclass="language-cpp">virtual int destroyMusicPlayer(agora_refptr&lt;IMusicPlayer> music_player) = 0;</codeblock>
            <codeblock props="bp" outputclass="language-cpp"></codeblock>
            <codeblock props="electron" outputclass="language-typescript">abstract destroyMusicPlayer(musicPlayer: IMusicPlayer): number;</codeblock>
            <codeblock props="unity cs" outputclass="language-csharp">public abstract int DestroyMusicPlayer(IMusicPlayer music_player);</codeblock>
            <codeblock props="rn" outputclass="language-typescript">abstract destroyMusicPlayer(musicPlayer: IMusicPlayer): number;</codeblock>
            <codeblock props="flutter" outputclass="language-dart">Future&lt;void&gt; destroyMusicPlayer(MusicPlayer musicPlayer);</codeblock> </p>
        </section>
        <section id="detailed_desc" deliveryTarget="details" otherprops="no-title">
            <dl outputclass="since">
            <dlentry props="android apple cpp">
                <dt>自从</dt>
                <dd>v4.4.0</dd>
            </dlentry>
            </dl>
            <p>当你不再需要使用音乐播放器时，你可以调用该方法来销毁音乐播放器对象。销毁之后如果需要重新使用音乐播放器，需要调用 <xref keyref="createMusicPlayer"/> 重新创建一个音乐播放器对象。</p>
        </section>
        <section id="timing" deliveryTarget="details">
            <title>调用时机</title>
            <p>该方法在加入频道前后均可调用，但请确保在 <apiname keyref="IRtcEngine"/> 的 <xref keyref="release"/> 方法前调用。</p>
        </section>
        <section id="restriction" deliveryTarget="details">
            <title>调用限制</title>
            <p>无。</p>
        </section>
        <section id="parameters" deliveryTarget="details">
            <title>参数</title>
            <parml>
            <plentry>
                <pt props="android">player</pt>
                <pt props="apple rn electron flutter">musicPlayer</pt>
                <pt props="cpp unreal unity cs bp">music_player</pt>
                <pd props="apple android framework"><xref keyref="IMusicPlayer"/> 对象。</pd>
                <pd props="cpp">指向 <xref keyref="IMusicPlayer"/> 对象的指针。</pd>
            </plentry>
            </parml> </section>
        <section id="return_values">
            <title><ph keyref="return-section-title"/></title>
            <p props="flutter">方法成功调用时，无返回值；方法调用失败时，会抛出 <xref keyref="AgoraRtcException"/> 异常，你需要捕获异常并进行处理。<ph props="cn">详见<xref keyref="error-code-link"/>了解详情和解决建议。</ph></p>
            <ul props="native unreal bp electron unity rn cs">
                <li>0: 方法调用成功。</li>
                <li>&lt; 0: 方法调用失败。<ph props="cn">详见<xref keyref="error-code-link"/>了解详情和解决建议。</ph></li>
                </ul> </section>
        </refbody>
</reference>
