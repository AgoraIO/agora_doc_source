<?xml version='1.0' encoding='UTF-8'?>
<!DOCTYPE reference PUBLIC "-//OASIS//DTD DITA Reference//EN" "reference.dtd">
<reference id="callback_irtcengineeventhandler_onuserjoined">
    <title> <ph keyref="onUserJoined"/> </title>
    <shortdesc id="short"> <ph id="shortdesc">远端用户或主播加入频道回调。</ph> </shortdesc>
    <refbody>
        <section id="prototype">
            <p outputclass="codeblock">
            <codeblock props="android" outputclass="language-java">public void onUserJoined(int uid, int elapsed)</codeblock>
            <codeblock props="hmos" outputclass="language-arkts">onUserJoined?:(uid:number, elapse:number) =&gt; void;</codeblock>
            <codeblock props="ios mac" outputclass="language-objectivec">- (void)rtcEngine:(AgoraRtcEngineKit * _Nonnull)engine didJoinedOfUid:(NSUInteger)uid elapsed:(NSInteger)elapsed NS_SWIFT_NAME(rtcEngine(_:didJoinedOfUid:elapsed:));</codeblock>
            <codeblock props="cpp unreal" outputclass="language-cpp">virtual void onUserJoined(uid_t uid, int elapsed)</codeblock>
         <codeblock props="bp" outputclass="language-cpp">UFUNCTION(BlueprintNativeEvent, Category = "Agora|Event")
	void OnUserJoined(int64 uid, int elapsed);</codeblock>
            <codeblock props="electron" outputclass="language-typescript">  onUserJoined?(
    connection: RtcConnection,
    remoteUid: number,
    elapsed: number
  ): void;</codeblock>
            <codeblock props="unity cs" outputclass="language-csharp">public virtual void OnUserJoined(RtcConnection connection, uint remoteUid, int elapsed) {}</codeblock>
            <codeblock props="rn" outputclass="language-typescript">  onUserJoined?(
    connection: RtcConnection,
    remoteUid: number,
    elapsed: number
  ): void;</codeblock>
            <codeblock props="flutter" outputclass="language-dart">final void Function(RtcConnection connection, int remoteUid, int elapsed)?
      onUserJoined;</codeblock>
            <codeblock props="reserve" outputclass="language-cpp"/></p>
        </section>
        <section id="detailed_desc" deliveryTarget="details" otherprops="no-title">
            <ul id="detailed_desc_scene">
            <li>通信场景下，该回调提示有远端用户加入了频道。如果加入之前已经有其他用户在频道中，新加入的用户也会收到这些已有用户加入频道的回调。</li>
            <li>直播场景下，该回调提示有主播加入了频道。如果加入之前，已经有主播在频道中了，新加入的用户也会收到已有主播加入频道的回调。建议连麦主播不超过 32 人（其中视频连麦主播不超过 17 人）。</li>
            </ul>

        </section>
        <section id="timing" deliveryTarget="details">
            <title>触发时机</title>
            <p>SDK 在以下任一情况下触发该回调：
                    <ul>
                        <li>远端用户或主播加入频道。</li>
                        <li>远端用户加入频道后切换为主播角色。</li>
                        <li>远端用户或主播因网络中断后重新加入频道。</li>
                        </ul>
                    </p>
        </section>
        <section id="restriction" deliveryTarget="details">
            <title>使用限制</title>
            <p>无。</p>
        </section>
        <section id="parameters" deliveryTarget="details">
            <title> <ph keyref="callback-section-title"/> </title>
            <parml>
            <plentry conkeyref="onJoinChannelSuccess/engine" props="apple">
                <pt/>
                <pd/>
            </plentry>
            <plentry props="framework">
                <pt>connection</pt>
                <pd>Connection 信息。详见 <xref keyref="RtcConnection"/>。</pd>
            </plentry>
            <plentry id="uid">
                <pt props="bp native unreal">uid</pt>
                <pt props="cs electron flutter rn unity">remoteUid</pt>
                <pd>新加入频道的远端用户/主播 ID。</pd>
            </plentry>
            <plentry>
                <pt>elapsed</pt>
                <pd props="bp cs electron flutter mac rn unity unreal"><ph props="electron flutter rn">从本地用户调用 <apiname keyref="joinChannel2"/> 到该回调触发的延迟（毫秒）。</ph>
                <ph props="bp cs native unity unreal">从本地用户调用 <apiname keyref="joinChannel1"/> 或 <apiname keyref="joinChannel2"/> 到该回调触发的延迟（毫秒）。</ph>
                    </pd>
            <pd props="android">从本地用户调用 <codeph>joinChannel</codeph> 到该回调被触发的延迟（毫秒）。</pd>
                <pd props="ios">从你调用 <xref keyref="joinChannel1"/> 或 <xref keyref="joinChannel2"/> 到该回调被触发的延迟（毫秒）。</pd>
                <pd props="cpp">从本地用户调用 <codeph>joinChannel</codeph> 到该回调被触发的延迟时间（毫秒）。</pd>
                </plentry>
            <plentry props="android cpp ios">
                <pt props="android cpp ios">uid</pt>
                <pd props="android">加入频道的远端用户 ID。</pd>
                <pd props="ios">加入频道的远端用户或主播的用户 ID。</pd>
                <pd props="cpp">加入频道的用户 ID。</pd>
            </plentry>
            <plentry props="ios">
                <pt props="ios">engine</pt>
                <pd props="ios"><xref keyref="IRtcEngine"/> 对象。详见 <xref keyref="IRtcEngine"/>。</pd>
            </plentry>
        </parml> </section>
    </refbody>
</reference>
