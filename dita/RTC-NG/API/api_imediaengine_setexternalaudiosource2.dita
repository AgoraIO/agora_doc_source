<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE reference PUBLIC "-//OASIS//DTD DITA Reference//EN" "reference.dtd">
<reference id="api_imediaengine_setexternalaudiosource2">
    <title><ph keyref="setExternalAudioSource2"/></title>
    <shortdesc id="short"><ph id="shortdesc">设置外部音频采集参数。</ph></shortdesc>
    <prolog>
        <metadata>
            <keywords>
                <indexterm keyref="setExternalAudioSource2"/>
            </keywords>
        </metadata>
    </prolog>
    <refbody>
        <section id="prototype">
            <p outputclass="codeblock">
            <codeblock props="android" outputclass="language-java">public abstract int setExternalAudioSource(boolean enabled, int sampleRate, int channels, boolean localPlayback, boolean publish);</codeblock>
            <codeblock props="hmos" outputclass="language-arkts"></codeblock>
            <codeblock props="ios mac" outputclass="language-objectivec">- (int)setExternalAudioSource:(BOOL)enabled
                   sampleRate:(NSInteger)sampleRate
                     channels:(NSInteger)channels
                localPlayback:(BOOL)localPlayback
                      publish:(BOOL)publish;</codeblock>
            <codeblock props="cpp unreal" outputclass="language-cpp">virtual int setExternalAudioSource(bool enabled,
                                   int sampleRate,
                                   int channels,
                                   bool localPlayback = false,
                                   bool publish = true) = 0;</codeblock>
            <codeblock props="electron" outputclass="language-typescript">abstract setExternalAudioSource(
    enabled: boolean,
    sampleRate: number,
    channels: number,
    localPlayback?: boolean,
    publish?: boolean
  ): number;</codeblock>
            <codeblock props="unity cs" outputclass="language-csharp">public abstract int SetExternalAudioSource(bool enabled, int sampleRate, int channels, bool localPlayback = false, bool publish = true);</codeblock>
            <codeblock props="rn" outputclass="language-typescript">abstract setExternalAudioSource(
    enabled: boolean,
    sampleRate: number,
    channels: number,
    localPlayback?: boolean,
    publish?: boolean
  ): number;</codeblock>
            <codeblock props="flutter" outputclass="language-dart">Future&lt;void> setExternalAudioSource(
    {required bool enabled,
    required int sampleRate,
    required int channels,
    bool localPlayback = false,
    bool publish = true});</codeblock>
            <codeblock props="reserve" outputclass="language-cpp"/></p>
        </section>
        <section id="detailed_desc" deliveryTarget="details" otherprops="no-title">
            <dl outputclass="deprecated">
            <dlentry>
                <dt>弃用：</dt>
                <dd>该方法已废弃，请改用 <xref keyref="createCustomAudioTrack" />。</dd>
            </dlentry>
            </dl>
        </section>
        <section id="timing" deliveryTarget="details">
            <title>调用时机</title>
            <p>该方法需要在加入频道前调用。</p>
        </section>        
        <section id="restriction" deliveryTarget="details">
            <title>调用限制</title>
            <p>无。</p>
        </section>
        <section id="parameters" deliveryTarget="details">
            <title>参数</title>
            <parml>
            <plentry id="enabled">
                <pt>enabled</pt>
                <pd>是否开启使用外部音频源的功能：
                    <ul>
                    <li><codeph><ph keyref="true"/></codeph>：开启外部音频源。</li>
                    <li><codeph><ph keyref="false"/></codeph>：（默认）关闭外部音频源。</li>
                    </ul>
                </pd>
            </plentry>
            <plentry id="samplerate">
                <pt>sampleRate</pt>
                <pd>外部音频源的采样率 (Hz)，可设置为 <codeph>8000</codeph>，<codeph>16000</codeph>，<codeph>32000</codeph>，<codeph>44100</codeph> 或 <codeph>48000</codeph>。</pd>
            </plentry>
            <plentry id="channels">
                <pt>channels</pt>
                <pd>外部音频源的声道数，可设置为 <codeph>1</codeph>（单声道）或 <codeph>2</codeph>（双声道）。</pd>
            </plentry>
            <plentry>
                <pt>localPlayback</pt>
                <pd id="localplayback">是否在本地播放外部音频源：
                    <ul>
                    <li><codeph><ph keyref="true"/></codeph>：在本地播放。</li>
                    <li><codeph><ph keyref="false"/></codeph>：（默认）不在本地播放。</li>
                    </ul>
                </pd>
            </plentry>
            <plentry>
                <pt>publish</pt>
                <pd>是否将音频发布到远端：
                    <ul>
                    <li><codeph><ph keyref="true"/></codeph>：（默认）发布到远端。</li>
                    <li><codeph><ph keyref="false"/></codeph>：不发布到远端。</li>
                    </ul>
                </pd>
            </plentry>
            </parml> </section>
        <section id="return_values">
            <title><ph keyref="return-section-title"/></title>
            <p props="flutter">方法成功调用时，无返回值；方法调用失败时，会抛出 <xref keyref="AgoraRtcException"/> 异常，你需要捕获异常并进行处理。<ph props="cn">详见<xref keyref="error-code-link"/>了解详情和解决建议。</ph></p>
            <ul id="ul_cff_fnf_3qb">
            <li props="native unreal bp electron unity rn cs">0：方法调用成功。</li>
            <li>&lt; 0: 方法调用失败。<ph props="cn">详见<xref keyref="error-code-link"/>了解详情和解决建议。</ph></li>
            </ul> </section>
    </refbody>
</reference>
