<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE reference PUBLIC "-//OASIS//DTD DITA Reference//EN" "reference.dtd">
<reference id="callback_irtcengineeventhandler_onfirstremotevideoframe">
     <title> <ph keyref="onFirstRemoteVideoFrame" /> </title>
     <shortdesc id="short"><ph id="shortdesc">渲染器已接收首帧远端视频回调。</ph></shortdesc>
     <prolog>
          <metadata>
               <keywords>
                    <indexterm keyref="onFirstRemoteVideoFrame" />
               </keywords>
          </metadata>
     </prolog>
     <refbody>
          <section id="prototype">
               <p outputclass="codeblock">
               <codeblock props="android" outputclass="language-java">public void onFirstRemoteVideoFrame(int uid, int width, int height, int elapsed) {}</codeblock>
               <codeblock props="hmos" outputclass="language-arkts">onFirstRemoteVideoFrame?:(uid:number,width:number,height:number,elapsed:number) =&gt;void;</codeblock>
            <codeblock props="ios mac" outputclass="language-objectivec">- (void)rtcEngine:(AgoraRtcEngineKit * _Nonnull)engine
         firstRemoteVideoFrameOfUid:(NSUInteger)uid size:(CGSize)size elapsed:(NSInteger)elapsed;</codeblock>
               <codeblock props="cpp unreal" outputclass="language-cpp">virtual void onFirstRemoteVideoFrame(uid_t userId, int width, int height, int elapsed) {
                    (void)userId;
                    (void)width;
                    (void)height;
                    (void)elapsed;
                    }</codeblock>
         <codeblock props="bp" outputclass="language-cpp">UFUNCTION(BlueprintNativeEvent, Category = &quot;Agora|Event&quot;)
	void OnFirstRemoteVideoFrame(int64 uid, int width, int height, int elapsed);</codeblock>
               <codeblock props="electron" outputclass="language-typescript">  onFirstRemoteVideoFrame?(
    connection: RtcConnection,
    remoteUid: number,
    width: number,
    height: number,
    elapsed: number
  ): void;</codeblock>
               <codeblock props="unity cs" outputclass="language-csharp">public virtual void OnFirstRemoteVideoFrame(RtcConnection connection, uint remoteUid, int width, int height, int elapsed) {}</codeblock>
               <codeblock props="rn" outputclass="language-typescript">  onFirstRemoteVideoFrame?(
    connection: RtcConnection,
    remoteUid: number,
    width: number,
    height: number,
    elapsed: number
  ): void;</codeblock>
               <codeblock props="flutter" outputclass="language-dart">final void Function(RtcConnection connection, int remoteUid, int width,
      int height, int elapsed)? onFirstRemoteVideoFrame;</codeblock>
            <codeblock props="reserve" outputclass="language-cpp"></codeblock></p>
          </section>
          <section id="detailed_desc">
               <note type="attention">该回调只在 SDK 渲染时才会触发；如果用户采用自定义视频渲染则不会触发，客户需要通过 SDK 以外的方法自行实现。</note>
           </section>   
          <section id="parameters">
               <title><ph keyref="callback-section-title" /></title>
               <parml>
               <plentry conkeyref="onJoinChannelSuccess/engine" props="ios mac">
                    <pt />
                    <pd />
               </plentry>
               <plentry>
                    <pt props="ios mac android hmos flutter">uid</pt>
                    <pt props="electron rn flutter unity cs">remoteUid</pt>
                    <pt props="cpp unreal bp">userId</pt>
                    <pd>用户 ID，指定是哪个用户的视频流。</pd>
               </plentry>
               <plentry props="ios mac">
                    <pt>size</pt>
                    <pd>视频流尺寸。</pd>
               </plentry>
               <plentry props="unity electron rn flutter cs">
                    <pt>connection</pt>
                    <pd>Connection 信息。详见 <xref keyref="RtcConnection" />。</pd>
               </plentry>
               <plentry props="android hmos cpp unreal bp unity electron rn flutter cs">
                    <pt>width</pt>
                    <pd>视频流宽（px）。</pd>
               </plentry>
               <plentry props="android hmos cpp unreal bp unity electron rn flutter cs">
                    <pt>height</pt>
                    <pd>视频流高（px）。</pd>
               </plentry>
               <plentry>
                    <pt>elapsed</pt>
                    <pd> 从本地调用 <ph props="native unreal unity cs"><apiname keyref="joinChannel1" /> 或 </ph><apiname keyref="joinChannel2" /> 到发生此事件过去的时间（毫秒）。</pd>
               </plentry>
               </parml> </section>
     </refbody>
</reference>