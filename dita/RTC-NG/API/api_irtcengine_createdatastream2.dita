<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE reference PUBLIC "-//OASIS//DTD DITA Reference//EN" "reference.dtd">
<reference id="api_irtcengine_createdatastream2">
    <title><ph keyref="createDataStream2" /></title>
    <shortdesc id="short"><ph id="shortdesc">创建数据流。</ph></shortdesc>
    <prolog>
        <metadata>
            <keywords>
                <indexterm keyref="createDataStream2" />
            </keywords>
        </metadata>
    </prolog>
    <refbody>
        <section id="prototype">
            <p outputclass="codeblock">
            <codeblock props="android" outputclass="language-java">public abstract int createDataStream(DataStreamConfig config);</codeblock>
            <codeblock props="hmos" outputclass="language-arkts">public abstract createDataStream(config: DataStreamConfig): number;</codeblock>
            <codeblock props="ios mac" outputclass="language-objectivec">- (int)createDataStream:(NSInteger * _Nonnull)streamId
                  config:(AgoraDataStreamConfig * _Nonnull)config;</codeblock>
            <codeblock props="cpp unreal" outputclass="language-cpp">virtual int createDataStream(int* streamId, DataStreamConfig&amp; config) = 0;</codeblock>
            <codeblock props="bp" outputclass="language-cpp">UFUNCTION(BlueprintCallable, Category = &quot;Agora|IRtcEngine&quot;)
	int CreateDataStream(int&amp; streamId, const FDataStreamConfig&amp; config);</codeblock>
            <codeblock props="electron" outputclass="language-typescript">abstract createDataStream(config: DataStreamConfig): number;</codeblock>
            <codeblock props="unity cs" outputclass="language-csharp">public abstract int CreateDataStream(ref int streamId, DataStreamConfig config);</codeblock>
            <codeblock props="rn" outputclass="language-typescript">abstract createDataStream(config: DataStreamConfig): number;</codeblock>
            <codeblock props="flutter" outputclass="language-dart">Future&lt;int&gt; createDataStream(DataStreamConfig config);</codeblock>
            <codeblock props="reserve" outputclass="language-cpp"></codeblock></p>
        </section>
        <section id="detailed_desc" deliveryTarget="details" otherprops="no-title">
            <p props="android cpp apple unreal unity cs">相比 <xref keyref="createDataStream1" />，本方法不保证数据传输的可靠性。接收方会丢弃超出发送时间 5 秒后的数据包。</p>
        </section>
        <section id="timing" deliveryTarget="details">
            <title>调用时机</title>
            <p>该方法在加入频道前后均可调用。</p>
        </section>
        <section id="restriction" deliveryTarget="details">
            <title>调用限制</title>
            <p>在 <xref keyref="IRtcEngine" /> 生命周期内，每个用户最多只能创建 5 个数据流。离开频道时数据流会被销毁，如需使用需要重新创建数据流。</p>
        </section>
        <section id="parameters" deliveryTarget="details">
            <title>参数</title>
            <parml>
            <plentry props="cpp unreal bp ios mac unity cs" id="streamId">
                <pt>streamId</pt>
                <pd>输出参数，创建好的数据流 ID。</pd>
            </plentry>
            <plentry id="config">
                <pt>config</pt>
                <pd>数据流设置。详见 <xref keyref="DataStreamConfig" />。</pd>
            </plentry>
            </parml> </section>
        <section id="return_values">
            <title><ph keyref="return-section-title"/></title>
            <ul>
            <li props="cpp unreal bp ios mac unity cs">0: 创建数据流成功。</li>
            <li props="android hmos electron flutter rn">创建的数据流的 ID：方法调用成功。</li>
            <li>&lt; 0：方法调用失败。<ph props="cn">详见<xref keyref="error-code-link"/>了解详情和解决建议。</ph></li>
            </ul></section>
        </refbody>
</reference>