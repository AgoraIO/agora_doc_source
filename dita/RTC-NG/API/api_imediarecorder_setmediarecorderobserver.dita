<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE reference PUBLIC "-//OASIS//DTD DITA Reference//EN" "reference.dtd">
<reference id="api_imediarecorder_setmediarecorderobserver">
    <title><ph keyref="setMediaRecorderObserver" /></title>
    <shortdesc id="short"><ph id="shortdesc">注册 <xref keyref="IMediaRecorderObserver" /> 对象。</ph></shortdesc>
    <prolog>
        <metadata>
            <keywords>
                <indexterm keyref="setMediaRecorderObserver" />
            </keywords>
        </metadata>
    </prolog>
    <refbody>
        <section id="prototype">
            <p outputclass="codeblock">
            <codeblock props="android" outputclass="language-java">public int setMediaRecorderObserver(RtcConnection connection, IMediaRecorderCallback callback)</codeblock>
            <codeblock props="ios mac" outputclass="language-objectivec">- (int)setMediaRecorderDelegate:(AgoraRtcConnection * _Nonnull)connection
                       delegate:(id&lt;AgoraMediaRecorderDelegate&gt; _Nullable)delegate;</codeblock>
            <codeblock props="cpp" outputclass="language-cpp">virtual int setMediaRecorderObserver(const RtcConnection&amp; connection, media::IMediaRecorderObserver* callback) = 0;</codeblock>
            <codeblock props="cs" outputclass="language-csharp" />
            <codeblock props="electron" outputclass="language-typescript">abstract setMediaRecorderObserver(
    connection: RtcConnection,
    callback: IMediaRecorderObserver
  ): number;</codeblock>
            <codeblock props="unity" outputclass="language-csharp">public abstract int SetMediaRecorderObserver(RtcConnection connection, IMediaRecorderObserver callback);</codeblock>
            <codeblock props="rn" outputclass="language-typescript">abstract setMediaRecorderObserver(
    connection: RtcConnection,
    callback: IMediaRecorderObserver
  ): number;</codeblock>
            <codeblock props="flutter" outputclass="language-dart">Future&lt;void> setMediaRecorderObserver(
      {required RtcConnection connection,
      required MediaRecorderObserver callback});</codeblock>
            <codeblock props="reserve" outputclass="language-cpp"></codeblock></p>
        </section>
        <section id="detailed_desc">
            <title>详情</title>
            <p>该方法需要在初始化 <xref keyref="IRtcEngine" /> 对象后调用。</p>
        </section>
        <section id="parameters">
            <title>参数</title>
            <parml>
            <plentry conkeyref="joinChannelEx/connection">
                <pt />
                <pd />
            </plentry>
            <plentry>
                <pt>callback</pt>
                <pd>本地音视频流录制回调，详见 <xref keyref="IMediaRecorderObserver" />。</pd>
            </plentry>
            </parml> </section>
        <section id="return_values">
            <title><ph keyref="return-section-title"/></title>
            <p props="flutter">方法成功调用时，无返回值；方法调用失败时，会抛出 <xref keyref="AgoraRtcException"/> 异常，你需要捕获异常并进行处理。</p>
            <ul>
            <li props="native rn electron unity">0: 方法调用成功。</li>
            <li>&lt; 0: 方法调用失败。</li>
            </ul> </section>
    </refbody>
</reference>