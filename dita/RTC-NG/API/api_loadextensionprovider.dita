<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE reference PUBLIC "-//OASIS//DTD DITA Reference//EN" "reference.dtd">
<reference id="api_loadextensionprovider">
    <title><ph keyref="loadExtensionProvider"/></title>
    <shortdesc id="short"><ph id="shortdesc">将插件添加到 SDK 中。</ph></shortdesc>
    <prolog>
        <metadata>
            <keywords>
                <indexterm keyref="loadExtensionProvider"/>
            </keywords>
        </metadata>
    </prolog>
    <refbody>
        <section id="prototype">
            
            <p outputclass="codeblock">
            <codeblock props="android" outputclass="language-java"/>
            <codeblock props="ios mac" outputclass="language-objectivec"/>
            <codeblock props="cpp" outputclass="language-cpp">virtual int loadExtensionProvider(const char* extension_lib_path) = 0;
</codeblock>
            <codeblock props="electron" outputclass="language-typescript"/>
            <codeblock props="unity" outputclass="language-csharp">public abstract int LoadExtensionProvider(string extension_lib_path);</codeblock>
            <codeblock props="rn" outputclass="language-typescript"/>
            <codeblock props="flutter" outputclass="language-dart"/> </p>
        </section>
        <section id="parameters">
            <title>参数</title>
            <parml>
            <plentry>
                <pt>extension_lib_path</pt>
                <pd>插件的动态库路径和名称。例如：<codeph>/library/libagora_segmentation_extension.dll</codeph>。</pd>
            </plentry>
            </parml> </section>
        <section id="return_values">
            <title>返回值</title>
            <ul>
            <li>0: 方法调用成功。</li>
            <li>&lt; 0: 方法调用失败。</li>
            </ul> </section>
    </refbody>
</reference>
