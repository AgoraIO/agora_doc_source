<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE reference PUBLIC "-//OASIS//DTD DITA Reference//EN" "reference.dtd">
<reference id="rtc_lite_api">
<title>Lite SDK API 列表</title>
<shortdesc id="short"><ph id="shortdesc">本页列出 Lite SDK 支持的 API 列表。</ph></shortdesc>
<refbody>
    <section><note type="attention">如果在本页中无法查询到你要使用的 API，则代表 Lite SDK 不支持该 API，调用该 API 时会返回错误码 -2。</note></section>
    <section>
        <title><apiname keyref="IRtcEngine"/></title>
        <ul>
            <li props="android electron flutter rn unity"><xref keyref="addHandler"/></li>
            <li><xref keyref="adjustAudioMixingPlayoutVolume"/></li>
            <li><xref keyref="adjustAudioMixingPublishVolume"/></li>
            <li><xref keyref="adjustAudioMixingVolume"/></li>
            <li><xref keyref="adjustCustomAudioPlayoutVolume"/></li>
            <li><xref keyref="adjustCustomAudioPublishVolume"/></li>
            <li props="mac cpp unreal bp unity electron flutter"><xref keyref="adjustLoopbackSignalVolume"/></li>
            <li><xref keyref="adjustPlaybackSignalVolume"/></li>
            <li><xref keyref="adjustRecordingSignalVolume"/></li>
            <li><xref keyref="adjustUserPlaybackSignalVolume"/></li>
            <li><xref keyref="complain"/></li>
            <li props="ios cpp unreal bp android unity rn flutter"><xref keyref="configRhythmPlayer"/></li>
            <li props="android"><xref keyref="create"/></li>
            <li props="cpp unreal unity rn flutter cs electron"><xref keyref="createAgoraRtcEngine"/></li>
            <li props="android apple"><xref keyref="createCustomAudioTrack"/></li>
            <li><xref keyref="createCustomVideoTrack"/></li>
            <li props="native unreal unity"><xref keyref="createDataStream1"/></li>
            <li><xref keyref="createDataStream2"/></li>
            <li><xref keyref="createMediaPlayer"/></li>
            <li><xref keyref="createMediaRecorder"/></li>
            <li props="apple"><xref keyref="delegate"/></li>
            <li props="android apple"><xref keyref="destroyCustomAudioTrack"/></li>
            <li><xref keyref="destroyCustomVideoTrack"/></li>
            <li props="apple cpp framework"><xref keyref="destroyMediaPlayer"/></li>
            <li props="electron"><xref keyref="destroyRendererByConfig"/></li>
            <li props="electron"><xref keyref="destroyRendererByView"/></li>
            <li><xref keyref="disableAudio"/></li>
            <li><xref keyref="disableAudioSpectrumMonitor"/></li>
            <li><xref keyref="disableVideo"/></li>
            <li><xref keyref="enableAudio"/></li>
            <li><xref keyref="enableAudioSpectrumMonitor"/></li>
            <li><xref keyref="enableAudioVolumeIndication"/></li>
            <li><xref keyref="enableContentInspect"/></li>
            <li><xref keyref="enableCustomAudioLocalPlayback"/></li>
            <li props="native unreal unity"><xref keyref="enableDualStreamMode"/></li>
            <li><xref keyref="enableDualStreamMode3"/></li>
            <li props="hide"><xref keyref="enableEchoCancellationExternal"/></li>
            <li><xref keyref="enableEncryption"/></li>
            <li><xref keyref="enableExtension"/></li>
            <li props="cpp unreal bp ios android unity rn flutter"><xref keyref="enableFaceDetection"/></li>
            <li props="android ios mac"><xref keyref="enableInEarMonitoring"/></li>
            <li><xref keyref="enableInEarMonitoring2"/></li>
            <li><xref keyref="enableInstantMediaRendering"/></li>
            <li><xref keyref="enableLocalAudio"/></li>
            <li><xref keyref="enableLocalVideo"/></li>
            <li props="mac cpp unreal bp unity electron flutter"><xref keyref="enableLoopbackRecording"/></li>
            <li props="apple"><xref keyref="enableMainQueueDispatch"/></li>
            <li props="cpp ios unreal bp unity rn flutter"><xref keyref="enableMultiCamera"/></li>
            <li props="cpp apple framework"><xref keyref="enableCameraCenterStage"/></li>
            <li><xref keyref="enableSoundPositionIndication"/></li>
            <li><xref keyref="enableVideo"/></li>
            <li><xref keyref="enableVideoImageSource"/></li>
            <li><xref keyref="enableVoiceAITuner"/></li>
            <li><xref keyref="enableWebSdkInteroperability"/></li>
            <li props="mac"><xref keyref="enumerateDevices"/></li>
            <li props="mac"><xref keyref="followSystemPlaybackDevice"/></li>
            <li props="mac"><xref keyref="followSystemRecordingDevice"/></li>
            <li props="android cpp unity rn flutter cs unreal bp"><xref keyref="getAudioDeviceInfo"/></li>
            <li props="electron unity flutter"><xref keyref="getAudioDeviceManager"/></li>
            <li props="android"><xref keyref="getAudioEffectManager"/></li>
            <li><xref keyref="getAudioMixingCurrentPosition"/></li>
            <li><xref keyref="getAudioMixingDuration"/></li>
            <li><xref keyref="getAudioMixingPlayoutVolume"/></li>
            <li><xref keyref="getAudioMixingPublishVolume"/></li>
            <li><xref keyref="getAudioTrackCount"/></li>
            <li><xref keyref="getCallId"/></li>
            <li props="android ios cpp unreal bp unity rn flutter"><xref keyref="getCameraMaxZoomFactor"/></li>
            <li><xref keyref="getConnectionState"/></li>
            <li><xref keyref="getCurrentMonotonicTimeInMs"/></li>
            <li props="mac"><xref keyref="getDeviceInfo"/></li>
            <li props="mac"><xref keyref="getDeviceVolume"/></li>
            <li><xref keyref="getEffectCurrentPosition"/></li>
            <li><xref keyref="getEffectDuration"/></li>
            <li><xref keyref="getEffectsVolume"/></li>
            <li><xref keyref="getErrorDescription"/></li>
            <li props="android apple"><xref keyref="getExtensionProperty"/></li>
            <li><xref keyref="getExtensionProperty2"/></li>
            <li props="flutter electron rn unity"><xref keyref="getLocalSpatialAudioEngine"/></li>
            <li props="android apple unity electron flutter rn"><xref keyref="getNativeHandle"/></li>
            <li><xref keyref="getNetworkType"/></li>
            <li><xref keyref="getNtpWallTimeInMs"/></li>
            <li props="mac cpp unreal bp electron unity"><xref keyref="getScreenCaptureSources"/></li>
            <li><xref keyref="getUserInfoByUid"/></li>
            <li><xref keyref="getUserInfoByUserAccount"/></li>
            <li><xref keyref="getVersion"/></li>
            <li props="electron unity flutter"><xref keyref="getVideoDeviceManager"/></li>
            <li><xref keyref="getVolumeOfEffect"/></li>
            <li><xref keyref="initialize"/></li>
            <li props="ios cpp unreal bp unity rn flutter"><xref keyref="isCameraAutoExposureFaceModeSupported"/></li>
            <li props="android ios cpp unreal bp flutter unity rn"><xref keyref="isCameraAutoFocusFaceModeSupported"/></li>
            <li props="android ios cpp unreal bp flutter unity rn"><xref keyref="isCameraExposurePositionSupported"/></li>
            <li props="android ios cpp flutter unity rn"><xref keyref="isCameraExposureSupported"/></li>
            <li props="android cpp unreal bp flutter unity rn"><xref keyref="isCameraFaceDetectSupported"/></li>
            <li props="android ios cpp unreal bp flutter unity rn"><xref keyref="isCameraFocusSupported"/></li>
            <li props="android ios cpp unreal bp flutter unity rn"><xref keyref="isCameraTorchSupported"/></li>
            <li props="android ios cpp unreal bp flutter unity rn"><xref keyref="isCameraZoomSupported"/></li>
            <li props="native electron rn flutter unity"><xref keyref="isFeatureAvailableOnDevice"/></li>
            <li props="android ios cpp unreal bp flutter rn unity"><xref keyref="isSpeakerphoneEnabled"/></li>
            <li props="cpp apple framework"><xref keyref="isCameraCenterStageSupported"/></li>
            <li props="android"><xref keyref="isTextureEncodeSupported"/></li>
            <li props="native unreal unity"><xref keyref="joinChannel1"/></li>
            <li>在 <xref keyref="joinChannel2"/> 中，以下跟屏幕采集相关的参数设置无效：
                <ul>
                    <li><parmname>publishScreenCaptureVideo</parmname></li>
                    <li><parmname>publishScreenCaptureAudio</parmname></li>
                </ul></li>
            <li props="native unreal unity"><xref keyref="joinChannelWithUserAccount1"/></li>
            <li>在 <xref keyref="joinChannelWithUserAccount2"/> 中，以下跟屏幕采集相关的参数设置无效：
                <ul>
                    <li><parmname>publishScreenCaptureVideo</parmname></li>
                    <li><parmname>publishScreenCaptureAudio</parmname></li>
                </ul></li>
            <li props="native unreal unity"><xref keyref="leaveChannel"/></li>
            <li><xref keyref="leaveChannel2"/></li>
            <li props="cpp framework"><xref keyref="loadExtensionProvider"/></li>
            <li props="mac"><xref keyref="monitorDeviceChange"/></li>
            <li><xref keyref="muteAllRemoteAudioStreams"/></li>
            <li><xref keyref="muteAllRemoteVideoStreams"/></li>
            <li><xref keyref="muteLocalAudioStream"/></li>
            <li><xref keyref="muteLocalVideoStream"/></li>
            <li props="android cpp framework mac"><xref keyref="muteRecordingSignal"/></li>
            <li><xref keyref="muteRemoteAudioStream"/></li>
            <li><xref keyref="muteRemoteVideoStream"/></li>
            <li><xref keyref="pauseAllChannelMediaRelay"/></li>
            <li><xref keyref="pauseAllEffects"/></li>
            <li><xref keyref="pauseAudioMixing"/></li>
            <li><xref keyref="pauseEffect"/></li>
            <li props="cpp framework"><xref keyref="playAllEffects"/></li>
            <li props="apple"><xref keyref="playEffect1"/></li>
            <li props="apple android"><xref keyref="playEffect2"/></li>
            <li><xref keyref="playEffect3"/></li>
            <li props="native flutter unity cs electron rn"><xref keyref="preloadChannel"/></li>
            <li props="native flutter unity cs electron rn"><xref keyref="preloadChannelWithUserAccount"/></li>
            <li><xref keyref="preloadEffect"/></li>
            <li props="android apple"><xref keyref="pullAudioFrame"/></li>
            <li props="unity"><xref keyref="pullAudioFrame"/></li>
            <li props="android"><xref keyref="pullAudioFrame2"/></li>
            <li props="apple"><xref keyref="pullPlaybackAudioFrameSampleBufferByLengthInByte"/></li>
            <li props="unity"><xref keyref="pushAudioFrame"/></li>
            <li props="hide"><xref keyref="pushAudioFrame1"/></li>
            <li props="android apple"><xref keyref="pushAudioFrame2"/></li>
            <li props="android ios mac"><xref keyref="pushAudioFrame2"/></li>
            <li props="hide"><xref keyref="pushCaptureAudioFrame1"/></li>
            <li props="apple"><xref keyref="pushExternalAudioFrameSampleBuffer1"/></li>
            <li props="apple"><xref keyref="pushExternalAudioFrameSampleBuffer2"/></li>
            <li props="hide"><xref keyref="pushReverseAudioFrame1"/></li>
            <li props="android apple"><xref keyref="pushVideoFrame"/></li>
            <li props="android"><xref keyref="pushVideoFrame3"/></li>
            <li props="android apple"><xref keyref="pushVideoFrame2"/></li>
            <li props="android"><xref keyref="pushVideoFrame4"/></li>
            <li props="cpp unreal bp"><xref keyref="queryInterface"/></li>
            <li props="android ios cpp unreal bp flutter unity rn"><xref keyref="queryCameraFocalLengthCapability"/></li>
            <li><xref keyref="queryCodecCapability"/></li>
            <li><xref keyref="queryDeviceScore"/></li>
            <li props="cpp unreal bp"><xref keyref="queryInterface"/></li>
            <li><xref keyref="rate"/></li>
            <li>在 <xref keyref="registerAudioEncodedFrameObserver"/> 中，<parmname>config</parmname> 中的 <parmname>encodingType</parmname> 仅支持 OPUS 编码格式。</li>
            <li props="android apple"><xref keyref="registerAudioFrameObserver"/></li>
            <li props="unity"><xref keyref="registerAudioFrameObserver"/></li>
            <li><xref keyref="registerAudioSpectrumObserver"/></li>
            <li><xref keyref="registerExtension"/></li>
            <li><xref keyref="registerLocalUserAccount"/></li>
            <li><xref keyref="registerMediaMetadataObserver"/></li>
            <li props="cpp unreal bp"><xref keyref="registerPacketObserver"/></li>
            <li props="android apple"><xref keyref="registerVideoEncodedFrameObserver"/></li>
            <li props="unity"><xref keyref="registerVideoEncodedFrameObserver"/></li>
            <li props="android apple"><xref keyref="registerVideoFrameObserver"/></li>
            <li props="unity"><xref keyref="registerVideoFrameObserver"/></li>
            <li><xref keyref="release"/></li>
            <li props="android flutter electron rn"><xref keyref="removeHandler"/></li>
            <li props="hide"><xref keyref="removeInjectStreamUrl"/></li>
            <li><xref keyref="renewToken"/></li>
            <li><xref keyref="resumeAllChannelMediaRelay"/></li>
            <li><xref keyref="resumeAllEffects"/></li>
            <li><xref keyref="resumeAudioMixing"/></li>
            <li><xref keyref="resumeEffect"/></li>
            <li><xref keyref="selectAudioTrack"/></li>
            <li props="hide"><xref keyref="sendAudioMetadata"/></li>
            <li><xref keyref="sendCustomReportMessage"/></li>
            <li props="electron flutter rn unity"><xref keyref="sendMetaData"/></li>
            <li><xref keyref="sendStreamMessage"/></li>
            <li><xref keyref="setAdvancedAudioOptions"/></li>
            <li><xref keyref="setAudioEffectParameters"/></li>
            <li><xref keyref="setAudioEffectPreset"/></li>
            <li><xref keyref="setAudioMixingDualMonoMode"/></li>
            <li><xref keyref="setAudioMixingPitch"/></li>
            <li><xref keyref="setAudioMixingPosition"/></li>
            <li><xref keyref="setAudioMixingPlaybackSpeed"/></li>
            <li><xref keyref="setAudioProfile"/></li>
            <li props="native unreal unity"><xref keyref="setAudioProfile2"/></li>
            <li><xref keyref="setAudioScenario"/></li>
            <li props="ios cpp unreal bp flutter unity rn"><xref keyref="setAudioSessionOperationRestriction"/></li>
            <li props="cn"><xref keyref="setAVSyncSource"/></li>
            <li props="ios cpp unreal bp flutter rn unity"><xref keyref="setCameraAutoExposureFaceModeEnabled"/></li>
            <li props="android ios cpp unreal bp flutter rn unity"><xref keyref="setCameraAutoFocusFaceModeEnabled"/></li>
            <li props="android ios cpp unreal bp flutter rn unity"><xref keyref="setCameraCapturerConfiguration"/></li>
            <li props="cpp unreal bp flutter rn unity electron"><xref keyref="setCameraDeviceOrientation"/></li>
            <li props="android ios cpp flutter rn unity"><xref keyref="setCameraExposureFactor"/></li>
            <li props="android ios cpp unreal bp flutter rn unity"><xref keyref="setCameraExposurePosition"/></li>
            <li props="android ios cpp unreal bp flutter rn unity"><xref keyref="setCameraFocusPositionInPreview"/></li>
            <li props="cpp ios flutter unreal bp unity rn"><xref keyref="setCameraStabilizationMode"/></li>
            <li props="android ios cpp unreal bp flutter rn unity"><xref keyref="setCameraTorchOn"/></li>
            <li props="android ios cpp unreal bp flutter rn unity"><xref keyref="setCameraZoomFactor"/></li>
            <li><xref keyref="setChannelProfile"/></li>
            <li props="native unreal unity"><xref keyref="setClientRole1"/></li>
            <li><xref keyref="setClientRole2"/></li>
            <li><xref keyref="setCloudProxy"/></li>
            <li><xref keyref="setColorEnhanceOptions"/></li>
            <li props="android apple"><xref keyref="setColorEnhanceOptions2"/></li>
            <li props="android ios cpp unreal bp unity rn flutter"><xref keyref="setDefaultAudioRouteToSpeakerphone"/></li>
            <li props="native unreal unity"><xref keyref="setDualStreamMode"/></li>
            <li><xref keyref="setDualStreamMode2"/></li>
            <li><xref keyref="setEarMonitoringAudioFrameParameters"/></li>
            <li><xref keyref="setEffectPosition"/></li>
            <li><xref keyref="setEffectsVolume"/></li>
            <li props="android ios cpp unreal bp flutter rn unity"><xref keyref="setEnableSpeakerphone"/></li>
            <li><xref keyref="setExtensionProperty"/></li>
            <li><xref keyref="setExtensionProviderProperty"/></li>
            <li props="android apple"><xref keyref="setExternalAudioSink"/></li>
            <li props="unity"><xref keyref="setExternalAudioSink"/></li>
            <li props="native unreal flutter unity cs electron rn"><xref keyref="setExternalAudioSink"/></li>
            <li props="android apple"><xref keyref="setExternalAudioSource"/></li>
            <li props="android apple"><xref keyref="setExternalAudioSource2"/></li>
            <li props="unity"><xref keyref="setExternalAudioSource2"/></li>
            <li props="android apple"><xref keyref="setExternalVideoSource"/></li>
            <li props="unity"><xref keyref="setExternalVideoSource"/></li>
            <li><xref keyref="setHeadphoneEQParameters"/></li>
            <li><xref keyref="setHeadphoneEQPreset"/></li>
            <li><xref keyref="setInEarMonitoringVolume"/></li>
            <li props="cn"><xref keyref="setLocalAccessPoint"/></li>
            <li props="native unreal unity"><xref keyref="setLocalRenderMode1"/></li>
            <li><xref keyref="setLocalRenderMode2"/></li>
            <li><xref keyref="setLocalVideoMirrorMode"/></li>
            <li><xref keyref="setLocalVoiceEqualization"/></li>
            <li><xref keyref="setLocalVoiceFormant"/></li>
            <li><xref keyref="setLocalVoicePitch"/></li>
            <li><xref keyref="setLocalVoiceReverb"/></li>
            <li><xref keyref="setLogFile"/></li>
            <li><xref keyref="setLogFileSize"/></li>
            <li><xref keyref="setLogFilter"/></li>
            <li><xref keyref="setLogLevel"/></li>
            <li><xref keyref="setLowlightEnhanceOptions"/></li>
            <li props="android apple"><xref keyref="setLowlightEnhanceOptions2"/></li>
            <li props="electron flutter rn unity"><xref keyref="setMaxMetadataSize"/></li>
            <li><xref keyref="setMixedAudioFrameParameters"/></li>
            <li><xref keyref="setParameters"/></li>
            <li><xref keyref="setPlaybackAudioFrameBeforeMixingParameters"/></li>
            <li><xref keyref="setPlaybackAudioFrameParameters"/></li>
            <li><xref keyref="setRecordingAudioFrameParameters"/></li>
            <li><xref keyref="setRemoteDefaultVideoStreamType"/></li>
            <li props="android"><xref keyref="setRemoteDefaultVideoStreamType2"/></li>
            <li><xref keyref="setRemoteRenderMode2"/></li>
            <li><xref keyref="setRemoteSubscribeFallbackOption"/></li>
            <li props="android"><xref keyref="setRemoteSubscribeFallbackOption2"/></li>
            <li><xref keyref="setRemoteVideoStreamType"/></li>
            <li props="android"><xref keyref="setRemoteVideoStreamType2"/></li>
            <li><xref keyref="setRemoteVideoSubscriptionOptions"/></li>
            <li props="hide"><xref keyref="setRemoteVoice3DPosition"/></li>
            <li><xref keyref="setRemoteVoicePosition"/></li>
            <li props="android cpp unity rn flutter"><xref keyref="setRouteInCommunicationMode"/></li>
            <li props="cpp framework"><xref keyref="setScreenCaptureContentHint"/></li>
            <li props="mac cpp framework"><xref keyref="setScreenCaptureScenario"/></li>
            <li><xref keyref="setSubscribeAudioAllowlist"/></li>
            <li><xref keyref="setSubscribeAudioBlocklist"/></li>
            <li><xref keyref="setSubscribeVideoAllowlist"/></li>
            <li><xref keyref="setSubscribeVideoBlocklist"/></li>
            <li props="native unreal bp unity electron flutter"><xref keyref="setupLocalVideo"/></li>
            <li props="native unreal bp unity electron flutter"><xref keyref="setupRemoteVideo"/></li>
            <li><xref keyref="setVideoDenoiserOptions"/></li>
            <li props="android apple"><xref keyref="setVideoDenoiserOptions2"/></li>
            <li><xref keyref="setVideoEncoderConfiguration"/></li>
            <li props="apple"><xref keyref="setVideoProfile2"/></li>
            <li><xref keyref="setVideoScenario"/></li>
            <li props="hide"><xref keyref="setVideoQualityParameters"/></li>
            <li><xref keyref="setVoiceBeautifierParameters"/></li>
            <li><xref keyref="setVoiceBeautifierPreset"/></li>
            <li><xref keyref="setVoiceConversionPreset"/></li>
            <li><xref keyref="setVolumeOfEffect"/></li>
            <li props="native unreal unity"><xref keyref="startAudioMixing"/></li>
            <li><xref keyref="startAudioMixing2"/></li>
            <li><xref keyref="startEchoTest3"/></li>
            <li><xref keyref="startLastmileProbeTest"/></li>
            <li><xref keyref="startLocalVideoTranscoder"/></li>
            <li><xref keyref="startOrUpdateChannelMediaRelay"/></li>
            <li props="native unreal unity flutter"><xref keyref="startPreview"/></li>
            <li><xref keyref="startPreview2"/></li>
            <li><xref keyref="startCameraCapture"/></li>
            <li props="android ios cpp unreal bp flutter rn unity"><xref keyref="startRhythmPlayer"/></li>
            <li props="cpp unreal bp mac unity flutter electron"><xref keyref="startScreenCapture2"/></li>
            <li props="mac cpp unreal bp unity flutter electron"><xref keyref="startScreenCaptureByDisplayId"/></li>
            <li props="cpp unreal bp unity flutter electron"><xref keyref="startScreenCaptureByScreenRect"/></li>
            <li props="mac cpp unreal bp unity flutter electron"><xref keyref="startScreenCaptureByWindowId"/></li>
            <li><xref keyref="startMediaRenderingTracing"/></li>
            <li><xref keyref="stopAllEffects"/></li>
            <li><xref keyref="stopAudioMixing"/></li>
            <li><xref keyref="stopChannelMediaRelay"/></li>
            <li><xref keyref="stopEchoTest"/></li>
            <li><xref keyref="stopEffect"/></li>
            <li><xref keyref="stopLastmileProbeTest"/></li>
            <li props="cpp framework"><xref keyref="stopLocalVideoTranscoder"/></li>
            <li props="native unreal unity"><xref keyref="stopPreview"/></li>
            <li><xref keyref="stopPreview2"/></li>
            <li><xref keyref="stopCameraCapture"/></li>
            <li props="android ios cpp unreal bp unity rn flutter"><xref keyref="stopRhythmPlayer"/></li>
            <li props="android ios cpp unreal bp flutter unity rn"><xref keyref="switchCamera"/></li>
            <li props="android"><xref keyref="switchCamera2"/></li>
            <li props="cpp framework"><xref keyref="unloadAllEffects"/></li>
            <li><xref keyref="unloadEffect"/></li>
            <li props="cs electron flutter rn unity"><xref keyref="unregisterAudioEncodedFrameObserver"/></li>
            <li props="cs unity"><xref keyref="unregisterAudioFrameObserver"/></li>
            <li><xref keyref="unregisterAudioSpectrumObserver"/></li>
            <li props="android cpp framework"><xref keyref="unregisterMediaMetadataObserver"/></li>
            <li props="unity"><xref keyref="unregisterVideoFrameObserver_IMediaEngine"/></li>
            <li props="unity cs electron rn flutter"><xref keyref="unregisterVideoEncodedFrameObserver"/></li>
            <li>在 <xref keyref="updateChannelMediaOptions"/> 中，以下跟屏幕采集相关的参数设置无效：
                <ul>
                    <li><parmname>publishScreenCaptureVideo</parmname></li>
                    <li><parmname>publishScreenCaptureAudio</parmname></li>
                </ul></li>
            <li><xref keyref="updateLocalTranscoderConfiguration"/></li>
            <li props="native flutter unity cs electron rn"><xref keyref="updatePreloadChannelToken"/></li>
            <li props="ios cpp unreal bp unity rn flutter"><xref keyref="updateScreenCapture"/></li>
            <li props="cpp framework"><xref keyref="updateScreenCaptureRegion1"/></li>
            <li props="hide"><xref keyref="updateScreenCaptureRegion2"/></li>
    </ul>
    </section>
    <section>
        <title><apiname keyref="IRtcEngineEx"/></title>
        <ul>
            <li props="unity flutter"><xref keyref="createAgoraRtcEngineEx"/></li>
            <li props="android cpp unreal unity"><xref keyref="createDataStreamEx1"/></li>
            <li props="android cpp framework"><xref keyref="createDataStreamEx2"/></li>
            <li><xref keyref="enableAudioVolumeIndicationEx"/></li>
            <li props="native flutter unity cs electron rn"><xref keyref="enableContentInspectEx"/></li>
            <li><xref keyref="enableDualStreamModeEx"/></li>
            <li><xref keyref="enableEncryptionEx"/></li>
            <li props="mac cpp unreal bp electron unity flutter"><xref keyref="enableLoopbackRecordingEx"/></li>
            <li><xref keyref="getCallIdEx"/></li>
            <li><xref keyref="getConnectionStateEx"/></li>
            <li props="android ios mac"><xref keyref="getUserInfoByUidEx"/></li>
            <li props="android ios mac"><xref keyref="getUserInfoByUserAccountEx"/></li>
            <li><xref keyref="joinChannelEx"/></li>
            <li props="native unreal bp rn flutter electron"><xref keyref="joinChannelWithUserAccountEx"/></li>
            <li props="native unreal unity"><xref keyref="leaveChannelEx"/></li>
            <li><xref keyref="leaveChannelEx2"/></li>
            <li><xref keyref="muteAllRemoteAudioStreamsEx"/></li>
            <li><xref keyref="muteAllRemoteVideoStreamsEx"/></li>
            <li><xref keyref="muteLocalAudioStreamEx"/></li>
            <li><xref keyref="muteLocalVideoStreamEx"/></li>
            <li><xref keyref="muteRemoteAudioStreamEx"/></li>
            <li><xref keyref="muteRemoteVideoStreamEx"/></li>
            <li><xref keyref="pauseAllChannelMediaRelayEx"/></li>
            <li><xref keyref="resumeAllChannelMediaRelayEx"/></li>
            <li props="hide"><xref keyref="sendAudioMetadataEx"/></li>
            <li><xref keyref="sendCustomReportMessageEx"/></li>
            <li><xref keyref="setDualStreamModeEx"/></li>
            <li props="cpp unreal bp android ios mac unity rn electron"><xref keyref="setRemoteRenderModeEx"/></li>
            <li props="hide"><xref keyref="setRemoteVoice3DPositionEx"/></li>
            <li><xref keyref="setRemoteVideoStreamTypeEx"/></li>
            <li props="android"><xref keyref="setRemoteVideoStreamTypeEx2"/></li>
            <li><xref keyref="setRemoteVoicePositionEx"/></li>
            <li><xref keyref="setSubscribeAudioBlocklistEx"/></li>
            <li><xref keyref="setSubscribeAudioAllowlistEx"/></li>
            <li><xref keyref="setSubscribeVideoBlocklistEx"/></li>
            <li><xref keyref="setSubscribeVideoAllowlistEx"/></li>
            <li props="native unreal bp unity electron flutter"><xref keyref="setupRemoteVideoEx"/></li>
            <li><xref keyref="setVideoEncoderConfigurationEx"/></li>
            <li props="android cpp framework"><xref keyref="sendStreamMessageEx"/></li>
            <li><xref keyref="startMediaRenderingTracingEx"/></li>
            <li><xref keyref="startOrUpdateChannelMediaRelayEx"/></li>
            <li><xref keyref="stopChannelMediaRelayEx"/></li>
            <li>在 <xref keyref="updateChannelMediaOptionsEx"/> 中，以下跟屏幕采集相关的参数设置无效：
                <ul>
                    <li><parmname>publishScreenCaptureVideo</parmname></li>
                    <li><parmname>publishScreenCaptureAudio</parmname></li>
                </ul></li>
            <li><xref keyref="setRemoteVideoSubscriptionOptionsEx"/></li>
            <li><xref keyref="adjustUserPlaybackSignalVolumeEx"/></li>
            <li props="hide"><xref keyref="onAudioMetadataReceived_IRtcEngineEx"/></li>
        </ul>
    </section>
    <section>
        <title><apiname keyref="IRtcEngineEventHandler"/></title>
        <ul>
            <li><xref keyref="onActiveSpeaker"/></li>
            <li props="cpp unreal bp electron unity flutter"><xref keyref="onAudioDeviceStateChanged"/></li>
            <li props="cpp unreal bp electron unity flutter"><xref keyref="onAudioDeviceVolumeChanged"/></li>
            <li><xref keyref="onAudioEffectFinished"/></li>
            <li props="hide"><xref keyref="onAudioMetadataReceived"/></li>
            <li><xref keyref="onAudioMixingFinished"/></li>
            <li><xref keyref="onAudioMixingPositionChanged"/></li>
            <li><xref keyref="onAudioMixingStateChanged"/></li>
            <li><xref keyref="onAudioPublishStateChanged"/></li>
            <li><xref keyref="onAudioQuality"/></li>
            <li><xref keyref="onAudioRoutingChanged"/></li>
            <li><xref keyref="onAudioSubscribeStateChanged"/></li>
            <li><xref keyref="onAudioVolumeIndication"/></li>
            <li props="android ios cpp unreal bp flutter unity rn"><xref keyref="onCameraExposureAreaChanged"/></li>
            <li props="android ios cpp unreal bp flutter unity rn"><xref keyref="onCameraFocusAreaChanged"/></li>
            <li props="android ios cpp framework"><xref keyref="onCameraReady"/></li>
            <li><xref keyref="onChannelMediaRelayStateChanged"/></li>
            <li><xref keyref="onClientRoleChanged"/></li>
            <li><xref keyref="onClientRoleChangeFailed"/></li>
            <li><xref keyref="onConnectionBanned"/></li>
            <li><xref keyref="onConnectionInterrupted"/></li>
            <li><xref keyref="onConnectionLost"/></li>
            <li><xref keyref="onConnectionStateChanged"/></li>
            <li props="hide"><xref keyref="onContentInspectResult"/></li>
            <li><xref keyref="onEncryptionError"/></li>
            <li><xref keyref="onError"/></li>
            <li props="cpp framework"><xref keyref="onExtensionErrorWithContext"/></li>
            <li props="cpp framework"><xref keyref="onExtensionEventWithContext"/></li>
            <li props="cpp framework"><xref keyref="onExtensionStartedWithContext"/></li>
            <li props="cpp framework"><xref keyref="onExtensionStoppedWithContext"/></li>
            <li props="android ios cpp unreal bp unity rn flutter"><xref keyref="onFacePositionChanged"/></li>
            <li><xref keyref="onFirstLocalAudioFramePublished"/></li>
            <li props="native unreal bp rn electron flutter"><xref keyref="onFirstLocalVideoFrame"/></li>
            <li><xref keyref="onFirstLocalVideoFramePublished"/></li>
            <li><xref keyref="onFirstRemoteAudioFrame"/></li>
            <li><xref keyref="onFirstRemoteAudioDecoded"/></li>
            <li><xref keyref="onFirstRemoteVideoDecoded"/></li>
            <li><xref keyref="onFirstRemoteVideoFrame"/></li>
            <li><xref keyref="onJoinChannelSuccess"/></li>
            <li><xref keyref="onLastmileProbeResult"/></li>
            <li><xref keyref="onLastmileQuality"/></li>
            <li><xref keyref="onLeaveChannel"/></li>
            <li><xref keyref="onLocalAudioStateChanged"/></li>
            <li><xref keyref="onLocalAudioStats"/></li>
            <li><xref keyref="onLocalUserRegistered"/></li>
            <li><xref keyref="onLocalVideoStateChanged"/></li>
            <li><xref keyref="onLocalVideoStats"/></li>
            <li><xref keyref="onLocalVideoTranscoderError"/></li>
            <li props="android cpp ios unity rn flutter unreal bp"><xref keyref="onTranscodedStreamLayoutInfo"/></li>
            <li props="hide"><xref keyref="onMicrophoneEnabled"/></li>
            <li><xref keyref="onNetworkQuality"/></li>
            <li><xref keyref="onNetworkTypeChanged"/></li>
            <li><xref keyref="onPermissionError"/></li>
            <li props="android cpp framework"><xref keyref="onProxyConnected"/></li>
            <li><xref keyref="onRejoinChannelSuccess"/></li>
            <li><xref keyref="onRemoteAudioStateChanged"/></li>
            <li><xref keyref="onRemoteAudioStats"/></li>
            <li><xref keyref="onRemoteAudioTransportStats"/></li>
            <li><xref keyref="onRemoteSubscribeFallbackToAudioOnly"/></li>
            <li><xref keyref="onRemoteVideoStateChanged"/></li>
            <li><xref keyref="onRemoteVideoStats"/></li>
            <li><xref keyref="onRemoteVideoTransportStats"/></li>
            <li><xref keyref="onRequestToken"/></li>
            <li props="android cpp unreal bp flutter ios rn unity"><xref keyref="onRhythmPlayerStateChanged"/></li>
            <li><xref keyref="onRtcStats"/></li>
            <li><xref keyref="onStreamMessage"/></li>
            <li><xref keyref="onStreamMessageError"/></li>
            <li><xref keyref="onTokenPrivilegeWillExpire"/></li>
            <li><xref keyref="onTranscodingUpdated"/></li>
            <li><xref keyref="onUplinkNetworkInfoUpdated"/></li>
            <li><xref keyref="onUserEnableLocalVideo"/></li>
            <li><xref keyref="onUserEnableVideo"/></li>
            <li><xref keyref="onUserInfoUpdated"/></li>
            <li><xref keyref="onUserJoined"/></li>
            <li><xref keyref="onUserMuteAudio"/></li>
            <li><xref keyref="onUserMuteVideo"/></li>
            <li><xref keyref="onUserOffline"/></li>
            <li props="cpp unreal bp electron flutter unity"><xref keyref="onVideoDeviceStateChanged"/></li>
            <li><xref keyref="onVideoPublishStateChanged"/></li>
            <li><xref keyref="onVideoSizeChanged"/></li>
            <li><xref keyref="onVideoStopped"/></li>
            <li><xref keyref="onVideoSubscribeStateChanged"/></li>
            <li props="mac"><xref keyref="stateChanged"/></li>
            <li><xref keyref="onVideoRenderingTracingResult"/></li>
        </ul>
    </section>
    <section props="android apple">
        <title><apiname keyref="IMediaExtensionObserver"/></title>
        <ul>
            <li><xref keyref="onExtensionErrorWithContext"/></li>
            <li><xref keyref="onExtensionEventWithContext"/></li>
            <li><xref keyref="onExtensionStartedWithContext"/></li>
            <li><xref keyref="onExtensionStoppedWithContext"/></li>
        </ul>
    </section>
    <section>
        <title><apiname keyref="IMediaPlayer"/></title>
        <note type="attention">媒体播放器中的 API 仅支持处理音频媒体文件、不支持处理视频媒体文件。</note>
        <ul>
            <li><xref keyref="adjustPlayoutVolume"/></li>
            <li><xref keyref="adjustPublishSignalVolume"/></li>
            <li props="unity"><xref keyref="dispose_IMediaPlayer"/></li>
            <li props="hide"><xref keyref="enableAutoSwitchAgoraCDN"/></li>
            <li props="hide"><xref keyref="getAgoraCDNLineCount"/></li>
            <li props="hide"><xref keyref="getCurrentAgoraCDNIndex"/></li>
            <li><xref keyref="getDuration"/></li>
            <li props="cpp unreal flutter unity cs electron rn"><xref keyref="getMediaPlayerCacheManager"/></li>
            <li><xref keyref="getMediaPlayerId"/></li>
            <li><xref keyref="getMute"/></li>
            <li><xref keyref="getPlayoutVolume"/></li>
            <li><xref keyref="getPlayPosition"/></li>
            <li><xref keyref="getPlaySrc_IMediaPlayer"/></li>
            <li><xref keyref="getPublishSignalVolume"/></li>
            <li><xref keyref="getState"/></li>
            <li><xref keyref="getStreamCount"/></li>
            <li><xref keyref="getStreamInfo"/></li>
            <li props="unity"><xref keyref="initEventHandler_IMediaPlayer"/></li>
            <li><xref keyref="mute"/></li>
            <li><xref keyref="open"/></li>
            <li props="android"><xref keyref="open2"/></li>
            <li props="hide"><xref keyref="openWithAgoraCDNSrc"/></li>
            <li><xref keyref="openWithMediaSource"/></li>
            <li><xref keyref="pause"/></li>
            <li><xref keyref="play"/></li>
            <li><xref keyref="playPreloadedSrc"/></li>
            <li><xref keyref="preloadSrc"/></li>
            <li props="cpp unreal unity cs"><xref keyref="registerAudioFrameObserver1_IMediaPlayer"/></li>
            <li props="android cpp framework"><xref keyref="registerAudioFrameObserver2_IMediaPlayer"/></li>
            <li props="android cpp unreal bp flutter rn electron"><xref keyref="registerPlayerSourceObserver"/></li>
            <li props="android cpp unreal bp flutter rn electron"><xref keyref="registerVideoFrameObserver_IMediaPlayer"/></li>
            <li props="hide"><xref keyref="renewAgoraCDNSrcToken"/></li>
            <li><xref keyref="resume"/></li>
            <li><xref keyref="seek"/></li>
            <li><xref keyref="selectAudioTrack_IMediaPlayer"/></li>
            <li><xref keyref="selectMultiAudioTrack"/></li>
            <li><xref keyref="setAudioPitch"/></li>
            <li><xref keyref="setAudioDualMonoMode"/></li>
            <li props="apple"><xref keyref="setVideoFrameDelegate"/></li>
            <li><xref keyref="setLoopCount"/></li>
            <li><xref keyref="setPlaybackSpeed"/></li>
            <li><xref keyref="setPlayerOption"/></li>
            <li><xref keyref="setPlayerOption2"/></li>
            <li><xref keyref="setRenderMode"/></li>
            <li><xref keyref="setView"/></li>
            <li><xref keyref="stop"/></li>
            <li props="hide"><xref keyref="switchAgoraCDNLineByIndex"/></li>
            <li props="hide"><xref keyref="switchAgoraCDNSrc"/></li>
            <li><xref keyref="switchSrc"/></li>
            <li><xref keyref="unloadSrc"/></li>
            <li props="cpp framework"><xref keyref="unregisterAudioFrameObserver_IMediaPlayer"/></li>
            <li props="android cpp unreal bp electron flutter rn"><xref keyref="unregisterPlayerSourceObserver"/></li>
            <li props="cpp unreal bp electron flutter rn"><xref keyref="unregisterVideoFrameObserver_IMediaPlayer"/></li>
        </ul>
    </section>
    <section>
        <title><apiname keyref="IVideoEncodedFrameObserver"/></title>
        <ul>
            <li><xref keyref="onEncodedVideoFrameReceived"/></li>
        </ul>
    </section>
    <section>
        <title><apiname keyref="IVideoFrameObserver"/></title>
        <note type="attention">通过 <xref keyref="onCaptureVideoFrame"/>、<xref keyref="onPreEncodeVideoFrame"/> 和 <xref keyref="onRenderVideoFrame"/> 回调返回的视频数据中，<parmname>alphabuffer</parmname> 为 <codeph><ph keyref="NULL"/></codeph>。</note>
        <ul>
            <li props="native unreal bp"><xref keyref="getMirrorApplied"/></li>
            <li props="native unreal bp"><xref keyref="getObservedFramePosition"/></li>
            <li props="native unreal bp"><xref keyref="getRotationApplied"/></li>
            <li props="native unreal bp"><xref keyref="getVideoFormatPreference"/></li>
            <li props="native unreal bp"><xref keyref="getVideoFrameProcessMode"/></li>
            <li props="cpp unreal bp"><xref keyref="onFrame_IVideoFrameObserver"/></li>
            <li props="hide"><xref keyref="onMediaPlayerVideoFrame"/></li>
            <li><xref keyref="onCaptureVideoFrame"/></li>
            <li><xref keyref="onPreEncodeVideoFrame"/></li>
            <li><xref keyref="onRenderVideoFrame"/></li>
        </ul>
    </section>
    <section>
        <title><apiname keyref="IMediaExtensionObserver"/></title>
        <ul>
            <li><xref keyref="onExtensionErrorWithContext"/></li>
            <li><xref keyref="onExtensionEventWithContext"/></li>
            <li><xref keyref="onExtensionStartedWithContext"/></li>
            <li><xref keyref="onExtensionStoppedWithContext"/></li>
        </ul>
    </section>
    <section>
        <title><apiname keyref="IMusicPlayer"/></title>
        <ul>
            <li props="android"><xref keyref="getPlaySrc"/></li>
            <li><xref keyref="open_IMusicPlayer"/></li>
            <li props="android"><xref keyref="open2_IMusicPlayer"/></li>
            <li props="android"><xref keyref="stop_IMusicPlayer"/></li>
            <li><xref keyref="setPlayMode"/></li>
            <li props="android"><xref keyref="destroy_IMusicPlayer"/></li>
        </ul>
    </section>
    </refbody>
</reference>
