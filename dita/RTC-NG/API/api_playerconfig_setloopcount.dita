<?xml version='1.0' encoding='UTF-8'?>
<!DOCTYPE reference PUBLIC "-//OASIS//DTD DITA Reference//EN" "reference.dtd">
<reference id="api_playerconfig_setloopcount">
    <title><ph keyref="SetLoopCount"/></title>
    <shortdesc id="short"><ph id="shortdesc">设置媒体文件的循环播放次数。</ph></shortdesc>
    <prolog>
        <metadata>
            <keywords>
                <indexterm keyref="SetLoopCount"/>
            </keywords>
        </metadata>
    </prolog>
    <refbody>
        <section id="prototype">
            <p outputclass="codeblock">
            <codeblock props="android" outputclass="language-java">public void setLoopCount(int count) throws RteException</codeblock>
            <codeblock props="hmos" outputclass="language-arkts"/>
            <codeblock props="ios mac" outputclass="language-objectivec">- (void)setLoopCount:(int32_t)count error:(AgoraRteError * _Nullable)error;</codeblock>
            <codeblock props="cpp unreal" outputclass="language-cpp">void SetLoopCount(int32_t count, Error *err = nullptr)</codeblock>
            <codeblock props="bp" outputclass="language-cpp"/>
            <codeblock props="electron" outputclass="language-typescript"/>
            <codeblock props="unity cs" outputclass="language-csharp"/>
            <codeblock props="rn" outputclass="language-typescript"/>
            <codeblock props="flutter" outputclass="language-dart"/> </p>
        </section>
        <section id="detailed_desc" deliveryTarget="details" otherprops="no-title">
            <dl outputclass="since">
            <dlentry props="native">
                <dt>自从：</dt>
                <dd>自 v4.5.1 版本新增。</dd>
            </dlentry>
            </dl>
            <p>你可以通过该方法设置媒体文件的播放次数，例如播放一次、两次，或无限循环播放，直到调用 <xref keyref="stop"/> 方法停止播放。</p>
            </section>
        <section id="restriction" deliveryTarget="details">
            <title>调用限制</title>
            <p>无。</p>
        </section>
        <section id="parameters" deliveryTarget="details" props="android cpp ios">
            <title>参数</title>
            <parml>
            <plentry props="android cpp ios">
                <pt props="android cpp ios">count</pt>
                <pd>媒体文件的循环播放次数。
                    <ul>
                        <li><codeph>0</codeph>：播放一次。</li>
                        <li><codeph>1</codeph>：播放两次。</li>
                        <li><codeph>-1</codeph>：无限循环播放，直到调用 <xref keyref="stop"/> 方法停止。</li>
                        </ul>
                    </pd>
                </plentry>
            <plentry props="cpp ios">
                <pt props="cpp">err</pt>
                <pt props="ios">error</pt>
                <pd>状态或错误信息，详见 <xref keyref="Error"/>。
                    <ul>
                        <li><ph keyref="kRteOk"/>：成功。</li>
                        </ul>
                    </pd>
                </plentry>
            </parml> </section>
        <section id="return_values" props="bp cs electron flutter rn unity unreal">
            <title><ph keyref="return-section-title"/></title>
        <p props="flutter">方法成功调用时，无返回值；方法调用失败时，会抛出 <xref keyref="AgoraRtcException"/> 异常，你需要捕获异常并进行处理。<ph props="cn">详见<xref keyref="error-code-link"/>了解详情和解决建议。</ph></p>
        <ul props="unreal bp electron unity rn cs">
                <li>0: 方法调用成功。</li>
                <li>&lt; 0: 方法调用失败。<ph props="cn">详见<xref keyref="error-code-link"/>了解详情和解决建议。</ph></li>
                </ul>
    </section>
        </refbody>
</reference>
