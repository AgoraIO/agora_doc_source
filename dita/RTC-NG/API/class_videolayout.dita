<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE reference PUBLIC "-//OASIS//DTD DITA Reference//EN" "reference.dtd">
<reference id="class_videolayout">
    <title><ph keyref="VideoLayout"/></title>
    <shortdesc id="short"><ph id="shortdesc">某一路合图子视频流的布局信息。</ph></shortdesc>
    <refbody>
        <section id="prototype">
            <p outputclass="codeblock">
            <codeblock props="android" outputclass="language-java">public static class VideoLayout {
    public String channelId;
    public int uid;
    public String strUid;
    public int videoState;
    public int x;
    public int y;
    public int width;
    public int height;
    @Override
    public String toString() {
      return "VideoLayout{"
          + "channelId='" + channelId + '\'' + ", uid=" + uid + ", strUid='" + strUid + '\''
          + ", videoState=" + videoState + ", x=" + x + ", y=" + y + ", width=" + width
          + ", height=" + height + '}';
    }
  }</codeblock>
            <codeblock props="ios mac" outputclass="language-objectivec">__attribute__((visibility("default"))) @interface AgoraVideoLayout: NSObject
@property(copy, nonatomic) NSString* _Nonnull channelId NS_SWIFT_NAME(channelId);
@property (assign, nonatomic) NSUInteger uid NS_SWIFT_NAME(uid);
@property(copy, nonatomic) NSString* _Nullable strUid NS_SWIFT_NAME(strUid);
@property (assign, nonatomic) NSUInteger videoState NS_SWIFT_NAME(videoState);
@property (assign, nonatomic) NSUInteger x NS_SWIFT_NAME(x);
@property (assign, nonatomic) NSUInteger y NS_SWIFT_NAME(y);
@property (assign, nonatomic) NSUInteger width NS_SWIFT_NAME(width);
@property (assign, nonatomic) NSUInteger height NS_SWIFT_NAME(height);
@end</codeblock>
            <codeblock props="cpp unreal" outputclass="language-cpp">struct VideoLayout
{
  const char* channelId;
  rtc::uid_t uid;
  user_id_t strUid;
  uint32_t x;
  uint32_t y;
  uint32_t width;
  uint32_t height;
  uint32_t videoState;
  VideoLayout() : channelId(OPTIONAL_NULLPTR), uid(0), strUid(OPTIONAL_NULLPTR), x(0), y(0), width(0), height(0), videoState(0) {}
};</codeblock>
            <codeblock props="bp" outputclass="language-cpp"/>
            <codeblock props="electron" outputclass="language-typescript"/>
            <codeblock props="unity cs" outputclass="language-csharp">public class VideoLayout
                {
                    public string channelId;
                    public uint uid;
                    public string strUid;
                    public uint x;
                    public uint y
                    public uint width;
                    public uint height;
                    public uint videoState;
                }</codeblock>
            <codeblock props="rn" outputclass="language-typescript">export class VideoLayout {
  channelId?: string;
  uid?: number;
  strUid?: string;
  x?: number;
  y?: number;
  width?: number;
  height?: number;
  videoState?: number;
}</codeblock>
            <codeblock props="flutter" outputclass="language-dart">@JsonSerializable(explicitToJson: true, includeIfNull: false)
class VideoLayout {
  const VideoLayout(
      {this.channelId,
      this.uid,
      this.strUid,
      this.x,
      this.y,
      this.width,
      this.height,
      this.videoState});
  @JsonKey(name: &#x27;channelId&#x27;)
  final String? channelId;
  @JsonKey(name: &#x27;uid&#x27;)
  final int? uid;
  @JsonKey(name: &#x27;strUid&#x27;)
  final String? strUid;
  @JsonKey(name: &#x27;x&#x27;)
  final int? x;
  @JsonKey(name: &#x27;y&#x27;)
  final int? y;
  @JsonKey(name: &#x27;width&#x27;)
  final int? width;
  @JsonKey(name: &#x27;height&#x27;)
  final int? height;
  @JsonKey(name: &#x27;videoState&#x27;)
  final int? videoState;
  factory VideoLayout.fromJson(Map&lt;String, dynamic&gt; json) =&gt;
      _$VideoLayoutFromJson(json);
  Map&lt;String, dynamic&gt; toJson() =&gt; _$VideoLayoutToJson(this);
}</codeblock> </p>
        </section>
        <section id="detailed_desc">
            <dl outputclass="since">
            <dlentry props="native">
                <dt>自从</dt>
                <dd>v4.3.0</dd>
            </dlentry>
            </dl>
            <p/>
        </section>
        <section id="parameters">
            <title><text conref="../conref/conref_api_metadata.dita#conref_api_metadata/property"/></title>
            <parml>
            <plentry>
                <pt>channelId</pt>
                <pd>合图子视频流所属的频道名。</pd>
            </plentry>
                <plentry>
                    <pt>uid</pt>
                    <pd>发布该合图子视频流的用户 ID。</pd>
                </plentry>
                <plentry>
                    <pt>strUid</pt>
                    <pd>预留参数。</pd>
                </plentry>
                <plentry>
                    <pt>x</pt>
                    <pd>合图子视频在合图画布上的 x 坐标 (px)。即合图子视频的左上角相对于合图画布左上角（原点）的横向位移。</pd>
                </plentry>
                <plentry>
                    <pt>y</pt>
                    <pd>合图子视频在合图画布上的 y 坐标 (px)。即合图子视频的左上角相对于合图画布左上角（原点）的纵向位移。</pd>
                </plentry>
                <plentry>
                    <pt>width</pt>
                    <pd>合图子视频流的宽度 (px)。</pd>
                </plentry>
                <plentry>
                    <pt>height</pt>
                    <pd>合图子视频流的高度 (px)</pd>
                </plentry>
                <plentry>
                    <pt>videoState</pt>
                    <pd>合图子视频流在合图画布上的状态。
                        <ul>
                        <li>0：正常。该视频流已被渲染到合图画布。</li>
                        <li>1：占位图。该视频流无视频画面，在合图画布中显示为占位符。</li>
                        <li>2：黑色图片。该视频流被黑色图片替代。</li>
                        </ul></pd>
                </plentry>
            </parml> </section>
                </refbody>
</reference>
