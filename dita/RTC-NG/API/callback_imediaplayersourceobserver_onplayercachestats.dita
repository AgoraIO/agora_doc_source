<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE reference PUBLIC "-//OASIS//DTD DITA Reference//EN" "reference.dtd">
<reference id="callback_imediaplayersourceobserver_onplayercachestats">
    <title><ph keyref="onPlayerCacheStats"/></title>
    <shortdesc id="short"><ph id="shortdesc">报告当前缓存中的媒体资源的相关信息。</ph></shortdesc>
    <prolog>
        <metadata>
            <keywords>
                <indexterm keyref="onPlayerCacheStats"/>
            </keywords>
        </metadata>
    </prolog>
    <refbody>
        <section id="prototype">
            <p outputclass="codeblock">
            <codeblock props="android" outputclass="language-java">void onPlayerCacheStats(CacheStatistics stats);</codeblock>
            <codeblock props="ios mac" outputclass="language-objectivec">(void)AgoraRtcMediaPlayer:(id&lt;AgoraRtcMediaPlayerProtocol> _Nonnull)playerKit cacheStats:(AgoraMediaPlayerCacheStatistics *_Nonnull)info NS_SWIFT_NAME(AgoraRtcMediaPlayer(_:cacheStats:));</codeblock>
            <codeblock props="cpp unreal" outputclass="language-cpp">virtual void onPlayerCacheStats(const media::base::CacheStatistics&amp; stats) {
    (void)stats;
  }</codeblock>
            <codeblock props="bp" outputclass="language-cpp"/>
            <codeblock props="electron" outputclass="language-typescript">onPlayerCacheStats?(stats: CacheStatistics): void;</codeblock>
            <codeblock props="unity cs" outputclass="language-csharp">public virtual void OnPlayerCacheStats(CacheStatistics stats)
                {
                }</codeblock>
            <codeblock props="rn" outputclass="language-typescript">onPlayerCacheStats?(stats: CacheStatistics): void;</codeblock>
            <codeblock props="flutter" outputclass="language-dart">final void Function(CacheStatistics stats)? onPlayerCacheStats;</codeblock> </p>
        </section>
        <section id="detailed_desc">
            <title>详情</title>
            <dl outputclass="since">
            <dlentry props="native">
                <dt>自从</dt>
                <dd>v4.3.0</dd>
            </dlentry>
            </dl>
            <p>调用 <xref keyref="openWithMediaSource" /> 方法且设置 <parmname>enableCache</parmname> 成员为 <codeph><ph keyref="true" /></codeph> 后，SDK 会在媒体文件打开后每秒触发一次该回调，报告当前缓存的媒体文件的统计数据。</p>
        </section>
        <section id="parameters">
            <title>参数</title>
            <parml>
            <plentry>
                <pt props="cpp android framework">stats</pt>
                <pt props="apple">info</pt>
                <pd>缓存中的媒体资源的相关信息，详见 <xref keyref="CacheStatistics"/>。</pd>
            </plentry>
               <plentry props="apple" conkeyref="onPlayerPlaybackStats/kit">
                   <pt></pt>
                   <pd></pd>
               </plentry>
            </parml> </section>
        </refbody>
</reference>
