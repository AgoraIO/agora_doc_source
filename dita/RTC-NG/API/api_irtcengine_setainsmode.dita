<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE reference PUBLIC "-//OASIS//DTD DITA Reference//EN" "reference.dtd">
<reference id="api_irtcengine_setainsmode">
    <title><ph keyref="setAINSMode"/></title>
    <shortdesc id="short"><ph id="shortdesc">设置是否开启 AI 降噪功能并设置降噪模式。</ph></shortdesc>
    <prolog>
        <metadata>
            <keywords>
                <indexterm keyref="setAINSMode"/>
            </keywords>
        </metadata>
    </prolog>
    <refbody>
        <section id="prototype">
            <p outputclass="codeblock">
            <codeblock props="android" outputclass="language-java">public abstract int setAINSMode(boolean enabled, int mode);</codeblock>
            <codeblock props="ios mac" outputclass="language-objectivec">- (int)setAINSMode:(BOOL)enabled mode:(AUDIO_AINS_MODE)mode NS_SWIFT_NAME(setAINSMode(_:mode:));</codeblock>
            <codeblock props="cpp unreal bp" outputclass="language-cpp">virtual int setAINSMode(bool enabled,  AUDIO_AINS_MODE mode) = 0;</codeblock>
            <codeblock props="electron" outputclass="language-typescript">abstract setAINSMode(enabled: boolean, mode: AudioAinsMode): number;</codeblock>
            <codeblock props="unity cs" outputclass="language-csharp">public abstract int SetAINSMode(bool enabled, AUDIO_AINS_MODE mode);</codeblock>
            <codeblock props="rn" outputclass="language-typescript">abstract setAINSMode(enabled: boolean, mode: AudioAinsMode): number;</codeblock>
            <codeblock props="flutter" outputclass="language-dart">Future&lt;void> setAINSMode(
      {required bool enabled, required AudioAinsMode mode});</codeblock> </p>
        </section>
        <section id="detailed_desc">
            <title>详情</title>
            <dl outputclass="since">
            <dlentry props="native">
                <dt>自从</dt>
                <dd>v4.2.0</dd>
            </dlentry>
            </dl>
            <p>你可以调用开方法来开启 AI 降噪功能。该功能可以在保证语音质量的前提下，智能化检测并降低周围环境中多种稳态与非稳态噪声，使人声更加清晰。
稳态噪声指在任何时间点上都具有相同频率的噪声，常见的稳态噪声有：
            <ul><li>电视机噪声</li>
            <li>空调噪声</li>
            <li>工厂机器噪声等</li></ul>
非稳态噪声是指随时间而快速变化的噪声，常见的非稳态噪声有：
            <ul><li>雷声</li>
            <li>爆炸声</li>
            <li>破裂声等</li></ul></p>
        </section>
        <section id="scenario">
            <title>适用场景</title>
            <p>在语音连麦、在线教育、在线会议等场景中，如果周围环境比较嘈杂，AI 降噪功能可以在保证语音质量的前提下，识别并降低周围的稳态噪声和非稳态噪声，提高语音质量和体验。</p>
        </section>
        <section id="parameters">
            <title>参数</title>
            <parml>
            <plentry>
                <pt>enabled</pt>
                <pd>是否开启 AI 降噪功能：

                    <ul>
                    <li><codeph><ph keyref="true"/></codeph>：<ph>开启 AI 降噪功能。</ph></li>
                    <li><codeph><ph keyref="false"/></codeph>：<ph>（默认）关闭 AI 降噪功能。</ph> </li>
                    </ul></pd>
            </plentry>
            <plentry>
                <pt>mode</pt>
                <pd>
                    <p props="cpp apple framework">降噪模式，详见 <xref keyref="AUDIO_AINS_MODE"/>。</p>
                    <p props="android">降噪模式：
                    <ul>
                    <li>0：（默认）均衡降噪模式。如果你希望实现对噪声抑制和延时都较为均衡的降噪效果，可选择该模式。</li>
                    <li>1：强降噪模式；适用于对噪声抑制性能要求较高的场景，如户外直播。该模式可以更大程度地减少噪声，但同时可能会造成语音损伤。</li>
                    <li>2：低延时强降噪模式。该模式的降噪延时比弱降噪和强降噪模式大约低一半，适用于对降噪及低延时要求较高的场景，如实时合唱。</li>
                    </ul> </p>
                </pd>
            </plentry>
            </parml> </section>
        <section id="return_values">
            <title><ph keyref="return-section-title"/></title>
            <p props="flutter">方法成功调用时，无返回值；方法调用失败时，会抛出 <xref keyref="AgoraRtcException"/> 异常，你需要捕获异常并进行处理。</p>
            <ul>
            <li props="native unreal bp unity rn electron cs">0: 方法调用成功。</li>
            <li>&lt; 0: 方法调用失败。</li>
            </ul></section>
    </refbody>
</reference>
