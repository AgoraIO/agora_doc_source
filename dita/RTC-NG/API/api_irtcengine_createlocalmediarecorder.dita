<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE reference PUBLIC "-//OASIS//DTD DITA Reference//EN" "reference.dtd">
<reference id="api_irtcengine_createlocalmediarecorder">
    <title><ph keyref="createLocalMediaRecorder"/></title>
    <shortdesc id="short"><ph id="shortdesc">创建本地音视频录制对象。</ph></shortdesc>
    <prolog>
        <metadata>
            <keywords>
                <indexterm keyref="createLocalMediaRecorder"/>
            </keywords>
        </metadata>
    </prolog>
    <refbody>
        <section id="prototype">
            <p outputclass="codeblock">
            <codeblock props="android" outputclass="language-java">public abstract AgoraMediaRecorder createLocalMediaRecorder(RtcConnection connection);</codeblock>
            <codeblock props="ios mac" outputclass="language-objectivec">- (AgoraMediaRecorder * _Nullable)createLocalMediaRecorder:(AgoraRtcConnection * _Nonnull)connection;</codeblock>
            <codeblock props="cpp" outputclass="language-cpp">virtual agora_refptr&lt;IMediaRecorder> createLocalMediaRecorder(const RtcConnection&amp; connection) = 0;</codeblock>
            <codeblock props="cs" outputclass="language-csharp"/>
            <codeblock props="electron" outputclass="language-typescript"/>
            <codeblock props="unity" outputclass="language-csharp">public abstract IMediaRecorder CreateLocalMediaRecorder(RtcConnection connection);</codeblock>
            <codeblock props="rn" outputclass="language-typescript"/>
            <codeblock props="flutter" outputclass="language-dart"/> </p>
        </section>
        <section id="detailed_desc">
            <title>详情</title>
            <dl outputclass="since">
            <dlentry props="native">
                <dt>自从</dt>
                <dd>v4.2.0</dd>
            </dlentry>
            </dl>
            <p>在开始本地音视频流录制前，你需要调用该方法创建一个本地音视频录制对象。成功创建音视频录制对象后，你需要调用 <xref keyref="setMediaRecorderObserver"/> 注册录制对象的观测器来监听录制的相关回调。</p>
            <p>SDK 支持录制本地多个音视频流。你可以多次调用该方法创建录制器对象，并通过 <parmname>connection</parmname> 参数分别指定需要录制的频道名和发流的用户的 ID，然后再调用 <xref keyref="startRecording"/> 开始录制。如果你还想同时录制远端用户的音视频流，你可以调用 <xref keyref="createRemoteMediaRecorder"/> 创建一个远端音视频录制器对象。</p>
        </section>
        <section id="scenario">
            <title>适用场景</title>
            <p/>
        </section>
        <section id="parameters">
            <title>参数</title>
            <parml>
            <plentry conkeyref="joinChannelEx/connection">
                <pt/>
                <pd/>
            </plentry>
            </parml> </section>
        <section id="return_values">
            <title>返回值</title>
            <ul>
            <li props="cpp apple rn electron unity flutter">方法调用成功：返回一个 <xref keyref="IMediaRecorder"/> 对象。</li>
            <li props="android">方法调用成功：返回一个 <xref keyref="IMediaRecorder"/> 实例。</li>
            <li>方法调用失败：返回空指针。</li>
            </ul>
        </section>
    </refbody>
</reference>
