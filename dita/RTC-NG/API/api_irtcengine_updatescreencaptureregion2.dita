<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE reference PUBLIC "-//OASIS//DTD DITA Reference//EN" "reference.dtd">
<reference id="api_irtcengine_updatescreencaptureregion2">
    <title><ph keyref="updateScreenCaptureRegion2"/></title>
    <shortdesc id="short"><ph id="shortdesc">更新屏幕采集的区域。</ph></shortdesc>
    <prolog>
        <metadata>
            <keywords>
                <indexterm keyref="updateScreenCaptureRegion2"/>
            </keywords>
        </metadata>
    </prolog>
    <refbody>
        <section id="prototype">
            <p outputclass="codeblock">
            <codeblock props="android" outputclass="language-java"/>
            <codeblock props="mac" outputclass="language-objectivec">- (int)updateScreenCaptureRegion:(CGRect)rect;</codeblock>
            <codeblock props="cpp unreal bp" outputclass="language-cpp">virtual int updateScreenCaptureRegion(const Rect* rect) = 0;</codeblock>
            <codeblock props="electron" outputclass="language-typescript">abstract updateScreenCaptureRegion(regionRect: Rectangle): number;</codeblock>
            <codeblock props="unity cs" outputclass="language-csharp">public abstract int UpdateScreenCaptureRegion(Rectangle regionRect);</codeblock>
            <codeblock props="rn" outputclass="language-typescript"/>
            <codeblock props="flutter" outputclass="language-dart">Future&lt;void&gt; updateScreenCaptureRegion(Rectangle regionRect);</codeblock>
            <codeblock props="reserve" outputclass="language-cpp"></codeblock></p>
        </section>
        <section id="parameters">
            <title>参数</title>
            <parml>
            <plentry>
                <pt props="mac cpp unreal bp">rect</pt>
                <pt props="unity cs">regionRect</pt>
                <pd>待共享区域相对于整个屏幕的位置，如不填，则表示共享整个屏幕。<ph props="cpp unreal bp">详见 <xref keyref="Rect"/>。</ph>如果设置的共享区域超出了屏幕或窗口的边界，则只共享屏幕或窗口内的内容；如果将 width 或 height 设为 0 ，则共享整个屏幕或窗口。</pd>
            </plentry>
            </parml> </section>
        <section id="return_values">
            <title><ph keyref="return-section-title"/></title>
            <p props="flutter">方法成功调用时，无返回值；方法调用失败时，会抛出 <xref keyref="AgoraRtcException"/> 异常，你需要捕获异常并进行处理。</p>
            <ul>
            <li props="native unreal bp electron unity rn cs">0: 方法调用成功。</li>
            <li>&lt; 0: 方法调用失败。</li></ul>
        </section>
    </refbody>
</reference>
