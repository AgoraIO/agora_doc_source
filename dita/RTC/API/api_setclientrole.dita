<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE reference PUBLIC "-//OASIS//DTD DITA Reference//EN" "reference.dtd">
<reference id="api_setclientrole">
    <title><ph keyref="setClientRole1"/></title>
    <shortdesc id="short"><ph id="shortdesc">设置用户角色。</ph></shortdesc>
    <prolog>
        <metadata>
            <keywords>
                <indexterm keyref="setClientRole1"/>
            </keywords>
        </metadata>
    </prolog>
    <refbody>
        <section id="prototype">
            <p outputclass="codeblock">
            <codeblock props="android" outputclass="language-java">public abstract int setClientRole(int role);</codeblock>
            <codeblock props="ios mac" outputclass="language-objectivec">- (int)setClientRole:(AgoraClientRole)role;</codeblock>
            <codeblock props="cpp" outputclass="language-cpp">virtual int setClientRole(CLIENT_ROLE_TYPE role) = 0;</codeblock>
            <codeblock props="electron" outputclass="language-typescript">setClientRole(role: CLIENT_ROLE_TYPE): number</codeblock>
            <codeblock props="cs" outputclass="language-csharp">public abstract int SetClientRole(CLIENT_ROLE_TYPE role);</codeblock>
            <codeblock props="rn" outputclass="language-typescript"/>
            <codeblock props="flutter" outputclass="language-dart"/> </p>
        </section>
        <section id="detailed_desc">
            <p id="desc">在加入频道前和加入频道后均可调用该方法设置用户角色。</p>
            <p>该方法在加入频道前后均可调用。如果你在加入频道后调用该方法切换用户角色，调用成功后，SDK 会自动进行如下操作：
            <ul>
            <li>调用 <xref keyref="muteLocalAudioStream"/> 和 <xref keyref="muteLocalVideoStream"/> 修改发布状态。</li>
            <li props="native flutter">本地会触发 <xref keyref="onClientRoleChanged"/> 或 <xref keyref="onClientRoleChangeFailed"/> 回调。</li>
            <li props="unity">本地会触发 <xref keyref="onClientRoleChanged"/> 回调。</li>
            <li>远端会触发 <xref keyref="onUserJoined"/> 或 <codeph><xref keyref="onUserOffline"/>(<apiname keyref="USER_OFFLINE_BECOME_AUDIENCE"/>)</codeph> 回调。</li>
            </ul></p>
            <note type="attention" props="rtc">该方法仅在频道场景为直播（<xref keyref="setChannelProfile"/> 中 <parmname>profile</parmname> 设为 <ph keyref="CHANNEL_PROFILE_LIVE_BROADCASTING"/>）时生效。</note> </section>
        <section id="parameters">
            <title>参数</title>
            <parml>
            <plentry>
                <pt>role</pt>
                <pd id="clientrole">
                    <p props="ios mac cpp electron cs">用户角色。详见 <xref keyref="CLIENT_ROLE_TYPE"/>。</p>
                    <p props="android">用户的角色：
                    <ul id="clientroletype">
                    <li><ph keyref="CLIENT_ROLE_BROADCASTER"/> (1)：主播。</li>
                    <li><ph keyref="CLIENT_ROLE_AUDIENCE"/> (2)：观众。</li>
                    </ul> </p>
                </pd>
            </plentry>
            </parml> </section>
        <section id="return_values">
            <title>返回值</title>
            <ul>
            <li>0: 方法调用成功。</li>
            <li>&lt; 0: 方法调用失败。


                <ul>
                <li>-1: 一般性的错误（未明确归类）。</li>
                <li>-2: 参数无效。</li>
                <li>-7: SDK 尚未初始化。</li>
                </ul> </li>
            </ul> </section>
    </refbody>
</reference>
