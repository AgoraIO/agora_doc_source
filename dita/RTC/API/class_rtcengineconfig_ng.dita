<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE reference PUBLIC "-//OASIS//DTD DITA Reference//EN" "reference.dtd">
<reference id="class_rtcengineconfig">
    <title><ph keyref="RtcEngineConfig"/></title>
    <shortdesc id="short"><ph id="shortdesc"><apiname keyref="RtcEngineConfig"/>定义。</ph></shortdesc>
    <refbody>
        <section id="prototype">
            <p outputclass="codeblock">
            <codeblock props="android" outputclass="language-java">public class RtcEngineConfig {
  public Context mContext;
  public String mAppId;
  public Constants.AreaCode mAreaCode;
  public IAgoraEventHandler mEventHandler;
  public int mChannelProfile;
  public int mAudioScenario;
  public boolean mEnableAudioDevice;
  public List&lt;String> mExtensionList;
  public IMediaExtensionObserver mExtensionObserver;
  public LogConfig mLogConfig;
 
  public void addExtension(String providerName) {
    mExtensionList.add(providerName);
  }
}</codeblock>
            <codeblock props="ios mac" outputclass="language-objectivec">__attribute__((visibility("default"))) @interface AgoraRtcEngineConfig: NSObject
 
 @property (copy, nonatomic) NSString * _Nullable appId;
 @property (assign, nonatomic) AgoraChannelProfile channelProfile;
 @property (assign, nonatomic) AgoraAudioScenario audioScenario;
 @property (assign, nonatomic) AgoraAreaCodeType areaCode;
 @property (strong, nonatomic) AgoraLogConfig * _Nullable logConfig;
 @property (copy, nonatomic) NSArray&lt;id&lt;AgoraMediaFilterExtensionDelegate>>* _Nullable mediaFilterExtensions;
 @property (weak, nonatomic) id&lt;AgoraMediaFilterEventDelegate> _Nullable eventDelegate;
@end</codeblock>
            <codeblock props="windows" outputclass="language-cpp">struct RtcEngineContext {
  IRtcEngineEventHandler* eventHandler;
  const char* appId;
  void* context;
  bool enableAudioDevice;
  CHANNEL_PROFILE_TYPE channelProfile;
  AUDIO_SCENARIO_TYPE audioScenario;
  unsigned int areaCode;
  commons::LogConfig logConfig;
  RtcEngineContext()
      : eventHandler(NULL), eventHandlerEx(NULL), appId(NULL), context(NULL),
        enableAudioDevice(true), channelProfile(CHANNEL_PROFILE_LIVE_BROADCASTING),
        audioScenario(AUDIO_SCENARIO_HIGH_DEFINITION),
        areaCode(AREA_CODE_GLOB),
        logConfig() {}
};</codeblock>
            <codeblock props="electron" outputclass="language-typescript"></codeblock>
            <codeblock props="unity" outputclass="language-csharp"></codeblock>
            <codeblock props="rn" outputclass="language-typescript"></codeblock>
            <codeblock props="flutter" outputclass="language-dart"></codeblock>
            </p>
        </section>
        <section id="parameters">
            <title><text conref="../conref/conref_api_metadata.dita#metadata/property"/></title>
            <parml>
                <plentry props="windows android">
                    <pt props="windows">eventHandler</pt>
                    <pt props="android">mEventHandler</pt>
                    <pd id="eventhandler"><xref keyref="IRtcEngine"/> 的事件句柄，详见 <xref keyref="IRtcEngineEventHandler"
                        />。</pd>
                </plentry>
                <plentry>
                    <pt props="windows ios mac">appId</pt>
                    <pt props="android">mAppId</pt>
                    <pd id="appid">Agora 为 app 开发者签发的 App ID，详见<xref keyref="get-an-app-id">获取 App
                            ID</xref>。 使用同一个 App ID 的 app 才能进入同一个频道进行通话或直播。一个 App ID 只能用于创建一个
                            <apiname keyref="IRtcEngine"/>。如需更换 App ID，必须先调用 <xref keyref="release"
                        /> 销毁当前 <apiname keyref="IRtcEngine"/> 再重新创建 。</pd>
                </plentry>
                <plentry props="android windows">
                    <pt props="windows">context</pt>
                    <pt props="android">Context</pt>
                    <pd id="context">
                        <ul props="windows">
                            <li>Windows 平台上，context 是视窗句柄。如设值，则表示支持设备热插拔。</li>
                            <li>Android 平台上，context 是安卓活动上下文。</li>
                        </ul>
                        <p props="android">安卓活动上下文。</p>
                    </pd>
                </plentry>
                <plentry props="android windows">
                    <pt props="windows">enableAudioDevice</pt>
                    <pt props="android">mEnableAudioDevice</pt>
                    <pd>设置是否允许 SDK 使用音频设备： <ul>
                            <li><codeph><ph keyref="true"/></codeph>:（默认）允许。 </li>
                            <li><codeph><ph keyref="false"/></codeph>: 禁止。</li>
                        </ul></pd>
                    <pd>
                        <note type="attention">
                            <p>如需通过 <xref keyref="pullAudioFrame"/> 获取混音后的远端音频数据，请确保将该参数设为
                                        <codeph><ph keyref="false"/></codeph>。</p>
                        </note>
                    </pd>
                </plentry>
                <plentry>
                    <pt props="windows ios mac">channelProfile</pt>
                    <pt props="android">mChannelProfile</pt>
                        <pd conkeyref="setChannelProfile/channelprofiletype"/>
                </plentry>
                <plentry>
                    <pt props="windows ios mac">audioScenario</pt>
                    <pt props="android">mAudioScenario</pt>
                    <pd>音频应用场景。详见 <xref keyref="AUDIO_SCENARIO_TYPE"/>。</pd>
                    <pd>
                        <note type="attention">Agora 推荐你使用以下场景： <ul>
                                    <li><ph keyref="AUDIO_SCENARIO_DEFAULT"/>(0)。</li>
                                    <li><ph keyref="AUDIO_SCENARIO_GAME_STREAMING"/>(3)。</li>
                                    <li><ph keyref="AUDIO_SCENARIO_HIGH_DEFINITION"/>(6)。</li>
                                </ul>
                        </note>
                    </pd>
                </plentry>
                <plentry>
                    <pt props="windows ios mac">areaCode</pt>
                    <pt props="android">mAreaCode</pt>
                    <pd>服务器的访问区域。该功能为高级设置，适用于有访问安全限制的场景。支持的区域详见 <xref keyref="AREA_CODE"
                            />。<p>指定访问区域后，集成了 Agora SDK 的 app 会连接指定区域内的 Agora 服务器。</p></pd>
                </plentry>
                <plentry>
                    <pt props="windows ios mac">logConfig</pt>
                    <pt props="android">mLogConfig</pt>
                    <pd>
                        <p>设置 Agora SDK 输出的日志文件。详见 <xref keyref="LogConfig"/>。</p>
                        <p>默认情况下，SDK 会生成
                                <codeph>agorasdk.log</codeph>、<codeph>agorasdk1.log</codeph>、<codeph>agoraapi.log</codeph>、<codeph>agoraapi1.log</codeph>
                            这 4 个日志文件。 <codeph>agorasdk.log</codeph> 和
                                <codeph>agorasdk1.log</codeph> 默认大小为 1,024
                                KB；<codeph>agoraapi.log</codeph> 和 <codeph>agoraapi1.log</codeph>
                            默认大小为 2,048 KB。 日志文件为 UTF-8 编码。</p>
                        <p>最新的日志永远写在 <codeph>agorasdk.log</codeph> 和 <codeph>agoraapi.log</codeph>
                            中。当 <codeph>agorasdk.log</codeph> 和 <codeph>agoraapi.log</codeph> 写满后，
                            SDK 会删除 <codeph>agorasdk1.log</codeph> 和
                            <codeph>agoraapi1.log</codeph>，将 <codeph>agorasdk.log</codeph> 和
                                <codeph>agoraapi.log</codeph> 重命名为 <codeph>agorasdk1.log</codeph> 和
                                <codeph>agorasapi1.log</codeph>，并创建新的 <codeph>agorasdk.log</codeph>
                            和 <codeph>agoraapi.log</codeph> 写入最新的日志。</p>
                    </pd>
                </plentry>
                <plentry props="android">
                    <pt>mExtensionList</pt>
                    <pd>扩展服务插件列表。</pd>
                </plentry>
                <plentry>
                    <pt props="android">mExtensionObserver</pt>
                    <pt props="ios mac">eventDelegate</pt>
                    <pd>扩展服务事件句柄。详见 <xref keyref="IMediaExtensionObserver"/>。</pd>
                </plentry>
                <plentry props="ios mac">
                    <pt>mediaFilterExtensions</pt>
                    <pd>扩展服务 delegate。详见 <xref keyref="AgoraMediaFilterExtensionDelegate"/>。</pd>
                </plentry>
            </parml>
        </section>
    </refbody>
</reference>
