<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE reference PUBLIC "-//OASIS//DTD DITA Reference//EN" "reference.dtd">
<reference id="api_onremotesubscribefallbacktoaudioonly">
    <title><ph keyref="onRemoteSubscribeFallbackToAudioOnly" /></title>
    <shortdesc id="short"><ph id="shortdesc">远端订阅流已回退为音频流回调。</ph></shortdesc>
    <prolog>
        <metadata>
   <keywords>
       <indexterm keyref="onRemoteSubscribeFallbackToAudioOnly" />
   </keywords>
        </metadata>
    </prolog>
    <refbody><section id="prototype">
        <p outputclass="codeblock">
                <codeblock props="android" outputclass="language-java">public void onRemoteSubscribeFallbackToAudioOnly(int uid, boolean isFallbackOrRecover) {}</codeblock>
                <codeblock props="ios mac" outputclass="language-objectivec">- (void)rtcEngine:(AgoraRtcEngineKit * _Nonnull)engine 
    didRemoteSubscribeFallbackToAudioOnly:(BOOL)isFallbackOrRecover byUid:(NSUInteger)uid;</codeblock>
                <codeblock props="windows" outputclass="language-cpp">virtual void onRemoteSubscribeFallbackToAudioOnly(uid_t uid, bool isFallbackOrRecover) {
    (void)uid;
    (void)isFallbackOrRecover;
    }</codeblock>
                <codeblock props="electron" outputclass="language-typescript">on(
  evt: EngineEvents.REMOTE_SUBSCRIBE_FALLBACK_TO_AUDIO_ONLY,
  cb: (uid: number, isFallbackOrRecover: boolean) =&gt; void
): this;</codeblock>
                <codeblock props="unity" outputclass="language-csharp">public virtual void OnRemoteSubscribeFallbackToAudioOnly(uint uid, bool isFallbackOrRecover)</codeblock>
                <codeblock props="rn" outputclass="language-typescript" />
                <codeblock props="flutter" outputclass="language-dart">FallbackWithUidCallback? remoteSubscribeFallbackToAudioOnly;</codeblock>
        </p>
        </section>
        <section id="detailed_desc">
   
   <p>如果你调用了 <xref keyref="setRemoteSubscribeFallbackOption" /> 接口并将 <parmname>option</parmname> 设置为
                    <apiname keyref="STREAM_FALLBACK_OPTION_AUDIO_ONLY" />，当下行网络环境不理想、仅接收远端音频流时，或当下行网络改善、恢复订阅音视频流时，会触发该回调。</p>
   <note type="attention"> 远端订阅流因弱网环境不能同时满足音视频而回退为小流时，你可以使用 <xref keyref="RemoteVideoStats" /> 来监控远端视频大小流的切换。</note>
        </section>
        <section id="parameters"><title><ph keyref="callback-section-title" /></title>             <p conkeyref="onJoinChannelSuccess/callback-desc" />
   <parml>
                <plentry conkeyref="onJoinChannelSuccess/engine" props="ios mac">
                    <pt />
                    <pd />
                </plentry>
                <plentry id="uid">
                    <pt>uid</pt>
                    <pd>远端用户的用户 ID。</pd>
                </plentry>
                <plentry id="isFallbackOrRecover">
                    <pt>isFallbackOrRecover</pt>
                    <pd>
                        <ul>
                            <li><codeph><ph keyref="true" /></codeph>: 由于网络环境不理想，远端订阅流已回退为音频流；</li>
                            <li><codeph><ph keyref="false" /></codeph>: 由于网络环境改善，订阅的音频流已恢复为音视频流。</li>
                        </ul>
                    </pd>
                </plentry>
            </parml>
        </section>
    </refbody>
</reference>