<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE reference PUBLIC "-//OASIS//DTD DITA Reference//EN" "reference.dtd">
<reference id="api_startscreencapturebydisplayid">
    <title><ph keyref="startScreenCaptureByDisplayId"/></title>
    <shortdesc id="short"><ph id="shortdesc">通过屏幕 ID 共享屏幕。</ph></shortdesc>
    <prolog>
        <metadata>
            <keywords>
                <indexterm keyref="startScreenCaptureByDisplayId"/>
            </keywords>
        </metadata>
    </prolog>
    <refbody>
        <section id="prototype">
            <p outputclass="codeblock" props="rtc-ng">
            <codeblock props="mac" outputclass="language-objectivec">- (int)startScreenCaptureByDisplayId:(UInt32)displayId
                regionRect:(CGRect)regionRect
                captureParams:(AgoraScreenCaptureParameters *_Nonnull)captureParams;</codeblock> </p>
            <p outputclass="codeblock" props="rtc">
            <codeblock props="mac" outputclass="language-objectivec">- (int)startScreenCaptureByDisplayId:(NSUInteger)displayId rectangle:(CGRect)rectangle parameters:(AgoraScreenCaptureParameters* _Nonnull)captureParams;</codeblock> </p>
            <p outputclass="codeblock">
            <codeblock props="android" outputclass="language-java"/>
            <codeblock props="windows" outputclass="language-cpp">virtual int startScreenCaptureByDisplayId(unsigned int displayId, const Rectangle&amp; regionRect,
                const ScreenCaptureParameters&amp; captureParams) = 0;
            </codeblock>
            <codeblock props="electron" outputclass="language-typescript"/>
            <codeblock props="unity" outputclass="language-csharp">public abstract int StartScreenCaptureByDisplayId(uint displayId, Rectangle regionRect,
                ScreenCaptureParameters captureParams);</codeblock>
            <codeblock props="rn" outputclass="language-typescript"/>
            <codeblock props="flutter" outputclass="language-dart">Future&lt;void&gt; startScreenCaptureByDisplayId(int displayId,
      [Rectangle? regionRect, ScreenCaptureParameters? captureParams]);</codeblock> </p>
        </section>
        <section id="detailed_desc">
            <p>共享一个屏幕或该屏幕的部分区域。用户需要在该方法中指定想要共享的屏幕 ID。</p>
            <note type="attention">
            <p props="mac">该方法需要在加入频道后调用。</p>
            <ul props="windows flutter">
            <li>该方法仅适用于 macOS 和 Windows。</li>
            <li>该方法需要在加入频道后调用。</li>
            <li>Windows 平台上，如果用户设备外接其他显示屏，为避免屏幕共享出现问题，请使用该方法开启共享，不要使用 <xref keyref="startScreenCaptureByScreenRect"/>。</li>
            </ul> </note> </section>
        <section id="parameters">
            <title>参数</title>
            <parml>
            <plentry>
                <pt>displayId</pt>
                <pd><p>指定待共享的屏幕 ID。开发者需要通过该参数指定你要共享的那个屏幕。关于如何获取屏幕 ID，请参考 <xref keyref="guide-screensharing"/>，或从
                <xref keyref="getScreenCaptureSources"/> 返回的 <parmname>sourceId</parmname> 获取。</p></pd>
            </plentry>
            <plentry props="windows unity flutter">
                <pt>regionRect</pt>
                <pd>（可选）指定待共享区域相对于整个屏幕的位置。如不填，则表示共享整个屏幕。详见 <xref keyref="Rectangle"/>。如果设置的共享区域超出了屏幕的边界，则只共享屏幕视窗内的内容；如果宽或高为 0，则共享整个屏幕。</pd>
            </plentry>
            <plentry props="mac">
                <pt props="rtc">rectangle</pt>
                <pt props="rtc-ng">regionRect</pt>
                <pd>（可选）待共享区域相对于整个屏幕的位置。如不填，则表示共享整个屏幕。由如下参数组成：
                    
                    <ul>
                    <li>x：左上角的横向偏移。</li>
                    <li>y：左上角的纵向偏移。</li>
                    <li>width：待共享区域的宽。</li>
                    <li>height：待共享区域的高。</li>
                    </ul>
                    <p>如果设置的共享区域超出了屏幕的边界，则只共享屏幕内的内容；如果宽或高设为 0，则共享整个屏幕。</p>
                </pd>
            </plentry>
            <plentry>
                <pt>captureParams</pt>
                <pd>屏幕共享的参数配置。默认的分辨率为 1920 x 1080，即 2073600 像素。该像素值为计费标准。详见 <xref keyref="ScreenCaptureParameters"/>。</pd>
            </plentry>
            </parml> </section>
        <section id="return_values" props="native electron unity">
            <title>返回值</title>
            <ul>
            <li>0: 方法调用成功。</li>
            <li>&lt; 0: 方法调用失败。</li>
            </ul> </section>
    </refbody>
</reference>
