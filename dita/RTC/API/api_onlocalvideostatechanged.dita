<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE reference PUBLIC "-//OASIS//DTD DITA Reference//EN" "reference.dtd">
<reference id="api_onlocalvideostatechanged">
    <title>
        <ph keyref="onLocalVideoStateChanged" />
    </title>
    <shortdesc id="short">
        <ph id="shortdesc">本地视频状态发生改变回调。</ph>
    </shortdesc>
    <prolog>
        <metadata>
            <keywords>
                <indexterm keyref="onLocalVideoStateChanged" />
            </keywords>
        </metadata>
    </prolog>
    <refbody><section id="prototype">
        <p outputclass="codeblock">
                <codeblock props="android" outputclass="language-java">public void onLocalVideoStateChanged(int state, int error) {}</codeblock>
                <codeblock props="ios mac" outputclass="language-objectivec">- (void)rtcEngine:(AgoraRtcEngineKit * _Nonnull)engine 
    localVideoStateChangedOfState:(AgoraVideoLocalState)state
    error:(AgoraLocalVideoStreamError)error;</codeblock>
                <codeblock props="windows" outputclass="language-cpp">virtual void onLocalVideoStateChanged(LOCAL_VIDEO_STREAM_STATE localVideoState, 
    LOCAL_VIDEO_STREAM_ERROR error) {
    (void)localVideoState;
    (void)error;
    }</codeblock>
                <codeblock props="electron" outputclass="language-typescript">on(evt: EngineEvents.LOCAL_VIDEO_STATE_CHANGED, cb: (
    localVideoState: number,
    error: number
    ) => void): this;</codeblock>
                <codeblock props="unity" outputclass="language-csharp"/>
                <codeblock props="rn" outputclass="language-typescript"/>
                <codeblock props="flutter" outputclass="language-dart"/>
        </p>
        </section>
        <section id="detailed_desc">
            <dl outputclass="since" props="rtc">
                <dlentry>
                    <dt>自从</dt>
                    <dd>v2.4.1</dd>
                </dlentry>
            </dl>
            <p id="desc1">本地视频的状态发生改变时，SDK 会触发该回调返回当前的本地视频状态。你可以通过该回调了解当前视频的状态以及出现故障的原因，方便排查问题。</p>
            <p> SDK 会在如下情况触发 <apiname keyref="onLocalVideoStateChanged"/> 回调，状态为 <codeph><ph
                        keyref="LOCAL_VIDEO_STREAM_STATE_FAILED"/></codeph>，错误码为 <codeph><ph
                        keyref="LOCAL_VIDEO_STREAM_ERROR_CAPTURE_FAILURE"/></codeph>： <ul>
                    <li>应用退到后台，系统回收摄像头。</li>
                    <li>摄像头正常启动，但连续 4 秒都没有输出采集的视频。</li>
                </ul>
            </p>
            <p>
                摄像头输出采集的视频帧时，如果连续 15 帧中，所有视频帧都一样，SDK 触发 <apiname keyref="onLocalVideoStateChanged" /> 回调，状态为 <codeph><ph keyref="LOCAL_VIDEO_STREAM_STATE_CAPTURING"/></codeph>，错误码为 <codeph><ph keyref="LOCAL_VIDEO_STREAM_ERROR_CAPTURE_FAILURE"/></codeph>。注意，帧重复检测仅针对分辨率大于 200 × 200、帧率大于等于 10 fps、码率小于 20 Kbps 的视频帧。
            </p>
            <note id="note" type="attention">对某些机型而言，当本地视频采集设备正在使用中时，SDK 不会在本地视频状态发生改变时触发该回调，你需要自行做超时判断。</note>
        </section>
        <section id="parameters">
            <title>参数</title>
            <parml>
                <plentry conkeyref="onJoinChannelSuccess/engine" props="ios mac">
                  <pt/>
                  <pd/>
              </plentry>
                <plentry>
                    <pt props="android ios mac">state</pt>
                    <pt props="windows">localVideoState</pt>
                    <pd>
                        <p props="ios mac windows">本地视频状态，详见 <xref keyref="LOCAL_VIDEO_STREAM_STATE" />。</p>
                        <p props="android">
                            <ul>
                                <li><ph keyref="LOCAL_VIDEO_STREAM_STATE_STOPPED"/> (0): 本地视频默认初始状态。</li>
                                <li><ph keyref="LOCAL_VIDEO_STREAM_STATE_CAPTURING"/> (1): 本地视频采集设备启动成功。</li>
                                <li><ph keyref="LOCAL_VIDEO_STREAM_STATE_ENCODING"/> (2): 本地视频首帧编码成功。</li>
                                <li><ph keyref="LOCAL_VIDEO_STREAM_STATE_FAILED"/> (3): 本地视频启动失败。</li>
                            </ul>
                        </p>
                    </pd>
                </plentry>
                <plentry>
                    <pt>error</pt>
                    <pd>
                        <p props="ios mac windows">本地视频出错原因，详见 <xref keyref="LOCAL_VIDEO_STREAM_ERROR" />。</p>
                        <p props="android">
                            <ul>
                                <li><ph keyref="LOCAL_VIDEO_STREAM_ERROR_OK"/> (0): 本地视频状态正常。</li>
                                <li><ph keyref="LOCAL_VIDEO_STREAM_ERROR_FAILURE"/> (1): 出错原因不明确。</li>
                                <li><ph keyref="LOCAL_VIDEO_STREAM_ERROR_DEVICE_NO_PERMISSION"
                                /> (2): 没有权限启动本地视频采集设备。</li>
                                <li><ph keyref="LOCAL_VIDEO_STREAM_ERROR_DEVICE_BUSY"/> (3): 本地视频采集设备正在使用中。</li>
                                <li><ph keyref="LOCAL_VIDEO_STREAM_ERROR_CAPTURE_FAILURE"/> (4):
                                        本地视频采集失败，建议检查采集设备是否正常工作。<ul id="ul_ygj_tdx_qqb">
                                            <li>Android 9 及以上版本，app 切后台一段时间后，系统收回相机权限。</li>
                                        <li>Android 6 及以上版本，如果相机被第三方应用占用，且未被及时释放。如果一段时间后，相机被释放，则 SDK
                                            会再次出发该回调，并报告 <codeph>state</codeph> 为
                                                <codeph>CAPTURING</codeph>，<codeph>error</codeph> 为
                                                <codeph>ERROR_OK</codeph>。</li>
                                    </ul></li>
                                <li><ph keyref="LOCAL_VIDEO_STREAM_ERROR_ENCODE_FAILURE"/> (5): 本地视频编码失败。</li>
                                <li><ph keyref="LOCAL_VIDEO_STREAM_ERROR_DEVICE_NOT_FOUND"/> 8: 找不到本地视频采集设备。</li>
                                <li><ph
                                        keyref="LOCAL_VIDEO_STREAM_ERROR_SCREEN_CAPTURE_WINDOW_MINIMIZED"
                                /> 11: 调用 <xref keyref="startScreenCaptureByWindowId"/> 方法共享窗口时，共享窗口处于最小化的状态。</li>
                                <li><ph
                                        keyref="LOCAL_VIDEO_STREAM_ERROR_SCREEN_CAPTURE_WINDOW_CLOSED"
                                /> 12: 该错误码表示通过窗口 ID 共享的窗口已关闭，或通过窗口 ID 共享的全屏窗口已退出全屏。
                                    退出全屏模式后，远端用户将无法看到共享的窗口。为避免远端用户看到黑屏，Agora 建议你立即结束本次共享。</li>
                            </ul>
                        </p>
                    </pd>
                </plentry>
            </parml>
        </section>
    </refbody>
</reference>
