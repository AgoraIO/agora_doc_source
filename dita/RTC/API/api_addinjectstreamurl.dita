<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE reference PUBLIC "-//OASIS//DTD DITA Reference//EN" "reference.dtd">
<reference id="api_addinjectstreamurl">
    <title><ph keyref="addInjectStreamUrl"/></title>
    <shortdesc id="short"><ph id="shortdesc">输入在线媒体流。</ph></shortdesc>
    <prolog>
        <metadata>
            <keywords>
                <indexterm keyref="addInjectStreamUrl"/>
            </keywords>
        </metadata>
    </prolog>
    <refbody>
        <section id="prototype">
            <p outputclass="codeblock">
            <codeblock props="android" outputclass="language-java">public abstract int addInjectStreamUrl(String url, LiveInjectStreamConfig config);</codeblock>
            <codeblock props="ios mac" outputclass="language-objectivec">- (int)addInjectStreamUrl:(NSString* _Nonnull)url config:(AgoraLiveInjectStreamConfig* _Nonnull)config;</codeblock>
            <codeblock props="cpp" outputclass="language-cpp">virtual int addInjectStreamUrl(const char* url, const InjectStreamConfig&amp; config) = 0;</codeblock>
            <codeblock props="electron" outputclass="language-typescript">addInjectStreamUrl(url: string, config: InjectStreamConfig): number</codeblock>
            <codeblock props="cs" outputclass="language-csharp">public abstract int AddInjectStreamUrl(string url, InjectStreamConfig config);</codeblock>
            <codeblock props="rn" outputclass="language-typescript">addInjectStreamUrl(
    url: string,
    config: LiveInjectStreamConfig
  ): Promise&lt;void&gt;</codeblock>
            <codeblock props="flutter" outputclass="language-dart">Future&lt;void&gt; addInjectStreamUrl(String url, LiveInjectStreamConfig config);</codeblock> </p>
        </section>
        <section id="detailed_desc">
            <note id="inject-sunset-note" type="caution">客户端输入在线媒体流功能即将停服。如果你尚未集成该功能，声网建议你不要使用。详见<xref keyref="rtc-sunset">部分服务下架计划</xref>。</note>
            <note type="attention">
            <ul>
            <li>请确保已开通旁路推流的功能，详见<xref keyref="guide-cdn-streaming">旁路推流</xref>中的前提条件。</li>
            <li props="android ios mac cpp">该方法适用于 Native SDK v2.4.1 及之后的版本。</li>
            <li>在直播场景中，只有角色为主播的用户才能调用该方法。</li>
            <li>频道内同一时间只允许输入一个在线媒体流。</li>
            <li>该方法需要在加入频道后调用。</li>
            </ul> </note>
            <p>该方法将正在播放的音视频作为音视频源导入到正在进行的直播中。可主要应用于赛事直播、多人看视频互动等直播场景。调用该方法后，SDK 会在本地触发 <xref keyref="onStreamInjectedStatus"/> 回调，报告输入在线媒体流的状态；成功输入媒体流后，该音视频流会出现在频道中，频道内所有用户都会收到 <xref keyref="onUserJoined"/> 回调，其中 <parmname>uid</parmname> 为 666。</p>
        </section>
        <section id="parameters">
            <title>参数</title>
            <parml>
            <plentry>
                <pt>url</pt>
                <pd>
                    <p>添加到直播中的视频流 URL 地址。支持 RTMP、HLS、HTTP-FLV 协议传输。
                    
                    <ul>
                    <li>支持的音频编码格式：AAC；</li>
                    <li>支持的视频编码格式：H.264(AVC)。</li>
                    </ul> </p>
                </pd>
            </plentry>
            <plentry>
                <pt>config</pt>
                <pd>所添加的视频流属性定义，详见: <xref keyref="InjectStreamConfig"/> 。</pd>
            </plentry>
            </parml> </section>
        <section id="return_values" props="native electron cs">
            <title>返回值</title>
            <ul>
            <li>0: 方法调用成功</li>
            <li>&lt; 0: 方法调用失败 
                
                <ul>
                <li><codeph>ERR_INVALID_ARGUMENT</codeph> (2): 输入的 URL 为空。请重新调用该方法，并确认输入的媒体流的 URL 有效。</li>
                <li><codeph>ERR_NOT_READY</codeph> (3): 用户没有加入频道。</li>
                <li><codeph>ERR_NOT_SUPPORTED</codeph> (4): 频道非直播场景。请调用 <xref keyref="setChannelProfile"/> 并将频道设置为直播场景再调用该方法。</li>
                <li><codeph>ERR_NOT_INITIALIZED</codeph> (7): 引擎没有初始化。请确认调用该方法前已创建 <xref keyref="IRtcEngine"/> 对象并完成初始化。</li>
                </ul> </li>
            </ul> </section>
    </refbody>
</reference>
