<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE reference PUBLIC "-//OASIS//DTD DITA Reference//EN" "reference.dtd">
<reference id="api_joinchannel">
    <title><ph keyref="joinChannel1"/></title>
    <shortdesc id="short"><ph id="shortdesc">加入频道。</ph></shortdesc>
    <prolog>
        <metadata>
            <keywords>
                <indexterm keyref="joinChannel1"/>
            </keywords>
        </metadata>
    </prolog>
    <refbody>
        <section id="prototype">
            <p outputclass="codeblock" props="rtc-ng">
            <codeblock props="android" outputclass="language-java">public abstract int joinChannel(
    String token, String channelName, String optionalInfo, int optionalUid);</codeblock>
            <codeblock props="ios mac" outputclass="language-objectivec">- (int)joinChannelByToken:(NSString * _Nullable)token
                channelId:(NSString * _Nonnull)channelId
                     info:(NSString * _Nullable)info
                      uid:(NSUInteger)uid
              joinSuccess:(void(^ _Nullable)(NSString * _Nonnull channel, NSUInteger uid, NSInteger elapsed))joinSuccessBlock;</codeblock>
            <codeblock props="cpp" outputclass="language-cpp">virtual int joinChannel(const char* token, const char* channelId, const char* info,
                        uid_t uid) = 0;</codeblock>
            <codeblock props="cs" outputclass="language-csharp">public abstract int JoinChannel(string token, string channelId, string info = "", uint uid = 0);</codeblock> </p>
            <p outputclass="codeblock" props="rtc">
            <codeblock props="android" outputclass="language-java">public abstract int joinChannel(String token, String channelName, String optionalInfo, int optionalUid);</codeblock>
            <codeblock props="ios mac" outputclass="language-objectivec">- (int)joinChannelByToken:(NSString* _Nullable)token channelId:(NSString* _Nonnull)channelId info:(NSString* _Nullable)info uid:(NSUInteger)uid joinSuccess:(void (^_Nullable)(NSString* _Nonnull channel, NSUInteger uid, NSInteger elapsed))joinSuccessBlock;</codeblock>
            <codeblock props="cpp" outputclass="language-cpp">virtual int joinChannel(const char* token, const char* channelId, const char* info, uid_t uid) = 0;</codeblock>
            <codeblock props="electron" outputclass="language-typescript"/>
            <codeblock props="cs" outputclass="language-csharp">public abstract int JoinChannel(string token, string channelId, string info = "", uint uid = 0);</codeblock>
            <codeblock props="rn" outputclass="language-typescript"/>
            <codeblock props="flutter" outputclass="language-dart"/> </p>
        </section>
        <section id="detailed_desc">
            <p conkeyref="joinChannel2/desc1"/>
            <p conkeyref="joinChannel2/desc2"/>
            <p conkeyref="joinChannel2/desc3"/>
            <note type="attention">用户成功加入频道后，默认订阅频道内所有其他用户的音频流和视频流，因此产生用量并影响计费。如果想取消订阅，可以通过调用相应的 <apiname>mute</apiname> 方法实现。</note> </section>
        <section id="parameters">
            <title>参数</title>
            <parml>
            <plentry conkeyref="joinChannel2/token">
                <pt/>
                <pd/>
            </plentry>
            <plentry conkeyref="joinChannel2/channelID">
                <pt/>
                <pd/>
            </plentry>
            <plentry>
                <pt props="ios mac cpp cs">info</pt>
                <pt props="android">optionalInfo</pt>
                <pd>(非必选项) 预留参数。</pd>
            </plentry>
            <plentry id="uid">
                <pt props="ios mac cpp electron cs">uid</pt>
                <pt props="android">optionalUid</pt>
                <pd>用户 ID。该参数用于标识在实时音视频互动频道中的用户。你需要自行设置和管理用户 ID，并确保同一频道内的每个用户 ID 是唯一的。该参数为 32 位无符号整数。 建议设置范围：1 到 2<sup>32</sup>-1。如果不指定（即设为 0），SDK 会自动分配一个，并在 <apiname keyref="onJoinChannelSuccess"/> 回调中返回， 应用层必须记住该返回值并维护，SDK 不对该返回值进行维护。</pd>
            </plentry>
            <plentry props="ios mac" id="joinsuccessblock">
                <pt>joinSuccessBlock</pt>
                <pd>成功加入频道回调。<codeph>joinSuccessBlock</codeph> 优先级高于 <xref keyref="onJoinChannelSuccess"/>，如果两种回调都实现了，只有 <codeph>block</codeph> 会触发。我们建议你将 <codeph>joinSuccessBlock</codeph> 设置为 <codeph>nil</codeph>，使用 <xref keyref="IRtcEngineEventHandler"/> 回调。</pd>
            </plentry>
            </parml> </section>
        <section id="return_values" conkeyref="joinChannel2/return_values"/>
    </refbody>
</reference>
