<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE reference PUBLIC "-//OASIS//DTD DITA Reference//EN" "reference.dtd">
<reference id="api_onuserinfoupdated">
    <title><ph keyref="onUserInfoUpdated"/></title>
    <shortdesc id="short"><ph id="shortdesc">远端用户信息已更新回调。</ph></shortdesc>
    <prolog>
        <metadata>
   <keywords>
       <indexterm keyref="onUserInfoUpdated" />
   </keywords>
        </metadata>
    </prolog>
    <refbody><section id="prototype">
        <p outputclass="codeblock" props="rtc-ng">
            <codeblock props="ios mac" outputclass="language-objectivec">- (void)rtcEngine:(AgoraRtcEngineKit * _Nonnull)engine didUserInfoUpdatedWithUserId:(NSUInteger)uid userInfo:(AgoraUserInfo* _Nonnull)userInfo;</codeblock>
        </p>
        <p outputclass="codeblock" props="rtc">
            <codeblock props="ios mac" outputclass="language-objectivec">- (void)rtcEngine:(AgoraRtcEngineKit* _Nonnull)engine didUpdatedUserInfo:(AgoraUserInfo* _Nonnull)userInfo withUid:(NSUInteger)uid;</codeblock>
        </p>
        <p outputclass="codeblock">
                <codeblock props="android" outputclass="language-java">public void onUserInfoUpdated(int uid, UserInfo userInfo) {}</codeblock>
                <codeblock props="windows" outputclass="language-cpp">virtual void onUserInfoUpdated(uid_t uid, const UserInfo&amp; info) {
     (void)uid;
     (void)info;
     }</codeblock>
                <codeblock props="electron" outputclass="language-typescript">on(
  evt: EngineEvents.USER_INFO_UPDATED,
  cb: (uid: number, userInfo: UserInfo) => void
): this;</codeblock>
                <codeblock props="unity" outputclass="language-csharp">public virtual void OnUserInfoUpdated(uint uid, UserInfo info)</codeblock>
                <codeblock props="rn" outputclass="language-typescript"/>
                <codeblock props="flutter" outputclass="language-dart"/>
        </p>
        </section>
        <section id="detailed_desc">
   
   <dl outputclass="since" props="rtc">
       <dlentry>
  <dt>自从</dt>
  <dd>v2.8.0</dd>
       </dlentry>
   </dl>
   <p>远端用户加入频道后， SDK 会获取到该远端用户的 UID 和 User Account，然后缓存一个包含了远端用户 UID 和 User Account 的 Mapping 表，并在本地触发该回调。</p>
        </section>
        <section id="parameters"><title>参数</title>
   <parml>
       <plentry conkeyref="onJoinChannelSuccess/engine" props="ios mac">
                  <pt/>
                  <pd/>
              </plentry>
       <plentry>
  <pt>uid</pt>
  <pd>远端用户 ID。</pd>
       </plentry>
       <plentry>
  <pt props="android ios mac electron">userInfo</pt>
           <pt props="windows unity">info</pt>
  <pd>标识用户信息的 UserInfo 对象，包含用户 UID 和 User Account。详见 <xref keyref="UserInfo"/> 类。</pd>
       </plentry>
   </parml>
        </section>
</refbody>
</reference>
