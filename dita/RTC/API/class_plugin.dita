<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE reference PUBLIC "-//OASIS//DTD DITA Reference//EN" "reference.dtd">
<reference id="class_plugin">
    <title><ph keyref="Plugin"/></title>
    <shortdesc id="short"><ph id="shortdesc">用于配置和管理插件的接口。</ph></shortdesc>
    <refbody>
        <section id="prototype">
            <p outputclass="codeblock">
            <codeblock props="android" outputclass="language-java"/>
            <codeblock props="ios mac" outputclass="language-objectivec"/>
            <codeblock props="cpp" outputclass="language-cpp"/>
            <codeblock props="electron" outputclass="language-typescript">export interface Plugin {
    id: string;
    enable: () =&gt; number;
    disable: () =&gt; number;
    setParameter: (param: string) =&gt; number;
    getParameter: (paramKey: string) =&gt; string;
    }</codeblock>
            <codeblock props="cs" outputclass="language-csharp"/>
            <codeblock props="rn" outputclass="language-typescript"/>
            <codeblock props="flutter" outputclass="language-dart"/> </p>
        </section>
        <section id="detailed_desc">
            <p>调用 <xref keyref="registerPlugin"/> 注册插件后，你可以通过 <xref keyref="getPlugins"/> 获取
                    <apiname keyref="Plugin"/> 接口。</p>
        </section>
        <section id="parameters">
            <title><text conref="../conref/conref_api_metadata.dita#conref_api_metadata/property"/></title>
            <parml>
            <plentry>
                <pt>id</pt>
                <pd>用于标识插件的 ID。</pd>
            </plentry>
            <plentry>
                <pt>enable</pt>
                <pd>开启插件。</pd>
                <pd><b>返回值</b>
                    <ul>
                    <li>0：方法调用成功。</li>
                    <li>&lt; 0: 方法调用失败。</li>
                    </ul></pd>
            </plentry>
            <plentry>
                <pt>disable</pt>
                <pd>关闭插件。</pd>
                <pd><b>返回值</b>
                    <ul>
                    <li>0：方法调用成功。</li>
                    <li>&lt; 0: 方法调用失败。</li>
                    </ul></pd>
            </plentry>
            <plentry>
                <pt>setParameter</pt>
                <pd>设置插件参数。调用 <apiname>getParameter</apiname> 获取到 Value 值后，你可以调用本方法将包含 Key 和 Value 值的 JSON 字符串数据传递给 C++ 层。</pd>
                <pd><b>参数</b>
                    <parml>
                    <plentry>
                        <pt>param</pt>
                        <pd>包含 Key 和 Value 值的 JSON 字符串。</pd>
                    </plentry>
                    </parml></pd>
            </plentry>
            <plentry>
                <pt>getParameter</pt>
                <pd>获取插件参数。如果你想在使用插件时将 JSON 字符串数据传递给 C++ 层，你需要调用该方法和 <apiname>setParameter</apiname>获取并设置参数。</pd>
                <pd><b>参数</b>
                    <parml>
                    <plentry>
                        <pt>paramKey</pt>
                        <pd>Key 值。</pd>
                    </plentry>
                    </parml></pd>
                <pd><b>返回值</b>
                    <p>Key 值对应的 Value 值。</p>
                </pd>
            </plentry>
            </parml> </section>
    </refbody>
</reference>
