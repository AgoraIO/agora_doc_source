<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE reference PUBLIC "-//OASIS//DTD DITA Reference//EN" "reference.dtd">
<reference id="api_onstreammessage">
    <title><ph keyref="onStreamMessage"/></title>
    <shortdesc id="short"><ph id="shortdesc">接收到对方数据流消息的回调。</ph></shortdesc>
    <prolog>
        <metadata>
   <keywords>
       <indexterm keyref="onStreamMessage" />
   </keywords>
        </metadata>
    </prolog>
    <refbody><section id="prototype">
        <p outputclass="codeblock">
                <codeblock props="android" outputclass="language-java"/>
                <codeblock props="ios mac" outputclass="language-objectivec"/>
                <codeblock props="windows" outputclass="language-cpp">virtual void onStreamMessage(uid_t uid, 
     int streamId, 
     const char* data, 
     size_t length) {
     (void)uid;
     (void)streamId;
     (void)data;
     (void)length;
     }</codeblock>
                <codeblock props="electron" outputclass="language-typescript">on(evt: EngineEvents.STREAM_MESSAGE, cb: (
     uid: number, 
     streamId: number, 
     msg: string, 
     len: number) => void
     ): this;</codeblock>
                <codeblock props="unity" outputclass="language-csharp"/>
                <codeblock props="rn" outputclass="language-typescript"/>
                <codeblock props="flutter" outputclass="language-dart"/>
        </p>
        </section>
        <section id="detailed_desc">
   
   <p>该回调表示本地用户收到了远端用户调用 <xref keyref="sendStreamMessage"/> 方法发送的流消息。</p>
        </section>
        <section id="parameters"><title>参数</title>
   <parml>
       <plentry id="uid">
  <pt>uid</pt>
  <pd>发送消息的用户 ID。</pd>
       </plentry>
       <plentry id="streamId">
  <pt>streamId</pt>
  <pd>接收到的消息的 Stream ID。</pd>
       </plentry>
       <plentry id="data">
  <pt>data</pt>
  <pd>接收到的数据。</pd>
       </plentry>
       <plentry id="length">
  <pt>length</pt>
  <pd>数据长度，单位为字节。</pd>
       </plentry>
   </parml>
        </section>
</refbody>
</reference>
