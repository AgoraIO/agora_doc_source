<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE reference PUBLIC "-//OASIS//DTD DITA Reference//EN" "reference.dtd">
<reference id="class_audiovolumeinfo">
    <title><ph keyref="AudioVolumeInfo"/></title>
    <shortdesc id="short"><ph id="shortdesc">用户音量信息。</ph></shortdesc>
    <refbody>
        <section id="prototype">
            <p props="rtc-ng" outputclass="codeblock">
                <codeblock props="android" outputclass="language-java">public static class AudioVolumeInfo {
    public int uid;
    public int volume;
    public int vad;
    public double voicePitch;
  }</codeblock>
                <codeblock props="ios mac" outputclass="language-objectivec">__attribute__((visibility("default"))) @interface AgoraRtcAudioVolumeInfo : NSObject
@property(assign, nonatomic) NSUInteger uid;
@property(assign, nonatomic) NSUInteger volume;
@property(assign, nonatomic) NSUInteger vad;
@property (assign, nonatomic) double voicePitch;
@end</codeblock>
                <codeblock props="windows" outputclass="language-cpp">struct AudioVolumeInfo {
                    uid_t uid;
                    unsigned int volume;
                    unsigned int vad;
                    double voicePitch;
                    AudioVolumeInfo() : uid(0), volume(0), vad(0), voicePitch(0.0) {}
                    };</codeblock>
            </p>
            <p props="rtc" outputclass="codeblock">
                <codeblock props="android" outputclass="language-java">public static class AudioVolumeInfo {
        public int uid;
        public int volume;
        public int vad;
        public String channelId;
        }
</codeblock>
                <codeblock props="ios mac" outputclass="language-objectivec">__attribute__((visibility("default"))) @interface AgoraRtcAudioVolumeInfo : NSObject
@property(assign, nonatomic) NSUInteger uid;
@property(assign, nonatomic) NSUInteger volume;
@property(assign, nonatomic) NSUInteger vad;
@property(copy, nonatomic) NSString* channelId;
</codeblock>
                <codeblock props="windows unity" outputclass="language-cpp">struct AudioVolumeInfo {
    uid_t uid;
    unsigned int volume;
    unsigned int vad;
    const char * channelId;
    };  </codeblock>
                <codeblock props="electron" outputclass="language-typescript">export interface AudioVolumeInfo
    {
    uid: number,
    volume: number
    vad: number
    channelId: string
    }</codeblock>
                <codeblock props="rn" outputclass="language-typescript"/>
                <codeblock props="flutter" outputclass="language-dart">class AudioVolumeInfo {
  int uid;
  int volume;
  int vad;
  String channelId;

  AudioVolumeInfo(
    this.uid,
    this.volume,
    this.vad,
    this.channelId,
  );
}</codeblock>
            </p>
        </section>
        <section id="parameters">
   <title><text conref="../conref/conref_api_metadata.dita#conref_api_metadata/property"/></title>
   <parml>
       <plentry>
                    <pt>uid</pt>
                    <pd>
                        <p>用户 ID。<ul id="ul_pfj_4dt_rqb">
                                <li>在本地用户的回调中，<parmname>uid</parmname> 为 0。</li>
                                <li>在远端用户的回调中，<parmname>uid</parmname> 为瞬时音量最高的远端用户（最多 3 位）的 ID。</li>
                            </ul></p>
                    </pd>
                </plentry>
       <plentry>
  <pt>volume</pt>
  <pd>用户的音量，取值范围为 [0,255]。如果用户调用了 <xref keyref="startAudioMixing2"/>，则 <parmname>volume</parmname> 为用户混音后的音量。</pd>
       </plentry>
       <plentry>
                    <pt>vad</pt>
                    <pd>
                        <p>本地用户的人声状态。<ul>
                            <li>0：本地无人声。</li>
                            <li>1：本地有人声。</li>
                            </ul> </p>
                        <note type="attention">
                            <ul>
                                <li><parmname>vad</parmname> 无法报告远端用户的人声状态。对于远端用户，<parmname>vad</parmname> 的值始终为 0。</li>
                                <li props="rtc">如需使用此参数，请在调用 <xref keyref="enableAudioVolumeIndication"/> 时设置 <parmname props="ios mac windows android electron">report_vad</parmname><parmname props="unity">reportVad</parmname> 为 <codeph><ph keyref="true"/></codeph>。</li>
                                <li props="rtc-ng">如需使用此参数，请在调用 <xref keyref="enableAudioVolumeIndication"/> 时设置 <parmname>reportVad</parmname> 为 <codeph><ph keyref="true"/></codeph>。</li>
                            </ul>
                        </note>
                    </pd>
                </plentry>
       <plentry props="rtc">
                    <pt>channelId</pt>
                    <pd>用户所在频道的频道名称。</pd>
       </plentry>
       <plentry props="rtc-ng">
           <pt>voicePitch</pt>
           <pd>
               <p>本地用户的人声音调（Hz）。取值范围为 [0.0,4000.0]。
               </p>
               <note type="attention"><parmname>voicePitch</parmname> 无法报告远端用户的人声音调。对于远端用户，<parmname>voicePitch</parmname> 的值始终为 0。</note>
           </pd>
       </plentry>
   </parml>
        </section></refbody>
</reference>
