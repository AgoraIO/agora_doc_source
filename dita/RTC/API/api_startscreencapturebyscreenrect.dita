<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE reference PUBLIC "-//OASIS//DTD DITA Reference//EN" "reference.dtd">
<reference id="api_startscreencapturebyscreenrect">
    <title><ph keyref="startScreenCaptureByScreenRect" /></title>
    <shortdesc id="short"><ph id="shortdesc">通过指定区域共享屏幕。</ph></shortdesc>
    <prolog>
        <metadata>
   <keywords>
       <indexterm keyref="startScreenCaptureByScreenRect" />
   </keywords>
        </metadata>
    </prolog>
    <refbody><section id="prototype">
        <p outputclass="codeblock">
                <codeblock props="android" outputclass="language-java" />
                <codeblock props="ios mac" outputclass="language-objectivec" />
                <codeblock props="windows" outputclass="language-cpp">virtual int startScreenCaptureByScreenRect(const Rectangle&amp; screenRect, 
     const Rectangle&amp; regionRect, 
     const ScreenCaptureParameters&amp; captureParams) = 0;</codeblock>
                <codeblock props="electron" outputclass="language-typescript">startScreenCaptureByScreen(screenSymbol: ScreenSymbol,
     regionRect: Rectangle,
     captureParams: ScreenCaptureParameters
     ): number</codeblock>
                <codeblock props="unity" outputclass="language-csharp">public abstract int StartScreenCaptureByScreenRect(Rectangle screenRect, Rectangle regionRect,
            ScreenCaptureParameters captureParams);</codeblock>
                <codeblock props="rn" outputclass="language-typescript" />
                <codeblock props="flutter" outputclass="language-dart">Future&lt;void&gt; startScreenCaptureByScreenRect(Rectangle screenRect,
      [Rectangle? regionRect, ScreenCaptureParameters? captureParams]);</codeblock>
        </p>
        </section>
        <section id="detailed_desc">
   
   <dl outputclass="since" props="rtc">
       <dlentry props="native">
  <dt>自从</dt>
  <dd>v2.4.0</dd>
       </dlentry>
   </dl>
   <p id="desc">共享一个屏幕或该屏幕的部分区域。你需要在该方法中指定想要共享的屏幕区域。</p>
   <note type="attention" id="note">该方法需要在加入频道后调用。</note>
        </section>
        <section id="parameters"><title>参数</title>
   <parml>
       <plentry props="windows unity flutter">
  <pt>screenRect</pt>
  <pd>指定待共享的屏幕相对于虚拟屏的位置。</pd>
       </plentry>
       <plentry props="electron">
  <pt>screenSymbol</pt>
  <pd>标识屏幕的 Display ID（macOS 系统）或 ScreenRect（Windows 系统）。详见 <xref keyref="ScreenSymbol" />。你可以通过 <xref keyref="getScreensInfo" /> 方法获取。</pd>
       </plentry>
       <plentry>
  <pt>regionRect</pt>
  <pd>(可选）指定待共享区域相对于整个屏幕的位置。如不填，则表示共享整个屏幕。详见 <xref keyref="Rectangle" />。如果设置的共享区域超出了屏幕的边界，则只共享屏幕内的内容；如果将 width 或 height 设为 0 ，则共享整个屏幕。</pd>
       </plentry>
       <plentry>
  <pt>captureParams</pt>
  <pd>屏幕共享的编码参数配置。默认的分辨率为 1920 x 1080，即 2073600 像素。该像素值为计费标准。详见 <xref keyref="ScreenCaptureParameters" />。</pd>
       </plentry>
   </parml>
        </section>
        <section id="return_values" props="native electron unity">
   <title>返回值</title>
   <ul>
       <li>0: 方法调用成功。</li>
       <li>&lt; 0: 方法调用失败。</li>
   </ul>
        </section></refbody>
</reference>
