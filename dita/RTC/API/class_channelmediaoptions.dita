<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE reference PUBLIC "-//OASIS//DTD DITA Reference//EN" "reference.dtd">
<reference id="class_channelmediaoptions">
    <title><ph keyref="ChannelMediaOptions"/></title>
    <shortdesc id="short"><ph id="shortdesc">频道媒体设置选项。</ph></shortdesc>
    <refbody>
        <section id="prototype">
            <p outputclass="codeblock">
            <codeblock props="android" outputclass="language-java"/>
            <codeblock props="ios mac" outputclass="language-objectivec"/>
            <codeblock props="cpp" outputclass="language-cpp">struct ChannelMediaOptions {
    bool autoSubscribeAudio;
    bool autoSubscribeVideo;
    ChannelMediaOptions()
    : autoSubscribeAudio(true)
    , autoSubscribeVideo(true)
    {}
    };</codeblock>
            <codeblock props="cs" outputclass="language-csharp">public class ChannelMediaOptions
    {
        public ChannelMediaOptions()
        {
            autoSubscribeAudio = true;
            autoSubscribeVideo = true;
            publishLocalAudio = true;
            publishLocalVideo = true;
        }

        public ChannelMediaOptions(bool autoSubscribeAudio, bool autoSubscribeVideo, bool publishLocalAudio,
            bool publishLocalVideo)
        {
            this.autoSubscribeAudio = autoSubscribeAudio;
            this.autoSubscribeVideo = autoSubscribeVideo;
            this.publishLocalAudio = publishLocalAudio;
            this.publishLocalVideo = publishLocalVideo;
        }

        public bool autoSubscribeAudio { set; get; }
        public bool autoSubscribeVideo { set; get; }
        public bool publishLocalAudio { set; get; }
        public bool publishLocalVideo { set; get; }
    }</codeblock>
            <codeblock props="electron" outputclass="language-typescript">export interface ChannelMediaOptions {
    autoSubscribeAudio: boolean;
    autoSubscribeVideo: boolean;
    }</codeblock>
            <codeblock props="rn" outputclass="language-typescript"/>
            <codeblock props="flutter" outputclass="language-dart">class ChannelMediaOptions {

  @JsonKey(includeIfNull: false)
  bool? autoSubscribeAudio;

  @JsonKey(includeIfNull: false)
  bool? autoSubscribeVideo;

  @JsonKey(includeIfNull: false)
  bool? publishLocalAudio;

  @JsonKey(includeIfNull: false)
  bool? publishLocalVideo;

  ChannelMediaOptions({
    this.autoSubscribeAudio,
    this.autoSubscribeVideo,
    this.publishLocalAudio,
    this.publishLocalVideo,
  });

  factory ChannelMediaOptions.fromJson(Map&lt;String, dynamic> json) =>
      _$ChannelMediaOptionsFromJson(json);

  Map&lt;String, dynamic> toJson() => _$ChannelMediaOptionsToJson(this);
}</codeblock> </p>
        </section>
        <section>
            <dl outputclass="since">
            <dlentry>
                <dt>自从</dt>
                <dd>v3.0.0</dd>
            </dlentry>
            </dl>
        </section>
        <section id="parameters">
            <title><text
            conref="../conref/conref_api_metadata.dita#conref_api_metadata/property"
            /></title>
            <parml>
            <plentry>
                <pt>autoSubscribeAudio</pt>
                <pd>是否自动订阅频道内所有远端音频流：
                    
                    <ul>
                    <li><codeph><ph keyref="true"/></codeph>:（默认）订阅。</li>
                    <li><codeph><ph keyref="false"/></codeph>: 不订阅。</li>
                    </ul>
  该成员功能与 <xref keyref="muteAllRemoteAudioStreams"
                    /> 相同。加入频道后，你可以通过 <apiname>muteAllRemoteAudioStreams</apiname> 方法重新设置是否订阅频道内的远端音频流。
  </pd>
            </plentry>
            <plentry>
                <pt>audioSubscribeVideo</pt>
                <pd>是否自动订阅频道内所有远端视频流：
                    
                    <ul>
                    <li><codeph><ph keyref="true"/></codeph>:（默认）订阅。</li>
                    <li><codeph><ph keyref="false"/></codeph>: 不订阅。</li>
                    </ul>
  该成员功能与 <xref keyref="muteAllRemoteVideoStreams"
                    /> 相同。加入频道后，你可以通过 <apiname>muteAllRemoteVideoStreams</apiname> 方法重新设置是否订阅频道内的远端视频流。
  </pd>
            </plentry>
            <plentry>
                <pt>publishLocalAudio</pt>
                <pd>是否自动在频道内发布本地音频流：
                    
                    <ul>
                    <li><codeph><ph keyref="true"/></codeph>：（默认）发布。</li>
                    <li><codeph><ph keyref="false"/></codeph>: 不发布。</li>
                    </ul>
                    <p>该成员功能与 <xref keyref="muteLocalAudioStream"
                    /> 相同。加入频道后，你可以通过 <codeph>muteLocalAudioStream</codeph> 方法重新设置是否在频道内发布本地音频流。</p>
                </pd>
            </plentry>
            <plentry>
                <pt>publishLocalVideo</pt>
                <pd>是否自动在频道内发布本地视频流：
                    
                    <ul>
                    <li><codeph><ph keyref="true"/></codeph>：（默认）发布。</li>
                    <li><codeph><ph keyref="false"/></codeph>: 不发布。</li>
                    </ul>
                    <p>该成员功能与 <xref keyref="muteLocalVideoStream"
                    /> 相同。加入频道后，你可以通过 <codeph>muteLocalVideoStream</codeph> 方法重新设置是否在频道内发布本地视频流。</p>
                </pd>
            </plentry>
            </parml> </section>
    </refbody>
</reference>
