<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE reference PUBLIC "-//OASIS//DTD DITA Reference//EN" "reference.dtd">
<reference id="api_ichannel_stoprtmpstream">
    <title> <ph keyref="IChannel_stopRtmpStream"/> </title>
    <shortdesc conkeyref="stopRtmpStream/short"/>
    <prolog>
        <metadata>
            <keywords>
                <indexterm keyref="IChannel_stopRtmpStream"/>
            </keywords>
        </metadata>
    </prolog>
    <refbody>
        <section id="prototype">
            <p outputclass="codeblock">
            <codeblock props="android" outputclass="language-java"/>
            <codeblock props="ios mac" outputclass="language-objectivec"/>
            <codeblock props="cpp" outputclass="language-cpp"/>
            <codeblock props="electron" outputclass="language-typescript"/>
            <codeblock props="cs" outputclass="language-csharp">public abstract int StopRtmpStream(string url);</codeblock>
            <codeblock props="rn" outputclass="language-typescript"/>
            <codeblock props="flutter" outputclass="language-dart">Future&lt;void&gt; stopRtmpStream(String url);</codeblock> </p>
        </section>
        <section id="detailed_desc">
            <p>调用该方法，你可以结束指定的 CDN 推流地址上的直播。该方法每次只能结束一个推流地址上的直播，如果你需要结束多个推流地址的直播，则需多次调用该方法。</p>
            <p>调用该方法后，SDK 会在本地触发 <xref keyref="IChannel_onRtmpStreamingStateChanged"/> 回调，报告推流的状态。</p>
        </section>
        <section id="parameters">
            <title>参数</title>
            <parml>
            <plentry conkeyref="startRtmpStreamWithTranscoding/url">
                <pt/>
                <pd/>
            </plentry>
            </parml> </section>
        <section id="return_values" conkeyref="stopRtmpStream/return_values" props="cpp"/>
    </refbody>
</reference>
