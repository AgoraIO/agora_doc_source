<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE reference PUBLIC "-//OASIS//DTD DITA Reference//EN" "reference.dtd">
<reference id="api_onwarning">
    <title><ph keyref="onWarning"/></title>
    <shortdesc id="short"><ph id="shortdesc">发生警告回调。</ph></shortdesc>
    <prolog>
        <metadata>
   <keywords>
       <indexterm keyref="onWarning" />
   </keywords>
        </metadata>
    </prolog>
    <refbody><section id="prototype">
        <p outputclass="codeblock">
                <codeblock props="android" outputclass="language-java"/>
                <codeblock props="ios mac" outputclass="language-objectivec"/>
                <codeblock props="windows" outputclass="language-cpp">virtual void onWarning(int warn, const char* msg) {
    (void)warn;
    (void)msg;
    }</codeblock>
                <codeblock props="electron" outputclass="language-typescript">on(evt: EngineEvents.WARNING, cb: (warn: number, msg: string) => void): this;</codeblock>
                <codeblock props="unity" outputclass="language-csharp">public virtual void OnWarning(int warn, string msg)</codeblock>
                <codeblock props="rn" outputclass="language-typescript"/>
                <codeblock props="flutter" outputclass="language-dart"/>
        </p>
        </section>
        <section id="detailed_desc">
   
   <p id="desc">该回调方法表示 SDK 运行时出现了（网络或媒体相关的）警告。通常情况下，SDK 上报的警告信息 App 可以忽略，SDK 会自动恢复。比如和服务器失去连接时，SDK
       可能会上报 <parmname>WARN_OPEN_CHANNEL_TIMEOUT</parmname> 警告，同时自动尝试重连。</p>
        </section>
        <section id="parameters"><title>参数</title>
   <parml>
       <plentry>
  <pt>warn</pt>
           <pd>警告代码。<ph props="rtc">详见<xref keyref="errorCode">错误码和警告码</xref>。</ph></pd>
       </plentry>
       <plentry>
  <pt>msg</pt>
  <pd>警告描述。</pd>
       </plentry>
   </parml>
        </section></refbody>
</reference>
