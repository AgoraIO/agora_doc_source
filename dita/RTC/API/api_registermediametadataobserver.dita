<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE reference PUBLIC "-//OASIS//DTD DITA Reference//EN" "reference.dtd">
<reference id="api_registermediametadataobserver">
    <title><ph keyref="registerMediaMetadataObserver" /></title>
    <shortdesc id="short"><ph id="shortdesc">注册媒体 metadata 观测器用于接收或发送 metadata。</ph></shortdesc>
    <prolog>
        <metadata>
   <keywords>
       <indexterm keyref="registerMediaMetadataObserver" />
   </keywords>
        </metadata>
    </prolog>
    <refbody><section id="prototype">
        <p outputclass="codeblock">
                <codeblock props="android" outputclass="language-java">public abstract int registerMediaMetadataObserver(IMetadataObserver observer, int type);</codeblock>
                <codeblock props="ios mac" outputclass="language-objectivec">- (BOOL)setMediaMetadataDelegate:(id&lt;AgoraMediaMetadataDelegate&gt; _Nullable)metadataDelegate withType:(AgoraMetadataType)type;</codeblock>
                <codeblock props="windows" outputclass="language-cpp">virtual int registerMediaMetadataObserver(IMetadataObserver *observer, IMetadataObserver::METADATA_TYPE type) = 0;
</codeblock>
                <codeblock props="electron" outputclass="language-typescript">registerMediaMetadataObserver(type: METADATA_TYPE = 0): number </codeblock>
                <codeblock props="unity" outputclass="language-csharp">public abstract int RegisterMediaMetadataObserver(METADATA_TYPE type);</codeblock>
                <codeblock props="rn" outputclass="language-typescript" />
                <codeblock props="flutter" outputclass="language-dart">Future&lt;void&gt; registerMediaMetadataObserver();</codeblock>
        </p>
        </section>
        <section id="detailed_desc">
            <dl outputclass="since" props="rtc">
                <dlentry props="native">
                    <dt>自从</dt>
                    <dd>v2.4.1</dd>
                </dlentry>
            </dl>
            <p props="android ios mac windows">你需要自行实现 <xref keyref="IMetadataObserver" /> 类并在本方法中指定 metadata 类型。本方法允许你为视频流添加同步的
                metadata，用于多样化的直播互动，如发送购物链接、电子优惠券和在线测试。</p>
            <p props="android ios mac windows">调用该方法成功后，SDK 会触发 <xref keyref="getMaxMetadataSize" /> 回调。</p>
   <p>
       <note type="attention">
  <ul id="ul_bmd_btz_r4b">
      <li>请在 <apiname keyref="joinChannel2" /> 前调用该方法。</li>
      <li>该方法仅适用于直播场景。</li>
  </ul>
       </note>
   </p>
        </section>
        <section id="parameters" props="native"><title>参数</title>
   <parml>
       <plentry props="windows android ios mac">
  <pt>observer</pt>
  <pd>metadata 观测器。详见 <xref keyref="IMetadataObserver" />。 </pd>
       </plentry>
       <plentry id="metadatatype">
  <pt>type</pt>
  <pd>用户希望在观测器中使用的 METADATA 类型 。目前仅支持 <apiname keyref="VIDEO_METADATA" /> 。详见 <xref href="enum_metadatatype.dita" />。</pd>
       </plentry>
   </parml>
        </section>
        <section id="return_values" props="native electron unity">
   <title>返回值</title>
   <ul>
       <li>0：方法调用成功。</li>
       <li>&lt; 0：方法调用失败。</li>
   </ul>
        </section></refbody>
</reference>
