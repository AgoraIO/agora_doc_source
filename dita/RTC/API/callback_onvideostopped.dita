<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE reference PUBLIC "-//OASIS//DTD DITA Reference//EN" "reference.dtd">
<reference id="callback_onvideostopped">
    <title><ph keyref="onVideoStopped"/></title>
    <shortdesc id="short"><ph id="shortdesc">视频功能已停止回调。</ph></shortdesc>
    <prolog>
        <metadata>
            <keywords>
                <indexterm keyref="onVideoStopped"/>
            </keywords>
        </metadata>
    </prolog>
    <refbody>
        <section id="prototype">
            <p outputclass="codeblock">
                <codeblock props="android" outputclass="language-java">public void onVideoStopped() {}</codeblock>
                <codeblock props="ios mac" outputclass="language-objectivec">- (void)rtcEngineVideoDidStop:(AgoraRtcEngineKit * _Nonnull)engine;</codeblock>
                <codeblock props="cpp" outputclass="language-cpp">virtual void onVideoStopped()</codeblock>
                <codeblock props="electron" outputclass="language-typescript">on(evt: EngineEvents.VIDEO_STOPPED, cb: () =&gt; void): this;</codeblock>
                <codeblock props="cs" outputclass="language-csharp">public virtual void OnVideoStopped()</codeblock>
                <codeblock props="rn" outputclass="language-typescript"/>
                <codeblock props="flutter" outputclass="language-dart">EmptyCallback? videoStopped;</codeblock>
            </p>
        </section>
        <section id="detailed_desc">
            <dl outputclass="deprecated">
                <dlentry>
                    <dt>弃用：</dt>
                    <dd>请改用 <xref keyref="onLocalVideoStateChanged"/> 回调中的 <apiname
                            keyref="LOCAL_VIDEO_STREAM_STATE_STOPPED"/>(0)。</dd>
                </dlentry>
            </dl>
            <p id="desc">App 如需在停止视频后对 <parmname>view</parmname> 做其他处理（比如显示其他画面），可以在这个回调中进行。</p>
        </section>
        <section id="parameters" props="ios mac">
            <title><ph keyref="callback-section-title"/></title>
            <p conkeyref="onJoinChannelSuccess/callback-desc" props="flutter rn"/>
            <parml>
                <plentry conkeyref="onJoinChannelSuccess/engine" props="ios mac">
                    <pt/>
                    <pd/>
                </plentry>
            </parml>
        </section>
    </refbody>
</reference>
