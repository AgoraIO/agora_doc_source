<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE reference PUBLIC "-//OASIS//DTD DITA Reference//EN" "reference.dtd">
<reference id="class_injectstreamconfig">
    <title><ph keyref="InjectStreamConfig"/></title>
    <shortdesc id="short"><ph id="shortdesc">输入外部音视频流的配置。
        </ph></shortdesc>
    <refbody>
        <section id="prototype">
            <p outputclass="codeblock">
            <codeblock props="android" outputclass="language-java">public class LiveInjectStreamConfig {

    public enum AudioSampleRateType {
        TYPE_32000(32000),
        TYPE_44100(44100),
        TYPE_48000(48000);
    }
    public int width;
    public int height;
    public int videoGop;
    public int videoFramerate;
    public int videoBitrate;
    public AudioSampleRateType audioSampleRate;
    public int audioBitrate;
    public int audioChannels;

    public LiveInjectStreamConfig() {
        width = 0;
        height = 0;
        videoGop = 30;
        videoFramerate = 15;
        videoBitrate = 400;
        audioSampleRate = AudioSampleRateType.TYPE_44100;
        audioBitrate = 48;
        audioChannels = 1;
    }
}</codeblock>
            <codeblock props="ios mac" outputclass="language-objectivec">__attribute__((visibility("default"))) @interface AgoraLiveInjectStreamConfig : NSObject

@property(assign, nonatomic) CGSize size;
@property(assign, nonatomic) NSInteger videoGop;
@property(assign, nonatomic) NSInteger videoFramerate;
@property(assign, nonatomic) NSInteger videoBitrate;
@property(assign, nonatomic) AgoraAudioSampleRateType audioSampleRate;
@property(assign, nonatomic) NSInteger audioBitrate;
@property(assign, nonatomic) NSInteger audioChannels;
+ (AgoraLiveInjectStreamConfig *_Nonnull)defaultConfig;
@end</codeblock>
            <codeblock props="cpp" outputclass="language-cpp">struct InjectStreamConfig {
    int width;
    int height;
    int videoGop;
    int videoFramerate;
    int videoBitrate;
    AUDIO_SAMPLE_RATE_TYPE audioSampleRate;
    int audioBitrate;
    int audioChannels;

    InjectStreamConfig()
        : width(0)
        , height(0)
        , videoGop(30)
        , videoFramerate(15)
        , videoBitrate(400)
        , audioSampleRate(AUDIO_SAMPLE_RATE_48000)
        , audioBitrate(48)
        , audioChannels(1)
    {}
    };</codeblock>
            <codeblock props="cs" outputclass="language-csharp">public class InjectStreamConfig
    {
        public InjectStreamConfig()
        {
            width = 0;
            height = 0;
            videoGop = 30;
            videoFramerate = 15;
            videoBitrate = 400;
            audioSampleRate = AUDIO_SAMPLE_RATE_TYPE.AUDIO_SAMPLE_RATE_48000;
            audioBitrate = 48;
            audioChannels = 1;
        }

        public InjectStreamConfig(int width, int height, int videoGop, int videoFramerate, int videoBitrate,
            AUDIO_SAMPLE_RATE_TYPE audioSampleRate, int audioBitrate, int audioChannels)
        {
            this.width = width;
            this.height = height;
            this.videoGop = videoGop;
            this.videoFramerate = videoFramerate;
            this.videoBitrate = videoBitrate;
            this.audioSampleRate = audioSampleRate;
            this.audioBitrate = audioBitrate;
            this.audioChannels = audioChannels;
        }

        public int width { set; get; }
        public int height { set; get; }
        public int videoGop { set; get; }
        public int videoFramerate { set; get; }
        public int videoBitrate { set; get; }
        public AUDIO_SAMPLE_RATE_TYPE audioSampleRate { set; get; }
        public int audioBitrate { set; get; }
        public int audioChannels { set; get; }
    }</codeblock>
            <codeblock props="electron" outputclass="language-typescript">export interface InjectStreamConfig {
    width: number;
    height: number;
    videoBitrate: number;
    videoFramerate: number;
    videoGop: number;
    audioSampleRate: AUDIO_SAMPLE_RATE_TYPE;
    audioBitrate: number;
    audioChannels: number;
    }</codeblock>
            <codeblock props="rn" outputclass="language-typescript"/>
            <codeblock props="flutter" outputclass="language-dart">class LiveInjectStreamConfig {

  @JsonKey(includeIfNull: false)
  int? width;

  @JsonKey(includeIfNull: false)
  int? height;

  @JsonKey(includeIfNull: false)
  int? videoGop;

  @JsonKey(includeIfNull: false)
  VideoFrameRate? videoFramerate;

  @JsonKey(includeIfNull: false)
  int? videoBitrate;

  @JsonKey(includeIfNull: false)
  AudioSampleRateType? audioSampleRate;

  @JsonKey(includeIfNull: false)
  int? audioBitrate;

  @JsonKey(includeIfNull: false)
  AudioChannel? audioChannels;

  LiveInjectStreamConfig({
    this.width,
    this.height,
    this.videoGop,
    this.videoFramerate,
    this.videoBitrate,
    this.audioSampleRate,
    this.audioBitrate,
    this.audioChannels,
  });

  factory LiveInjectStreamConfig.fromJson(Map&lt;String, dynamic> json) =>
      _$LiveInjectStreamConfigFromJson(json);

  Map&lt;String, dynamic> toJson() => _$LiveInjectStreamConfigToJson(this);
}</codeblock> </p>
        </section>
        <section id="detailed_desc">
            <note conkeyref="addInjectStreamUrl/inject-sunset-note"/> </section>
        <section id="parameters">
            <title><text
            conref="../conref/conref_api_metadata.dita#conref_api_metadata/property"
            /></title>
            <parml>
            <plentry props="android cpp">
                <pt>width</pt>
                <pd>外部视频流输入后的宽度。默认值为 0，即保留视频原始宽度。</pd>
            </plentry>
            <plentry props="android cpp">
                <pt>height</pt>
                <pd>外部视频流输入后的高度。默认值为 0，即保留视频原始高度。</pd>
            </plentry>
            <plentry props="ios mac">
                <pt>size</pt>
                <pd>外部视频流输入后的尺寸。</pd>
            </plentry>
            <plentry>
                <pt>videoGop</pt>
                <pd>外部视频流输入的 GOP（帧）。默认值为 30 帧。</pd>
            </plentry>
            <plentry>
                <pt>videoFramerate</pt>
                <pd>外部视频流输入的帧率（fps）。默认值为 15 fps。</pd>
            </plentry>
            <plentry>
                <pt>videoBitrate</pt>
                <pd>
                    <p>外部视频流输入的码率（Kbps）。默认设置为 400 Kbps。</p>
                    <note type="attention"
                    >视频码率的设置与分辨率相关。如果设置的视频码率超出合理范围，SDK
                            会按照合理区间自动设置码率。</note> </pd>
            </plentry>
            <plentry>
                <pt>audioSampleRate</pt>
                <pd>
                    <p>外部音频流输入的采样率。默认值为 48000 Hz。详见 <xref
                    keyref="AUDIO_SAMPLE_RATE_TYPE"/>。</p>
                    <note type="attention"> 声网建议目前采用默认值，不要自行设置。</note> </pd>
            </plentry>
            <plentry>
                <pt>audioBitrate</pt>
                <pd>
                    <p>外部音频流输入的码率（Kbps）。默认值为 48 Kbps。</p>
                    <note type="attention">声网建议目前采用默认值，不要自行设置。</note> </pd>
            </plentry>
            <plentry>
                <pt>audioChannels</pt>
                <pd>
                    <p>外部音频流输入后的频道数。
                    
                    <ul>
                    <li>1: 单声道（默认）</li>
                    <li>2: 双声道</li>
                    </ul> </p>
                    <note type="attention">声网建议目前采用默认值，不要自行设置。</note> </pd>
            </plentry>
            </parml> </section>
    </refbody>
</reference>
