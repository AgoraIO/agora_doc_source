<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE reference PUBLIC "-//OASIS//DTD DITA Reference//EN" "reference.dtd">
<reference id="callback_onremotevideotransportstats">
    <title><ph keyref="onRemoteVideoTransportStats"/></title>
    <shortdesc id="short"><ph id="shortdesc">通话中远端视频流传输的统计信息回调。</ph></shortdesc>
    <prolog>
        <metadata>
            <keywords>
                <indexterm keyref="onRemoteVideoTransportStats"/>
            </keywords>
        </metadata>
    </prolog>
    <refbody>
        <section id="prototype">
            <p outputclass="codeblock" props="rtc-ng">
            <codeblock props="cs" outputclass="language-csharp">public virtual void OnRemoteVideoTransportStats(RtcConnection connection, uint remoteUid, UInt16 delay, UInt16 lost, UInt16 rxKBitRate) {}</codeblock></p>
            <p outputclass="codeblock" props="rtc">
            <codeblock props="cs" outputclass="language-csharp">public virtual void OnRemoteVideoTransportStats(uint uid, ushort delay, ushort lost, ushort rxKBitRate)</codeblock></p>
            <p outputclass="codeblock">
            <codeblock props="android" outputclass="language-java">public void onRemoteVideoTransportStats(int uid, int delay, int lost, int rxKBitRate) {}</codeblock>
            <codeblock props="ios mac" outputclass="language-objectivec">- (void)rtcEngine:(AgoraRtcEngineKit * _Nonnull)engine
                  videoTransportStatsOfUid:(NSUInteger)uid
                  delay:(NSUInteger)delay
                  lost:(NSUInteger)lost
                  rxKBitRate:(NSUInteger)rxKBitRate;</codeblock>
            <codeblock props="cpp" outputclass="language-cpp">virtual void onRemoteVideoTransportStats(uid_t uid,
     unsigned short delay,
     unsigned short lost,
     unsigned short rxKBitRate) {
     (void)uid;
     (void)delay;
     (void)lost;
     (void)rxKBitRate;
     }</codeblock>
            <codeblock props="electron" outputclass="language-typescript">on(evt: EngineEvents.REMOTE_VIDEO_TRANSPORT_STATS, cb: (
     uid: number,
     delay: number,
     lost: number,
     rxKBitRate: number) =&gt; void
     ): this;</codeblock>
            <codeblock props="rn" outputclass="language-typescript"/>
            <codeblock props="flutter" outputclass="language-dart">TransportStatsCallback? remoteVideoTransportStats;</codeblock>
            </p>
        </section>
        <section id="detailed_desc">
            <dl outputclass="deprecated">
            <dlentry>
                <dt>弃用：</dt>
                <dd>该回调已被废弃，请改用 <xref keyref="onRemoteVideoStats"/>。</dd>
            </dlentry>
            </dl>
            <p id="desc1"
            >该回调描述远端用户通话中端到端的网络统计信息，通过视频包计算，用客观的数据，如丢包、 网络延迟等，展示当前网络状态。</p>
            <p id="desc2">通话中，当用户收到远端用户/主播发送的视频数据包后，会每 2 秒触发一次该回调。</p>
        </section>
        <section id="parameters">
            <title><ph keyref="callback-section-title"/></title>
            <p conkeyref="onJoinChannelSuccess/callback-desc" props="flutter rn"
            />
            <parml>
            <plentry conkeyref="onJoinChannelSuccess/engine" props="ios mac">
                <pt/>
                <pd/>
            </plentry>
            <plentry props="rtc-ng">
                <pt props="cs">connection</pt>
                <pd props="cs">Connection 信息。详见 <xref keyref="RtcConnection"
                    />。</pd>
            </plentry>
            <plentry>
                <pt props="native electron flutter">uid</pt>
                <pt props="cs"><ph props="rtc">uid</ph><ph props="rtc-ng"
                    >remoteUid</ph></pt>
                <pd>用户 ID，指定是哪个用户/主播的视频包。</pd>
            </plentry>
            <plentry>
                <pt>delay</pt>
                <pd>视频包从发送端到接收端的延时（毫秒）。</pd>
            </plentry>
            <plentry>
                <pt>lost</pt>
                <pd>视频包从发送端到接收端的丢包率 (%)。</pd>
            </plentry>
            <plentry>
                <pt>rxKBitRate</pt>
                <pd>远端视频包的接收码率（Kbps）。</pd>
            </plentry>
            </parml> </section>
    </refbody>
</reference>
