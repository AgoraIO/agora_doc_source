<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE reference PUBLIC "-//OASIS//DTD DITA Reference//EN" "reference.dtd">
<reference id="api_imediaengine_pushaudioframe2">
    <title><ph keyref="pushAudioFrame2"/></title>
    <shortdesc id="short"><ph id="shortdesc">推送外部原始音频帧到指定位置。</ph></shortdesc>
    <prolog>
        <metadata>
            <keywords>
                <indexterm keyref="pushAudioFrame2"/>
            </keywords>
        </metadata>
    </prolog>
    <refbody>
        <section id="prototype">
            <p outputclass="codeblock">
                <codeblock props="android" outputclass="language-java">public abstract int pushExternalAudioFrame(byte[] data, long timestamp,
                                           int sampleRate, int channels,
                                           int bytesPerSample, int sourcePos);</codeblock>
                <codeblock props="ios mac" outputclass="language-objectivec">- (int)pushExternalAudioFrameRawData:(AgoraAudioExternalSourcePos)sourcePos frame:(AgoraAudioFrame* _Nonnull)frame;</codeblock>
                <codeblock props="cpp" outputclass="language-cpp">virtual int pushAudioFrame(int32_t sourcePos, IAudioFrameObserver::AudioFrame* frame) = 0;</codeblock>
                <codeblock props="electron" outputclass="language-typescript"/>
                <codeblock props="cs" outputclass="language-csharp">public abstract int PushAudioFrame(int sourcePos, AudioFrame frame);</codeblock>
                <codeblock props="rn" outputclass="language-typescript"/>
                <codeblock props="flutter" outputclass="language-dart"/>
            </p>
        </section>
        <section id="detailed_desc">
            <dl outputclass="since" props="rtc">
                <dlentry>
                    <dt>自从</dt>
                    <dd>v3.5.1</dd>
                </dlentry>
            </dl>
            <p>根据实际需求，你可以将外部音频帧推送到音频采集后、编码前或本地播放前的位置。你可以多次调用该方法，将一个音频帧推送到多个位置或者将多个音频帧推送到不同位置。例如，在
                KTV 场景中，你可以将歌声推送到音频采集后的位置，让歌声经过 SDK 音频模块的处理，从而获取优质的音频体验；将伴奏推送到音频编码前的位置，让伴奏不受 SDK
                音频模块的影响。</p>
            <note type="attention">该方法需要在加入频道后调用。</note>
        </section>
        <section id="parameters">
            <title>参数</title>
            <parml>
                <plentry props="cpp ios mac cs" conkeyref="pushAudioFrame1/frame">
                    <pt/>
                    <pd/>
                </plentry>
                <plentry props="android" conkeyref="pushAudioFrame1/data">
                    <pt/>
                    <pd/>
                </plentry>
                <plentry props="android" conkeyref="pushAudioFrame1/time">
                    <pt/>
                    <pd/>
                </plentry>
                <plentry props="android">
                    <pt>sampleRate</pt>
                    <pd>采样率，可设置为 8000, 16000, 32000, 44100, 或 48000 Hz。</pd>
                </plentry>
                <plentry props="android">
                    <pt>channels</pt>
                    <pd>
                        <p>声道数量： <ul>
                                <li><codeph>1</codeph>：单声道</li>
                                <li><codeph>2</codeph>：双声道（数据是交叉的）</li>
                            </ul>
                        </p>
                    </pd>
                </plentry>
                <plentry props="android">
                    <pt>bytesPerSample</pt>
                    <pd>每个采样点的字节数。对于 PCM 来说，一般使用 16 bit，即两个字节。</pd>
                </plentry>
                <plentry>
                    <pt>sourcePos</pt>
                    <pd props="android apple cpp">外部音频帧的推送位置。详见 <xref
                            keyref="AUDIO_EXTERNAL_SOURCE_POSITION"/>。</pd>
                    <pd props="cs">外部音频帧的推送位置。</pd>
                </plentry>
            </parml>
        </section>
        <section id="return_values">
            <title>返回值</title>
            <ul>
                <li>0：方法调用成功。</li>
                <li>&lt; 0：方法调用失败。</li>
            </ul>
        </section>
    </refbody>
</reference>
