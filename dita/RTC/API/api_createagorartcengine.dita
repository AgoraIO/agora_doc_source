<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE reference PUBLIC "-//OASIS//DTD DITA Reference//EN" "reference.dtd">
<reference id="api_createagorartcengine">
    <title><ph keyref="createAgoraRtcEngine"/></title>
    <shortdesc id="short"><ph id="shortdesc">创建 <apiname keyref="IRtcEngine"/>
        对象并返回指针。</ph></shortdesc>
    <prolog>
        <metadata>
            <keywords>
                <indexterm>createAgoraRtcEngine</indexterm>
            </keywords>
        </metadata>
    </prolog>
    <refbody>
        <section id="prototype">
            <p outputclass="codeblock">
            <codeblock props="android" outputclass="language-java"/>
            <codeblock props="ios mac" outputclass="language-objectivec"/>
            <codeblock props="cpp" outputclass="language-cpp">AGORA_API agora::rtc::IRtcEngine *AGORA_CALL createAgoraRtcEngine ()</codeblock>
            <codeblock props="electron" outputclass="language-typescript"/>
            <codeblock props="cs" outputclass="language-csharp">public static IAgoraRtcEngine CreateAgoraRtcEngine(AgoraEngineType engineType = AgoraEngineType.MainProcess)</codeblock>
            <codeblock props="rn" outputclass="language-typescript"/>
            <codeblock props="flutter" outputclass="language-dart">static Future&lt;RtcEngine&gt; create(String appId)</codeblock> </p>
        </section>
        <section id="detailed_desc">
            <p props="flutter">该方法已废弃，请改用 <xref keyref="create2"/>。</p>
            <p props="native">目前声网 RTC Native SDK 只支持每个 app 创建一个 <apiname keyref="IRtcEngine"/> 对象。</p>
            <p props="cs">SDK 默认使用主进程创建 <apiname keyref="IRtcEngine"/>。如果场景中涉及同时发送摄像头和桌面共享两路视频流，可以调用该方法分别创建 <ph keyref="MainProcess"/> 和 <ph keyref="SubProcess"/> 两个 <apiname keyref="IRtcEngine"/> 对象。其中主进程为集成了 <apiname keyref="IRtcEngine"/> 的进程，子进程为 <ph>AgoraRtcScreenSharing.exe</ph>。
            </p>
        </section>
        <section id="parameters" props="flutter cs">
            <title>参数</title>
            <parml>
            <plentry props="flutter">
                <pt>appId</pt>
                <pd>你的声网项目的 App ID。</pd>
            </plentry>
            <plentry props="cs">
                <pt>engineType</pt>
                <pd>AgoraRtcEngine 的进程类型，详见 <xref keyref="AgoraEngineType"/>。</pd>
            </plentry>
            </parml> </section>
        <section id="return_values">
            <title>返回值</title>
            <ul>
            <li>方法调用成功，返回一个 <apiname keyref="IRtcEngine"/> 对象。</li>
            <li>方法调用失败，返回错误码。</li>
            </ul> </section>
    </refbody>
</reference>
