<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE reference PUBLIC "-//OASIS//DTD DITA Reference//EN" "reference.dtd">
<reference id="class_encodedvideoframeinfo">
    <title><ph keyref="EncodedVideoFrameInfo"/></title>
    <shortdesc id="short"><ph id="shortdesc">外部编码视频帧的信息。</ph></shortdesc>
    <refbody>
        <section id="prototype">
            <p outputclass="codeblock" props="rtc-ng">
                <codeblock props="cs" outputclass="language-csharp">public class EncodedVideoFrameInfo
    {
        public EncodedVideoFrameInfo()
        {
            codecType = VIDEO_CODEC_TYPE.VIDEO_CODEC_H264;
            width = 0;
            height = 0;
            framesPerSecond = 0;
            frameType = VIDEO_FRAME_TYPE_NATIVE.VIDEO_FRAME_TYPE_BLANK_FRAME;
            rotation = VIDEO_ORIENTATION.VIDEO_ORIENTATION_0;
            trackId = 0;
            renderTimeMs = 0;
            uid = 0;
            streamType = VIDEO_STREAM_TYPE.VIDEO_STREAM_HIGH;
            
        }

        public EncodedVideoFrameInfo(ref EncodedVideoFrameInfo rhs)
        {
            codecType = rhs.codecType;
            width = rhs.width;
            height = rhs.width;
            framesPerSecond = rhs.framesPerSecond;
            frameType = rhs.frameType;
            rotation = rhs.rotation;
            trackId = rhs.trackId;;
            renderTimeMs = rhs.renderTimeMs;
            uid = rhs.uid;
            streamType = rhs.streamType;
        }

        public VIDEO_CODEC_TYPE codecType { set; get; }
        public int width { set; get; }
        public int height { set; get; }
        public int framesPerSecond { set; get; }
        public VIDEO_FRAME_TYPE_NATIVE frameType { set; get; }
        public VIDEO_ORIENTATION rotation { set; get; }
        public int trackId { set; get; }  
        public int64_t renderTimeMs { set; get; }
        public uint uid { set; get; }
        public VIDEO_STREAM_TYPE streamType { set; get; }
    }</codeblock></p>
            <p outputclass="codeblock">
                <codeblock props="android" outputclass="language-java">public class EncodedVideoFrameInfo {
  public int codecType;
  public int width;
  public int height;
  public int framesPerSecond;
  public int frameType;
  public int rotation;
  public int trackId;
  public long renderTimeMs;
  public int uid;
  public EncodedVideoFrameInfo() {
    codecType = Constants.VIDEO_CODEC_H264;
    width = 0;
    height = 0;
    framesPerSecond = 0;
    frameType = Constants.VIDEO_FRAME_TYPE_BLANK_FRAME;
    rotation = Constants.VIDEO_ORIENTATION_0;
    trackId = 0;
    renderTimeMs = 0;
    uid = 0;
  }
  @CalledByNative
  public EncodedVideoFrameInfo(int codecType, int width, int height, int framesPerSecond,
      int frameType, int rotation, int trackId, long renderTimeMs, long ：, int uid) {
    this.codecType = codecType;
    this.width = width;
    this.height = height;
    this.framesPerSecond = framesPerSecond;
    this.frameType = frameType;
    this.rotation = rotation;
    this.trackId = trackId;
    this.renderTimeMs = renderTimeMs;
    this.uid = uid;
  }
  @CalledByNative
  public int getCodecType() {
    return codecType;
  }
  @CalledByNative
  public int getWidth() {
    return width;
  }
  @CalledByNative
  public int getHeight() {
    return height;
  }
  @CalledByNative
  public int getFramesPerSecond() {
    return framesPerSecond;
  }
  @CalledByNative
  public int getFrameType() {
    return frameType;
  }
  @CalledByNative
  public int getRotation() {
    return rotation;
  }
  @CalledByNative
  public int getTrackId() {
    return trackId;
  }
  @CalledByNative
  public long getRenderTimeMs() {
    return renderTimeMs;
  }
  @CalledByNative
  public int getUid() {
    return uid;
  }
  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("codecType=").append(codecType);
    sb.append(" width=").append(width);
    sb.append(" height=").append(height);
    sb.append(" framesPerSecond=").append(framesPerSecond);
    sb.append(" frameType=").append(frameType);
    sb.append(" rotation=").append(rotation);
    sb.append(" trackId=").append(trackId);
    sb.append(" renderTimeMs=").append(renderTimeMs);
    sb.append(" uid=").append(uid);
    return sb.toString();
  }
}
</codeblock>
                <codeblock props="ios mac" outputclass="language-objectivec"/>
                <codeblock props="cpp" outputclass="language-cpp">struct EncodedVideoFrameInfo {
                    EncodedVideoFrameInfo()
                    : codecType(VIDEO_CODEC_H264),
                    width(0),
                    height(0),
                    framesPerSecond(0),
                    frameType(VIDEO_FRAME_TYPE_BLANK_FRAME),
                    rotation(VIDEO_ORIENTATION_0),
                    trackId(0),
                    renderTimeMs(0),
                    uid(0),
                    streamType(VIDEO_STREAM_HIGH) {}
                    EncodedVideoFrameInfo(const EncodedVideoFrameInfo&amp; rhs)
                    : codecType(rhs.codecType),
                    width(rhs.width),
                    height(rhs.height),
                    framesPerSecond(rhs.framesPerSecond),
                    frameType(rhs.frameType),
                    rotation(rhs.rotation),
                    trackId(rhs.trackId),
                    renderTimeMs(rhs.renderTimeMs),
                    uid(rhs.uid),
                    streamType(rhs.streamType) {}
                    VIDEO_CODEC_TYPE codecType;
                    int width;
                    int height;
                    int framesPerSecond;
                    VIDEO_FRAME_TYPE frameType;
                    VIDEO_ORIENTATION rotation;
                    int trackId;
                    int64_t renderTimeMs;
                    uid_t uid;
                    VIDEO_STREAM_TYPE streamType;
                    };
                </codeblock>
            </p>
        </section>
        <section id="parameters">
            <title><text conref="../conref/conref_api_metadata.dita#conref_api_metadata/property"
                /></title>
            <parml>
                <plentry>
                    <pt>codecType</pt>
                    <pd props="cpp cs">视频编码类型，详见 <xref keyref="VIDEO_CODEC_TYPE"/>。默认值为 <codeph><ph
                                keyref="VIDEO_CODEC_H264"/> (2)</codeph>。</pd>
                    <pd props="android">视频编解码类型： <ul id="ul_hkm_4qy_4qb">
                            <li>1：VP8。</li>
                            <li>2：（默认）H264。</li>
                            <li>5：VP9。</li>
                        </ul></pd>
                </plentry>
                <plentry>
                    <pt>width</pt>
                    <pd>视频帧的宽度 (px)。</pd>
                </plentry>
                <plentry>
                    <pt>height</pt>
                    <pd>视频帧的高度 (px)。</pd>
                </plentry>
                <plentry>
                    <pt>framesPerSecond</pt>
                    <pd>
                        <p>每秒的视频帧数。</p>
                        <p>当该参数不为 <codeph>0</codeph> 时，你可以用它计算外部编码视频帧的 Unix 时间戳。</p>
                    </pd>
                </plentry>
                <plentry>
                    <pt>frameType</pt>
                    <pd props="cpp cs">视频帧的类型，详见 <xref keyref="VIDEO_FRAME_TYPE"/>。</pd>
                    <pd props="android">视频帧的类型： <ul id="ul_djl_sqy_4qb">
                            <li>0：（默认）<ph keyref="VIDEO_FRAME_TYPE_BLANK_FRAME"/>，空白帧。</li>
                            <li>3：<ph keyref="VIDEO_FRAME_TYPE_KEY_FRAME"/>，关键帧。</li>
                            <li>4：<ph keyref="VIDEO_FRAME_TYPE_DELTA_FRAME"/>，Delta 帧。</li>
                            <li>5：<ph keyref="VIDEO_FRAME_TYPE_B_FRAME"/>，B 帧。</li>
                            <li>6：<ph keyref="VIDEO_FRAME_TYPE_UNKNOWN"/>，未知。</li>
                        </ul></pd>
                </plentry>
                <plentry>
                    <pt>rotation</pt>
                    <pd props="cpp cs">视频帧的旋转信息，详见 <xref keyref="VIDEO_ORIENTATION"/>。</pd>
                    <pd props="android">视频帧的旋转信息，取值如下： <ul>
                            <li>0：（默认）不旋转。</li>
                            <li>90：顺时针旋转 90 度。</li>
                            <li>180：顺时针旋转 180 度。</li>
                            <li>270：顺时针旋转 270 度。</li>
                        </ul>
                    </pd>
                </plentry>
                <plentry>
                    <pt>trackId</pt>
                    <pd>预留参数。</pd>
                    <pd>轨道 ID。适用于频道中有多个视频轨道的场景。</pd>
                </plentry>
                <plentry>
                    <pt>renderTimeMs</pt>
                    <pd>渲染外部编码视频帧的的 Unix 时间戳 (ms)。</pd>
                </plentry>
                <plentry>
                    <pt>uid</pt>
                    <pd>推送外部编码视频帧的用户 ID。</pd>
                </plentry>
                <plentry props="cpp cs">
                    <pt>streamType</pt>
                    <pd>视频流类型。</pd>
                </plentry>
            </parml>
        </section>
    </refbody>
</reference>
