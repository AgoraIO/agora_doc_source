<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE reference PUBLIC "-//OASIS//DTD DITA Reference//EN" "reference.dtd">
<reference id="api_createdatastreamex1">
    <title><ph keyref="createDataStreamEx1"/></title>
    <shortdesc id="short"><ph id="shortdesc">创建数据流。</ph></shortdesc>
    <prolog>
        <metadata>
   <keywords>
       <indexterm keyref="createDataStreamEx1" />
   </keywords>
        </metadata>
    </prolog>
    <refbody><section id="prototype">
        <p outputclass="codeblock">
                <codeblock props="android" outputclass="language-java"/>
                <codeblock props="ios mac" outputclass="language-objectivec"/>
                <codeblock props="windows" outputclass="language-cpp">virtual int createDataStream(int* streamId, bool reliable, bool ordered, conn_id_t connectionId = agora::rtc::DEFAULT_CONNECTION_ID) = 0;
</codeblock>
                <codeblock props="electron" outputclass="language-typescript"/>
                <codeblock props="unity" outputclass="language-csharp"/>
                <codeblock props="rn" outputclass="language-typescript"/>
                <codeblock props="flutter" outputclass="language-dart"/>
        </p>
        
        </section>
        <section id="detailed_desc">
            <dl outputclass="deprecated" id="dl_fvq_yqm_3qb">
                <dlentry>
                    <dt>弃用：</dt>
                    <dd>该方法已废弃。请改用 <xref keyref="createDataStreamEx2"/>。</dd>
                </dlentry>
            </dl>
            <p id="desc">你可以调用该方法创建数据流并提高数据传输的可靠性和有序性。</p>
                        <note type="attention" id="note">
                <ul id="ul_gvq_yqm_3qb">
                    <li>请确保将 <codeph>reliable</codeph> 和 <codeph>ordered</codeph> 设为相同的值。</li>
                    <li>在 <xref keyref="IRtcEngine"/> 生命周期内，每个用户最多只能创建 5 个数据流。</li>
                    <li>频道内数据通道最多允许数据延迟 5 秒，若超过 5 秒接收方尚未收到数据流，则数据通道会向 app 报错。</li>
                </ul>
            </note>
        </section>
        <section id="parameters">
            <title>参数</title>
            <parml id="parml_cwc_jsm_3qb">
                <plentry props="windows" id="streamId">
                    <pt>streamId</pt>
                    <pd>输出参数，数据流 ID。</pd>
                </plentry>
                <plentry>
                    <pt>reliable</pt>
                    <pd>
                        <p>是否保证数据可靠性，即接收方是否需要在数据发送后的 5 秒内接收：<ul id="ul_dwc_jsm_3qb">
                                <li><codeph>true</codeph>: 保证接收方会在数据发送后的 5 秒内接收。如果接收方在数据发送后的 5
                                    秒内没有接收数据，SDK 会报错。</li>
                                <li><codeph>false</codeph>: 不保证收方会在数据发送后的 5 秒内接收。如果接收延迟或丢失数据，SDK
                                    不会报错。</li>
                            </ul></p>
                    </pd>
                </plentry><plentry id="ordered">
                    <pt>ordered</pt>
                    <pd>
                        <p>是否保证数据有序性，即接收方是否需要收到有序的数据：<ul id="ul_gwc_jsm_3qb">
                            <li><codeph><ph keyref="true"/></codeph>:
                                保证接收方会按照发送方发送的顺序收到数据包。</li>
                            <li><codeph><ph keyref="false"/></codeph>:
                                不保证接收方按照发送方发送的顺序收到数据包。</li>
                        </ul></p>
                    </pd>
                </plentry>
                <plentry>
                    <pt>connectionId</pt>
                    <pd>
                        <p>连接 ID。</p>
                    </pd>
                </plentry>
                </parml>
        </section>
                    <section id="return_values">
   <title>返回值</title>
   <ul>
       <li props="android ios mac electron">成功创建的数据流 ID：方法调用成功。</li>
       <li props="windows">0: 创建数据流成功。</li>
       <li>&lt; 0: 创建数据流失败。</li>
   </ul>
        </section></refbody>
</reference>
