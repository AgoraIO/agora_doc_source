<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE reference PUBLIC "-//OASIS//DTD DITA Reference//EN" "reference.dtd">
<reference id="class_videocanvas_ng">
    <title><ph keyref="VideoCanvas"/></title>
    <shortdesc id="short"><ph id="shortdesc">视频画布对象的属性。</ph></shortdesc>
    <refbody>
        <section id="prototype">
            <p props="rtc-ng" outputclass="codeblock">
                <codeblock props="android" outputclass="language-java">public class VideoCanvas {

  public static final int RENDER_MODE_HIDDEN = 1;
  public static final int RENDER_MODE_FIT = 2;
  public static final int RENDER_MODE_ADAPTIVE = 3;
  public View view;
  public int renderMode;
  public int mirrorMode;
  public int sourceType;
  public int sourceId;
  public int uid;
}</codeblock>
                <codeblock props="ios mac" outputclass="language-objectivec">__attribute__((visibility("default"))) @interface AgoraRtcVideoCanvas : NSObject

@property(strong, nonatomic) VIEW_CLASS *_Nullable view;
@property(assign, nonatomic) AgoraVideoRenderMode renderMode;
@property(assign, nonatomic) AgoraVideoMirrorMode mirrorMode;
@property(assign, nonatomic) NSUInteger uid;
@property(copy, nonatomic) NSString *_Nullable userId;
@property(nonatomic, assign) AgoraVideoSourceType sourceType;
@property(nonatomic, assign) int sourceId;

@end</codeblock>
            </p>
            <p props="rtc" outputclass="codeblock">
                <codeblock props="android" outputclass="language-java"/>
                <codeblock props="ios mac" outputclass="language-objectivec"/>
                <codeblock props="windows" outputclass="language-cpp">struct VideoCanvas {
  view_t view;
  media::base::RENDER_MODE_TYPE renderMode;
  VIDEO_MIRROR_MODE_TYPE mirrorMode;
  uid_t uid;
  VIDEO_SOURCE_TYPE sourceType;
  VideoCanvas(view_t v, media::base::RENDER_MODE_TYPE m, VIDEO_MIRROR_MODE_TYPE mt, uid_t u)
      : view(v), renderMode(m), mirrorMode(mt), uid(u), sourceType(VIDEO_SOURCE_CAMERA_PRIMARY) {}
};
</codeblock>
                <codeblock props="electron" outputclass="language-typescript"/>
                <codeblock props="unity" outputclass="language-csharp"/>
                <codeblock props="rn" outputclass="language-typescript"/>
                <codeblock props="flutter" outputclass="language-dart"/>
            </p>
        </section>
        <section id="detailed_desc">

        </section>
        <section id="parameters">
   <title><text conref="../conref/conref_api_metadata.dita#conref_api_metadata/property"/></title>
   <parml>
       <plentry>
                    <pt>view</pt>
                    <pd>视频显示窗口。</pd>
                </plentry>
       <plentry>
  <pt>renderMode</pt>
           <pd><p props="ios mac windows">视频渲染模式，详见 <xref keyref="RENDER_MODE_TYPE"/>。</p>
           <p props="android">
               <ul conkeyref="setLocalRenderMode2/rendermodetype"><li/></ul>
           </p>
           </pd>
       </plentry>
       <plentry>
  <pt>mirrorMode</pt>
  <pd>
      <p props="ios mac windows">视图镜像模式，详见 <xref keyref="VIDEO_MIRROR_MODE_TYPE"/>。</p>
          <p props="android">
              <ul conkeyref="setLocalRenderMode2/videomirrormodetype"><li/></ul>
          </p>
          <note type="attention">
                                <ul>
                                    <li>本地视图镜像模式：如果你使用前置摄像头，默认启动本地视图镜像模式；如果你使用后置摄像头，默认关闭本地视图镜像模式。</li>
                                    <li>远端用户视图镜像模式：默认关闭远端用户的镜像模式。</li>
                                </ul>
                            </note>
  </pd>
       </plentry>
                <plentry>
                    <pt>uid</pt>
                    <pd>用户 ID。</pd>
                </plentry>
                <plentry>
                    <pt>sourceType</pt>
                    <pd>视频源的类型，详见 <xref keyref="VIDEO_SOURCE_TYPE"/>。</pd>
                </plentry>
                <plentry props="android ios mac">
                    <pt>sourceId</pt>
                    <pd>视频源 ID。</pd>
                </plentry>

   </parml>
        </section></refbody>
</reference>
