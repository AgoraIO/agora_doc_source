<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE reference PUBLIC "-//OASIS//DTD DITA Reference//EN" "reference.dtd">
<reference id="api_getvideoformatpreference">
    <title><ph keyref="getVideoFormatPreference" /></title>
    <shortdesc id="short"><ph id="shortdesc">请求视频数据格式。</ph></shortdesc>
    <prolog>
        <metadata>
   <keywords>
       <indexterm keyref="getVideoFormatPreference" />
   </keywords>
        </metadata>
    </prolog>
    <refbody><section id="prototype">
        <p outputclass="codeblock">
                <codeblock props="android" outputclass="language-java" />
                <codeblock props="ios mac" outputclass="language-objectivec" />
                <codeblock props="windows" outputclass="language-cpp">virtual VIDEO_FRAME_TYPE getVideoFormatPreference() { return FRAME_TYPE_YUV420; }</codeblock>
                <codeblock props="electron" outputclass="language-typescript" />
                <codeblock props="unity" outputclass="language-csharp">public virtual VIDEO_FRAME_TYPE GetVideoFormatPreference()
        {
            return VIDEO_FRAME_TYPE.FRAME_TYPE_RGBA;
        }</codeblock>
                <codeblock props="rn" outputclass="language-typescript" />
                <codeblock props="flutter" outputclass="language-dart" />
        </p>
        </section>
        <section id="detailed_desc">
   
   <p>如果你想获取 420 格式以外的视频数据，需要在调用 <xref keyref="registerVideoFrameObserver" /> 方法时注册该回调。
       成功注册视频数据观测器后，SDK 会在捕捉到每个视频帧时触发该回调，你需要在该回调返回值中设置期望的视频数据格式。</p>
        </section>
        <section id="return_values">
   <title>返回值</title>
   <p>设置 SDK 输出的原始数据格式 <xref keyref="VIDEO_FRAME_TYPE" />：<ul id="ul_chl_tpg_s4b">
  <li><apiname keyref="FRAME_TYPE_YUV420" /> (0)：（默认） YUV420 格式。</li>
  <li><apiname keyref="FRAME_TYPE_RGBA" /> (2)： RGBA 格式。</li>
       </ul></p>
        </section></refbody>
</reference>