<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE reference PUBLIC "-//OASIS//DTD DITA Reference//EN" "reference.dtd">
<reference id="class_rtcstats">
    <title><ph keyref="RtcStats"/></title>
    <shortdesc id="short"><ph id="shortdesc">通话相关的统计信息。</ph></shortdesc>
    <refbody>
        <section id="prototype">
            <p props="rtc-ng" outputclass="codeblock">
            <codeblock props="android" outputclass="language-java">public static class RtcStats {
  public int totalDuration;
  public int txBytes;
  public int rxBytes;
  public int txKBitRate;
  public int txAudioBytes;
  public int rxAudioBytes;
  public int txVideoBytes;
  public int rxVideoBytes;
  public int rxKBitRate;
  public int txAudioKBitRate;
  public int rxAudioKBitRate;
  public int txVideoKBitRate;
  public int rxVideoKBitRate;
  public int lastmileDelay;
  public double cpuTotalUsage;
  public int gatewayRtt;
  public double cpuAppUsage;
  public int users;
  public int connectTimeMs;
  public int txPacketLossRate;
  public int rxPacketLossRate;
  public double memoryAppUsageRatio;
  public double memoryTotalUsageRatio;
  public int memoryAppUsageInKbytes;
}</codeblock>
            <codeblock props="ios mac" outputclass="language-objectivec">__attribute__((visibility("default"))) @interface AgoraChannelStats : NSObject
@property(assign, nonatomic) NSUInteger duration;
@property(assign, nonatomic) NSUInteger txBytes;
@property(assign, nonatomic) NSUInteger rxBytes;
@property(assign, nonatomic) NSUInteger txAudioKBitrate;
@property(assign, nonatomic) NSUInteger rxAudioKBitrate;
@property(assign, nonatomic) NSUInteger txVideoKBitrate;
@property(assign, nonatomic) NSUInteger rxVideoKBitrate;
@property(assign, nonatomic) NSUInteger txAudioBytes;
@property(assign, nonatomic) NSUInteger txVideoBytes;
@property(assign, nonatomic) NSUInteger rxAudioBytes;
@property(assign, nonatomic) NSUInteger rxVideoBytes;
@property(assign, nonatomic) NSUInteger lastmileDelay;
@property(assign, nonatomic) NSUInteger userCount;
@property(assign, nonatomic) double cpuAppUsage;
@property(assign, nonatomic) double cpuTotalUsage;
@property(assign, nonatomic) NSInteger gatewayRtt;
@property(assign, nonatomic) double memoryAppUsageRatio;
@property(assign, nonatomic) double memoryTotalUsageRatio;
@property(assign, nonatomic) NSInteger memoryAppUsageInKbytes;
@property(assign, nonatomic) NSInteger connectTimeMs;
@property(assign, nonatomic) NSUInteger txKBitRate;
@property(assign, nonatomic) NSUInteger rxKBitRate;
@property(assign, nonatomic) NSInteger txPacketLossRate;
@property(assign, nonatomic) NSInteger rxPacketLossRate;
@end
</codeblock>
            <codeblock props="cpp" outputclass="language-cpp">struct RtcStats {
  unsigned int duration;
  unsigned int txBytes;
  unsigned int rxBytes;
  unsigned int txAudioBytes;
  unsigned int txVideoBytes;
  unsigned int rxAudioBytes;
  unsigned int rxVideoBytes;
  unsigned short txKBitRate;
  unsigned short rxKBitRate;
  unsigned short rxAudioKBitRate;
  unsigned short txAudioKBitRate;
  unsigned short rxVideoKBitRate;
  unsigned short txVideoKBitRate;
  unsigned short lastmileDelay;
  unsigned int userCount;
  double cpuAppUsage;
  double cpuTotalUsage;
  int gatewayRtt;
  double memoryAppUsageRatio;
  double memoryTotalUsageRatio;
  int memoryAppUsageInKbytes;
  int connectTimeMs;
  int txPacketLossRate;
  int rxPacketLossRate;
  RtcStats() :
      duration(0),
      txBytes(0),
      rxBytes(0),
      txAudioBytes(0),
      txVideoBytes(0),
      rxAudioBytes(0),
      rxVideoBytes(0),
      txKBitRate(0),
      rxKBitRate(0),
      rxAudioKBitRate(0),
      txAudioKBitRate(0),
      rxVideoKBitRate(0),
      txVideoKBitRate(0),
      lastmileDelay(0),
      userCount(0),
      cpuAppUsage(0.0),
      cpuTotalUsage(0.0),
      gatewayRtt(0),
      memoryAppUsageRatio(0.0),
      memoryTotalUsageRatio(0.0),
      memoryAppUsageInKbytes(0),
      connectTimeMs(0),
      txPacketLossRate(0),
      rxPacketLossRate(0) {}
};
</codeblock>
            <codeblock props="cs" outputclass="language-csharp">public class RtcStats
    {
        public RtcStats()
        {
        }

        public RtcStats(uint duration, uint txBytes, uint rxBytes, uint txAudioBytes, uint txVideoBytes,
            uint rxAudioBytes, uint rxVideoBytes, UInt16 txKBitRate, UInt16 rxKBitRate, UInt16 rxAudioKBitRate,
            UInt16 txAudioKBitRate, UInt16 rxVideoKBitRate, UInt16 txVideoKBitRate, UInt16 lastmileDelay,
            int txPacketLossRate, int rxPacketLossRate, uint userCount, double cpuAppUsage, double cpuTotalUsage, int gatewayRtt,
            double memoryAppUsageRatio, double memoryTotalUsageRatio, int memoryAppUsageInKbytes,int connectTimeMs,
            int firstAudioPacketDuration, int firstVideoPacketDuration, int firstVideoKeyFramePacketDuration,
            int packetsBeforeFirstKeyFramePacket, int firstAudioPacketDurationAfterUnmute, int firstVideoPacketDurationAfterUnmute,
            int firstVideoKeyFramePacketDurationAfterUnmute, int firstVideoKeyFrameDecodedDurationAfterUnmute,
            int firstVideoKeyFrameRenderedDurationAfterUnmute)
        {
        
        public uint duration { set; get; }
        public uint txBytes { set; get; }
        public uint rxBytes { set; get; }
        public uint txAudioBytes { set; get; }
        public uint txVideoBytes { set; get; }
        public uint rxAudioBytes { set; get; }
        public uint rxVideoBytes { set; get; }
        public UInt16 txKBitRate { set; get; }
        public UInt16 rxKBitRate { set; get; }
        public UInt16 rxAudioKBitRate { set; get; }
        public UInt16 txAudioKBitRate { set; get; }
        public UInt16 rxVideoKBitRate { set; get; }
        public UInt16 txVideoKBitRate { set; get; }
        public UInt16 lastmileDelay { set; get; }
        public int txPacketLossRate { set; get; }
        public int rxPacketLossRate { set; get; }
        public uint userCount { set; get; }
        public double cpuAppUsage { set; get; }
        public double cpuTotalUsage { set; get; }
        public int gatewayRtt { set; get; }
        public double memoryAppUsageRatio { set; get; }
        public double memoryTotalUsageRatio { set; get; }
        public int memoryAppUsageInKbytes { set; get; }
        public int connectTimeMs { set; get; }
        }</codeblock> </p>
            <p outputclass="codeblock" props="rtc">
            <codeblock props="android" outputclass="language-java"/>
            <codeblock props="ios mac" outputclass="language-objectivec"/>
            <codeblock props="cpp" outputclass="language-cpp">struct RtcStats {
    unsigned int duration;
    unsigned int txBytes;
    unsigned int rxBytes;
    unsigned int txAudioBytes;
    unsigned int txVideoBytes;
    unsigned int rxAudioBytes;
    unsigned int rxVideoBytes;
    unsigned short txKBitRate;
    unsigned short rxKBitRate;
    unsigned short rxAudioKBitRate;
    unsigned short txAudioKBitRate;
    unsigned short rxVideoKBitRate;
    unsigned short txVideoKBitRate;
    unsigned short lastmileDelay;
    unsigned short txPacketLossRate;
    unsigned short rxPacketLossRate;

    unsigned int userCount;
    double cpuAppUsage;
    double cpuTotalUsage;
    int gatewayRtt;
    double memoryAppUsageRatio;
    double memoryTotalUsageRatio;
    int memoryAppUsageInKbytes;
    RtcStats()
    : duration(0)
    , txBytes(0)
    , rxBytes(0)
    , txAudioBytes(0)
    , txVideoBytes(0)
    , rxAudioBytes(0)
    , rxVideoBytes(0)
    , txKBitRate(0)
    , rxKBitRate(0)
    , rxAudioKBitRate(0)
    , txAudioKBitRate(0)
    , rxVideoKBitRate(0)
    , txVideoKBitRate(0)
    , lastmileDelay(0)
    , txPacketLossRate(0)
    , rxPacketLossRate(0)
    , userCount(0)
    , cpuAppUsage(0)
    , cpuTotalUsage(0)
    , gatewayRtt(0)
    , memoryAppUsageRatio(0)
    , memoryTotalUsageRatio(0)
    , memoryAppUsageInKbytes(0) {}
    };</codeblock>
            <codeblock props="cs" outputclass="language-csharp">public class RtcStats
    {
        public RtcStats()
        {
        }

        public RtcStats(uint duration, uint txBytes, uint rxBytes, uint txAudioBytes, uint txVideoBytes,
            uint rxAudioBytes, uint rxVideoBytes, ushort txKBitRate, ushort rxKBitRate, ushort rxAudioKBitRate,
            ushort txAudioKBitRate, ushort rxVideoKBitRate, ushort txVideoKBitRate, ushort lastmileDelay,
            ushort txPacketLossRate, ushort rxPacketLossRate, uint userCount, double cpuAppUsage, double cpuTotalUsage,
            int gatewayRtt, double memoryAppUsageRatio, double memoryTotalUsageRatio, int memoryAppUsageInKbytes)
        {
            this.duration = duration;
            this.txBytes = txBytes;
            this.rxBytes = rxBytes;
            this.txAudioBytes = txAudioBytes;
            this.txVideoBytes = txVideoBytes;
            this.rxAudioBytes = rxAudioBytes;
            this.rxVideoBytes = rxVideoBytes;
            this.txKBitRate = txKBitRate;
            this.rxKBitRate = rxKBitRate;
            this.rxAudioKBitRate = rxAudioKBitRate;
            this.txAudioKBitRate = txAudioKBitRate;
            this.rxVideoKBitRate = rxVideoKBitRate;
            this.txVideoKBitRate = txVideoKBitRate;
            this.lastmileDelay = lastmileDelay;
            this.txPacketLossRate = txPacketLossRate;
            this.rxPacketLossRate = rxPacketLossRate;
            this.userCount = userCount;
            this.cpuAppUsage = cpuAppUsage;
            this.cpuTotalUsage = cpuTotalUsage;
            this.gatewayRtt = gatewayRtt;
            this.memoryAppUsageRatio = memoryAppUsageRatio;
            this.memoryTotalUsageRatio = memoryTotalUsageRatio;
            this.memoryAppUsageInKbytes = memoryAppUsageInKbytes;
        }
        
        public uint duration { set; get; }
        public uint txBytes { set; get; }
        public uint rxBytes { set; get; }
        public uint txAudioBytes { set; get; }
        public uint txVideoBytes { set; get; }
        public uint rxAudioBytes { set; get; }
        public uint rxVideoBytes { set; get; }
        public ushort txKBitRate { set; get; }
        public ushort rxKBitRate { set; get; }
        public ushort rxAudioKBitRate { set; get; }
        public ushort txAudioKBitRate { set; get; }
        public ushort rxVideoKBitRate { set; get; }
        public ushort txVideoKBitRate { set; get; }
        public ushort lastmileDelay { set; get; }
        public ushort txPacketLossRate { set; get; }
        public ushort rxPacketLossRate { set; get; }
        public uint userCount { set; get; }
        public double cpuAppUsage { set; get; }
        public double cpuTotalUsage { set; get; }
        public int gatewayRtt { set; get; }
        public double memoryAppUsageRatio { set; get; }
        public double memoryTotalUsageRatio { set; get; }
        public int memoryAppUsageInKbytes { set; get; }
    }</codeblock>
            <codeblock props="electron" outputclass="language-typescript">export interface RtcStats {
  duration: number;
  txBytes: number;
  rxBytes: number;
  txKBitRate: number;
  rxKBitRate: number;
  rxAudioKBitRate: number;
  txAudioKBitRate: number;
  rxVideoKBitRate: number;
  txVideoKBitRate: number;
  rxAudioKBytes: number;
  txAudioKBytes: number;
  rxVideoKBytes: number;
  txVideoKBytes: number;
  lastmileDelay: number;
  txPacketLossRate: number;
  rxPacketLossRate: number;
  userCount: number;
  cpuAppUsage: number;
  cpuTotalUsage: number;
  gatewayRtt: number;
  memoryAppUsageRatio: number;
  memoryTotalUsageRatio: number;
  memoryAppUsageInKbytes: number;
}</codeblock>
            <codeblock props="rn" outputclass="language-typescript">export interface RtcStats {
     duration: number;
     txBytes: number;
     rxBytes: number;
     txKBitRate: number;
     rxKBitRate: number;
     rxAudioKBitRate: number;
     txAudioKBitRate: number;
     rxVideoKBitRate: number;
     txVideoKBitRate: number;
     rxAudioKBytes: number;
     txAudioKBytes: number;
     rxVideoKBytes: number;
     txVideoKBytes: number;
     lastmileDelay: number;
     txPacketLossRate: number;
     rxPacketLossRate: number;
     userCount: number;
     cpuAppUsage: number;
     cpuTotalUsage: number;
     gatewayRtt: number;
     memoryAppUsageRatio: number;
     memoryTotalUsageRatio: number;
     memoryAppUsageInKbytes: number;
     }</codeblock>
            <codeblock props="flutter" outputclass="language-dart">class RtcStats {
  
  int duration;
  int txBytes;
  int rxBytes;
  int txAudioBytes;
  int txVideoBytes;
  int rxAudioBytes;
  int rxVideoBytes;
  int txKBitRate;
  int rxKBitRate;
  int txAudioKBitRate;
  int rxAudioKBitRate;
  int txVideoKBitRate;
  int rxVideoKBitRate;
  int userCount;
  int lastmileDelay;
  int txPacketLossRate;
  int rxPacketLossRate;

  double cpuTotalUsage;
  double cpuAppUsage;
  int gatewayRtt;
  double memoryAppUsageRatio;
  double memoryTotalUsageRatio;
  int memoryAppUsageInKbytes;

  RtcStats(
    this.duration,
    this.txBytes,
    this.rxBytes,
    this.txAudioBytes,
    this.txVideoBytes,
    this.rxAudioBytes,
    this.rxVideoBytes,
    this.txKBitRate,
    this.rxKBitRate,
    this.txAudioKBitRate,
    this.rxAudioKBitRate,
    this.txVideoKBitRate,
    this.rxVideoKBitRate,
    this.userCount,
    this.lastmileDelay,
    this.txPacketLossRate,
    this.rxPacketLossRate,
    this.cpuTotalUsage,
    this.cpuAppUsage,
    this.gatewayRtt,
    this.memoryAppUsageRatio,
    this.memoryTotalUsageRatio,
    this.memoryAppUsageInKbytes,
  );

  factory RtcStats.fromJson(Map&lt;String, dynamic> json) =>
      _$RtcStatsFromJson(json);

  Map&lt;String, dynamic> toJson() => _$RtcStatsToJson(this);
}</codeblock> </p>
        </section>
        <section id="parameters">
            <title><text
            conref="../conref/conref_api_metadata.dita#conref_api_metadata/property"
            /></title>
            <parml>
            <plentry>
                <pt props="ios mac cpp electron cs">duration</pt>
                <pt props="android">totalDuration</pt>
                <pd>本地用户通话时长（秒），累计值。</pd>
            </plentry>
            <plentry>
                <pt>txBytes</pt>
                <pd>发送字节数（bytes）。</pd>
            </plentry>
            <plentry>
                <pt>rxBytes</pt>
                <pd>接收字节数（bytes）。</pd>
            </plentry>
            <plentry>
                <pt>txAudioBytes</pt>
                <pd>发送音频字节数（bytes），累计值。</pd>
            </plentry>
            <plentry>
                <pt>txVideoBytes</pt>
                <pd>发送视频字节数（bytes），累计值。</pd>
            </plentry>
            <plentry>
                <pt>rxAudioBytes</pt>
                <pd>接收音频字节数（bytes），累计值。</pd>
            </plentry>
            <plentry>
                <pt>rxVideoBytes</pt>
                <pd>接收视频字节数（bytes），累计值。</pd>
            </plentry>
            <plentry>
                <pt>txKBitRate</pt>
                <pd>发送码率（Kbps）。</pd>
            </plentry>
            <plentry>
                <pt>rxKBitRate</pt>
                <pd>接收码率（Kbps）。</pd>
            </plentry>
            <plentry>
                <pt>rxAudioKBitRate</pt>
                <pd>音频接收码率 (Kbps）。</pd>
            </plentry>
            <plentry>
                <pt>txAudioKBitRate</pt>
                <pd>音频包的发送码率 (Kbps）。</pd>
            </plentry>
            <plentry>
                <pt>rxVideoKBitRate</pt>
                <pd>视频接收码率 (Kbps）。</pd>
            </plentry>
            <plentry>
                <pt>txVideoKBitRate</pt>
                <pd>视频发送码率 (Kbps）。</pd>
            </plentry>
            <plentry>
                <pt>lastmileDelay</pt>
                <pd>客户端-接入服务器延时 (毫秒)。</pd>
            </plentry>
            <plentry>
                <pt>txPacketLossRate</pt>
                <pd>使用抗丢包技术前，客户端上行发送到服务器丢包率 (%)。</pd>
            </plentry>
            <plentry>
                <pt>rxPacketLossRate</pt>
                <pd>使用抗丢包技术前，服务器下行发送到客户端丢包率 (%)。</pd>
            </plentry>
            <plentry>
                <pt props="ios mac cpp electron cs flutter">userCount</pt>
                <pt props="android">users</pt>
                <pd>当前频道内的用户人数。</pd>
            </plentry>
            <plentry>
                <pt>cpuAppUsage</pt>
                <pd>当前 App 的 CPU 使用率 (%)。</pd>
            </plentry>
            <plentry>
                <pt>cpuTotalUsage</pt>
                <pd>
                    <p>当前系统的 CPU 使用率 (%)。</p>
                    <p props="cpp electron cs"
                    >对于 Windows 平台，在多核环境中，该成员指多核 CPU 的平均使用率。 计算方式为
                            (100 - 任务管理中显示的系统空闲进程 CPU)/100。</p>
                    <note type="attention"><xref keyref="onLeaveChannel"
                    /> 回调中报告的 cpuTotalUsage 恒为 0。</note> </pd>
            </plentry>
            <plentry props="rtc-ng">
                <pt>connectTimeMs</pt>
                <pd>从开始建立连接到成功连接的时间（毫秒）。如报告 0，则表示无效。</pd>
            </plentry>
            <plentry>
                <pt>gatewayRtt</pt>
                <pd>客户端到本地路由器的往返时延 (ms)。
                        
                    
                    
                    <note props="ios">
                    <p props="rtc"
                    >自 3.3.0 版本起，该属性默认在 iOS 14 之前的设备上开启，在 iOS 14 及之后的设备上关闭。</p>
                    <p props="rtc-ng"
                    >该属性默认在 iOS 14 之前的设备上开启，在 iOS 14 及之后的设备上关闭。</p>
                    <p>如需在 iOS 14 及之后的设备上启用该属性，请<xref keyref="ticket-link"
                    />。</p>
                    </note>
                    <note props="android">
                    <p>如需获取 gatewayRtt，请确保已在项目 <codeph>AndroidManifest.xml</codeph> 文件的 <codeph>&lt;/application&gt;</codeph> 后面添加 <codeph>android.permission.ACCESS_WIFI_STATE</codeph> 权限。</p>
                    </note></pd>
            </plentry>
            <plentry>
                <pt>memoryAppUsageRatio</pt>
                <pd>
                    <p>当前 App 的内存占比 (%)。</p>
                    <note type="attention">该值仅作参考。受系统限制可能无法获取。</note> </pd>
            </plentry>
            <plentry>
                <pt>memoryTotalUsageRatio</pt>
                <pd>
                    <p>当前系统的内存占比 (%)。</p>
                    <note type="attention">该值仅作参考。受系统限制可能无法获取。</note> </pd>
            </plentry>
            <plentry>
                <pt>memoryAppUsageInKbytes</pt>
                <pd>
                    <p>当前 App 的内存大小 (KB)。</p>
                    <note type="attention">该值仅作参考。受系统限制可能无法获取。</note> </pd>
            </plentry>
            </parml> </section>
    </refbody>
</reference>
