<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE reference PUBLIC "-//OASIS//DTD DITA Reference//EN" "reference.dtd">
<reference id="class_externalvideoframe_ng">
    <title><ph keyref="ExternalVideoFrame" /></title>
    <shortdesc id="short"><ph id="shortdesc">The external video frame.</ph></shortdesc>
    <refbody>
        <section id="prototype">
            <p outputclass="codeblock">
                <codeblock props="android" outputclass="language-java">public class AgoraVideoFrame {
                    public static final int FORMAT_NONE = -1;
                    public static final int FORMAT_TEXTURE_2D = 10;
                    public static final int FORMAT_TEXTURE_OES = 11;
                    public static final int FORMAT_I420 = 1;
                    public static final int FORMAT_BGRA = 2;
                    public static final int FORMAT_NV21 = 3;
                    public static final int FORMAT_RGBA = 4;
                    public static final int BUFFER_TYPE_NONE = -1;/
                    public static final int BUFFER_TYPE_BUFFER = 1;
                    public static final int BUFFER_TYPE_ARRAY = 2;
                    public static final int BUFFER_TYPE_TEXTURE = 3;
                    public int format;
                    public long timeStamp;
                    public int stride;
                    public int height;
                    public int textureID;
                    public boolean syncMode;
                    public float[] transform;
                    public javax.microedition.khronos.egl.EGLContext eglContext11;
                    public android.opengl.EGLContext eglContext14;
                    public byte[] buf;
                    public int cropLeft;
                    public int cropTop;
                    public int cropRight;
                    public int cropBottom;
                    public int rotation;
                    }</codeblock>
                <codeblock props="ios mac" outputclass="language-objectivec">__attribute__((visibility("default"))) @interface AgoraVideoFrame : NSObject
@property(assign, nonatomic) NSInteger format;
@property(assign, nonatomic) CMTime time;
@property(assign, nonatomic) int stride DEPRECATED_MSG_ATTRIBUTE("use strideInPixels instead");
@property(assign, nonatomic) int strideInPixels;
@property(assign, nonatomic) int height;
@property(assign, nonatomic) CVPixelBufferRef _Nullable textureBuf;
@property(strong, nonatomic) NSData *_Nullable dataBuf;
@property(assign, nonatomic) int cropLeft;
@property(assign, nonatomic) int cropTop;
@property(assign, nonatomic) int cropRight;
@property(assign, nonatomic) int cropBottom;
@property(assign, nonatomic) int rotation;
@end</codeblock>
                <codeblock props="windows" outputclass="language-cpp">struct ExternalVideoFrame {
                    ExternalVideoFrame()
                    : type(VIDEO_BUFFER_RAW_DATA),
                    format(VIDEO_PIXEL_UNKNOWN),
                    buffer(NULL),
                    stride(0),
                    height(0),
                    cropLeft(0),
                    cropTop(0),
                    cropRight(0),
                    cropBottom(0),
                    rotation(0),
                    timestamp(0),
                    eglContext(NULL),
                    eglType(EGL_CONTEXT10),
                    textureId(0),
                    metadata_buffer(NULL),
                    metadata_size(0){}
                    enum EGL_CONTEXT_TYPE {
                    EGL_CONTEXT10 = 0,
                    EGL_CONTEXT14 = 1,
                    };
                    enum VIDEO_BUFFER_TYPE {
                    VIDEO_BUFFER_RAW_DATA = 1,
                    VIDEO_BUFFER_ARRAY = 2,
                    VIDEO_BUFFER_TEXTURE = 3,
                    };
                    VIDEO_BUFFER_TYPE type;
                    VIDEO_PIXEL_FORMAT format;
                    void* buffer;
                    int stride;
                    int height;
                    int cropLeft;
                    int cropTop;
                    int cropRight;
                    int cropBottom;
                    int rotation;
                    long long timestamp;
                    void *eglContext;
                    EGL_CONTEXT_TYPE eglType;
                    int textureId;
                    uint8_t* metadata_buffer;
                    int metadata_size;
                    };</codeblock>
            </p>
        </section>
        <section id="parameters">
   <title><text conref="../conref/conref_api_metadata.dita#conref_api_metadata/property" /></title>
   <parml>
       <plentry props="windows">
                    <pt>type</pt>
                    <pd>
                        <p>The video buffer type. For details, see <xref keyref="VIDEO_BUFFER_TYPE" />.</p>
                    </pd>
                </plentry>
       <plentry>
  <pt>format</pt>
           <pd props="windows" id="windows-format">The pixel format. For details, see <xref keyref="VIDEO_PIXEL_FORMAT" />.</pd>
           <pd props="ios mac" id="oc-format">The format of the incoming video frame. This parameter must be specified as one of the following values:<ul>
                   <li>1: I420</li>
                   <li>2: BGRA</li>
                   <li>3: NV21</li>
                   <li>4: RGBA</li>
                   <li>5: IMC2</li>
                   <li>7: ARGB</li>
                   <li>8: NV12</li>
                   <li>12: iOS texture (CVPixelBufferRef)</li>
               </ul>
           </pd>
           <pd props="android">The format of the video data:<ul>
                   <li>10: TEXTURE_2D</li>
                   <li>11: TEXTURE_OES, usually the data collected by the camera is in this format.</li>
                   <li>1: I420</li>
                   <li>3: NV21</li>
                   <li>4: RGBA</li>
               </ul>
               </pd>
       </plentry>
       <plentry props="android windows">
  <pt props="windows">buffer</pt>
  <pt props="android">buf</pt>
                    <pt props="ios mac">dataBuf</pt>
  <pd props="windows android">Video frame buffer.</pd>
  <pd props="android">This parameter only applies to video data in non-Texture format.</pd>
                    <pd props="ios mac">Raw data buffer. This parameter does not apply to iOS textures.</pd>
       </plentry>
       <plentry props="ios mac">
           <pt>textureBuf</pt>
           <pd>Buffer of iOS texture.</pd>
       </plentry>
       <plentry>
  <pt>stride</pt>
  <pd>Line spacing of the incoming video frame, which must be in pixels instead of bytes. For textures, it is the width of the texture.<p props="ios mac">
          <dl outputclass="deprecated">
              <dlentry>
                  <dt>Deprecated:</dt>
                  <dd>Replaced with <parmname>strideInPixels</parmname>.</dd>
              </dlentry>
          </dl>
      </p>
       </pd>
       </plentry>
       <plentry props="ios mac">
           <pt>strideInPixels</pt>
           <pd>The line span of the frame, that is, the number of pixels between two adjacent lines of video frames.<note type="attention">
               <ul>
                   <li>The unit of this parameter is pixels, not bytes.</li>
                   <li>If the video is in Texture format, set this parameter to the width of Texture.</li>
                   <li>If the video frame format is set to 12, do not use this field.</li>
               </ul>
           </note></pd>
       </plentry>
       <plentry>
  <pt>height</pt>
  <pd>Height of the incoming video frame.</pd>
       </plentry>
                <plentry props="android">
                    <pt>textureID</pt>
                    <pd>Texture ID of the frame. This parameter only applies to video data in Texture format.</pd>
                </plentry>
                <plentry props="android">
                    <pt>syncMode</pt>
                    <pd>Set whether to enable the synchronization mode. After enabling, the SDK waits while Texture processing. This parameter only applies to video data in Texture format.<ul id="ul_oxx_wmy_4qb">
                        <li><codeph><ph keyref="true" /></codeph>: Turn on sync mode.</li>
                        <li><codeph><ph keyref="false" /></codeph>: Do not turn on sync mode.</li>
                        </ul></pd>
                </plentry>
       <plentry props="android">
                    <pt>transform</pt>
           <pd>Additional transform of Texture frames. This parameter only applies to video data in Texture format.</pd>
                </plentry>
       <plentry props="android">
                    <pt>eglContext11</pt>
           <pd>EGLContext11. This parameter only applies to video data in Texture format.</pd>
                </plentry>
       <plentry props="android">
                    <pt>eglContext14</pt>
           <pd>EGLContext14. This parameter only applies to video data in Texture format.</pd>
                </plentry>
       <plentry props="windows">
           <pt>eglContext</pt>
           <pd>This parameter only applies to video data in Texture format.<ul id="ul_fsv_shd_krb">
                            <li>When using the OpenGL interface (javax.microedition.khronos.egl.*) defined by Khronos, set eglContext to this field.</li>
                            <li>When using the OpenGL interface (android.opengl.*) defined by Android, set eglContext to this field.</li>
                        </ul></pd>
       </plentry>
       <plentry props="windows">
           <pt>eglType</pt>
           <pd>This parameter only applies to video data in Texture format. Texture ID of the frame.</pd>
       </plentry>
       <plentry props="windows">
           <pt>textureId</pt>
           <pd>This parameter only applies to video data in Texture format. Incoming 4 x 4 transformational matrix. The typical value is a unit matrix.</pd>
       </plentry>
       <plentry props="windows">
           <pt>metadata_buffer</pt>
           <pd>This parameter only applies to video data in Texture format. The MetaData buffer. The default value is <codeph>NULL</codeph>.</pd>
       </plentry>
       <plentry props="windows">
           <pt>metadata_size</pt>
           <pd>This parameter only applies to video data in Texture format. The MetaData size. The default value is <codeph>0</codeph>.</pd>
       </plentry>
       <plentry>
  <pt>cropLeft</pt>
  <pd>Raw data related parameter. The number of pixels trimmed from the left. The default value is 0.</pd>
           <pd props="android">This parameter only applies to video data in non-Texture format.</pd>
           <pd props="windows">This parameter only applies to raw video data.</pd>
       </plentry>
       <plentry>
  <pt>cropTop</pt>
  <pd>Raw data related parameter. The number of pixels trimmed from the top. The default value is 0.</pd>
           <pd props="android">This parameter only applies to video data in non-Texture format.</pd>
           <pd props="windows">This parameter only applies to raw video data.</pd>
       </plentry>
       <plentry>
  <pt>cropRight</pt>
  <pd>Raw data related parameter. The number of pixels trimmed from the right. The default value is 0.</pd>
           <pd props="android">This parameter only applies to video data in non-Texture format.</pd>
           <pd props="windows">This parameter only applies to raw video data.</pd>
       </plentry>
       <plentry>
  <pt>cropBottom</pt>
  <pd>Raw data related parameter. The number of pixels trimmed from the bottom. The default value is 0.</pd>
           <pd props="android">This parameter only applies to video data in non-Texture format.</pd>
           <pd props="windows">This parameter only applies to raw video data.</pd>
       </plentry>
       <plentry>
  <pt>rotation</pt>
  <pd>Raw data related parameter. The clockwise rotation of the video frame. You can set the rotation angle as 0, 90, 180, or 270. The default value is 0.</pd>
       </plentry>
       <plentry>
  <pt props="android windows">timestamp</pt>
           <pt props="ios mac">time</pt>
  <pd>Timestamp (ms) of the incoming video frame. An incorrect timestamp results in frame loss or unsynchronized audio and video.</pd>
       </plentry>
   </parml>
        </section></refbody>
</reference>