<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE reference PUBLIC "-//OASIS//DTD DITA Reference//EN" "reference.dtd">
<reference id="api_oncapturevideoframe">
    <title><ph keyref="onCaptureVideoFrame"/></title>
    <shortdesc id="short"><ph id="shortdesc">Occurs each time the SDK receives a video frame captured by the local camera.</ph></shortdesc>
    <prolog>
        <metadata>
   <keywords>
       <indexterm keyref="onCaptureVideoFrame" />
   </keywords>
        </metadata>
    </prolog>
    <refbody><section id="prototype">
        
        <p conref="../conref/conref_rtc_api.dita#apidef/onCaptureVideoFrame"/>
        </section>
        <section id="detailed_desc">
   
   <p>After you successfully register the video frame observer, the SDK triggers this callback each time when it receives a video frame. In this callback, you can get the video data captured by the local camera. You can then pre-process the data according to your scenarios.</p>
   <p>After pre-processing, you can send the processed video data back to the SDK by setting the `videoFrame` parameter in this callback.</p>
   <note type="attention">
       <ul>
  <li>This callback does not support sending processed RGBA video data back to the SDK.</li>
  <li>The video data that this callback gets has not been pre-processed, without the watermark, the cropped content, the rotation, and the image enhancement.</li>
       </ul>
   </note>
        </section>
        <section id="parameters"><title>Parameter</title>
   <parml>
       <plentry>
  <pt>videoFrame</pt>
  <pd>Video frame data, see <xref keyref="VideoFrame"/> for details.</pd>
       </plentry>
   </parml>
        </section>
        <section id="return_values">
   <title>Returns</title>
   <p>Whether to ignore the current video frame if the processing fails:<ul>
  <li><ph keyref="true"/>: Do not ignore.</li>
  <li><ph keyref="false"/>: Ignore the current video frame, and do not send it back to the SDK.</li>
       </ul></p>
        </section></refbody>
</reference>
