<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE reference PUBLIC "-//OASIS//DTD DITA Reference//EN" "reference.dtd">
<reference id="api_openwithcustomsource">
    <title><ph keyref="openWithCustomSource"/></title>
    <shortdesc id="short"><ph id="shortdesc">Opens the custom media resource file.</ph></shortdesc>
    <prolog>
        <metadata>
            <keywords>
                <indexterm keyref="openWithCustomSource"/>
            </keywords>
        </metadata>
    </prolog>
    <refbody>
        <section id="prototype">
            <p outputclass="codeblock">
                <codeblock props="android" outputclass="language-java">int openWithCustomSource(long startPos, IMediaPlayerCustomDataProvider provider);
</codeblock>
                <codeblock props="ios mac" outputclass="language-objectivec">- (int)openWithCustomSourceAtStartPos:(NSInteger)startPos
                 withPlayerOnReadData:(AgoraRtcMediaPlayerCustomSourceOnReadCallback)onReadDataCallback
                      andPlayerOnSeek:(AgoraRtcMediaPlayerCustomSourceOnSeekCallback)onSeekCallback;
</codeblock>
                <codeblock props="windows" outputclass="language-cpp">virtual int openWithCustomSource(int64_t startPos, IMediaPlayerCustomDataProvider* provider) = 0;
</codeblock>
                <codeblock props="electron" outputclass="language-typescript"/>
                <codeblock props="unity" outputclass="language-csharp"/>
                <codeblock props="rn" outputclass="language-typescript"/>
                <codeblock props="flutter" outputclass="language-dart"/>
            </p>
        </section>
        <section id="detailed_desc">
            <p>This method allows you to open custom media resource files. For example, you can call this method to open encrypted media resources.</p>
        </section>
        <section id="parameters"><title>Parameter</title>
            <parml>
                <plentry>
                    <pt>startPos</pt>
                    <pd>The starting position (ms) for playback. Default value is 0.</pd>
                </plentry>
                <plentry props="windows android">
                    <pt>provider</pt>
                    <pd>The callback for custom media resource files. For details, see <xref keyref="IMediaPlayerCustomDataProvider"/>.</pd>
                </plentry>
                <plentry props="ios mac">
                    <pt>onReadDataCallBack</pt>
                    <pd>Occurs when the SDK reads the media resource data. For details, see <xref keyref="onReadData"/>.</pd>
                </plentry>
            </parml>
            <parml>
                <plentry props="ios mac">
                    <pt>onSeekCallBack</pt>
                    <pd>Occurs when the SDK seeks the media resource data. For details, see <xref keyref="onSeek"/>.</pd>
                </plentry>
            </parml>
        </section>
        <section id="return_values">
            <title>Returns</title>
        </section>
        <section>
            <ul>
                <li>0: Success.</li>
                <li>&lt; 0: Failure.</li>
            </ul>
        </section>
    </refbody>
</reference>
