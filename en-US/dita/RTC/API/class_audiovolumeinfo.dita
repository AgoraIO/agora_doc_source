<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE reference PUBLIC "-//OASIS//DTD DITA Reference//EN" "reference.dtd">
<reference id="class_audiovolumeinfo">
    <title><ph keyref="AudioVolumeInfo"/></title>
    <shortdesc id="short"><ph id="shortdesc">The volume information of users.</ph></shortdesc>
    <refbody>
        <section id="prototype">
            <p props="rtc-ng" outputclass="codeblock">
                <codeblock props="android" outputclass="language-java">public static class AudioVolumeInfo {
    public int uid;
    public int volume;
  }</codeblock>
                <codeblock props="ios mac" outputclass="language-objectivec">__attribute__((visibility("default"))) @interface AgoraRtcAudioVolumeInfo : NSObject
@property(assign, nonatomic) NSUInteger uid;
@property(assign, nonatomic) NSUInteger volume;
@end</codeblock>
                <codeblock props="windows" outputclass="language-cpp">struct AudioVolumeInfo {
                    uid_t uid;
                    unsigned int volume;  
                    AudioVolumeInfo() : uid(0), volume(0) {}
                    };</codeblock>
            </p>
            <p props="rtc" outputclass="codeblock">
                <codeblock props="android" outputclass="language-java">public static class AudioVolumeInfo {
        public int uid;
        public int volume;
        public int vad;
        public String channelId;
        }
</codeblock>
                <codeblock props="ios mac" outputclass="language-objectivec">__attribute__((visibility("default"))) @interface AgoraRtcAudioVolumeInfo : NSObject
@property(assign, nonatomic) NSUInteger uid;
@property(assign, nonatomic) NSUInteger volume;
@property(assign, nonatomic) NSUInteger vad;
@property(copy, nonatomic) NSString* channelId;
</codeblock>
                <codeblock props="windows unity" outputclass="language-cpp">struct AudioVolumeInfo {
    uid_t uid;
    unsigned int volume; 
    unsigned int vad;
    const char * channelId;
    };  </codeblock>
                <codeblock props="electron" outputclass="language-typescript">export interface AudioVolumeInfo
    {
    uid: number,
    volume: number
    vad: number
    channelId: string
    }</codeblock>
                <codeblock props="rn" outputclass="language-typescript"/>
                <codeblock props="flutter" outputclass="language-dart"/>
            </p>
        </section>
        <section id="parameters">
   <title><text conref="../conref/conref_api_metadata.dita#metadata/property"/></title>
   <parml>
       <plentry>
                    <pt>uid</pt>
                    <pd>
                        <p>User ID<ul id="ul_pfj_4dt_rqb">
                                <li>In the local user&apos;s callback, <parmname>uid</parmname> = 0.</li>
                                <li>In the remote users&apos; callback, <parmname>uid</parmname> is the ID of a remote user whose instantaneous volume is one of the three highest.
                                    ID。</li>
                            </ul></p>
                    </pd>
                </plentry>
       <plentry>
  <pt>volume</pt>
  <pd>The volume of the user. The value ranges between 0 (lowest volume) and 255 (highest volume). If the user calls <xref keyref="startAudioMixing2"/>, the value of <parmname>volume</parmname> is the volume after audio mixing.</pd>
       </plentry>
       <plentry props="rtc">
                    <pt>vad</pt>
                    <pd>
                        <p>Voice activity status of the local user.<ul>
                                <li>0: The local user is not speaking.</li>
                                <li>1: The local user is speaking.</li>
                            </ul>
                        </p>
                        <note type="attention">
                            <ul>
                                <li><parmname>vad</parmname>
                                        This parameter cannot report the voice activity status of remote users. In the remote users&apos; callback, the value of <parmname>vad</parmname> is always 0.</li>
                                <li>如需使用此参数，请在调用 <xref keyref="enableAudioVolumeIndication"/> 时设置 <parmname>report_vad</parmname><codeph><ph keyref="true"/></codeph></li>
                            </ul>
                        </note>
                    </pd>
                </plentry>
       <plentry props="rtc">
                    <pt>channelId</pt>
                    <pd>The name of the channel where the user is in.</pd>
                </plentry>
   </parml>
        </section></refbody>
</reference>
