<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE reference PUBLIC "-//OASIS//DTD DITA Reference//EN" "reference.dtd">
<reference id="callback_ivideoframeobserver_getsmoothrenderingenabled">
    <title><ph keyref="getSmoothRenderingEnabled"/></title>
    <shortdesc id="short"><ph id="shortdesc">Sets whether to output the acquired video frame
            smoothly.</ph></shortdesc>
    <prolog>
        <metadata>
            <keywords>
                <indexterm keyref="getSmoothRenderingEnabled"/>
            </keywords>
        </metadata>
    </prolog>
    <refbody>
        <section id="prototype">
            <p outputclass="codeblock">
                <codeblock props="android" outputclass="language-java"/>
                <codeblock props="ios mac" outputclass="language-objectivec"/>
                <codeblock props="cpp" outputclass="language-cpp">virtual bool getSmoothRenderingEnabled(){ return false; }</codeblock>
                <codeblock props="electron" outputclass="language-typescript"/>
                <codeblock props="cs" outputclass="language-csharp"/>
                <codeblock props="rn" outputclass="language-typescript"/>
                <codeblock props="flutter" outputclass="language-dart"/>
            </p>
        </section>
        <section id="detailed_desc">
            <dl outputclass="since">
                <dlentry>
                    <dt>Since</dt>
                    <dd>v3.0.0</dd>
                </dlentry>
            </dl>
            <p>If you want the video frames acquired from <xref keyref="onRenderVideoFrame"/> to be
                more evenly spaced, you can register the callback by calling <xref
                    keyref="registerVideoFrameObserver"/> and set its return value as <ph
                    keyref="true"/>.</p>
            <note type="attention">
                <ul>
                    <li>Register this callback before joining a channel.</li>
                    <li>This callback applies to scenarios where the acquired video frame is
                        self-rendered after being processed, not to scenarios where the video frame
                        is sent back to the SDK after being processed.</li>
                </ul>
            </note>
        </section>
        <section id="return_values">
            <title>Returns</title>
            <p>Set whether or not to smooth the video frames: <ul>
                    <li><codeph><ph keyref="true"/></codeph>: Smooth the video frame.</li>
                    <li><codeph><ph keyref="false"/></codeph>: (Default) Do not smooth the video
                        frame.</li>
                </ul></p>
        </section>
    </refbody>
</reference>
