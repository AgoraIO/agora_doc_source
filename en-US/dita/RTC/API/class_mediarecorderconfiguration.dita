<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE reference PUBLIC "-//OASIS//DTD DITA Reference//EN" "reference.dtd">
<reference id="class_mediarecorderconfiguration">
    <title><ph keyref="MediaRecorderConfiguration" /></title>
    <shortdesc id="short"><ph id="shortdesc">Configurations for the local audio and video recording.</ph></shortdesc>
    <refbody>
        <section id="prototype">
            <p outputclass="codeblock">
            <codeblock props="android" outputclass="language-java" />
            <codeblock props="ios mac" outputclass="language-objectivec" />
            <codeblock props="windows" outputclass="language-cpp">struct MediaRecorderConfiguration {
  const char* storagePath;
  MediaRecorderContainerFormat containerFormat;
  MediaRecorderStreamType streamType;
  int maxDurationMs;
  int recorderInfoUpdateInterval;

  MediaRecorderConfiguration() : storagePath(nullptr), containerFormat(FORMAT_MP4), streamType(STREAM_TYPE_BOTH), maxDurationMs(120000), recorderInfoUpdateInterval(0) {}
  MediaRecorderConfiguration(const char* path, MediaRecorderContainerFormat format, MediaRecorderStreamType type, int duration, int interval) : storagePath(path), containerFormat(format), streamType(type), maxDurationMs(duration), recorderInfoUpdateInterval(interval) {}
};</codeblock>
            <codeblock props="electron" outputclass="language-typescript" />
            <codeblock props="unity" outputclass="language-csharp" />
            <codeblock props="rn" outputclass="language-typescript" />
            <codeblock props="flutter" outputclass="language-dart">class MediaRecorderConfiguration {

                  final String? storagePath;

                  final MediaRecorderContainerFormat containerFormat;
                
                  final MediaRecorderStreamType streamType;
                
                  final int maxDurationMs;

                  final int recorderInfoUpdateInterval;
                
                  /// Constructs the [MediaRecorderConfiguration].
                  MediaRecorderConfiguration({
                    this.storagePath,
                    this.containerFormat = MediaRecorderContainerFormat.MP4,
                    this.streamType = MediaRecorderStreamType.Both,
                    this.maxDurationMs = 120000,
                    this.recorderInfoUpdateInterval = 0,
                  });
                
                  factory MediaRecorderConfiguration.fromJson(Map&lt;String, dynamic&gt; json) =&gt;
                      _$MediaRecorderConfigurationFromJson(json);
                
                  Map&lt;String, dynamic&gt; toJson() =&gt; _$MediaRecorderConfigurationToJson(this);
                }</codeblock> </p>
        </section>
        <section id="parameters">
            <title><text conref="../conref/conref_api_metadata.dita#conref_api_metadata/property" /></title>
            <parml>
            <plentry>
                <pt>storagePath</pt>
                <pd>The absolute path (including the filename extensions) of the recording file. For example, <codeph>C:\Users\&lt;user_name&gt;\AppData\Local\Agora\&lt;process_name&gt;\example.mp4</codeph> on Windows, <codeph>/App Sandbox/Library/Caches/example.mp4</codeph> on iOS, <codeph>/Library/Logs/example.mp4</codeph> on macOS, and <codeph>/storage/emulated/0/Android/data/&lt;package name&gt;/files/example.mp4</codeph> on Android.</pd>
            </plentry>
                <plentry>
                    <pt>containerFormat</pt>
                    <pd>The format of the recording file. See <xref keyref="MediaRecorderContainerFormat" />.</pd>
                </plentry>
                <plentry>
                    <pt>streamType</pt>
                    <pd>The recording content. See <xref keyref="MediaRecorderStreamType" />.</pd>
                </plentry>
                <plentry>
                    <pt>maxDurationMs</pt>
                    <pd>The maximum recording duration, in milliseconds. The default value is 120,000.</pd>
                </plentry>
                <plentry>
                    <pt>recorderInfoUpdateInterval</pt>
                    <pd>The interval (ms) of updating the recording information. The value range is [1000,10000]. The SDK triggers the <xref keyref="onRecorderInfoUpdated" /> callback to report the updated recording information according to interval you set in this parameter.</pd>
                </plentry>
            </parml> </section>
    </refbody>
</reference>