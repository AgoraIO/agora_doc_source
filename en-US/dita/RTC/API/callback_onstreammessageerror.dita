<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE reference PUBLIC "-//OASIS//DTD DITA Reference//EN" "reference.dtd">
<reference id="callback_onstreammessageerror">
    <title><ph keyref="onStreamMessageError"/></title>
    <shortdesc id="short"><ph id="shortdesc"
        >Occurs when the local user does not receive the data stream from the remote user.</ph></shortdesc>
    <prolog>
        <metadata>
            <keywords>
                <indexterm keyref="onStreamMessageError"/>
            </keywords>
        </metadata>
    </prolog>
    <refbody>
        <section id="prototype">
            <p outputclass="codeblock" props="rtc-ng">
            <codeblock props="cpp" outputclass="language-cpp">virtual void onStreamMessageError(uid_t userId, int streamId, int code, int missed, int cached) {
    (void)userId;
    (void)streamId;
    (void)code;
    (void)missed;
    (void)cached;
  }
</codeblock> </p>
            <p outputclass="codeblock" props="rtc">
            <codeblock props="cpp" outputclass="language-cpp">virtual void onStreamMessageError(uid_t uid, int streamId, int code, int missed, int cached) {
    (void)uid;
    (void)streamId;
    (void)code;
    (void)missed;
    (void)cached;
  }</codeblock>
            <codeblock props="electron" outputclass="language-typescript">on(
                evt: EngineEvents.STREAM_MESSAGE_ERROR,
                cb: (
                uid: number,
                streamId: number,
                code: number,
                missed: number,
                cached: number
                ) =&gt; void
                ): this;</codeblock>
            <codeblock props="cs" outputclass="language-csharp">public virtual void OnStreamMessageError(uint uid, int streamId, int code, int missed, int cached)</codeblock>
            <codeblock props="rn" outputclass="language-typescript"/>
            <codeblock props="flutter" outputclass="language-dart">StreamMessageErrorCallback? streamMessageError;</codeblock>
            </p>
            <p outputclass="codeblock">
            <codeblock props="android" outputclass="language-java">public void onStreamMessageError(int uid, int streamId, int error, int missed, int cached) {}</codeblock>
            <codeblock props="ios mac" outputclass="language-objectivec">- (void)rtcEngine:(AgoraRtcEngineKit * _Nonnull)engine
            didOccurStreamMessageErrorFromUid:(NSUInteger)uid
            streamId:(NSInteger)streamId
            error:(NSInteger)error
            missed:(NSInteger)missed
            cached:(NSInteger)cached;</codeblock> </p>
        </section>
        <section id="detailed_desc">
            <p>The SDK triggers this callback when the local user fails to receive the stream message that the remote user sends by calling the <xref
            keyref="sendStreamMessage"/> method.</p>
        </section>
        <section id="parameters">
            <title><ph keyref="callback-section-title"/></title>
            <p conkeyref="onJoinChannelSuccess/callback-desc" props="flutter rn"
            />
            <parml>
            <plentry conkeyref="onJoinChannelSuccess/engine" props="ios mac">
                <pt/>
                <pd/>
            </plentry>
            <plentry id="uid">
                <pt props="ios mac android electron cs flutter">uid</pt>
                <pt props="cpp"><ph props="rtc-ng">userId</ph><ph props="rtc"
                    >uid</ph></pt>
                <pd>The ID of the remote user sending the message.</pd>
            </plentry>
            <plentry id="streamId">
                <pt>streamId</pt>
                <pd>The stream ID of the received message.</pd>
            </plentry>
            <plentry id="code">
                <pt props="cpp electron cs">code</pt>
                <pt props="android ios mac flutter">error</pt>
                <pd>The error code.</pd>
            </plentry>
            <plentry id="missed">
                <pt>missed</pt>
                <pd>The number of lost messages.</pd>
            </plentry>
            <plentry id="cached">
                <pt>cached</pt>
                <pd>Number of incoming cached messages when the data stream is interrupted.</pd>
            </plentry>
            </parml> </section>
    </refbody>
</reference>
