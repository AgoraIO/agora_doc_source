<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE reference PUBLIC "-//OASIS//DTD DITA Reference//EN" "reference.dtd">
<reference id="api_onaudiovolumeindication">
    <title><ph keyref="onAudioVolumeIndication" /></title>
    <shortdesc id="short"><ph id="shortdesc">Reports the volume information of users.</ph></shortdesc>
    <prolog>
        <metadata>
   <keywords>
       <indexterm keyref="onAudioVolumeIndication" />
   </keywords>
        </metadata>
    </prolog>
    <refbody><section id="prototype">
        <p outputclass="codeblock">
                <codeblock props="android" outputclass="language-java">public void onAudioVolumeIndication(AudioVolumeInfo[] speakers, int totalVolume) {}</codeblock>
                <codeblock props="ios mac" outputclass="language-objectivec">- (void)rtcEngine:(AgoraRtcEngineKit * _Nonnull)engine 
        reportAudioVolumeIndicationOfSpeakers:(NSArray&lt;AgoraRtcAudioVolumeInfo *&gt; * _Nonnull)speakers 
        totalVolume:(NSInteger)totalVolume;</codeblock>
                <codeblock props="windows" outputclass="language-cpp">virtual void onAudioVolumeIndication(const AudioVolumeInfo* speakers, 
    unsigned int speakerNumber, 
    int totalVolume) {
    (void)speakers;
    (void)speakerNumber;
    (void)totalVolume;
    }</codeblock>
                <codeblock props="electron" outputclass="language-typescript">on(evt: EngineEvents.AUDIO_VOLUME_INDICATION, cb: (
    speakers: AudioVolumeInfo[],
    speakerNumber: number,
    totalVolume: number
    ) =&gt; void
    ): this;</codeblock>
                <codeblock props="unity" outputclass="language-csharp">public virtual void OnAudioVolumeIndication(AudioVolumeInfo[] speakers, uint speakerNumber, int totalVolume)</codeblock>
                <codeblock props="rn" outputclass="language-typescript" />
                <codeblock props="flutter" outputclass="language-dart">AudioVolumeCallback? audioVolumeIndication;</codeblock>
        </p>
        </section>
        <section id="detailed_desc">
   
   <p>By default, this callback is disabled. You can enable it by calling <xref keyref="enableAudioVolumeIndication" />. Once this callback is enabled and users send streams in the channel, the SDK triggers the <apiname keyref="enableAudioVolumeIndication" /> callback at the time interval set in <apiname keyref="onAudioVolumeIndication" />. The SDK triggers two independent <apiname keyref="onAudioVolumeIndication" /> callbacks simultaneously, which separately report the volume information of the local user who sends a stream and the remote users (up to three) whose instantaneous volumes are the highest.</p>
   <note type="attention">After you enable this callback, calling <xref keyref="muteLocalAudioStream" /> affects the SDK's behavior as follows:<ul>
  <li>If the local user stops publishing the audio stream, the SDK stops triggering the local user's callback.</li>
  <li>20 seconds after a remote user whose volume is one of the three highest stops publishing the audio stream, the callback excludes this user's information; 20 seconds after all remote users stop publishing audio streams, the SDK stops triggering the callback for remote users.</li>
       </ul>
   </note>
        </section>
        <section id="parameters"><title><ph keyref="callback-section-title"/></title>             <p conkeyref="onJoinChannelSuccess/callback-desc"/>
   <parml>
       <plentry conkeyref="onJoinChannelSuccess/engine" props="ios mac">
                  <pt />
                  <pd />
              </plentry>
       <plentry>
  <pt>speakers</pt>
  <pd>The volume information of the users, see <xref keyref="AudioVolumeInfo" />. An empty <parmname>speakers</parmname> array in the callback indicates that no remote user is in the channel or sending a stream at the moment.</pd>
       </plentry>
       <plentry props="windows unity">
  <pt>speakerNumber</pt>
  <pd>
      <p>The total number of users.<ul>
     <li>In the callback for the local user, if the local user is sending streams, the value of <parmname>speakerNumber</parmname> is 1.</li>
     <li>In the callback for remote users, the value range of <parmname>speakerNumber</parmname> is [0,3]. If the number of remote users who send streams is greater than or equal to three, the value of <parmname>speakerNumber</parmname> is 3.</li>
 </ul>
      </p>
  </pd>
       </plentry>
       <plentry>
  <pt>totalVolume</pt>
  <pd>
      <p>The volume of the speaker. The value range is [0,255].<ul>
     <li>In the callback for the local user, <parmname>totalVolume</parmname> is the volume of the local user who sends a stream.</li>
     <li>In the callback for remote users, <parmname>totalVolume</parmname> is the sum of the volume of all remote users (up to three) whose instantaneous volumes are the highest. If the user calls <xref keyref="startAudioMixing2" />, then <parmname>totalVolume</parmname> is the volume after audio mixing.</li>
 </ul>
      </p>
  </pd>
       </plentry>
   </parml>
        </section>
    </refbody>
</reference>