<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE reference PUBLIC "-//OASIS//DTD DITA Reference//EN" "reference.dtd">
<reference id="api_sendstreammessageex">
    <title><ph keyref="sendStreamMessageEx" /></title>
    <shortdesc id="short"><ph id="shortdesc">Sends data stream messages.</ph></shortdesc>
    <prolog>
        <metadata>
   <keywords>
       <indexterm keyref="sendStreamMessageEx" />
   </keywords>
        </metadata>
    </prolog>
    <refbody><section id="prototype">
        <p outputclass="codeblock">
                <codeblock props="android" outputclass="language-java">public abstract int sendStreamMessageEx(int streamId, byte[] message, RtcConnection connection);</codeblock>
                <codeblock props="ios mac" outputclass="language-objectivec" />
                <codeblock props="windows" outputclass="language-cpp">virtual int sendStreamMessageEx(int streamId, const char* data, size_t length, const RtcConnection&amp; connection) = 0;</codeblock>
                <codeblock props="electron" outputclass="language-typescript" />
                <codeblock props="unity" outputclass="language-csharp" />
                <codeblock props="rn" outputclass="language-typescript" />
                <codeblock props="flutter" outputclass="language-dart" />
        </p>
        </section>
        <section id="detailed_desc">
            <p>After calling <xref keyref="createDataStreamEx2" />, you can call this method to send a data stream to all users in the channel.</p>
   
   <p id="desc">The SDK has the following restrictions on this method:<ul>
                    <li>Up to 30 packets can be sent per second in a channel with each packet having a maximum size of 1 kB.</li>
                    <li>Each client can send up to 6 KB of data per second.</li>
                    <li>Each user can have up to five data streams simultaneously.</li>
                </ul></p>
   <p>A successful method call triggers the <xref keyref="onStreamMessage" /> callback on the remote client, from which the remote user gets the stream message. A failed method call triggers the <xref keyref="onStreamMessageError" /> callback on the remote client.</p>
   <note type="attention"><ul>
       <li>Ensure that you call <apiname keyref="createDataStreamEx2" /> to create a data channel before calling this method.</li>
       <li>This method applies only to the `COMMUNICATION` profile or to the hosts in the `LIVE_BROADCASTING` profile. If an audience in the `LIVE_BROADCASTING` profile calls this method, the audience may be switched to a host.</li>
   </ul></note>
        </section>
        <section id="parameters"><title>Parameters</title>
   <parml>
       <plentry>
  <pt>streamId</pt>
           <pd>The data stream ID. You can get the data stream ID by calling <apiname keyref="createDataStreamEx2" />.</pd>
       </plentry>
       <plentry>
    <pt>data</pt>
  <pd>The message to be sent.</pd>
       </plentry>
       <plentry>
  <pt>length</pt>
  <pd>The length of the data.</pd>
       </plentry>
                <plentry conkeyref="joinChannelEx/connection">
                    <pt />
                    <pd />
                </plentry>
   </parml>
        </section>
        <section id="return_values">
   <title>Returns</title>
   <ul>
       <li>0: Success.</li>
       <li>&lt; 0: Failure.</li>
   </ul>
        </section></refbody>
</reference>