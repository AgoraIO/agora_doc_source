<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE reference PUBLIC "-//OASIS//DTD DITA Reference//EN" "reference.dtd">
<reference id="api_preloadeffect">
    <title><ph keyref="preloadEffect"/></title>
    <shortdesc id="short"><ph id="shortdesc">Preloads a specified audio effect file into the memory.</ph></shortdesc>
    <prolog>
        <metadata>
   <keywords>
       <indexterm keyref="preloadEffect" />
   </keywords>
        </metadata>
    </prolog>
    <refbody><section id="prototype">
            <p outputclass="codeblock">
                <codeblock props="android" outputclass="language-java">public int preloadEffect(int soundId, String filePath);</codeblock>
                <codeblock props="ios mac" outputclass="language-objectivec">- (int)preloadEffect:(int)soundId filePath:(NSString* _Nullable)filePath;</codeblock>
                <codeblock props="windows" outputclass="language-cpp">virtual int preloadEffect(int soundId, const char* filePath) = 0;</codeblock>
                <codeblock props="electron" outputclass="language-typescript">preloadEffect(soundId: number, filePath: string): number</codeblock>
                <codeblock props="unity" outputclass="language-csharp"/>
                <codeblock props="rn" outputclass="language-typescript"/>
                <codeblock props="flutter" outputclass="language-dart"/>
            </p>
        </section>
        <section id="detailed_desc">
            <p>To ensure smooth communication, limit the size of the audio effect file. We recommend using this method to preload the audio effect before calling <apiname keyref="joinChannel1"/>. Supported audio formats: mp3, aac, m4a, 3gp, and wav.</p>
            <note type="attention">This method does not support online audio effect files.</note>
        </section>
        <section id="parameters"><title>Parameter</title>
   <parml>
       <plentry>
  <pt>soundId</pt>
  <pd>The ID of the audio effect. Each audio effect has a unique ID.</pd>
       </plentry>
       <plentry>
           <pt>filePath</pt>
           <pd>
           <p>The absolute path (including the suffixes of the filename) of the local music file. For example: <codeph><ph keyref="filePath-example"/></codeph>Supported audio formats include MP3, AAC, M4A, MP4, WAV, and 3GP. See <xref keyref="filePath-link" format="html" scope="external"/>.</p>
           <p props="android" id="filepathlocal">The absolute path (including the suffixes of the filename) of the local music file. Agora supports using a URI address, an absolute path, or a path that starts with <codeph>/assets/</codeph>. You might encounter permission issues if you use an absolute path to access a local file, so Agora recommends using a URI address instead. For example: <codeph><ph keyref="filePath-example"/></codeph>Supported audio formats include MP3, AAC, M4A, MP4, WAV, and 3GP. See <xref keyref="filePath-link"
                                format="html" scope="external"/>.</p></pd>
       </plentry>
   </parml>
        </section>
        <section id="return_values">
   <title>Returns</title>
       <ul>
  <li>0: Success.</li>
  <li>&lt; 0: Failure.</li>
       </ul>
        </section></refbody>
</reference>
