<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE reference PUBLIC "-//OASIS//DTD DITA Reference//EN" "reference.dtd">
<reference id="api_ichannel_onrequesttoken">
    <title><ph keyref="IChannel_onRequestToken"/></title>
    <shortdesc conkeyref="onRequestToken/short"/>
    <prolog>
        <metadata>
   <keywords>
       <indexterm keyref="IChannel_onRequestToken" />
   </keywords>
        </metadata>
    </prolog>
    <refbody><section id="prototype">
        <p outputclass="codeblock">
                <codeblock props="android" outputclass="language-java"/>
                <codeblock props="ios mac" outputclass="language-objectivec"/>
                <codeblock props="windows" outputclass="language-cpp">virtual void onRequestToken(IChannel *rtcChannel) { (void)rtcChannel; }</codeblock>
                <codeblock props="electron" outputclass="language-typescript">on(evt: ChannelEvents.REQUEST_TOKEN, cb: (channelId: string) => void): this;</codeblock>
                <codeblock props="unity" outputclass="language-csharp"/>
                <codeblock props="rn" outputclass="language-typescript"/>
                <codeblock props="flutter" outputclass="language-dart"/>
        </p>
        </section>
        <section id="detailed_desc">
            <p>When the token expires during a call, the SDK triggers this callback to remind the app to renew the token.</p>
            <p>Once you receive this callback, generate a new token on your app server, and call <xref keyref="IChannel_joinChannel"/> to rejoin the channel.</p>
        </section>
        <section id="parameters"><title>Parameters</title>
   <parml>
       <plentry conkeyref="IChannel_onJoinChannelSuccess/rtcChannel">
  <pt></pt>
  <pd></pd>
       </plentry>
   </parml>
        </section>
    </refbody>
</reference>
