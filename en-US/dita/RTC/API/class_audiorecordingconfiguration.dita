<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE reference PUBLIC "-//OASIS//DTD DITA Reference//EN" "reference.dtd">
<reference id="class_audiorecordingconfiguration">
    <title><ph keyref="AudioRecordingConfiguration" /></title>
    <shortdesc id="short"><ph id="shortdesc">The configuration of audio recording on the app client.</ph></shortdesc>
    <refbody>
        <section id="prototype">
            <p outputclass="codeblock">
                <codeblock props="android" outputclass="language-java">public class AudioRecordingConfiguration
    {
    public String filePath;
    public int recordingQuality;
    public int recordingPosition;
    public int recordingSampleRate;
                    
    public AudioRecordingConfiguration()
    {
    this.recordingQuality = Constants.AUDIO_RECORDING_QUALITY_MEDIUM;
    this.recordingPosition = Constants.AUDIO_RECORDING_POSITION_MIXED_RECORDING_AND_PLAYBACK;
    this.recordingSampleRate = 32000;
    }
                    
    public AudioRecordingConfiguration(String filePath, int quality, int position, int sampleRate)
    {
    this.filePath = filePath;
    this.recordingQuality = quality;
    this.recordingPosition = position;
    this.recordingSampleRate = sampleRate;
    }
    }</codeblock>
                <codeblock props="ios mac" outputclass="language-objectivec">__attribute__((visibility("default"))) @interface AgoraAudioRecordingConfiguration : NSObject
                    
    @property(copy, nonatomic) NSString* _Nullable filePath;
    @property(assign, nonatomic) AgoraAudioRecordingQuality recordingQuality;
    @property(assign, nonatomic) AgoraAudioRecordingPosition recordingPosition;
    @property(assign, nonatomic) NSInteger recordingSampleRate;
    @end</codeblock>
                <codeblock props="windows unity" outputclass="language-cpp">struct AudioRecordingConfiguration {

    const char* filePath;
    AUDIO_RECORDING_QUALITY_TYPE recordingQuality;
    AUDIO_RECORDING_POSITION recordingPosition;
    int recordingSampleRate;
                    
    AudioRecordingConfiguration() : 
      filePath(nullptr), 
      recordingQuality(AUDIO_RECORDING_QUALITY_MEDIUM), 
      recordingPosition(AUDIO_RECORDING_POSITION_MIXED_RECORDING_AND_PLAYBACK), 
      recordingSampleRate(32000) 
    {}
                    
                    AudioRecordingConfiguration(
                      const char* path, 
                      AUDIO_RECORDING_QUALITY_TYPE quality, 
                      AUDIO_RECORDING_POSITION position, 
                      int sampleRate) : 
                        filePath(path), 
                        recordingQuality(quality), 
                        recordingPosition(position), 
                        recordingSampleRate(sampleRate) 
                      {}
                    };</codeblock>
            <codeblock props="electron" outputclass="language-typescript">export interface AudioRecordingConfiguration {
  filePath: string;
  recordingQuality: AUDIO_RECORDING_QUALITY_TYPE;
  recordingPosition: AUDIO_RECORDING_POSITION;
  recordingSampleRate: number;
}</codeblock>
            <codeblock props="rn" outputclass="language-typescript" />
            <codeblock props="flutter" outputclass="language-dart">class AudioRecordingConfiguration {
  
  String filePath;
  AudioRecordingQuality? recordingQuality;
  AudioRecordingPosition? recordingPosition;
  AudioSampleRateType? recordingSampleRate;

  AudioRecordingConfiguration(
    this.filePath, {
    this.recordingQuality,
    this.recordingPosition,
    this.recordingSampleRate,
  });
}</codeblock>
            </p>
        </section>
        <section id="detailed_desc">
            <dl outputclass="since" props="android ios mac windows">
                <dlentry>
                    <dt>Since</dt>
                    <dd>v3.4.0</dd>
                </dlentry>
            </dl>
        </section>
        <section id="parameters">
            <title><text conref="../conref/conref_api_metadata.dita#metadata/property" /></title>
            <parml>
                <plentry id="filepath">
                    <pt>filePath</pt>
                    <pd>
                        <p>The absolute path (including the filename extensions) of the recording file. For example: <codeph><ph keyref="recordingPath-example" /></codeph>.</p>
                        <note type="note">Ensure that the directory for the log files exists and is writable.</note>
                    </pd>
                </plentry>
                <plentry>
                    <pt>recordingQuality</pt>
                    <pd><p>Recording quality. For details, see <xref keyref="AUDIO_RECORDING_QUALITY_TYPE" />.</p>
                    <note type="attention">Note: This parameter applies to AAC files only.</note></pd>
                </plentry>
                <plentry>
                    <pt>recordingPosition</pt>
                    <pd>The recording content. For details, see <xref keyref="AUDIO_RECORDING_POSITION" />.</pd>
                </plentry>
                <plentry>
                    <pt>recordingSampleRate</pt>
                    <pd>Recording sample rate (Hz).<ul>
                        <li>16000</li>
                        <li>(Default) 32000</li>
                        <li>44100</li>
                        <li>48000</li>
                    </ul>
                        <note type="attention">If you set this parameter as 44100 or 48000, Agora recommends recording WAV files or AAV files whose <parmname>recordingQuality</parmname> is <ph keyref="AUDIO_RECORDING_QUALITY_MEDIUM" /> or <ph keyref="AUDIO_RECORDING_QUALITY_HIGH" /> for better recording quality.</note></pd>
                </plentry>
            </parml>
        </section>
    </refbody>
</reference>