<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE reference PUBLIC "-//OASIS//DTD DITA Reference//EN" "reference.dtd">
<reference id="class_livetranscoding">
    <title><ph keyref="LiveTranscoding"/></title>
    <shortdesc id="short"><ph id="shortdesc">Transcoding configurations for CDN live streaming.</ph></shortdesc>
    <refbody>
        <section id="prototype">
            <p outputclass="codeblock">
                <codeblock props="android" outputclass="language-java"/>
                <codeblock props="ios mac" outputclass="language-objectivec"/>
                <codeblock props="windows" outputclass="language-cpp">typedef struct LiveTranscoding { int width; int height; int videoBitrate; int videoFramerate; bool lowLatency; int videoGop; VIDEO_CODEC_PROFILE_TYPE videoCodecProfile; unsigned int backgroundColor; unsigned int userCount; TranscodingUser *transcodingUsers; const char *transcodingExtraInfo; RtcImage* watermark; AUDIO_SAMPLE_RATE_TYPE audioSampleRate; int audioBitrate; int audioChannels; LiveTranscoding() : width(360) , height(640) , videoBitrate(400) , videoFramerate(15) , lowLatency(false) , backgroundColor(0x000000) , videoGop(30) , videoCodecProfile(VIDEO_CODEC_PROFILE_HIGH) , userCount(0) , transcodingUsers(nullptr) , transcodingExtraInfo(nullptr) , watermark(nullptr) , audioSampleRate(AUDIO_SAMPLE_RATE_48000) , audioBitrate(48) , audioChannels(1) {} } LiveTranscoding;</codeblock>
                <codeblock props="electron" outputclass="language-typescript">export interface LiveTranscoding { width: number; height: number; videoBitrate: number; videoFrameRate: number; lowLatency: boolean; videoGop: number; videoCodecProfile: VIDEO_CODEC_PROFILE_TYPE; videoCodecType: VIDEO_CODEC_TYPE_FOR_STREAM; backgroundColor: number; userCount: number; audioSampleRate: number; audioChannels: number; audioCodecProfile: AUDIO_CODEC_PROFILE_TYPE; audioBitrate: number; transcodingExtraInfo: string; metadata?: string; watermark: RtcImage; backgroundImage: RtcImage; transcodingUsers: Array&lt;TranscodingUser> }</codeblock>
                <codeblock props="unity" outputclass="language-csharp"/>
                <codeblock props="rn" outputclass="language-typescript"/>
                <codeblock props="flutter" outputclass="language-dart"/>
            </p>
        </section>
        <section id="parameters">
   <title><text conref = "../conref/conref_api_metadata.dita#metadata/property"/></title>
   <parml>
   <plentry>
   <pt>width</pt>
                    <pd>
                        <p>The width of the output media stream in pixels. The default value is 360.</p>
                        <ul>
                            <li>When the output media stream is video, ensure that <codeph>width</codeph> is set to 64 or higher. Otherwise, the Agora server adjusts the value to 64.</li>
                            <li>When the output media stream is audio, set <codeph>width</codeph> to 0.</li>
                        </ul>
                    </pd>
                </plentry>
       <plentry>
  <pt>height</pt>
  <pd>
      <p>The height of the output media stream in pixels. The default value is 640.</p>
      <ul>
 <li>When the output media stream is video, ensure that <codeph>height</codeph> is set to 64 or higher. Otherwise, the Agora server adjusts the value to 64.</li>
 <li>When the output media stream is audio, set <codeph>height</codeph> to 0.</li>
      </ul>
  </pd>
       </plentry>
       <plentry>
  <pt>videoBitrate</pt>
  <pd>The video bitrate (Kbps) of the output media stream. The default value is 400. You can refer
                        to <xref keyref="guide-cdn-streaming">Pushing Streams to CDN</xref> to set
                        this paramter.</pd>
       </plentry>
       <plentry>
  <pt>videoFrameRate</pt>
  <pd>The video frame rate (fps) of the output media stream. The default value is 15, and the value range is [1,30].<note type="attention">The Agora server adjusts any value over 30 fps to 30 fps.</note></pd>
       </plentry>
       <plentry>
  <pt>lowLatency</pt>
  <pd>
      <dl outputclass="deprecated">
 <dlentry>
     <dt>Deprecated</dt>
     <dd>This attribute is deprecated since v2.8.0, and Agora does not recommend it.</dd>
 </dlentry>
      </dl>
      <ul>
 <li>true: Low latency with unassured quality.</li>
 <li>false: (Default) High latency with assured quality.</li>
      </ul>
  </pd>
       </plentry>
       <plentry>
  <pt>videoGop</pt>
  <pd>The video GOP (Group of Pictures) of the output media stream. The default value is 30.</pd>
       </plentry>
       <plentry>
       <pt>videoCodecProfile</pt>
       <pd>
  <p>The video encoding specifications of the output media stream. See <xref keyref="VIDEO_CODEC_PROFILE_TYPE"/>.</p>
  <note type="attention">If you set this parameter to other values, Agora adjusts it to the default value.</note>
       </pd>
   </plentry>
                <plentry>
                    <pt>videoCodecType</pt>
                    <pd>The codec type of the output video. See <xref keyref="VIDEO_CODEC_TYPE_FOR_STREAM"/>.</pd>
                </plentry>
       <plentry>
  <pt>backgroundColor</pt>
  <pd>The video background color of the output media stream. The format is a hexadecimal integer defined by RGB without the # symbol. For example, <codeph>0xFFB6C1</codeph> represents light pink. The default value is <codeph>0x000000 </codeph>(black).</pd>
       </plentry>
       <plentry>
  <pt>userCount</pt>
  <pd>The number of hosts involved in transcoding. The default value is 0.</pd>
       </plentry>
       <plentry>
  <pt>transcodingUsers</pt>
  <pd>
      <p>Transcoding configurations of each host. One live streaming channel supports up to 17 hosts. See <xref keyref="TranscodingUser"/>.</p>
  </pd>
       </plentry>
       <plentry>
  <pt>transcodingExtraInfo</pt>
  <pd>The user SEI information embedded in the output media stream. This parameter is used to send SEI information to the CDN. The maximum length is 4096 bytes. See <xref keyref="faq-sei">How to solve SEI-related issues?</xref></pd>
       </plentry>
       <plentry>
  <pt>metadata</pt>
  <pd>
      <dl outputclass="deprecated">
 <dlentry>
     <dt>Deprecated:</dt>
     <dd>This attribute is deprecated.</dd>
 </dlentry>
      </dl>The metadata sent to the CDN client.</pd>
       </plentry>
       <plentry>
  <pt>watermark</pt>
  <pd>The video watermark of the output media stream. Ensure that the format of the watermark image is PNG. See <xref keyref="RtcImage"/>.</pd>
       </plentry>
       <plentry>
  <pt>backgroundImage</pt>
  <pd>The video background image of the output media stream. See <xref keyref="RtcImage"/>.</pd>
       </plentry>
       <plentry>
  <pt>audioSampleRate</pt>
  <pd>The audio sampling rate (Hz) of the output media stream. See <xref keyref="AUDIO_SAMPLE_RATE_TYPE"/>.</pd>
       </plentry>
       <plentry>
  <pt>audioBitrate</pt>
  <pd>The audio bitrate (Kbps) of the output media stream. The default value is 48, and the maximum is 128.</pd>
       </plentry>
       <plentry>
  <pt>audioChannels</pt>
  <pd>The number of audio channels of the output media stream. The default value is 1. Agora recommends setting it to 1 or 2.<ul>
      <li>1: (Default) Mono.</li>
      <li>2: Stereo.</li>
      <li>3: Three audio channels.</li>
      <li>4: Four audio channels.</li>
      <li>5: Five audio channels.</li>
      </ul>
  </pd>
       </plentry>
       <plentry>
  <pt>audioCodecProfile</pt>
  <pd>The audio codec of the media stream. See <xref keyref="AUDIO_CODEC_PROFILE_TYPE"/>.</pd>
       </plentry>
   </parml>
        </section></refbody>
</reference>
