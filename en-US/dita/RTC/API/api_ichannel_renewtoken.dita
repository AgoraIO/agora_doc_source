<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE reference PUBLIC "-//OASIS//DTD DITA Reference//EN" "reference.dtd">
<reference id="api_ichannel_renewtoken">
    <title><ph keyref="IChannel_renewToken" /></title>
    <shortdesc conkeyref="renewToken/short" />
    <prolog>
        <metadata>
            <keywords>
                <indexterm keyref="IChannel_renewToken" />
            </keywords>
        </metadata>
    </prolog>
    <refbody>
        <section id="prototype">
            <p outputclass="codeblock">
            <codeblock props="android" outputclass="language-java" />
            <codeblock props="ios mac" outputclass="language-objectivec" />
            <codeblock props="cpp" outputclass="language-cpp">virtual int renewToken(const char* token) = 0;</codeblock>
            <codeblock props="electron" outputclass="language-typescript">renewToken(token: string): number</codeblock>
            <codeblock props="cs" outputclass="language-csharp">public abstract int RenewToken(string token);</codeblock>
            <codeblock props="rn" outputclass="language-typescript" />
            <codeblock props="flutter" outputclass="language-dart">Future&lt;void&gt; renewToken(String token);</codeblock> </p>
        </section>
        <section id="detailed_desc">
            <p>Passes a new token to the SDK. A token expires after a certain period of time. The app should get a new token and call this method to pass the token to the SDK. Failure to do so results in the SDK disconnecting from the server.
            <ul>
            <li>The SDK triggers the <xref keyref="IChannel_onTokenPrivilegeWillExpire" /> callback.</li>
            <li>The <xref keyref="IChannel_onConnectionStateChanged" /> callback reports <apiname keyref="CONNECTION_CHANGED_TOKEN_EXPIRED" />(9).</li>
            </ul></p>
        </section>
        <section id="parameters" conkeyref="renewToken/parameters" />
    </refbody>
</reference>