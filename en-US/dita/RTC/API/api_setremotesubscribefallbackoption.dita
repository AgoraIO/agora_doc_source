<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE reference PUBLIC "-//OASIS//DTD DITA Reference//EN" "reference.dtd">
<reference id="api_setremotesubscribefallbackoption">
     <title>
          <ph keyref="setRemoteSubscribeFallbackOption" />
     </title>
     <shortdesc id="short"><ph id="shortdesc">Sets the fallback option for the remotely subscribed video stream based on the network conditions.</ph></shortdesc>
     <prolog>
          <metadata>
               <keywords>
                    <indexterm keyref="setRemoteSubscribeFallbackOption" />
               </keywords>
          </metadata>
     </prolog>
     <refbody><section id="prototype">
         <p outputclass="codeblock">
                <codeblock props="android" outputclass="language-java">public abstract int setRemoteSubscribeFallbackOption(int option);</codeblock>
                <codeblock props="ios mac" outputclass="language-objectivec">- (int)setRemoteSubscribeFallbackOption:(AgoraStreamFallbackOptions)option;</codeblock>
                <codeblock props="windows" outputclass="language-cpp">virtual int setRemoteSubscribeFallbackOption(STREAM_FALLBACK_OPTIONS option) = 0;</codeblock>
                <codeblock props="electron" outputclass="language-typescript">setRemoteSubscribeFallbackOption(option: STREAM_FALLBACK_OPTIONS): number</codeblock>
                <codeblock props="unity" outputclass="language-csharp">public abstract int SetRemoteSubscribeFallbackOption(STREAM_FALLBACK_OPTIONS option);</codeblock>
                <codeblock props="rn" outputclass="language-typescript" />
                <codeblock props="flutter" outputclass="language-dart">Future&lt;void&gt; setRemoteSubscribeFallbackOption(StreamFallbackOptions option);</codeblock>
         </p>
          </section>
          <section id="detailed_desc">
               <p>Unreliable network conditions affect the overall quality of the interactive live streaming. If <parmname>option</parmname> is set as <apiname keyref="STREAM_FALLBACK_OPTION_VIDEO_STREAM_LOW" />(1) or <apiname keyref="STREAM_FALLBACK_OPTION_AUDIO_ONLY" />(2), the SDK automatically switches the video from a high-quality stream to a low-quality stream or disables the video when the downlink network conditions cannot support both audio and video to guarantee the quality of the audio. The SDK monitors the network quality and restores the video stream when the network conditions improve. When the remote video stream falls back to audio-only or when the audio-only stream switches back to the video, the SDK triggers the <xref keyref="onRemoteSubscribeFallbackToAudioOnly" /> callback.</p>
               <note type="attention">Ensure that you call this method before joining a channel.</note>
          </section>
          <section id="parameters">
               <title>Parameters</title>
               <parml>
                    <plentry>
                         <pt>option</pt>
                         <pd><ph>The fallback option for the remotely subscribed video stream. The default value is <apiname keyref="STREAM_FALLBACK_OPTION_VIDEO_STREAM_LOW" />(1). </ph><ph props="ios mac windows electron unity flutter">See <xref keyref="STREAM_FALLBACK_OPTIONS" />.</ph><ul props="android">
                         <li><ph keyref="STREAM_FALLBACK_OPTION_DISABLED" />(0): No fallback behavior for the local/remote video stream when the uplink/downlink network conditions are poor. The quality of the stream is not guaranteed.</li>
                         <li><ph keyref="STREAM_FALLBACK_OPTION_VIDEO_STREAM_LOW" /><ph>(1): Under poor downlink network conditions, the remote video stream, to which you subscribe, falls back to the low-quality (low resolution and low bitrate) video stream. This option is only valid for <xref keyref="setRemoteSubscribeFallbackOption" />. </ph><ph props="rtc">This option is invalid for <xref keyref="setLocalPublishFallbackOption" /> method.</ph></li>
                         <li><ph keyref="STREAM_FALLBACK_OPTION_AUDIO_ONLY" />(2): Under poor uplink/downlink network conditions, the remote video stream, to which you subscribe, first falls back to the low-quality (low resolution and low bitrate) video stream; and then to an audio-only stream if the network conditions worsen.</li>
                         </ul></pd>
                    </plentry>
               </parml>
          </section>
          <section id="return_values" props="native unity electron">
               <title>Returns</title>
               <ul>
                    <li>0: Success.</li>
                    <li>&lt; 0: Failure.</li>
               </ul>
          </section>
     </refbody>
</reference>