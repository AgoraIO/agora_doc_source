<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE reference PUBLIC "-//OASIS//DTD DITA Reference//EN" "reference.dtd">
<reference id="class_playerstreaminfo">
    <title><ph keyref="PlayerStreamInfo"/></title>
    <shortdesc id="short"><ph id="shortdesc">The whole information of the media stream.</ph></shortdesc>
    <refbody>
        <section id="prototype">
            <p outputclass="codeblock">
                <codeblock props="android" outputclass="language-java">public class MediaStreamInfo { private int streamIndex; private int mediaStreamType; private String codecName; private String language; private int videoFrameRate; private int videoBitRate; private int videoWidth; private int videoHeight; private int videoRotation; private int audioSampleRate; private int audioChannels; private int audioBytesPerSample; private long duration; public MediaStreamInfo() {} }</codeblock>
                <codeblock props="ios mac" outputclass="language-objectivec">__attribute__((visibility(&quot;default&quot;))) @interface AgoraMediaStreamInfo : NSObject @property(nonatomic, assign) NSInteger streamIndex; @property(nonatomic, assign) AgoraMediaStreamType streamType; @property(nonatomic, copy) NSString *_Nonnull codecName; @property(nonatomic, copy) NSString *_Nullable language; @property(nonatomic, assign) NSInteger videoFrameRate; @property(nonatomic, assign) NSInteger videoBitRate; @property(nonatomic, assign) NSInteger videoWidth; @property(nonatomic, assign) NSInteger videoHeight; @property(nonatomic, assign) NSInteger audioSampleRate; @property(nonatomic, assign) NSInteger audioChannels; @property(nonatomic, assign) NSInteger duration; @property(nonatomic, assign) NSInteger rotation; @end</codeblock>
                <codeblock props="windows" outputclass="language-cpp">struct PlayerStreamInfo { int streamIndex; MEDIA_STREAM_TYPE streamType; char codecName[kMaxCharBufferLength]; char language[kMaxCharBufferLength]; int videoFrameRate; int videoBitRate; int videoWidth; int videoHeight; int videoRotation; int audioSampleRate; int audioChannels; int audioBitsPerSample; int64_t duration; PlayerStreamInfo() : streamIndex(0), streamType(STREAM_TYPE_UNKNOWN), videoFrameRate(0), videoBitRate(0), videoWidth(0), videoHeight(0), videoRotation(0), audioSampleRate(0), audioChannels(0), audioBitsPerSample(0), duration(0) { memset(codecName, 0, sizeof(codecName)); memset(language, 0, sizeof(language));</codeblock>
                <codeblock props="electron" outputclass="language-typescript"/>
                <codeblock props="unity" outputclass="language-csharp"/>
                <codeblock props="rn" outputclass="language-typescript"/>
                <codeblock props="flutter" outputclass="language-dart"/>
            </p>
        </section>
        <section id="parameters">
            <title><text conref="../conref/conref_api_metadata.dita#metadata/property"/></title>
            <parml>
                <plentry>
                    <pt>streamIndex</pt>
                    <pd>The index of the media stream.</pd>
                </plentry>
                <plentry>
                    <pt props="ios mac windows">streamType</pt>
                    <pt props="android">mediaStreamType</pt>
                    <pd>The type of the media stream. See <xref keyref="MEDIA_STREAM_TYPE"/> for details.</pd>
                </plentry>
                <plentry>
                    <pt>codecName</pt>
                    <pd>The codec of the media stream.</pd>
                </plentry>
                <plentry>
                    <pt>language</pt>
                    <pd>The language of the media stream.</pd>
                </plentry>
                <plentry>
                    <pt>videoFrameRate</pt>
                    <pd>For video stream, gets the frame rate (fps).</pd>
                </plentry>
                <plentry>
                    <pt>videoBitrate</pt>
                    <pd>For video stream, gets the bitrate (bps).</pd>
                </plentry>
                <plentry>
                    <pt>videoWidth</pt>
                    <pd>For video stream, gets the width (pixel) of the video.</pd>
                </plentry>
                <plentry>
                    <pt>videoHeight</pt>
                    <pd>For video stream, gets the height (pixel) of the video.</pd>
                </plentry>
                <plentry props="android ios mac">
                    <pt props="android">videoRotation</pt>
                    <pt props="ios mac">rotation</pt>
                    <pd>For video stream, gets the rotation angle of the video.</pd>
                </plentry>
                <plentry>
                    <pt>audioSampleRate</pt>
                    <pd>For the audio stream, gets the sample rate (Hz).</pd>
                </plentry>
                <plentry>
                    <pt>audioChannels</pt>
                    <pd>For the audio stream, gets the channel number.</pd>
                </plentry>
                <plentry props="android windows">
                    <pt>audioBitsPerSample</pt>
                    <pd>For the audio stream, gets the bits per sample.</pd>
                </plentry>
                <plentry>
                    <pt>duration</pt>
                    <pd>The total duration (s) of the media stream.</pd>
                </plentry>
            </parml>
        </section>
    </refbody>
</reference>
