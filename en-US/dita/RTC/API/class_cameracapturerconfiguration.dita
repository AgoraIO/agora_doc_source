<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE reference PUBLIC "-//OASIS//DTD DITA Reference//EN" "reference.dtd">
<reference id="class_cameracapturerconfiguration">
    <title><ph keyref="CameraCapturerConfiguration"/></title>
    <shortdesc id="short"><ph id="shortdesc">The camera capturer preference.</ph></shortdesc>
    <refbody>
        <section id="prototype">
            <p props="rtc-ng" outputclass="codeblock">
                <codeblock props="android" outputclass="language-java">public class CameraCapturerConfiguration { public enum CAMERA_DIRECTION { CAMERA_REAR(0), CAMERA_FRONT(1); } public CAMERA_DIRECTION cameraDirection; static public class CaptureFormat { public int width; public int height; public int fps; } public CaptureFormat captureFormat; }</codeblock>
                <codeblock props="ios mac" outputclass="language-objectivec">__attribute__((visibility(&quot;default&quot;))) @interface AgoraCameraCapturerConfiguration: NSObject @property (assign, nonatomic) AgoraCameraDirection cameraDirection; @end</codeblock>
            </p>
            <p props="rtc" outputclass="codeblock">
                <codeblock props="android" outputclass="language-java"/>
                <codeblock props="ios mac" outputclass="language-objectivec"/>
                <codeblock props="windows" outputclass="language-cpp">struct CameraCapturerConfiguration { CAPTURER_OUTPUT_PREFERENCE preference; int captureWidth; int captureHeight; #if defined(__ANDROID__) || (defined(__APPLE__) &amp;&amp; TARGET_OS_IOS) CAMERA_DIRECTION cameraDirection; #endif CameraCapturerConfiguration() :preference(CAPTURER_OUTPUT_PREFERENCE_AUTO) ,captureWidth(640) ,captureHeight(480) {} CameraCapturerConfiguration(int width, int height) :preference(CAPTURER_OUTPUT_PREFERENCE_MANUAL) ,captureWidth(width) ,captureHeight(height) {} };</codeblock>
                <codeblock props="electron" outputclass="language-typescript">export interface CameraCapturerConfiguration { preference?: CAPTURER_OUTPUT_PREFERENCE; captureWidth?: number; captureHeight?: number; }</codeblock>
                <codeblock props="unity" outputclass="language-csharp"/>
                <codeblock props="rn" outputclass="language-typescript"/>
                <codeblock props="flutter" outputclass="language-dart"/>
            </p>
        </section>
        <section id="parameters">
   <title><text conref="../conref/conref_api_metadata.dita#metadata/property"/></title>
   <parml>
       <plentry props="windows">
  <pt>preference</pt>
  <pd>The camera capture preference. For details, see <xref keyref="CAPTURER_OUTPUT_PREFERENCE"/>.</pd>
       </plentry>
       <plentry props="windows">
                    <pt>captureWidth</pt>
                    <pd>
                        <dl outputclass="since" props="rtc">
                            <dlentry>
                                <dt>Since</dt>
                                <dd><ph keyref="since-cameraconfig"/></dd>
                            </dlentry>
                        </dl>
                        <p>The width (px) of the video image captured by the local camera. To customize the width of the video image, set <parmname>preference</parmname> as<ph keyref="CAPTURER_OUTPUT_PREFERENCE_MANUAL"/> (3) first, and then use <parmname>captureWidth</parmname> to set the video width.</p>
                    </pd>
                </plentry>
       <plentry props="windows">
                    <pt>captureHeight</pt>
                    <pd>
                        <dl outputclass="since" props="rtc">
                            <dlentry>
                                <dt>Since</dt>
                                <dd><ph keyref="since-cameraconfig"/></dd>
                            </dlentry>
                        </dl>
                        <p>The height (px) of the video image captured by the local camera. To customize the height of the video image, set <parmname>preference</parmname> as<ph keyref="CAPTURER_OUTPUT_PREFERENCE_MANUAL"/> (3) first, and then use <parmname>captureHeight</parmname> to set the video height.</p>
                    </pd>
                </plentry>
       <plentry props="android">
           <pt>captureFormat</pt>
           <pd>The format of the locally captured video.<ul id="ul_pjv_5jg_sqb">
               <li><codeph>width</codeph>: Width of the locally captured video (px).</li>
               <li><codeph>height</codeph>: Height of the locally captured video (px).</li>
               <li><codeph>fps</codeph>: The frame rate (fps) of the locally captured video.</li>
                        </ul></pd>
       </plentry>
       <plentry props="android ios windows">
  <pt>cameraDirection</pt>
  <pd>
      <p props="windows">This parameter applies to Android and iOS only.</p>
      <p props="ios windows">The camera direction. For details, see <xref keyref="CAMERA_DIRECTION"/>.</p>
      <p props="android">The camera direction.<ul>
          <li><ph keyref="CAMERA_REAR"/> (0): Use the rear camera.</li>
          <li><ph keyref="CAMERA_FRONT"/> (1): Use the front camera.</li>
      </ul></p>
  </pd>
       </plentry>
   </parml>
        </section></refbody>
</reference>
