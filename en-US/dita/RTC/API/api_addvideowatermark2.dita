<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE reference PUBLIC "-//OASIS//DTD DITA Reference//EN" "reference.dtd">
<reference id="api_addvideowatermark2">
    <title><ph keyref="addVideoWatermark2" /></title>
    <shortdesc id="short"><ph id="shortdesc">Adds a watermark image to the local video.</ph></shortdesc>
    <prolog>
        <metadata>
   <keywords>
       <indexterm keyref="addVideoWatermark2" />
   </keywords>
        </metadata>
    </prolog>
    <refbody><section id="prototype">
        <p outputclass="codeblock">
            <codeblock props="android" outputclass="language-java">public abstract int addVideoWatermark(String watermarkUrl, WatermarkOptions options);</codeblock>
            <codeblock props="ios mac" outputclass="language-objectivec">- (int)addVideoWatermark:(NSURL* _Nonnull)url options:(WatermarkOptions* _Nonnull)options;</codeblock>
            <codeblock props="windows" outputclass="language-cpp">virtual int addVideoWatermark(const char* watermarkUrl, const WatermarkOptions&amp; options) = 0;</codeblock>
            <codeblock props="electron" outputclass="language-typescript">addVideoWatermark(watermarkUrl: string, options: WatermarkOptions): number</codeblock>
            <codeblock props="unity" outputclass="language-csharp">public abstract int AddVideoWatermark(string watermarkUrl, WatermarkOptions options);</codeblock>
            <codeblock props="rn" outputclass="language-typescript">addVideoWatermark(
    watermarkUrl: string,
    options: WatermarkOptions
    ): Promise&lt;void&gt;</codeblock>
            <codeblock props="flutter" outputclass="language-dart">Future&lt;void&gt; addVideoWatermark(String watermarkUrl, WatermarkOptions options);</codeblock>
        </p>
        </section>
        <section id="detailed_desc">

   <p id="desc1">This method adds a PNG watermark image to the local video in the live streaming. Once the watermark image is added, all the audience in the channel (CDN audience included), and the capturing device can see and capture it. Agora supports adding only one watermark image onto the local video, and the newly watermark image replaces the previous one.</p>
   <p>The watermark coordinates are dependent on the settings in the <xref keyref="setVideoEncoderConfiguration" /> method:<ul>
  <li>If the orientation mode of the encoding video (<xref keyref="ORIENTATION_MODE" />) is fixed landscape mode or the adaptive landscape mode, the watermark uses the landscape orientation.</li>
  <li>If the orientation mode of the encoding video (<apiname keyref="ORIENTATION_MODE" />) is fixed portrait mode or the adaptive portrait mode, the watermark uses the portrait orientation.</li>
  <li>When setting the watermark position, the region must be less than the dimensions set in the <apiname keyref="setVideoEncoderConfiguration" /> method; otherwise, the watermark image will be cropped.</li>
       </ul>
   </p>
   <note type="attention">
       <ul>
  <li>Ensure that call this method after <xref keyref="enableVideo" />.</li>
  <li>If you only want to add a watermark to the media push, you can call this method or the <xref keyref="setLiveTranscoding" /> method.</li>
  <li>This method supports adding a watermark image in the PNG file format only. Supported pixel formats of the PNG image are RGBA, RGB, Palette, Gray, and Alpha_gray.</li>
  <li>If the dimensions of the PNG image differ from your settings in this method, the image will be cropped or zoomed to conform to your settings.</li>
  <li>If you have enabled the local video preview by calling the <xref keyref="startPreview" /> method, you can use the <codeph>visibleInPreview</codeph> member to set whether or not the watermark is visible in the preview.</li>
  <li>If you have enabled the mirror mode for the local video, the watermark on the local video is also mirrored. To avoid mirroring the watermark, Agora recommends that you do not use the mirror and watermark functions for the local video at the same time. You can implement the watermark function in your application layer.</li>
       </ul>
   </note>
        </section>
        <section id="parameters"><title>Parameters</title>
   <parml>
       <plentry id="url">
  <pt props="android windows electron unity flutter">watermarkUrl</pt>
  <pt props="ios mac">url</pt>
  <pd>The local file path of the watermark image to be added. This method supports adding a watermark image from the local absolute or relative file path.</pd>
       </plentry>
       <plentry id="options">
  <pt>options</pt>
  <pd>The options of the watermark image to be added. For details, see <xref keyref="WatermarkOptions" />.</pd>
       </plentry>
   </parml>
        </section>
        <section id="return_values" props="native electron unity">
   <title>Returns</title>
   <ul>
       <li>0: Success.</li>
       <li>&lt; 0: Failure.</li>
   </ul>
        </section></refbody>
</reference>