<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE reference PUBLIC "-//OASIS//DTD DITA Reference//EN" "reference.dtd">
<reference id="api_onremotevideostatechanged">
     <title><ph keyref="onRemoteVideoStateChanged" /></title>
     <shortdesc id="short"><ph id="shortdesc">Occurs when the remote video state changes.</ph></shortdesc>
     <prolog>
          <metadata>
               <keywords>
                    <indexterm keyref="onRemoteVideoStateChanged" />
               </keywords>
          </metadata>
     </prolog>
     <refbody><section id="prototype">
         <p outputclass="codeblock">
                <codeblock props="android" outputclass="language-java">public void onRemoteVideoStateChanged(int uid, int state, int reason, int elapsed) {}</codeblock>
                <codeblock props="ios mac" outputclass="language-objectivec">- (void)rtcEngine:(AgoraRtcEngineKit * _Nonnull)engine remoteVideoStateChangedOfUid:(NSUInteger)uid state:(AgoraVideoRemoteState)state reason:(AgoraVideoRemoteReason)reason elapsed:(NSInteger)elapsed;</codeblock>
                <codeblock props="windows" outputclass="language-cpp">virtual void onRemoteVideoStateChanged(uid_t uid, REMOTE_VIDEO_STATE state, REMOTE_VIDEO_STATE_REASON reason, int elapsed) { (void)uid; (void)state; (void)reason; (void)elapsed; }</codeblock>
                <codeblock props="electron" outputclass="language-typescript">on(evt: EngineEvents.REMOTE_VIDEO_STATE_CHANGED, cb: ( uid: number, state: REMOTE_VIDEO_STATE, reason: REMOTE_VIDEO_STATE_REASON, elapsed: number ) => void ): this;</codeblock>
                <codeblock props="unity" outputclass="language-csharp"/>
                <codeblock props="rn" outputclass="language-typescript"/>
                <codeblock props="flutter" outputclass="language-dart"/>
        </p>
          </section>
          <section id="detailed_desc">
               <dl outputclass="since" props="rtc">
                    <dlentry>
                        <dt>Since</dt>
                        <dd>v2.9.0</dd>
                    </dlentry>
                </dl>
               <note id="note" type="attention">This callback does not work properly when the number of users (in the voice/video call channel) or hosts (in the live streaming channel) in the channel exceeds 17.</note>
          </section>
          <section id="parameters">
               <title>Parameter</title>
               <parml>
                    <plentry conkeyref="onJoinChannelSuccess/engine" props="ios mac">
                  <pt/>
                  <pd/>
              </plentry>
                    <plentry id="uid">
                         <pt>uid</pt>
                         <pd>The ID of the remote user whose video state changes.</pd>
                    </plentry>
                    <plentry id="state">
                         <pt>state</pt>
                         <pd>
                              <p props="ios mac windows">The state of the remote video, see <xref keyref="REMOTE_VIDEO_STATE" />.</p>
                              <p props="android">The state of the remote video.<ul>
                                        <li><ph keyref="REMOTE_VIDEO_STATE_STOPPED"/> (0): The remote video is in the initial state. The remote video is in the initial state, probably due to <codeph>REMOTE_VIDEO_STATE_REASON_LOCAL_MUTED(3)</codeph>, <codeph>REMOTE_VIDEO_STATE_REASON_REMOTE_MUTED(5)</codeph>, or <codeph>REMOTE_VIDEO_STATE_REASON_REMOTE_OFFLINE(7)</codeph>.</li>
                                        <li><ph keyref="REMOTE_VIDEO_STATE_STARTING"/> (1): The first remote video packet is received.</li>
                                        <li><ph keyref="REMOTE_VIDEO_STATE_DECODING"/> (2): The remote audio stream is decoded and plays normally. The remote audio stream is decoded and plays normally, probably due to <codeph>REMOTE_VIDEO_STATE_REASON_NETWORK_RECOVERY(2)</codeph>, <codeph>REMOTE_VIDEO_STATE_REASON_LOCAL_UNMUTED(4)</codeph>, <codeph>REMOTE_VIDEO_STATE_REASON_REMOTE_UNMUTED(6)</codeph>, or <codeph>REMOTE_VIDEO_STATE_REASON_AUDIO_FALLBACK_RECOVERY(9)</codeph>.</li>
                                        <li><ph keyref="REMOTE_VIDEO_STATE_FROZEN"/> (3): The remote video is frozen. The remote video is frozen, probably due to <codeph>REMOTE_VIDEO_STATE_REASON_NETWORK_CONGESTION(1)</codeph> or <codeph>REMOTE_VIDEO_STATE_REASON_AUDIO_FALLBACK(8)</codeph>.</li>
                                        <li><ph keyref="REMOTE_VIDEO_STATE_FAILED"/> (4): The remote video fails to start. The remote video fails to start, probably due to <codeph>REMOTE_VIDEO_STATE_REASON_INTERNAL (0)</codeph>.</li>
                                   </ul>
                              </p>
                         </pd>
                    </plentry>
                    <plentry id="reason">
                         <pt>reason</pt>
                         <pd>
                              <p props="ios mac windows">The reason for the remote video state change, see <xref keyref="REMOTE_VIDEO_STATE_REASON" />.</p>
                              <p props="android">Remote audio state reasons.<ul>
                                        <li><ph keyref="REMOTE_VIDEO_STATE_REASON_INTERNAL"/> (0): Internal reasons.</li>
                                        <li><ph
                                                  keyref="REMOTE_VIDEO_STATE_REASON_NETWORK_CONGESTION"
                                        /> (1): Network congestion.</li>
                                        <li><ph keyref="REMOTE_VIDEO_STATE_REASON_NETWORK_RECOVERY"
                                        /> (2): Network recovery.</li>
                                        <li><ph keyref="REMOTE_VIDEO_STATE_REASON_LOCAL_MUTED"
                                        /> (3): The local user stops receiving the remote video stream or disables the video module.</li>
                                        <li><ph keyref="REMOTE_VIDEO_STATE_REASON_LOCAL_UNMUTED"
                                        /> (4): The local user resumes receiving the remote video stream or enables the video module.</li>
                                        <li><ph keyref="REMOTE_VIDEO_STATE_REASON_REMOTE_MUTED"
                                        /> (5): The remote user stops sending the video stream or disables the video module.</li>
                                        <li><ph keyref="REMOTE_VIDEO_STATE_REASON_REMOTE_UNMUTED"
                                        /> (6): The remote user resumes sending the video stream or enables the video module.</li>
                                        <li><ph keyref="REMOTE_VIDEO_STATE_REASON_REMOTE_OFFLINE"
                                        /> (7): The remote user leaves the channel.</li>
                                        <li><ph keyref="REMOTE_VIDEO_STATE_REASON_AUDIO_FALLBACK"
                                        /> (8): The remote media stream falls back to the audio-only stream due to poor network conditions.</li>
                                        <li><ph
                                                  keyref="REMOTE_VIDEO_STATE_REASON_AUDIO_FALLBACK_RECOVERY"
                                        /> (9): The remote media stream switches back to the video stream after the network conditions improve.</li>
                                   </ul>
                              </p>
                         </pd>
                    </plentry>
                    <plentry>
                         <pt>elapsed</pt>
                         <pd>Time elapsed (ms) from the local user calling the <apiname keyref="joinChannel2" /> method until the SDK triggers this callback.</pd>
                    </plentry>
               </parml>
          </section>
     </refbody>
</reference>
