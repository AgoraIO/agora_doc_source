<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE reference PUBLIC "-//OASIS//DTD DITA Reference//EN" "reference.dtd">
<reference id="api_setupremotevideo">
    <title><ph keyref="setupRemoteVideo" /></title>
    <shortdesc id="short"><ph id="shortdesc">Initializes the video view of a remote user.</ph></shortdesc>
    <prolog>
        <metadata>
            <keywords>
                <indexterm keyref="setupRemoteVideo" />
            </keywords>
        </metadata>
    </prolog>
    <refbody><section id="prototype">
        <p outputclass="codeblock">
                <codeblock props="android" outputclass="language-java">public abstract int setupRemoteVideo(VideoCanvas remote);</codeblock>
                <codeblock props="ios mac" outputclass="language-objectivec">- (int)setupRemoteVideo:(AgoraRtcVideoCanvas * _Nonnull)remote;</codeblock>
                <codeblock props="windows" outputclass="language-cpp">virtual int setupRemoteVideo(const VideoCanvas&amp; canvas) = 0;</codeblock>
                <codeblock props="electron" outputclass="language-typescript" />
                <codeblock props="unity" outputclass="language-csharp">public abstract int SetupRemoteVideo(VideoCanvas canvas);</codeblock>
                <codeblock props="rn" outputclass="language-typescript" />
                <codeblock props="flutter" outputclass="language-dart" />
        </p>
        </section>
        <section id="detailed_desc">
            <p>This method initializes the video view of a remote stream on the local device. It affects only the video view that the local user sees. Call this method to bind the remote video stream to a video view and to set the rendering and mirror modes of the video view.</p>
            <p>You need to specify the ID of the remote user in this method. If the remote user ID is unknown to the application, set it after the app receives the <xref keyref="onUserJoined" /> callback.</p>
            <p>To unbind the remote user from the view, set the <parmname>view</parmname> parameter to NULL.</p>
            <p>Once the remote user leaves the channel, the SDK unbinds the remote user.</p>
            <note type="attention">
                <ul>
                    <li>To update the rendering or mirror mode of the remote video view during a call, use the <xref keyref="setRemoteRenderMode2" /> method.</li>
                    <li>If you use the Agora recording feature, the recording client joins the channel as a dummy client, triggering the <xref keyref="onUserJoined" /> callback. Do not bind the dummy client to the app view because the dummy client does not send any video streams. If your app does not recognize the dummy client, bind the remote user to the view when the SDK triggers the <xref keyref="onFirstRemoteVideoDecoded" /> callback.</li>
                </ul>
            </note>
        </section>
        <section id="parameters"><title>Parameters</title>
            <parml>
                <plentry>
                    <pt props="windows unity">canvas</pt>
                    <pt props="android ios mac">remote</pt>
                    <pd>
                        <p>The remote video view and settings. For details, see <xref keyref="VideoCanvas" />.</p>
                    </pd>
                </plentry>
            </parml>
        </section>
        <section id="return_values">
            <title>Returns</title>
            <ul>
                <li>0: Success.</li>
                <li>&lt; 0: Failure.</li>
            </ul>
        </section>
    </refbody>
</reference>