<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE reference PUBLIC "-//OASIS//DTD DITA Reference//EN" "reference.dtd">
<reference id="class_transcodingvideostream">
    <title><ph keyref="TranscodingVideoStream"/></title>
    <shortdesc id="short"><ph id="shortdesc"><?oxy-placeholder content="Provide a short description for this class."?> The video stream for local transcoder.</ph></shortdesc>
    <refbody>
        <section id="prototype">
            <p outputclass="codeblock">
            <codeblock props="android" outputclass="language-java"></codeblock>
            <codeblock props="ios mac" outputclass="language-objectivec">__attribute__((visibility("default"))) @interface AgoraTranscodingVideoStream: NSObject
@property (assign, nonatomic) AgoraMediaSourceType sourceType;
@property (assign, nonatomic) NSUInteger remoteUserUid;
@property (copy, nonatomic) NSString * _Nullable imageUrl;
@property (assign, nonatomic) CGRect rect;
@property (assign, nonatomic) NSInteger zOrder;
@property(assign, nonatomic) double alpha;

@end</codeblock>
            <codeblock props="windows" outputclass="language-cpp">struct TranscodingVideoStream {
  agora::media::MEDIA_SOURCE_TYPE sourceType;
  uid_t remoteUserUid;
  const char* imageUrl;
  int x;
  int y;
  int width;
  int height;
  int zOrder;
  double alpha;
  bool mirror;

  TranscodingVideoStream()
      : sourceType(agora::media::PRIMARY_CAMERA_SOURCE),
        remoteUserUid(0),
        imageUrl(NULL),
        x(0),
        y(0),
        width(0),
        height(0),
        zOrder(0),
        alpha(1.0),
        mirror(false) {}
};</codeblock>
            <codeblock props="electron" outputclass="language-typescript"></codeblock>
            <codeblock props="unity" outputclass="language-csharp"></codeblock>
            <codeblock props="rn" outputclass="language-typescript"></codeblock>
            <codeblock props="flutter" outputclass="language-dart"></codeblock>
            </p>
        </section>
        <section id="parameters">
            <title><text conref="../conref/conref_api_metadata.dita#metadata/property"/></title>
            <parml>
                <plentry>
                    <pt>sourceType</pt>
                    <pd>
                        <p>The video source type for local transcoder. For details, see <xref keyref="VIDEO_SOURCE_TYPE"/>.</p>
                    </pd>
                </plentry>
                <plentry>
                    <pt>remoteUserUid</pt>
                    <pd>
                        <p>The ID of the remote user.<note id="note_m2h_lxn_3qb" type="attention">Use this parameter only when you set the video source type as<apiname keyref="VIDEO_SOURCE_REMOTE"/> REMOTE.</note></p>
                    </pd>
                </plentry>
                <plentry props="ios mac">
                    <pt>connectionId</pt>
                    <pd>
                        <p>The connection ID of the remote user.<note id="note_m5b_qxn_3qb" type="attention">
                            <ul id="ul_llv_qxn_3qb">
                                <li>Use this parameter only when you set the video source type as<apiname keyref="VIDEO_SOURCE_REMOTE"
                                    /> REMOTE.</li>
                                <li>If you join only one channel, set this parameter as</li>
                            </ul>
                            </note></p>
                    </pd>
                </plentry>
                <plentry>
                    <pt>imageUrl</pt>
                    <pd>
                        <p>The URL of the image.<note id="note_rm5_xxn_3qb" type="attention"
                            >Use this parameter only when you set the <codeph props="windows"></codeph><codeph
                            props="ios mac">video source type as REMOTE</codeph>.</note></p>
                    </pd>
                </plentry>
                <plentry props="windows">
                    <pt>x</pt>
                    <pd>
                        <p>The relative lateral displacement of the top left corner of the captured video to the origin (the top left corner of the canvas).</p>
                    </pd>
                </plentry>
                <plentry props="windows">
                    <pt>y</pt>
                    <pd>
                        <p>The relative longitudinal displacement of the top left corner of the captured video to the origin (the top left corner of the canvas).</p>
                    </pd>
                </plentry>
                <plentry props="windows">
                    <pt>width</pt>
                    <pd>
                        <p>The width (px) of the captured video on the canvas.</p>
                    </pd>
                </plentry>
                <plentry props="windows">
                    <pt>heigh</pt>
                    <pd>
                        <p>The height (px) of the captured video on the canvas.</p>
                    </pd>
                </plentry>
                <plentry props="ios mac">
                    <pt>rect</pt>
                    <pd>The relative position and size of the captured video to the origin (the top left corner of the canvas). The data type is CGRect.</pd>
                </plentry>
                <plentry>
                    <pt>zOrder</pt>
                    <pd>The layer of the captured video on the canvas. The value range is [0, 100].<ul><li>
                        0: (Default) The layer is at the bottom.</li>
                        <li>100: The layer is at the top.</li></ul></pd>
                </plentry>
                <plentry>
                    <pt>alpha</pt>
                    <pd>
                        <p>The transparency of the captured video. The value range is [0.0, 1.0].  0.0 indicates that the captured video is completely transparent, and 1.0 indicates that it is opaque.</p>
                    </pd>
                </plentry>
                <plentry props="windows">
                    <pt>mirror</pt>
                    <pd> Whether to mirror the captured video:<ul>
                        <li><codeph><ph keyref="true"/></codeph>: Mirror the captured video.</li>
                        <li><codeph><ph keyref="false"/></codeph>: (Default) Do not mirror the captured video.</li>
                        </ul><note id="note_erc_ryn_3qb" type="attention">该参数仅对视频源类型为 <codeph
                        props="windows">CAMERA</codeph><codeph props="ios mac"
                        >Camera</codeph> 的视频生效。</note></pd>
                </plentry>
            </parml>
        </section>
    </refbody>
</reference>
