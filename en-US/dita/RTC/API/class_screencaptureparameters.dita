<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE reference PUBLIC "-//OASIS//DTD DITA Reference//EN" "reference.dtd">
<reference id="class_screencaptureparameters">
    <title><ph keyref="ScreenCaptureParameters"/></title>
    <shortdesc id="short"><ph id="shortdesc">Screen sharing configurations.</ph></shortdesc>
    <refbody>
        <section id="prototype">
            <p outputclass="codeblock">
                <codeblock props="android" outputclass="language-java"/>
                <codeblock props="ios mac" outputclass="language-objectivec"/>
                <codeblock props="windows" outputclass="language-cpp">struct ScreenCaptureParameters { VideoDimensions dimensions; int frameRate; int bitrate; bool captureMouseCursor; bool windowFocus; view_t* excludeWindowList; int excludeWindowCount; ScreenCaptureParameters() : dimensions(1920, 1080), frameRate(5), bitrate(STANDARD_BITRATE), captureMouseCursor(true), windowFocus(false), excludeWindowList(NULL), excludeWindowCount(0) {} ScreenCaptureParameters(const VideoDimensions&amp; d, int f, int b, bool c, bool focus, view_t *ex = NULL, int cnt = 0) : dimensions(d), frameRate(f), bitrate(b), captureMouseCursor(c), windowFocus(focus), excludeWindowList(ex), excludeWindowCount(cnt) {} ScreenCaptureParameters(int width, int height, int f, int b, bool c, bool focus, view_t *ex = NULL, int cnt = 0) : dimensions(width, height), frameRate(f), bitrate(b), captureMouseCursor(c), windowFocus(focus), excludeWindowList(ex), excludeWindowCount(cnt) {} };</codeblock>
                <codeblock props="electron" outputclass="language-typescript">export interface ScreenCaptureParameters { width: number; height: number; frameRate: number; bitrate: number; captureMouseCursor: boolean; windowFocus: boolean; excludeWindowList: Array&lt;number>; excludeWindowCount: number; }</codeblock>
                <codeblock props="unity" outputclass="language-csharp"/>
                <codeblock props="rn" outputclass="language-typescript"/>
                <codeblock props="flutter" outputclass="language-dart"/>
            </p>
        </section>
        <section id="parameters">
            <title><text conref="../conref/conref_api_metadata.dita#metadata/property"/></title>
            <parml>
                <plentry>
                    <pt>dimensions</pt>
                    <pd><p>The maximum dimensions of encoding the shared region. See <xref keyref="VideoDimensions"/>. The default value is 1920 x 1080, that is, 2,073,600 pixels. Agora uses the value of this parameter to calculate the charges.</p>
                        <p>If the screen dimensions are different from the value of this parameter, Agora applies the following strategies for encoding. Suppose <codeph>dimensions</codeph> are set to 1920 x 1080:<ul>
                                <li>If the value of the screen dimensions is lower than that of <codeph>dimensions</codeph>, for example, 1000 x 1000 pixels, the SDK uses 1000 x 1000 pixels for encoding.</li>
                                <li>If the value of the screen dimensions is higher than that of <codeph>dimensions</codeph>, for example, 2000 x 1500, the SDK uses the maximum value next to 1920 x 1080 with the aspect ratio of the screen dimension (4:3) for encoding, that is, 1440 x 1080.</li>
                            </ul></p>
                    </pd>
                </plentry>
                <plentry>
                    <pt>frameRate</pt>
                    <pd>The frame rate (fps) of the shared region. The default value is 5. Agora does not recommend setting it to a value greater than 15.</pd>
                </plentry>
                <plentry>
                    <pt>bitrate</pt>
                    <pd>The bitrate (Kbps) of the shared region. The default value is 0, which represents that the SDK works out a bitrate according to the dimensions of the current screen.</pd>
                </plentry>
                <plentry>
                    <pt>captureMouseCursor</pt>
                    <pd>
                        <dl outputclass="since">
                            <dlentry>
                                <dt>Since</dt>
                                <dd>v2.4.1</dd>
                            </dlentry>
                        </dl>
                        <p>Sets whether to capture the mouse in screen sharing:<ul>
                                <li><ph keyref="true"/>: (Default) Capture the mouse.</li>
                                <li><ph keyref="false"/>: Do not capture the mouse.</li>
                            </ul></p></pd>
                </plentry>
                <plentry>
                    <pt>windowFocus</pt>
                    <pd><dl outputclass="since">
                        <dlentry>
                            <dt>Since</dt>
                            <dd>v3.1.0</dd>
                        </dlentry>
                    </dl><p>Sets whether to bring the window to the front when calling the <xref keyref="startScreenCaptureByWindowId"/> method to share it:<ul>
                            <li><ph keyref="true"/>: Bring the window to the front.</li>
                            <li><ph keyref="false"/>: (Default) Do not bring the window to the front.</li>
                        </ul></p></pd>
                </plentry>
                <plentry>
                    <pt>excludeWindowList</pt>
                    <pd props="windows"><dl outputclass="since">
                        <dlentry>
                            <dt>Since</dt>
                            <dd>v3.1.0</dd>
                        </dlentry>
                    </dl>
                        <p>The ID list of the windows to be blocked. When calling <xref
                                keyref="startScreenCaptureByScreenRect"/> to start screen sharing, you can use this parameter to block a specified window. When calling <xref keyref="updateScreenCaptureParameters"/> to update screen sharing configurations, you can use this parameter to dynamically block a specified window.</p></pd>
                    <pd props="mac">
                        <dl outputclass="since">
                            <dlentry>
                                <dt>Since</dt>
                                <dd>v3.1.0</dd>
                            </dlentry>
                        </dl>
                        <p>The ID list of the windows to be blocked. When calling <xref
                                keyref="startScreenCaptureByDisplayId"/> to start screen sharing, you can use this parameter to block a specified window. When calling <xref keyref="updateScreenCaptureParameters"/> to update screen sharing configurations, you can use this parameter to dynamically block a specified window.</p></pd>
                </plentry>
                <plentry props="windows">
                    <pt>excludeWindowCount</pt>
                    <pd>
                        <dl outputclass="since">
                        <dlentry>
                            <dt>Since</dt>
                            <dd>v3.1.0</dd>
                        </dlentry>
                    </dl>
                        <p>The number of windows to be blocked.</p></pd>
                </plentry>
            </parml>
        </section>
    </refbody>
</reference>
