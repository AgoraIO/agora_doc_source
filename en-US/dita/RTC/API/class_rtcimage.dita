<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE reference PUBLIC "-//OASIS//DTD DITA Reference//EN" "reference.dtd">
<reference id="class_rtcimage">
    <title><ph keyref="RtcImage"/></title>
    <shortdesc id="short"><ph id="shortdesc">Image properties.</ph></shortdesc>
    <refbody>
      <section id="prototype">
        <p outputclass="codeblock" props="rtc-ng">
          <codeblock props="windows" outputclass="language-cpp">typedef struct RtcImage {
            const char* url;
            int x;
            int y;
            int width;
            int height;
            int zOrder;
            
            RtcImage() : url(NULL), x(0), y(0), width(0), height(0), zOrder(0) {}
            } RtcImage;</codeblock>
          <codeblock props="ios mac" outputclass="language-objectivec">__attribute__((visibility("default"))) @interface AgoraImage : NSObject
            @property(strong, nonatomic) NSURL *_Nonnull url;
            @property(assign, nonatomic) CGRect rect;
            @property (assign, nonatomic) NSInteger zOrder;
            @end</codeblock>
          <codeblock props="android" outputclass="language-java">public class AgoraImage {
            public String url;
            public int x;
            public int y;
            public int width;
            public int height;
            public int zOrder;
            
            @CalledByNative
            public int getWidth() {
            return width;
            }
            
            @CalledByNative
            public int getX() {
            return x;
            }
            
            @CalledByNative
            public int getY() {
            return y;
            }
            
            @CalledByNative
            public int getzOrder() {
            return zOrder;
            }
            
            @CalledByNative
            public int getHeight() {
            return height;
            }
            
            @CalledByNative
            public String getUrl() {
            return url;
            }
            }</codeblock>
        </p>
            <p outputclass="codeblock" props="rtc">
                <codeblock props="windows" outputclass="language-cpp">typedef struct RtcImage {
  RtcImage() : url(NULL), x(0), y(0), width(0), height(0) {}
  const char* url;
  int x;
  int y;
  int width;
  int height;
  } RtcImage;</codeblock>
                <codeblock props="ios mac" outputclass="language-objectivec">__attribute__((visibility("default"))) @interface AgoraImage : NSObject
@property(strong, nonatomic) NSURL* _Nonnull url;
@property(assign, nonatomic) CGRect rect;
@end</codeblock>
                <codeblock props="android" outputclass="language-java">public class AgoraImage {
    public String url;
    public int x;
    public int y;
    public int width;
    public int height;

    public AgoraImage() {
    }
}</codeblock>
            </p>
            <p outputclass="codeblock">
                <codeblock props="unity" outputclass="language-cpp">typedef struct RtcImage {
    RtcImage() :
       url(NULL),
       x(0),
       y(0),
       width(0),
       height(0)
    {}

    const char* url;
    int x;
    int y;
    int width;
    int height;
    } RtcImage;</codeblock>
                <codeblock props="electron" outputclass="language-typescript">export interface RtcImage {
    x: number,
    y: number,
    width: number,
    height: number,
    url: string
    }</codeblock>
                <codeblock props="rn" outputclass="language-typescript"/>
                <codeblock props="flutter" outputclass="language-dart"/>
            </p>
        </section>
        <section id="detailed_desc">
   
   <p>This class sets the properties of the watermark and background images in the live video.</p>
        </section>
        <section id="parameters">
   <title><text conref="../conref/conref_api_metadata.dita#metadata/property"/></title>
   <parml>
       <plentry>
  <pt>url</pt>
  <pd>The HTTP/HTTPS URL address of the image in the live video. The maximum length of this parameter is 1024 bytes.</pd>
       </plentry>
       <plentry props="android windows unity">
  <pt>x</pt>
  <pd>The x coordinate (pixel) of the image on the video frame (taking the upper left corner of the video frame as the origin).</pd>
       </plentry>
       <plentry props="android windows unity">
  <pt>y</pt>
  <pd>The y coordinate (pixel) of the image on the video frame (taking the upper left corner of the video frame as the origin).</pd>
       </plentry>
       <plentry props="android windows unity">
  <pt>width</pt>
  <pd>The width (pixel) of the image on the video frame.</pd>
       </plentry>
       <plentry props="android windows unity">
  <pt>height</pt>
  <pd>The height (pixel) of the image on the video frame.</pd>
       </plentry>
       <plentry props="ios mac">
           <pt>rect</pt>
           <pd>The position and size of the image on the video frame. The data type is CGRect.</pd>
       </plentry>
       <plentry props="rtc-ng">
                    <pt>zOrder</pt>
                    <pd>The layer index of the video frame. An integer. The value range is [0, 100]. 1 represents the lowest layer. 100 represents the top layer.</pd>
                </plentry>
   </parml>
        </section></refbody>
</reference>
