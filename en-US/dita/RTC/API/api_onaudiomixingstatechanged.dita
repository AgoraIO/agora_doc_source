<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE reference PUBLIC "-//OASIS//DTD DITA Reference//EN" "reference.dtd">
<reference id="api_onaudiomixingstatechanged">
    <title><ph keyref="onAudioMixingStateChanged"/></title>
    <shortdesc id="short"><ph id="shortdesc">Occurs when the playback state of the music file changes.</ph></shortdesc>
    <prolog>
        <metadata>
   <keywords>
       <indexterm keyref="onAudioMixingStateChanged" />
   </keywords>
        </metadata>
    </prolog>
    <refbody><section id="prototype">
            <p outputclass="codeblock">
                <codeblock props="android" outputclass="language-java">public void onAudioMixingStateChanged(int state,int reason){ }</codeblock>
                <codeblock props="ios mac" outputclass="language-objectivec">- (void)rtcEngine:(AgoraRtcEngineKit* _Nonnull)engine localAudioMixingStateDidChanged:(AgoraAudioMixingStateCode)state errorCode:(AgoraAudioMixingErrorCode)errorCode;</codeblock>
                <codeblock props="windows" outputclass="language-cpp">virtual void onAudioMixingStateChanged(AUDIO_MIXING_STATE_TYPE state, AUDIO_MIXING_ERROR_TYPE errorCode){ }</codeblock>
<codeblock props="electron" outputclass="language-typescript">on( evt: &quot;audioMixingStateChanged&quot;, cb: (state: number, errorCode: number) => void ): this;</codeblock>
                <codeblock props="flutter" outputclass="language-dart"/>
            </p>
        </section>
        <section id="detailed_desc">
   <dl outputclass="since" props="windows ios mac">
                <dlentry>
                    <dt>Since</dt>
                    <dd>v2.4.0</dd>
                </dlentry>
            </dl>
            <dl outputclass="since" props="android">
                <dlentry>
                    <dt>Since</dt>
                    <dd>v3.4.0</dd>
                </dlentry>
            </dl>
   <p props="windows ios mac electron">This callback occurs when the playback state of the music file changes, and reports the current state and error code.</p>
   <p props="windows ios mac electron">If the local music file does not exist, the SDK does not support the file format, or the the SDK cannot access the music file URL, the SDK reports <ph keyref="WARN_AUDIO_MIXING_OPEN_ERROR"/>(701).</p>
            <p props="android">When the playback state of a music file changes, the SDK triggers this callback and reports the current playback state and the reason for the change.</p>
        </section>
        <section id="parameters"><title>Parameter</title>
            <parml props="windows ios mac electron">
            <plentry id="engine" props="ios mac">
           <pt>engine</pt>
           <pd><xref keyref="IRtcEngine"/> .</pd>
       </plentry>
                <plentry>
                    <pt>state</pt>
                    <pd>The playback state of the music file. See <xref keyref="AUDIO_MIXING_STATE_TYPE"/>.</pd>
                </plentry>
                <plentry>
                    <pt>errorCode</pt>
                    <pd>The error code. See <xref keyref="AUDIO_MIXING_ERROR_TYPE"/>.</pd>
                </plentry>
            </parml>
   <parml props="android">
                <plentry>
                    <pt>state</pt>
                    <pd>The states of the local user&apos;s audio mixing file.<ul>
                            <li><codeph><ph keyref="AUDIO_MIXING_STATE_PLAYING"
                                    /></codeph>: The music file is playing. The possible reasons include:<ul>
                                    <li><codeph>AUDIO_MIXING_REASON_STARTED_BY_USER(720)</codeph></li>
                                    <li><codeph>AUDIO_MIXING_REASON_ONE_LOOP_COMPLETED(721)</codeph></li>
                                    <li><codeph>AUDIO_MIXING_REASON_START_NEW_LOOP(722)</codeph></li>
                                    <li><codeph>AUDIO_MIXING_REASON_RESUMED_BY_USER(726)</codeph></li>
                                </ul></li>
                            <li><codeph><ph keyref="AUDIO_MIXING_STATE_PAUSED"
                                /></codeph>: The music file pauses playing. This state is caused <codeph>by AUDIO_MIXING_REASON_PAUSED_BY_USER(725)</codeph>.</li>
                            <li><codeph><ph keyref="AUDIO_MIXING_STATE_STOPPED"
                                    /></codeph>: The music file stops playing. The possible reasons include:<ul>
                                    <li><codeph>AUDIO_MIXING_REASON_ALL_LOOPS_COMPLETED(723)</codeph></li>
                                    <li><codeph>AUDIO_MIXING_REASON_STOPPED_BY_USER(724)</codeph></li>
                                </ul></li>
                            <li><codeph><ph keyref="AUDIO_MIXING_STATE_FAILED"
                                    /></codeph>: An exception occurs during the playback of the music file. The possible reasons include:<ul>
                                    <li><codeph>AUDIO_MIXING_REASON_CAN_NOT_OPEN(701)</codeph></li>
                                    <li><codeph>AUDIO_MIXING_REASON_TOO_FREQUENT_CALL(702)</codeph></li>
                                    <li><codeph>AUDIO_MIXING_REASON_INTERRUPTED_EOF(703)</codeph></li>
                                </ul></li>
                        </ul></pd>
                </plentry>
                <plentry>
                    <pt>reason</pt>
                    <pd>The reason why the playback state of the music file changes.<ul>
                            <li><codeph>AUDIO_MIXING_REASON_CAN_NOT_OPEN(701)</codeph>: The SDK cannot open the music file. For example, the local music file does not exist, the SDK does not support the file format, or the the SDK cannot access the music file URL.</li>
                            <li><codeph>AUDIO_MIXING_REASON_TOO_FREQUENT_CALL(702)</codeph>: The SDK opens the music file too frequently. If you need to call <apiname></apiname> multiple times, ensure that the call interval is more than 500 ms.</li>
                            <li><codeph>AUDIO_MIXING_REASON_INTERRUPTED_EOF(703)</codeph>: The music file playback is interrupted.</li>
                            <li><codeph>AUDIO_MIXING_REASON_STARTED_BY_USER(720)</codeph>: Successfully calls <apiname></apiname> to play a music file.</li>
                            <li><codeph>AUDIO_MIXING_REASON_ONE_LOOP_COMPLETED(721)</codeph>: The music file completes a loop playback.</li>
                            <li><codeph>AUDIO_MIXING_REASON_START_NEW_LOOP(722)</codeph>: The music file starts a new loop playback.</li>
                            <li><codeph>AUDIO_MIXING_REASON_ALL_LOOPS_COMPLETED(723)</codeph>: The music file completes all loop playback.</li>
                            <li><codeph>AUDIO_MIXING_REASON_STOPPED_BY_USER(724)</codeph>: Successfully calls <apiname></apiname> to stop playing the music file.</li>
                            <li><codeph>AUDIO_MIXING_REASON_PAUSED_BY_USER(725)</codeph>: Successfully calls <apiname>pauseAudioMixing</apiname> to pause playing the music file.</li>
                            <li><codeph>AUDIO_MIXING_REASON_RESUMED_BY_USER(726)</codeph>: Successfully calls <apiname>resumeAudioMixing</apiname> to resume playing the music file.</li>
                        </ul></pd>
                </plentry>
            </parml></section>

   </refbody>
</reference>
