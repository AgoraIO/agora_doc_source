<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE reference PUBLIC "-//OASIS//DTD DITA Reference//EN" "reference.dtd">
<reference id="api_registeraudioframeobserver">
    <title><ph keyref="registerAudioFrameObserver"/></title>
    <shortdesc id="short"><ph id="shortdesc">Registers an audio frame observer object.</ph></shortdesc>
    <prolog>
        <metadata>
   <keywords>
       <indexterm keyref="registerAudioFrameObserver" />
   </keywords>
        </metadata>
    </prolog>
    <refbody><section id="prototype">
        
        <p conref="../conref/conref_rtc_api.dita#apidef/registerAudioFrameObserver"/>
        </section>
        <section id="detailed_desc">
   
   <p>Call this method to register an audio frame observer object (register a callback). When you need the SDK to trigger <xref keyref="onRecordAudioFrame"/> or<xref keyref="onPlaybackAudioFrame"/> callback, you need to use this method to register the callbacks.</p>
   <note type="attention">Ensure that you call this method before joining a channel.</note>
        </section>
        <section id="parameters"><title>Parameter</title>
   <parml>
       <plentry>
  <pt>observer</pt>
  <pd>
      <p>The observer object instance. See <xref keyref="IAudioFrameObserver"/>. Set the value as <ph keyref="NULL"/> to release the observer object. Agora recommends releasing the observer object after receiving the <xref keyref="onLeaveChannel"/> callback.</p>
  </pd>
       </plentry>
   </parml>
        </section>
        <section>
   <title>Returns</title>
   <ul id="ul_wtk_phz_r4b">
       <li>0: Success.</li>
       <li>&lt; 0: Failure.</li>
   </ul>
        </section></refbody>
</reference>
