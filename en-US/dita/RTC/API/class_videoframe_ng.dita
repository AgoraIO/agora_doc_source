<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE reference PUBLIC "-//OASIS//DTD DITA Reference//EN" "reference.dtd">
<reference id="class_videoframe_ng">
    <title><ph keyref="VideoFrame" /></title>
    <shortdesc id="short"><ph id="shortdesc">Configurations of the video frame</ph></shortdesc>
    <refbody>
        <section id="prototype">
            <p outputclass="codeblock">
            <codeblock props="android" outputclass="language-java" />
            <codeblock props="ios mac" outputclass="language-objectivec">__attribute__((visibility("default"))) @interface AgoraOutputVideoFrame : NSObject
@property (nonatomic, assign) NSInteger type;
@property (nonatomic, assign) int width;
@property (nonatomic, assign) int height;
@property (nonatomic, assign) int yStride;
@property (nonatomic, assign) int uStride;
@property (nonatomic, assign) int vStride;
@property (nonatomic, assign) uint8_t* _Nullable yBuffer;
@property (nonatomic, assign) uint8_t* _Nullable uBuffer;
@property (nonatomic, assign) uint8_t* _Nullable vBuffer;
@property (nonatomic, assign) int rotation;
@property (nonatomic, assign) int64_t renderTimeMs;
@property (nonatomic, assign) int avSyncType;
@property(assign, nonatomic) CVPixelBufferRef _Nullable pixelBuffer;

@end</codeblock>
            <codeblock props="windows" outputclass="language-cpp">struct VideoFrame {
  VideoFrame():
  type(VIDEO_PIXEL_UNKNOWN),
  width(0),
  height(0),
  yStride(0),
  uStride(0),
  vStride(0),
  yBuffer(NULL),
  uBuffer(NULL),
  vBuffer(NULL),
  rotation(0),
  renderTimeMs(0),
  avsync_type(0),
  VIDEO_PIXEL_FORMAT type;
  int width;
  int height;
  int yStride;
  int uStride;
  int vStride;
  uint8_t* yBuffer;
  uint8_t* uBuffer;
  uint8_t* vBuffer;
  int rotation;
  int64_t renderTimeMs;
  int avsync_type;
};
</codeblock>
            <codeblock props="electron" outputclass="language-typescript" />
            <codeblock props="unity" outputclass="language-csharp" />
            <codeblock props="rn" outputclass="language-typescript" />
            <codeblock props="flutter" outputclass="language-dart" /> </p>
        </section>
        <section id="detailed_desc">
   
   <p>The video data format is YUV420. Note that the buffer provides a pointer to a pointer. This interface cannot modify the pointer of the buffer but can modify the content of the buffer.</p>
        </section>
        <section id="parameters">
   <title><text conref="../conref/conref_api_metadata.dita#conref_api_metadata/property" /></title>
   <parml>
       <plentry>
  <pt>type</pt>
           <pd props="windows" conkeyref="ExternalVideoFrame/windows-format" />
            <pd props="ios mac" conkeyref="ExternalVideoFrame/oc-format" />
       </plentry>
       <plentry>
  <pt>width</pt>
  <pd>Width of the video in the number of pixels.</pd>
       </plentry>
       <plentry>
  <pt>height</pt>
  <pd>Height of the video in the number of pixels.</pd>
       </plentry>
       <plentry>
  <pt>yStride</pt>
  <pd>The line span of the Y buffer within the YUV data.</pd>
       </plentry>
       <plentry>
  <pt>uStride</pt>
  <pd>The line span of the U buffer within the YUV data.</pd>
       </plentry>
       <plentry>
  <pt>vStride</pt>
  <pd>The line span of the V buffer within the YUV data.</pd>
       </plentry>
       <plentry>
  <pt>yBuffer</pt>
  <pd>The pointer to the Y buffer pointer within the YUV data.</pd>
       </plentry>
       <plentry>
  <pt>uBuffer</pt>
  <pd>The pointer to the U buffer pointer within the YUV data.</pd>
       </plentry>
       <plentry>
  <pt>vBuffer</pt>
  <pd>The pointer to the V buffer pointer within the YUV data.</pd>
       </plentry>
       <plentry>
  <pt>rotation</pt>
  <pd>Sets the clockwise rotation of the video frame before rendering. Supported values include 0, 90, 180, and 270 degrees.</pd>
       </plentry>
       <plentry>
  <pt>renderTimeMs</pt>
  <pd>The timestamp (ms) of the external audio frame. It is mandatory. You can use it to restore the order of the captured audio frame, or synchronize audio and video frames in video-related scenarios (including scenarios where external video sources are used).</pd>
       </plentry>
       <plentry>
  <pt>avsync_type</pt>
  <pd>A reserved parameter.</pd>
       </plentry>
       <plentry props="ios mac">
            <pt>pixelBuffer</pt>
            <pd>Fills the data to CVPixelBuffer.</pd>
        </plentry>
   </parml>
        </section></refbody>
</reference>