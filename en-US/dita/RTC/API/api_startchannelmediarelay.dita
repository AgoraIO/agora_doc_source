<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE reference PUBLIC "-//OASIS//DTD DITA Reference//EN" "reference.dtd">
<reference id="api_startchannelmediarelay">
    <title><ph keyref="startChannelMediaRelay" /></title>
    <shortdesc id="short"><ph id="shortdesc">Starts relaying media streams across channels. This method can be used to implement scenarios such as co-host across channels.</ph></shortdesc>
    <prolog>
        <metadata>
            <keywords>
                <indexterm keyref="startChannelMediaRelay" />
            </keywords>
        </metadata>
    </prolog>
    <refbody>
        <section id="prototype">
            <p outputclass="codeblock">
            <codeblock props="android" outputclass="language-java">public abstract int startChannelMediaRelay(
      ChannelMediaRelayConfiguration channelMediaRelayConfiguration);</codeblock>
            <codeblock props="ios mac" outputclass="language-objectivec">- (int)startChannelMediaRelay:(AgoraChannelMediaRelayConfiguration * _Nonnull)config;</codeblock>
            <codeblock props="cpp" outputclass="language-cpp">virtual int startChannelMediaRelay(const ChannelMediaRelayConfiguration &amp;configuration) = 0;</codeblock>
            <codeblock props="electron" outputclass="language-typescript">startChannelMediaRelay(config: ChannelMediaRelayConfiguration): number</codeblock>
            <codeblock props="cs" outputclass="language-csharp">public abstract int StartChannelMediaRelay(ChannelMediaRelayConfiguration configuration);</codeblock>
            <codeblock props="rn" outputclass="language-typescript" />
            <codeblock props="flutter" outputclass="language-dart">Future&lt;void&gt; startChannelMediaRelay(
      ChannelMediaRelayConfiguration channelMediaRelayConfiguration);</codeblock> </p>
        </section>
        <section id="detailed_desc">
            <p>After a successful method call, the SDK triggers <xref keyref="onChannelMediaRelayStateChanged" /> the and <xref keyref="onChannelMediaRelayEvent" /> callbacks, and these callbacks return the state and events of the media stream relay.
            <ul>
            <li>If the <apiname keyref="onChannelMediaRelayStateChanged" /> callback returns <apiname keyref="RELAY_STATE_RUNNING" /> (2) and <apiname keyref="RELAY_OK" /> (0), and the <apiname keyref="onChannelMediaRelayEvent" /> callback returns <apiname keyref="RELAY_EVENT_PACKET_SENT_TO_DEST_CHANNEL" /> (4), it means that the SDK starts relaying media streams between the source channel and the destination channel.</li>
            <li>If the <apiname keyref="onChannelMediaRelayStateChanged" /> callback returns <apiname keyref="RELAY_STATE_FAILURE" /> (3), an exception occurs during the media stream relay.</li>
            </ul> </p>
            <note type="attention">
            <ul>
            <li>Call this method after joining the channel.</li>
            <li>This method takes effect only when you are a host in a live streaming channel.</li>
            <li>After a successful method call, if you want to call this method again, ensure that you call the <xref keyref="stopChannelMediaRelay" /> method to quit the current relay.</li>
            <li>You need to <xref keyref="mailto-link" /> before implementing this function.</li>
            <li>We do not support string user accounts in this API.</li>
            </ul> </note> </section>
        <section id="parameters">
            <title>Parameters</title>
            <parml>
            <plentry>
                <pt props="android flutter">channelMediaRelayConfiguration</pt>
                <pt props="ios mac">config</pt>
                <pt props="cpp cs">configuration</pt>
                <pd>The configuration of the media stream relay. See <xref keyref="ChannelMediaRelayConfiguration" /> for details.</pd>
            </plentry>
            </parml> </section>
        <section id="return_values" props="native electron cs">
            <title>Returns</title>
            <ul>
            <li>Success.</li>
            <li>&lt;Failure.</li>
            </ul> </section>
    </refbody>
</reference>