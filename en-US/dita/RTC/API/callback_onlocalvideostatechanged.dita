<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE reference PUBLIC "-//OASIS//DTD DITA Reference//EN" "reference.dtd">
<reference id="callback_onlocalvideostatechanged">
    <title> <ph keyref="onLocalVideoStateChanged"/> </title>
    <shortdesc id="short"><ph id="shortdesc">Occurs when the local video stream state changes.</ph></shortdesc>
    <prolog>
        <metadata>
            <keywords>
                <indexterm keyref="onLocalVideoStateChanged"/>
            </keywords>
        </metadata>
    </prolog>
    <refbody>
        <section id="prototype">
            <p outputclass="codeblock" props="rtc-ng">
            <codeblock props="android" outputclass="language-java">public void onLocalVideoStateChanged(int state, int error) {}</codeblock>
            <codeblock props="ios mac" outputclass="language-objectivec">- (void)rtcEngine:(AgoraRtcEngineKit * _Nonnull)engine
                localVideoStateChangedOfState:(AgoraVideoLocalState)state
                error:(AgoraLocalVideoStreamError)error;</codeblock>
            <codeblock props="windows" outputclass="language-cpp">virtual void onLocalVideoStateChanged(LOCAL_VIDEO_STREAM_STATE state, LOCAL_VIDEO_STREAM_ERROR error) {
                (void)state;
                (void)error;
                }</codeblock> </p>
            <p outputclass="codeblock" props="rtc">
            <codeblock props="android">public void onLocalVideoStateChanged(int localVideoState, int error) {
                }</codeblock>
            <codeblock props="ios mac">- (void)rtcEngine:(AgoraRtcEngineKit* _Nonnull)engine localVideoStateChange:(AgoraLocalVideoStreamState)state error:(AgoraLocalVideoStreamError)error NS_SWIFT_NAME(rtcEngine(_:localVideoStateChange:error:));
</codeblock>
            <codeblock props="windows" outputclass="language-cpp">virtual void onLocalVideoStateChanged(LOCAL_VIDEO_STREAM_STATE localVideoState,
                LOCAL_VIDEO_STREAM_ERROR error) {
                (void)localVideoState;
                (void)error;
                }</codeblock> </p>
            <p outputclass="codeblock">
            <codeblock props="electron" outputclass="language-typescript">on(evt: EngineEvents.LOCAL_VIDEO_STATE_CHANGED, cb: (
    localVideoState: number,
    error: number
    ) =&gt; void): this;</codeblock>
            <codeblock props="unity" outputclass="language-csharp">public virtual void OnLocalVideoStateChanged(LOCAL_VIDEO_STREAM_STATE localVideoState,
            LOCAL_VIDEO_STREAM_ERROR error)</codeblock>
            <codeblock props="rn" outputclass="language-typescript"/>
            <codeblock props="flutter" outputclass="language-dart">LocalVideoStateCallback? localVideoStateChanged;</codeblock> </p>
        </section>
        <section id="detailed_desc">
            <dl outputclass="since" props="rtc">
            <dlentry props="native">
                <dt>Since</dt>
                <dd>v2.4.1</dd>
            </dlentry>
            </dl>
            <p id="desc1">When the state of the local video stream changes (including the state of the video capture and encoding), the SDK triggers this callback to report the current state. This callback indicates the state of the local video stream, including camera capturing and video encoding, and allows you to troubleshoot issues when exceptions occur.</p>
            <p>The SDK triggers the <apiname keyref="onLocalVideoStateChanged"/> callback with the state code of <apiname keyref="LOCAL_VIDEO_STREAM_STATE_FAILED"/> and error code of <apiname keyref="LOCAL_VIDEO_STREAM_ERROR_CAPTURE_FAILURE"/> in the following situations:<ul>
            <li>The app switches to the background, and the system gets the camera resource.</li>
            <li>The camera starts normally, but does not output video for four consecutive seconds.</li>
            </ul></p>
            <p>When the camera outputs the captured video frames, if the video frames are the same for 15 consecutive frames, the SDK triggers the <apiname keyref="onLocalVideoStateChanged"/> callback with the state code of <apiname keyref="LOCAL_VIDEO_STREAM_STATE_CAPTURING"/> and error code of <apiname keyref="LOCAL_VIDEO_STREAM_ERROR_CAPTURE_FAILURE"/>. Note that the video frame duplication detection is only available for video frames with a resolution greater than 200 Ã— 200, a frame rate greater than or equal to 10 fps, and a bitrate less than 20 Kbps.</p>
            <note id="note" type="attention">For some device models, the SDK does not trigger this callback when the state of the local video changes while the local video capturing device is in use, so you have to make your own timeout judgment.</note> </section>
        <section id="parameters">
            <title><ph keyref="callback-section-title"/></title>
            <p conkeyref="onJoinChannelSuccess/callback-desc" props="flutter rn"/>
            <parml>
            <plentry conkeyref="onJoinChannelSuccess/engine" props="ios mac">
                <pt/>
                <pd/>
            </plentry>
            <plentry>
                <pt props="ios mac">state</pt>
                <pt props="unity electron flutter">localVideoState</pt>
                <pt props="windows android"><ph props="rtc">localVideoStatestate</ph><ph props="rtc-ng">state</ph></pt>
                <pd>
                    <p props="ios mac windows unity electron flutter">The state of the local video, see <xref keyref="LOCAL_VIDEO_STREAM_STATE"/>.</p>
                    <p props="android">
                    <ul>
                    <li><ph keyref="LOCAL_VIDEO_STREAM_STATE_STOPPED"/>(0): The local video is in the initial state.</li>
                    <li><ph keyref="LOCAL_VIDEO_STREAM_STATE_CAPTURING"/>(1): The local video capturing device starts successfully.</li>
                    <li><ph keyref="LOCAL_VIDEO_STREAM_STATE_ENCODING"/>(2): The first video frame is successfully encoded.</li>
                    <li><ph keyref="LOCAL_VIDEO_STREAM_STATE_FAILED"/>(3): Fails to start the local video.</li>
                    </ul> </p>
                </pd>
            </plentry>
            <plentry>
                <pt>error</pt>
                <pd>
                    <p props="ios mac windows unity electron flutter">The detailed error information, see <xref keyref="LOCAL_VIDEO_STREAM_ERROR"/>.</p>
                    <p props="android">
                    <ul>
                    <li><ph keyref="LOCAL_VIDEO_STREAM_ERROR_OK"/>(0): The local video is normal.</li>
                    <li><ph keyref="LOCAL_VIDEO_STREAM_ERROR_FAILURE"/>(1): No specified reason for the local video failure.</li>
                    <li><ph keyref="LOCAL_VIDEO_STREAM_ERROR_DEVICE_NO_PERMISSION"/>(2): No permission to use the local video capturing device.</li>
                    <li><ph keyref="LOCAL_VIDEO_STREAM_ERROR_DEVICE_BUSY"/>(3): The local video capturing device is in use.</li>
                    <li><ph keyref="LOCAL_VIDEO_STREAM_ERROR_CAPTURE_FAILURE"/>(4): The local video capture fails. Check whether the capturing device is working properly.<ul id="ul_ygj_tdx_qqb">
                        <li>If your app runs in the background on a device running Android 9 or later, you cannot access the camera.</li>
                        <li>If your app runs on a device running Android 6 or later, this error is reported if the camera is occupied by a third-party app and not property released. Once the camera is released, the SDK triggers this callback again, reporting <codeph>state</codeph> <codeph>CAPTURING</codeph>, and <codeph>error</codeph> <codeph>ERROR_OK</codeph>.</li>
                        </ul></li>
                    <li><ph keyref="LOCAL_VIDEO_STREAM_ERROR_ENCODE_FAILURE"/>(5): The local video encoding fails.</li>
                    </ul> </p>
                </pd>
            </plentry>
            </parml> </section>
    </refbody>
</reference>
