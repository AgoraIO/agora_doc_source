<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE reference PUBLIC "-//OASIS//DTD DITA Reference//EN" "reference.dtd">
<reference id="api_iaudiodevicemanager_startrecordingdevicetest">
    <title><ph keyref="startRecordingDeviceTest" /></title>
    <shortdesc id="short"><ph id="shortdesc">Starts the audio capture device test.</ph></shortdesc>
    <prolog>
        <metadata>
            <keywords>
                <indexterm keyref="startRecordingDeviceTest" />
            </keywords>
        </metadata>
    </prolog>
    <refbody>
        <section id="prototype">
            <p outputclass="codeblock" props="rtc-ng">
            <codeblock props="windows" outputclass="language-cpp">virtual int startRecordingDeviceTest(int indication_Interval) = 0;</codeblock> </p>
            <p outputclass="codeblock" props="windows rtc">
                <codeblock props="native windows" outputclass="language-cpp">virtual int startRecordingDeviceTest(int indicationInterval) = 0;</codeblock>
            </p>
            <p outputclass="codeblock">
            <codeblock props="mac" outputclass="language-objectivec">- (int)startRecordingDeviceTest:(int)indicationInterval;</codeblock>
            <codeblock props="electron" outputclass="language-typescript">startAudioRecordingDeviceTest(indicationInterval: number): number</codeblock>
            <codeblock props="unity" outputclass="language-csharp">public abstract int StartRecordingDeviceTest(int indicationInterval);</codeblock>
            <codeblock props="flutter" outputclass="language-dart">Future&lt;void&gt; startAudioRecordingDeviceTest(int indicationInterval)</codeblock> </p>
        </section>
        <section id="detailed_desc" props="rtc-ng">
            <p>This method tests whether the audio capture device works properly. After calling this method, the SDK triggers the <xref keyref="onAudioVolumeIndication" /> callback at the time interval set in this method, which reports <parmname>uid</parmname> = 0 and the volume information of the capture device.</p>
            <note type="attention">Ensure that you call this method before joining a channel.</note> </section>
        <section props="rtc">
            <p>This method tests whether the audio capturing device works properly.</p>
            <p>As of v3.6.2, you can call this method either before or after joining a channel. Depending on the call sequence, the SDK triggers the following callbacks at the set time interval to report the volume of the audio capturing device:
                
            <ul>
            <li><xref keyref="onAudioVolumeIndication" /> and <xref keyref="onAudioDeviceTestVolumeIndication" /> when you call this method before joining the channel, with the following values:
                    
                <ul>
                <li><codeph>uid = 0</codeph> and <codeph>volume</codeph> in <apiname keyref="onAudioVolumeIndication" />.</li>
                <li><codeph>volumeType = <ph keyref="AudioTestRecordingVolume" />(0)</codeph> and <codeph>volume</codeph> in <apiname keyref="onAudioDeviceTestVolumeIndication" />.</li>
                </ul>The two callbacks report the same volume information. Agora recommends using <apiname keyref="onAudioDeviceTestVolumeIndication" />.</li>
            <li><apiname keyref="onAudioDeviceTestVolumeIndication" /> when you call this method after joining a channel, which reports <codeph>volumeType = <ph keyref="AudioTestRecordingVolume" />(0)</codeph> and <codeph>volume</codeph>.</li>
            </ul></p>
            <note type="attention">
            <ul>
            <li>When you call this method after joining a channel, ensure the audio capturing device is on ( <xref keyref="enableLocalAudio" /> is set as <codeph>true</codeph>); otherwise, the method call fails, and the SDK triggers the <xref keyref="onError" /> callback with <codeph>ERR_ADM_START_RECORDING(1012)</codeph>.</li>
            <li>Calling this method after joining a channel tests the audio capturing device that the SDK is using.</li>
            <li>After calling <apiname>startRecordingDeviceTest</apiname>, you must call <xref keyref="stopRecordingDeviceTest" /> to stop the test.</li>
            </ul> </note> </section>
        <section id="parameters">
            <title>Parameters</title>
            <parml>
            <plentry props="mac electron unity windows flutter">
                <pt props="mac electron unity flutter">indicationInterval</pt>
                <pt props="windows"><ph props="rtc">indicationInterval</ph><ph props="rtc-ng">indication_Interval</ph></pt>
                <pd props="rtc-ng">The time interval (ms) at which the SDK triggers the <xref keyref="onAudioVolumeIndication" /> callback. Agora recommends a setting greater than 200 ms. This value must not be less than 10 ms; otherwise, you can not receive the <apiname keyref="onAudioVolumeIndication" /> callback.</pd>
                <pd props="rtc">The time interval (ms) at which the SDK triggers the <apiname keyref="onAudioVolumeIndication" /> or <apiname keyref="onAudioDeviceTestVolumeIndication" /> callback. Agora recommends a setting greater than 200 ms. This value must not be less than 10 ms; otherwise, you can not receive the <apiname keyref="onAudioVolumeIndication" /> or <apiname keyref="onAudioDeviceTestVolumeIndication" /> callback.</pd>
            </plentry>
            </parml> </section>
        <section id="return_values" props="native electron unity">
            <title>Returns</title>
            <ul>
            <li>0: Success.</li>
            <li>&lt; 0: Failure.</li>
            </ul> </section>
    </refbody>
</reference>