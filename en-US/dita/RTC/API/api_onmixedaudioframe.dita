<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE reference PUBLIC "-//OASIS//DTD DITA Reference//EN" "reference.dtd">
<reference id="api_onmixedaudioframe">
    <title><ph keyref="onMixedAudioFrame"/></title>
    <shortdesc id="short"><ph id="shortdesc">Retrieves the mixed captured and playback audio frame.</ph></shortdesc>
    <prolog>
        <metadata>
   <keywords>
       <indexterm keyref="onMixedAudioFrame" />
   </keywords>
        </metadata>
    </prolog>
    <refbody><section id="prototype">
        <p outputclass="codeblock">
                <codeblock props="android" outputclass="language-java"/>
                <codeblock props="ios mac" outputclass="language-objectivec"/>
                <codeblock props="windows" outputclass="language-cpp">virtual bool onMixedAudioFrame(AudioFrame&amp; audioFrame) = 0;</codeblock>
                <codeblock props="electron" outputclass="language-typescript"/>
                <codeblock props="unity" outputclass="language-csharp"/>
                <codeblock props="rn" outputclass="language-typescript"/>
                <codeblock props="flutter" outputclass="language-dart"/>
        </p>
        </section>
        <section id="detailed_desc">
   
   <p>
       <note type="attention">This callback only returns the single-channel data.</note>
   </p>
        </section>
        <section id="parameters"><title>Parameters</title>
   <parml>
       <plentry>
  <pt>audioFrame</pt>
  <pd>The audio frame. See <xref keyref="AudioFrame"/>.</pd>
       </plentry>
   </parml>
        </section>
        <section id="return_values">
   <title>Returns</title>
   <ul>
       <li><ph keyref="true"/>: Valid buffer in <apiname keyref="AudioFrame">AudioFrame</apiname>, and the captured audio frame is sent out.</li>
       <li><ph keyref="false"/>: Invalid buffer in <apiname keyref="AudioFrame">AudioFrame</apiname>, and the captured audio frame is discarded.</li>
   </ul>
        </section></refbody>
</reference>
