<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE reference PUBLIC "-//OASIS//DTD DITA Reference//EN" "reference.dtd">
<reference id="api_getaudiofileinfo">
    <title><ph keyref="getAudioFileInfo"/></title>
    <shortdesc id="short"><ph id="shortdesc">Gets the information of a specified audio
        file.</ph></shortdesc>
    <prolog>
        <metadata>
            <keywords>
                <indexterm keyref="getAudioFileInfo"/>
            </keywords>
        </metadata>
    </prolog>
    <refbody>
        <section id="prototype">
            <p outputclass="codeblock">
                <codeblock props="android" outputclass="language-java"/>
                <codeblock props="ios mac" outputclass="language-objectivec"/>
                <codeblock props="cpp" outputclass="language-cpp"/>
                <codeblock props="electron" outputclass="language-typescript"/>
                <codeblock props="cs" outputclass="language-csharp">public abstract int GetAudioFileInfo(string filePath);</codeblock>
                <codeblock props="rn" outputclass="language-typescript"/>
                <codeblock props="flutter" outputclass="language-dart">Future&lt;int?&gt; getAudioFileInfo(String filePath);</codeblock>
            </p>
        </section>
        <section id="detailed_desc">
            <dl outputclass="since" props="rtc">
                <dlentry props="native">
                    <dt>Since</dt>
                    <dd>v3.5.1</dd>
                </dlentry>
            </dl>
            <p>After calling this method successfully, the SDK triggers the <xref
                    keyref="onRequestAudioFileInfo"/> callback to report the information of an audio
                file, such as audio duration. You can call this method multiple times to get the
                information of multiple audio files.</p>
            <note type="attention">
                <ul>
                    <li>Call this method after joining a channel.</li>
                    <li conkeyref="preloadEffect/audioFormats"/>
                </ul>
            </note>
        </section>
        <section id="parameters">
            <title>Parameters</title>
            <parml>
                <plentry id="filePath">
                    <pt>filePath</pt>
                    <pd>The file path: <ul>
                            <li props="android flutter cpp">Android: The file path, including the
                                filename extensions. To access an online file, Agora supports using
                                a URL address; to access a local file, Agora supports using a URI
                                address, an absolute path, or a path that starts with
                                    <ph>/assets/</ph>. You might encounter permission issues if you
                                use an absolute path to access a local file, so Agora recommends
                                using a URI address instead. For example:
                                    <ph>content://com.android.providers.media.documents/document/audio%3A14441</ph>.</li>
                            <li props="cpp flutter cs">Windows: The absolute path or URL address
                                (including the filename extensions) of the audio file. For example:
                                    <ph>C:\music\audio.mp4</ph>.</li>
                            <li props="ios mac flutter">iOS or macOS: The absolute path or URL
                                address (including the filename extensions) of the audio file. For
                                example: <ph>/var/mobile/Containers/Data/audio.mp4</ph>.</li>
                        </ul></pd>
                </plentry>
            </parml>
        </section>
        <section id="return_values">
            <title>Returns</title>
            <ul>
                <li>0: Success.</li>
                <li>&lt; 0: Failure.</li>
            </ul>
        </section>
    </refbody>
</reference>
