<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE reference PUBLIC "-//OASIS//DTD DITA Reference//EN" "reference.dtd">
<reference id="api_getpluginparameter">
    <title><ph keyref="getPluginParameter" /></title>
    <shortdesc id="short"><ph id="shortdesc">Gets the parameter of a specified plugin.</ph></shortdesc>
    <prolog>
        <metadata>
            <keywords>
                <indexterm keyref="getPluginParameter" />
            </keywords>
        </metadata>
    </prolog>
    <refbody>
        <section id="prototype">
            <p outputclass="codeblock">
            <codeblock props="android" outputclass="language-java" />
            <codeblock props="ios mac" outputclass="language-objectivec" />
            <codeblock props="cpp" outputclass="language-cpp" />
            <codeblock props="electron" outputclass="language-typescript">getPluginParameter(pluginId: string, key: string): string</codeblock>
            <codeblock props="cs" outputclass="language-csharp" />
            <codeblock props="rn" outputclass="language-typescript" />
            <codeblock props="flutter" outputclass="language-dart" /> </p>
        </section>
        <section id="detailed_desc">
            <p>If you want to pass the JSON string to the C++ layer when using the plugin, you need to call <apiname keyref="getPluginParameter" /> and <xref keyref="setPluginParameter" /> to get and set the plugin parameters.</p>
        </section>
        <section id="parameters">
            <title>Parameters</title>
            <parml>
            <plentry conkeyref="unregisterPlugin/pluginId">
                <pt />
                <pd />
            </plentry>
            <plentry>
                <pt>key</pt>
                <pd>The key.</pd>
            </plentry>
            </parml> </section>
        <section id="return_values">
            <title>Returns</title>
            <p>The value corresponding to the key.</p>
        </section>
    </refbody>
</reference>