<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE reference PUBLIC "-//OASIS//DTD DITA Reference//EN" "reference.dtd">
<reference id="callback_ivideoframeobserver_onsecondarypreencodecameravideoframe">
    <title><ph keyref="onSecondaryPreEncodeCameraVideoFrame"/></title>
    <shortdesc id="short"><ph id="shortdesc">Gets the video data captured from the second camera
            before encoding.</ph></shortdesc>
    <prolog>
        <metadata>
            <keywords>
                <indexterm keyref="onSecondaryPreEncodeCameraVideoFrame"/>
            </keywords>
        </metadata>
    </prolog>
    <refbody>
        <section id="prototype">
            <p outputclass="codeblock">
                <codeblock props="android" outputclass="language-java"/>
                <codeblock props="ios mac" outputclass="language-objectivec"/>
                <codeblock props="cpp" outputclass="language-cpp">virtual bool onSecondaryPreEncodeCameraVideoFrame(VideoFrame&amp; videoFrame) = 0;</codeblock>
                <codeblock props="cs" outputclass="language-csharp"/>
            </p>
        </section>
        <section id="detailed_desc">
            <p>After you successfully register the video frame observer, the SDK triggers this
                callback each time it receives a video frame. In this callback, you can get the
                video data captured from the second camera before encoding and then process the data
                according to your particular scenarios.</p>
            <p>After processing, you can send the processed video data back to the SDK in this
                callback.</p>
            <note type="attention">
                <ul>
                    <li>This callback is for Windows.</li>
                    <li>You need to set <apiname keyref="POSITION_PRE_ENCODER" props="hide"/>(1
                        &lt;&lt; 2) as a frame position by <xref keyref="getObservedFramePosition"/>
                        before you can use this callback to get the video data captured from the
                        second screen and before encoding.</li>
                    <li>The video data that this callback gets has been preprocessed, with its
                        content cropped and rotated, and the image enhanced.</li>
                    <li>This callback does not support sending processed RGBA video data back to the
                        SDK.</li>
                </ul></note>
        </section>
        <section id="parameters">
            <title>Parameters</title>
            <parml>
                <plentry conkeyref="onCaptureVideoFrame/videoframe">
                    <pt/>
                    <pd/>
                </plentry>
            </parml>
        </section>
        <section id="return_values">
            <title>Returns</title>
            <p conkeyref="onCaptureVideoFrame/return"/>
        </section>
    </refbody>
</reference>
