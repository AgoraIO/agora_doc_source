<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE reference PUBLIC "-//OASIS//DTD DITA Reference//EN" "reference.dtd">
<reference id="api_getscreencapturesources">
    <title><ph keyref="getScreenCaptureSources" /></title>
    <shortdesc id="short"><ph id="shortdesc">Gets the list of sharable screens and windows.</ph></shortdesc>
    <prolog>
        <metadata>
            <keywords>
                <indexterm keyref="getScreenCaptureSources" />
            </keywords>
        </metadata>
    </prolog>
    <refbody>
        <section id="prototype">
            <p outputclass="codeblock">
            <codeblock props="android" outputclass="language-java" />
            <codeblock props="ios mac" outputclass="language-objectivec" />
            <codeblock props="windows" outputclass="language-cpp">virtual IScreenCaptureSourceList* getScreenCaptureSources(const SIZE&amp; thumbSize, const SIZE&amp; iconSize, const bool includeScreen) = 0;</codeblock>
            <codeblock props="electron" outputclass="language-typescript" />
            <codeblock props="unity" outputclass="language-csharp" />
            <codeblock props="rn" outputclass="language-typescript" />
            <codeblock props="flutter" outputclass="language-dart" /> </p>
        </section>
        <section id="detailed_desc">
            <p>You can call this method before sharing a screen or window to get a list of shareable screens and windows, which enables a user to use thumbnails in the list to easily choose a particular screen or window to share. This list also contains important information such as window ID and screen ID, with which you can call <xref keyref="startScreenCaptureByWindowId" /> or <xref keyref="startScreenCaptureByDisplayId" /> to start the sharing.
                <note props="windows" type="attention">This method applies to macOS and Windows only.</note></p>
        </section>
        <section id="parameters">
            <title>Parameters</title>
            <parml>
            <plentry>
                <pt>thumbSize</pt>
                <pd>The target size of the screen or window thumbnail. The width and height are in pixels. See <xref keyref="SIZE" />. The SDK scales the original image to make the length of the longest side of the image the same as that of the target size without distorting the original image. For example, if the original image is 400 × 300 and <parmname>thumbSize</parmname> is 100 × 100, the actual size of the thumbnail is 100 × 75. If the target size is larger than the original size, the thumbnail is the original image and the SDK does not scale it.</pd>
            </plentry>
                <plentry>
                    <pt>iconSize</pt>
                    <pd>
                        <p>The target size of the icon corresponding to the application program. The width and height are in pixels. See <xref keyref="SIZE" />. The SDK scales the original image to make the length of the longest side of the image the same as that of the target size without distorting the original image. For example, if the original image is 400 × 300 and <parmname>iconSize</parmname> is 100 × 100, the actual size of the thumbnail is 100 × 75. If the target size is larger than the original size, the thumbnail is the original image and the SDK does not scale it.</p>
                    </pd>
                </plentry>
                <plentry>
                    <pt>includeScreen</pt>
                    <pd>Whether the SDK returns screen information in addition to window information:<ul>
                        <li><ph keyref="true" />: The SDK returns screen and window information.</li>
                        <li><ph keyref="false" />: The SDK returns window information only.</li>
                    </ul></pd>
                </plentry>
            </parml> </section>
        <section id="return_values">
            <title>Returns</title>
            <p>An <xref keyref="IScreenCaptureSourceList" /> object.</p>
        </section>
    </refbody>
</reference>