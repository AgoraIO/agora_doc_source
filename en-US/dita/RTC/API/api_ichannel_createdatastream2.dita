<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE reference PUBLIC "-//OASIS//DTD DITA Reference//EN" "reference.dtd">
<reference id="api_ichannel_createdatastream2">
    <title><ph keyref="IChannel_createDataStream2" /></title>
    <shortdesc conkeyref="createDataStream2/short" /> 
    <prolog>
        <metadata>
   <keywords>
       <indexterm keyref="IChannel_createDataStream2" />
   </keywords>
        </metadata>
    </prolog>
    <refbody><section id="prototype">
        <p outputclass="codeblock">
            <codeblock props="android" outputclass="language-java" />
            <codeblock props="ios mac" outputclass="language-objectivec" />
            <codeblock props="windows" outputclass="language-cpp">virtual int createDataStream(int* streamId, DataStreamConfig&amp; config) = 0;</codeblock>
            <codeblock props="electron" outputclass="language-typescript">createDataStreamWithConfig(config: DataStreamConfig): number</codeblock>
            <codeblock props="unity" outputclass="language-csharp">public abstract int CreateDataStream(DataStreamConfig config);</codeblock>
            <codeblock props="rn" outputclass="language-typescript" />
            <codeblock props="flutter" outputclass="language-dart">Future&lt;int?&gt; createDataStreamWithConfig(DataStreamConfig config);</codeblock>
        </p>
    </section>
        <section id="detailed_desc">
   
   <dl outputclass="since">
       <dlentry props="native">
  <dt>Since</dt>
  <dd>v3.3.0. Use this method instead of <xref keyref="IChannel_createDataStream1" />.</dd>
       </dlentry>
   </dl>
   <p conkeyref="createDataStream2/desc" />
   <p conkeyref="createDataStream2/diff" />
        </section>
        <section id="parameters" conkeyref="createDataStream2/parameters" />
        <section id="return_values" conkeyref="createDataStream2/return_values" />
    </refbody>
</reference>