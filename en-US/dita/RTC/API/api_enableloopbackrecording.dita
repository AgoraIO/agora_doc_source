<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE reference PUBLIC "-//OASIS//DTD DITA Reference//EN" "reference.dtd">
<reference id="api_enableloopbackrecording">
    <title><ph keyref="enableLoopbackRecording"/></title>
    <shortdesc id="short"><ph id="shortdesc">Enables loopback audio capturing.</ph></shortdesc>
    <prolog>
        <metadata>
   <keywords>
       <indexterm keyref="enableLoopbackRecording" />
   </keywords>
        </metadata>
    </prolog>
    <refbody><section id="prototype">
        <p outputclass="codeblock" props="rtc-ng">
            <codeblock props="mac" outputclass="language-objectivec">- (int)enableLoopbackRecording:(BOOL)enabled;</codeblock>
            <codeblock props="windows" outputclass="language-cpp">virtual int enableLoopbackRecording(bool enabled) = 0;</codeblock>
        </p>
        <p outputclass="codeblock" props="rtc">
            <codeblock props="mac" outputclass="language-objectivec">- (int)enableLoopbackRecording:(BOOL)enabled deviceName:(NSString *_Nullable)deviceName;</codeblock>
                <codeblock props="windows" outputclass="language-cpp">virtual int enableLoopbackRecording(bool enabled, const char* deviceName = NULL) = 0;</codeblock>
                <codeblock props="electron" outputclass="language-typescript">enableLoopbackRecording(
    enabled = false,
    deviceName: string | null = null
    ): number</codeblock>
                <codeblock props="unity" outputclass="language-csharp">public abstract int EnableLoopbackRecording(bool enabled, string deviceName);</codeblock>
                <codeblock props="rn" outputclass="language-typescript"/>
                <codeblock props="flutter" outputclass="language-dart"/>
        </p>
        </section>
        <section id="detailed_desc">

   <p id="desc">If you enable loopback audio capturing, the output of the sound card is mixed into the audio stream sent to the other end.</p>
       <note type="attention" id="note">
  <ul id="ul_pjq_swq_t4b">
      <li props="windows">This method applies to macOS and Windows only.</li>
      <li props="rtc"><ph props="windows mac electron">macOS does not support loopback capturing of the default sound card. To use this method, use a virtual sound card and pass its name
                            to the SDK as the value of the<parmname>deviceName</parmname> parameter.  Based on tests, Agora recommends using soundflower
          as the virtual sound card. </ph></li>
      <li>You can call this method either before or after joining a channel.</li>
  </ul>
       </note>
        </section>
        <section id="parameters"><title>Parameter</title>
   <parml>
       <plentry>
  <pt>enabled</pt>
  <pd>Sets whether to enable loopback capturing.<ul id="ul_qjq_swq_t4b">
 <li><codeph><ph keyref="true"/></codeph>: Enable loopback audio capturing.</li>
 <li><codeph><ph keyref="false"/></codeph>: (Default) Disable loopback capturing.</li>
      </ul></pd>
       </plentry>
       <plentry props="rtc">
  <pt>deviceName</pt>
  <pd>The device name of the sound card. The default value is <ph keyref="NULL"/> (the default sound card). If you use a virtual sound card like &quot;Soundflower&quot;, set this parameter as the name of the sound card, &quot;Soundflower&quot;. The SDK will find the corresponding sound card and start capturing.</pd>
       </plentry>
   </parml>
        </section>
        <section id="return_values">
            <title>Returns</title>
            <ul>
                <li>0: Success.</li>
                <li>&lt; 0: Failure.</li>
            </ul>
        </section>
    </refbody>
</reference>
