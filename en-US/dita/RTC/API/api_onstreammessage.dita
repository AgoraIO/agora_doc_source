<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE reference PUBLIC "-//OASIS//DTD DITA Reference//EN" "reference.dtd">
<reference id="api_onstreammessage">
    <title><ph keyref="onStreamMessage"/></title>
    <shortdesc id="short"><ph id="shortdesc">Occurs when the local user receives the data stream from the remote user.</ph></shortdesc>
    <prolog>
        <metadata>
   <keywords>
       <indexterm keyref="onStreamMessage" />
   </keywords>
        </metadata>
    </prolog>
    <refbody><section id="prototype">
        <p outputclass="codeblock" props="rtc-ng">
            <codeblock props="windows" outputclass="language-cpp">virtual void onStreamMessage(uid_t userId, int streamId, const char* data, size_t length, uint64_t sentTs) {
  (void)userId;
  (void)streamId;
  (void)data;
  (void)length;
  (void)sentTs;
} </codeblock>
            </p>
        <p outputclass="codeblock" props="rtc">
            <codeblock props="windows" outputclass="language-cpp">virtual void onStreamMessage(uid_t uid, int streamId, const char* data, size_t length) {
  (void)uid;
  (void)streamId;
  (void)data;
  (void)length;
}</codeblock>
        </p>
        <p outputclass="codeblock">
            <codeblock props="android" outputclass="language-java">public void onStreamMessage(int uid, int streamId, byte[] data) {}</codeblock>
            <codeblock props="ios mac" outputclass="language-objectivec">- (void)rtcEngine:(AgoraRtcEngineKit * _Nonnull)engine
                receiveStreamMessageFromUid:(NSUInteger)uid
                streamId:(NSInteger)streamId
                data:(NSData * _Nonnull)data;</codeblock>
            <codeblock props="electron" outputclass="language-typescript">on(
 evt: EngineEvents.STREAM_MESSAGE,
 cb: (uid: number, streamId: number, data: string) => void
 ): this;</codeblock>
            <codeblock props="unity" outputclass="language-csharp">public virtual void OnStreamMessage(uint uid, int streamId, byte[] data, uint length)</codeblock>
            <codeblock props="rn" outputclass="language-typescript"/>
            <codeblock props="flutter" outputclass="language-dart"/>
        </p>
        </section>
        <section id="detailed_desc">

   <p>The SDK triggers this callback when the local user receives the stream message that the remote user sends by calling the <xref keyref="sendStreamMessage"/> method.</p>
        </section>
        <section id="parameters"><title>Parameter</title>
   <parml>
                <plentry conkeyref="onJoinChannelSuccess/engine" props="ios mac">
                    <pt/>
                    <pd/>
                </plentry>
                <plentry id="uid">
                    <pt props="android ios mac unity">uid</pt>
                    <pt props="windows"><ph props="rtc-ng">userId</ph><ph props="rtc">uid</ph></pt>
                    <pd>The ID of the remote user sending the message.</pd>
                </plentry>
                <plentry id="streamId">
                    <pt>streamId</pt>
                    <pd>The stream ID of the received message.</pd>
                </plentry>
                <plentry id="data">
                    <pt>data</pt>
                    <pd>The data received.</pd>
                </plentry>
                <plentry id="length" props="windows unity">
                    <pt>length</pt>
                    <pd>The data length (byte).</pd>
                </plentry>
            </parml>
            <parml props="rtc-ng">
                <plentry props="windows">
                    <pt>sentTs</pt>
                    <pd>The time when the data stream is sent.</pd>
                </plentry>
            </parml>
        </section>
</refbody>
</reference>
