<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE reference PUBLIC "-//OASIS//DTD DITA Reference//EN" "reference.dtd">
<reference id="api_enablevirtualbackground">
    <title><ph keyref="enableVirtualBackground" /></title>
    <shortdesc id="short"><ph id="shortdesc">Enables/Disables the virtual background. (beta feature)</ph></shortdesc>
    <prolog>
        <metadata>
            <keywords>
                <indexterm keyref="enableVirtualBackground" />
            </keywords>
        </metadata>
    </prolog>
    <refbody>
        <section id="prototype">
            <p outputclass="codeblock" props="hide">
            <codeblock props="android" outputclass="language-java">public abstract int enableVirtualBackground(
      boolean enabled, VirtualBackgroundSource backgroundSource, SegmentationProperty segproperty);
</codeblock>
            <codeblock props="ios mac" outputclass="language-objectivec">- (int)enableVirtualBackground:(BOOL)enable backData:(AgoraVirtualBackgroundSource* _Nullable)backData segData:(AgoraSegmentationProperty* _Nullable)segData;</codeblock>
            <codeblock props="cpp">virtual int enableVirtualBackground(bool enabled, VirtualBackgroundSource backgroundSource, SegmentationProperty segproperty, agora::media::MEDIA_SOURCE_TYPE type = agora::media::PRIMARY_CAMERA_SOURCE) = 0;
</codeblock>
            <codeblock props="cs" outputclass="language-csharp">public abstract int EnableVirtualBackground(bool enabled, VirtualBackgroundSource backgroundSource, SegmentationProperty segproperty, MEDIA_SOURCE_TYPE type);</codeblock> </p>
            <p outputclass="codeblock">
            <codeblock props="android" outputclass="language-java">public abstract int enableVirtualBackground(
      boolean enabled, VirtualBackgroundSource backgroundSource);
</codeblock>
            <codeblock props="ios mac" outputclass="language-objectivec">- (int)enableVirtualBackground:(BOOL)enable backData:(AgoraVirtualBackgroundSource* _Nullable)backData NS_SWIFT_NAME(enableVirtualBackground(_:backData:));
</codeblock>
            <codeblock props="cpp">virtual int enableVirtualBackground(bool enabled, VirtualBackgroundSource backgroundSource) = 0;
</codeblock>
            <codeblock props="electron" outputclass="language-typescript" />
            <codeblock props="cs" outputclass="language-csharp">public abstract int EnableVirtualBackground(bool enabled, VirtualBackgroundSource backgroundSource);</codeblock>
            <codeblock props="rn" outputclass="language-typescript" />
            <codeblock props="flutter" outputclass="language-dart">Future&lt;void&gt; enableVirtualBackground(
      bool enabled, VirtualBackgroundSource backgroundSource);</codeblock> </p>
        </section>
        <section id="detailed_desc">
            <dl outputclass="since" props="rtc">
            <dlentry props="native">
                <dt>Since</dt>
                <dd>v3.5.0</dd>
            </dlentry>
            </dl>
            <p>The virtual background function allows you to replace the original background image of the local user or to blur the background. After successfully enabling the virtual background function, all users in the channel can see the customized background.</p>
            <p props="rtc">You can find out from the <xref keyref="onVirtualBackgroundSourceEnabled" /> callback whether the virtual background is successfully enabled or the cause of any errors.</p>
            <p props="rtc-ng">Enabling the virtual background function involves a series of method calls. The calling sequence is as follows:
            <ol>
            <li props="android">Call <codeph><xref keyref="addExtension" />(<q>agora_segmentation_extension</q>)</codeph> during <xref keyref="IRtcEngine" /> initialization to integrate the video enhancement library in the project.</li>
            <li props="ios">Link the extension library in the project file: <codeph>AgoraVideoSegmentationExtension.xcframework</codeph></li>
            <li props="mac">Link the extension library in the project file: <codeph>AgoraVideoSegmentationExtension.framework</codeph></li>
            <li props="cpp">Call <codeph><xref keyref="loadExtensionProvider" />(<q>libagora_segmentation_extension.dll</q>)</codeph> during <xref keyref="IRtcEngine" /> initialization to specify the extension's library path.</li>
            <li>Call <codeph><xref keyref="enableExtension" />(<q>agora_segmentation</q>, <q>PortraitSegmentation</q>, <q><ph keyref="true" /></q>)</codeph> to enable the extension.</li>
            <li>Call <xref keyref="enableVideo" /> to enable the video module.</li>
            <li>Call this method to enable the virtual background function.</li>
            </ol></p>
            <note type="attention">
            <ul>
            <li props="android cpp unity rn flutter electron mac">Before calling this method, ensure that you have integrated the dynamic library.
                <ul>
                <li props="android cpp unity rn flutter">Android: <ph>libagora_segmentation_extension.so</ph></li>
                <li props="ios cpp unity rn flutter">iOS: <ph>AgoraVideoSegmentationExtension.xcframework</ph></li>
                <li props="mac cpp unity electron">macOS: <ph>AgoraVideoSegmentationExtension.framework</ph></li>
                <li props="cpp">Windows: <ph>libagora_segmentation_extension.dll</ph></li>
                </ul></li>
            <li props="rtc">Call this method after <xref keyref="enableVideo" />.</li>
            <li>This function requires a high-performance device. Agora recommends that you use this function on devices with the following chips:
                <ul>
                <li props="android cpp rn flutter">Snapdragon 700 series 750G and later</li>
                <li props="android cpp rn flutter">Snapdragon 800 series 835 and later</li>
                <li props="android cpp rn flutter">Dimensity 700 series 720 and later</li>
                <li props="android cpp rn flutter">Kirin 800 series 810 and later</li>
                <li props="android cpp rn flutter">Kirin 900 series 980 and later</li>
                <li props="mac cpp cs electron">Devices with an i5 CPU and better</li>
                <li props="ios cpp rn flutter">Devices with an A9 chip and better, as follows:
                    <ul>
                    <li>iPhone 6S and later</li>
                    <li>iPad Air 3rd generation and later</li>
                    <li>iPad 5th generation and later</li>
                    <li>iPad Pro 2nd generation and later</li>
                    <li>iPad mini 5th generation and later</li>
                    </ul></li>
                </ul></li>
            <li>Agora recommends that you use this function in scenarios that meet the following conditions:
                <ul>
                <li>A high-definition camera device is used, and the environment is uniformly lit.</li>
                <li>There are few objects in the captured video. Portraits are half-length and unobstructed. Ensure that the background is a solid color that is different from the color of the user's clothing.</li>
                </ul></li>
            </ul></note> </section>
        <section id="parameters">
            <title>Parameters</title>
            <parml>
            <plentry>
                <pt props="cpp android cs flutter">enabled</pt>
                <pt props="ios mac">enable</pt>
                <pd>Whether to enable virtual background:
                    <ul>
                    <li><codeph><ph keyref="true" /></codeph>: Enable virtual background.</li>
                    <li><codeph><ph keyref="false" /></codeph>: Disable virtual background.</li>
                    </ul></pd>
            </plentry>
            <plentry>
                <pt props="cpp android cs flutter">backgroundSource</pt>
                <pt props="mac ios">backData</pt>
                <pd>The custom background image. See <xref keyref="VirtualBackgroundSource" /> for details. To adapt the resolution of the custom background image to that of the video captured by the SDK, the SDK scales and crops the custom background image while ensuring that the content of the custom background image is not distorted.</pd>
            </plentry>
            <plentry props="hide">
                <pt props="android cpp">segproperty</pt>
                <pt props="ios mac">segData</pt>
                <pd>Processing properties for background images. See <xref keyref="SegmentationProperty" /> for details.</pd>
            </plentry>
            <plentry props="hide">
                <pt>type</pt>
                <pd>Type of the video source. See <xref keyref="MEDIA_SOURCE_TYPE" />.
                    <note type="attention">In this method, this parameter supports only the following two settings:
                    <ul>
                    <li>The default value is <apiname keyref="PRIMARY_CAMERA_SOURCE" />.</li>
                    <li>If you want to use the second camera to capture video, set this parameter to <apiname keyref="SECONDARY_CAMERA_SOURCE" />.</li>
                    </ul></note></pd>
            </plentry>
            </parml> </section>
        <section id="return_values" props="native electron cs">
            <title>Returns</title>
            <ul>
            <li>0: Success.</li>
            <li>&lt; 0: Failure.
                <ul props="rtc-ng">
                <li>-1: The custom background image does not exist. Please check the value of <parmname>source</parmname> in <xref keyref="VirtualBackgroundSource" />.</li>
                <li>-2: The color format of the custom background image is invalid. Please check the value of <parmname>color</parmname> in <xref keyref="VirtualBackgroundSource" />.</li>
                <li>-3: The device does not support using the virtual background.</li>
                </ul></li>
            </ul> </section>
    </refbody>
</reference>