<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE reference PUBLIC "-//OASIS//DTD DITA Reference//EN" "reference.dtd">
<reference id="api_setexternalaudiosource2">
    <title><ph keyref="setExternalAudioSource2"/></title>
    <shortdesc id="short"><ph id="shortdesc">Sets the external audio source
        parameters.</ph></shortdesc>
    <prolog>
        <metadata>
            <keywords>
                <indexterm keyref="setExternalAudioSource2"/>
            </keywords>
        </metadata>
    </prolog>
    <refbody>
        <section id="prototype">
            <p outputclass="codeblock" props="rtc-ng">
                <codeblock props="cs" outputclass="language-csharp">public abstract int SetExternalAudioSource(bool enabled, int sampleRate, int channels, int sourceNumber, bool localPlayback = false, bool publish = true);</codeblock></p>
            <p outputclass="codeblock">
                <codeblock props="android" outputclass="language-java">public abstract int setExternalAudioSource(boolean enabled, int sampleRate, int channels,
      int sourceNumber, boolean localPlayback, boolean publish);</codeblock>
                <codeblock props="ios mac" outputclass="language-objectivec">- (int)setExternalAudioSource:(BOOL)enabled
                   sampleRate:(NSInteger)sampleRate
                     channels:(NSInteger)channels
                 sourceNumber:(NSInteger)sourceNumber
                localPlayback:(BOOL)localPlayback
                      publish:(BOOL)publish;</codeblock>
                <codeblock props="cpp" outputclass="language-cpp">virtual int setExternalAudioSource(bool enabled,
                                   int sampleRate, 
                                   int channels, 
                                   int sourceNumber, 
                                   bool localPlayback = false, 
                                   bool publish = true) = 0;</codeblock>
                <codeblock props="electron" outputclass="language-typescript"/>
                <codeblock props="rn" outputclass="language-typescript"/>
                <codeblock props="flutter" outputclass="language-dart"/>
            </p>
        </section>
        <section id="detailed_desc">
            <note type="attention">Call this method before joining a channel.</note>
        </section>
        <section id="parameters">
            <title>Parameters</title>
            <parml>
                <plentry>
                    <pt>enabled</pt>
                    <pd>
                        <p>Whether to enable the external audio source: <ul>
                                <li><codeph><ph keyref="true"/></codeph>: Enable the external audio
                                    source.</li>
                                <li><codeph><ph keyref="false"/></codeph>: (Default) Disable the
                                    external audio source.</li>
                            </ul></p>
                    </pd>
                </plentry>
                <plentry>
                    <pt>sampleRate</pt>
                    <pd>The sample rate (Hz) of the external audio source, which can be set as
                            <codeph>8000</codeph>, <codeph>16000</codeph>, <codeph>32000</codeph>,
                            <codeph>44100</codeph>, or <codeph>48000</codeph>.</pd>
                </plentry>
                <plentry>
                    <pt>channels</pt>
                    <pd>The number of channels of the external audio source, which can be set as
                            <codeph>1</codeph> (Mono) or <codeph>2</codeph> (Stereo).</pd>
                </plentry>
                <plentry>
                    <pt>sourceNumber</pt>
                    <pd><ph>The number of external audio sources. The value of this parameter should
                            be larger than 0. </ph><ph props="hide">Multiple audio sources are
                            mixed. </ph><ph>The SDK creates a corresponding number of custom audio
                            tracks based on this parameter value and names the audio tracks starting
                            from 0. In <xref keyref="ChannelMediaOptions"/>, you can set
                                <parmname>publishCustomAudioSourceId</parmname> to the ID of the
                            audio track you want to publish.</ph></pd>
                </plentry>
                <plentry>
                    <pt>localPlayback</pt>
                    <pd>
                        <p>Whether to play the external audio source: <ul>
                                <li><codeph><ph keyref="true"/></codeph>: Play the external audio
                                    source.</li>
                                <li><codeph><ph keyref="false"/></codeph>: (Default) Do not play the
                                    external source.</li>
                            </ul></p>
                    </pd>
                </plentry>
                <plentry>
                    <pt>publish</pt>
                    <pd>
                        <p>Whether to publish audio to the remote users: <ul id="ul_agk_dnf_3qb">
                                <li><codeph><ph keyref="true"/></codeph>: (Default) Publish audio to
                                    the remote users.</li>
                                <li><codeph><ph keyref="false"/></codeph>: Do not publish audio to
                                    the remote users</li>
                            </ul></p>
                    </pd>
                </plentry>
            </parml>
        </section>
        <section id="return_values">
            <title>Returns</title>
            <ul id="ul_cff_fnf_3qb">
                <li>0: Success.</li>
                <li>&lt; 0: Failure.</li>
            </ul>
        </section>
    </refbody>
</reference>
