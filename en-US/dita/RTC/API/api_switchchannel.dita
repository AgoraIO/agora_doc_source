<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE reference PUBLIC "-//OASIS//DTD DITA Reference//EN" "reference.dtd">
<reference id="api_switchchannel">
    <title><ph keyref="switchChannel1"/></title>
    <shortdesc id="short"><ph id="shortdesc">Switches to a different channel.</ph></shortdesc>
    <prolog>
        <metadata>
            <keywords>
                <indexterm keyref="switchChannel1"/>
            </keywords>
        </metadata>
    </prolog>
    <refbody>
        <section id="prototype">
            <p outputclass="codeblock" props="rtc-ng">
                <codeblock props="android" outputclass="language-java">public abstract int switchChannel(String token, String channelName);</codeblock>
                <codeblock props="ios mac" outputclass="language-objectivec">-(int)switchChannel:(NSString*  _Nonnull)token  channelName:(NSString*  _Nonnull)channelName;</codeblock>
                <codeblock props="cpp" outputclass="language-cpp">virtual int switchChannel(const char* token, const char* channel) = 0;</codeblock>
            </p>
            <p outputclass="codeblock" props="rtc">
                <codeblock props="android" outputclass="language-java"/>
                <codeblock props="ios mac" outputclass="language-objectivec"/>
                <codeblock props="cpp" outputclass="language-cpp">virtual int switchChannel(const char* token, const char* channelId) = 0;</codeblock>
                <codeblock props="electron" outputclass="language-typescript"/>
                <codeblock props="cs" outputclass="language-csharp">public abstract int SwitchChannel(string token, string channelId);</codeblock>
                <codeblock props="rn" outputclass="language-typescript"/>
                <codeblock props="flutter" outputclass="language-dart"/>
            </p>
        </section>
        <section id="detailed_desc">
            <p>This method allows the audience of an interactive live streaming channel to switch to
                a different channel.</p>
            <p>After the user successfully switches to another channel, the <xref
                    keyref="onLeaveChannel"/> and <xref keyref="onJoinChannelSuccess"/> callbacks
                are triggered to indicate that the user has left the original channel and joined a
                new one.</p>
            <p>Once the user switches to another channel, the user subscribes to the audio and video
                streams of all the other users in the channel by default, giving rise to usage and
                billing calculation. To stop subscribing to a specified stream or all remote
                streams, call the corresponding <apiname>mute</apiname> methods.</p>
        </section>
        <section id="parameters">
            <title>Parameters</title>
            <parml>
                <plentry>
                    <pt>token</pt>
                    <pd>
                        <p>The token generated at your server. <ul>
                                <li>In scenarios with low security requirements, token is optional
                                    and can be set as <ph keyref="NULL"/>.</li>
                                <li>In scenarios with high security requirements, set the value to
                                    the token generated from your server. If you enable the App
                                    Certificate, you must use a token to join the channel.</li>
                            </ul>
                            <note type="caution">Ensure that the App ID used for creating the token
                                is the same App ID used by the <xref keyref="create2"/> method for
                                initializing the RTC engine.</note>
                        </p>
                    </pd>
                </plentry>
                <plentry>
                    <pt props="rtc-ng"><ph props="android ios mac">channelName</ph><ph props="cpp"
                            >channel</ph></pt>
                    <pt props="rtc">channelId</pt>
                    <pd>
                        <p>The channel name. This parameter signifies the channel in which users
                            engage in real-time audio and video interaction. Under the premise of
                            the same App ID, users who fill in the same channel ID enter the same
                            channel for audio and video interaction. The string length must be less
                            than 64 bytes. Supported character scopes are: <ul id="ul_lx4_nrc_h4b">
                                <li>All lowercase English letters: a to z.</li>
                                <li>All uppercase English letters: A to Z.</li>
                                <li>All numeric characters: 0 to 9.</li>
                                <li>Space</li>
                                <li>"!", "#", "$", "%", "&amp;", "(", ")", "+", "-", ":", ";",
                                    "&lt;", "= ", ".", "&gt;", "?", "@", "[", "]", "^", "_", "{",
                                    "}", "|", "~", ","</li>
                            </ul></p>
                    </pd>
                </plentry>
            </parml>
        </section>
        <section id="return_values">
            <title>Returns</title>
            <ul>
                <li>0: Success.</li>
                <li>&lt; 0: Failure. <ul>
                        <li>-1: A general error occurs (no specified reason).</li>
                        <li>-2: The parameter is invalid.</li>
                        <li>-5: The request is rejected. Probably because the user is not an
                            audience member.</li>
                        <li>-7: The SDK is not initialized.</li>
                        <li>-102: The channel name is invalid. Please use a valid channel name.</li>
                        <li>-113: The user is not in the channel.</li>
                    </ul></li>
            </ul>
        </section>
    </refbody>
</reference>
