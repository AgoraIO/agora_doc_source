<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE reference PUBLIC "-//OASIS//DTD DITA Reference//EN" "reference.dtd">
<reference id="callback_onuseroffline">
    <title><ph keyref="onUserOffline"/></title>
    <shortdesc id="short"><ph id="shortdesc">Occurs when a remote user (COMMUNICATION)/ host (LIVE_BROADCASTING) leaves the channel.</ph></shortdesc>
    <prolog>
        <metadata>
            <keywords>
                <indexterm keyref="onUserOffline"/>
            </keywords>
        </metadata>
    </prolog>
    <refbody>
        <section id="prototype">
            <p outputclass="codeblock">
            <codeblock props="android" outputclass="language-java">public void onUserOffline(int uid, int reason) {}</codeblock>
            <codeblock props="ios mac" outputclass="language-objectivec">- (void)rtcEngine:(AgoraRtcEngineKit * _Nonnull)engine
    didOfflineOfUid:(NSUInteger)uid
    reason:(AgoraUserOfflineReason)reason;</codeblock>
            <codeblock props="cpp" outputclass="language-cpp">virtual void onUserOffline(uid_t uid, USER_OFFLINE_REASON_TYPE reason) {
    (void)uid;
    (void)reason;
    }</codeblock>
            <codeblock props="electron" outputclass="language-typescript">on(
  evt: EngineEvents.USER_OFFLINE,
  cb: (uid: number, reason: USER_OFFLINE_REASON_TYPE) =&gt; void
): this;</codeblock>
            <codeblock props="cs" outputclass="language-csharp">public virtual void OnUserOffline(uint uid, USER_OFFLINE_REASON_TYPE reason)</codeblock>
            <codeblock props="rn" outputclass="language-typescript"/>
            <codeblock props="flutter" outputclass="language-dart">UserOfflineCallback? userOffline;</codeblock> </p>
        </section>
        <section id="detailed_desc">
            <p id="desc">There are two reasons for users to become offline:
            <ul>
            <li>Leave the channel: When a user/host leaves the channel, the user/host sends a goodbye message. When this message is received, the SDK determines that the user/host leaves the channel.</li>
            <li>Drop offline: When no data packet of the user or host is received for a certain period of time (20 seconds for the communication profile, and more for the live broadcast profile), the SDK assumes that the user/host drops offline. A poor network connection may lead to false detections. It's recommended to use the Agora RTM SDK for reliable offline detection.</li>
            </ul> </p>
        </section>
        <section id="parameters">
            <title><ph keyref="callback-section-title"/></title>
            <p conkeyref="onJoinChannelSuccess/callback-desc" props="flutter rn"/>
            <parml>
            <plentry conkeyref="onJoinChannelSuccess/engine" props="ios mac">
                <pt/>
                <pd/>
            </plentry>
            <plentry id="uid">
                <pt>uid</pt>
                <pd>The ID of the user who leaves the channel or goes offline.</pd>
            </plentry>
            <plentry id="reason">
                <pt>reason</pt>
                <pd>
                    <p props="ios mac cpp cs flutter">Reasons why the user goes offline: <xref keyref="USER_OFFLINE_REASON_TYPE"/>.</p>
                    <p props="android">Reasons why a
                        remote user (COMMUNICATION) or a host (LIVE_BROADCASTING) goes offline:
                    <ul>
                    <li><ph keyref="USER_OFFLINE_QUIT"/> (0): The user has quit the call. When
                            the user leaves the channel, the user sends a goodbye message. When this
                            message is received, the SDK determines that the user leaves the
                            channel.</li>
                    <li><ph keyref="USER_OFFLINE_DROPPED"/> (1): The SDK timed out and the user
                            dropped offline because it has not received any data package within a
                            certain period of time. A poor network connection may lead to false
                            detection, so we recommend using the RTM SDK for reliable offline
                            detection.</li>
                    <li><ph keyref="USER_OFFLINE_BECOME_AUDIENCE"/> (2): The user switches the
                            user role from a broadcaster to an audience.</li>
                    </ul> </p>
                </pd>
            </plentry>
            </parml> </section>
    </refbody>
</reference>
