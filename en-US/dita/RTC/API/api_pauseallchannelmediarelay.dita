<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE reference PUBLIC "-//OASIS//DTD DITA Reference//EN" "reference.dtd">
<reference id="api_pauseallchannelmediarelay">
    <title><ph keyref="pauseAllChannelMediaRelay"/></title>
    <shortdesc id="short"><ph id="shortdesc">Pauses the media stream relay to all destination
            channels.</ph></shortdesc>
    <prolog>
        <metadata>
            <keywords>
                <indexterm keyref="pauseAllChannelMediaRelay"/>
            </keywords>
        </metadata>
    </prolog>
    <refbody>
        <section id="prototype">
            <p outputclass="codeblock">
                <codeblock props="android" outputclass="language-java">public abstract int pauseAllChannelMediaRelay();</codeblock>
                <codeblock props="ios mac" outputclass="language-objectivec">- (int)pauseAllChannelMediaRelay;</codeblock>
                <codeblock props="cpp" outputclass="language-cpp">virtual int pauseAllChannelMediaRelay() = 0;</codeblock>
                <codeblock props="electron" outputclass="language-typescript"/>
                <codeblock props="cs" outputclass="language-csharp">public abstract int PauseAllChannelMediaRelay();</codeblock>
                <codeblock props="rn" outputclass="language-typescript"/>
                <codeblock props="flutter" outputclass="language-dart">Future&lt;void&gt; pauseAllChannelMediaRelay();</codeblock>
            </p>
        </section>
        <section id="detailed_desc">
            <dl outputclass="since" props="rtc">
                <dlentry props="native">
                    <dt>Since</dt>
                    <dd>v3.5.1</dd>
                </dlentry>
            </dl>
            <p>After the cross-channel media stream relay starts, you can call this method to pause
                relaying media streams to all destination channels; after the pause, if you want to
                resume the relay, call <xref keyref="resumeAllChannelMediaRelay"/>.</p>
            <p>After a successful method call, the SDK triggers the <xref
                    keyref="onChannelMediaRelayEvent"/> callback to report whether the media stream
                relay is successfully paused.</p>
            <note type="attention">Call this method after <xref keyref="startChannelMediaRelay"
                />.</note>
        </section>
        <section id="return_values" props="native electron cs">
            <title>Returns</title>
            <ul>
                <li>0: Success.</li>
                <li>&lt; 0: Failure.</li>
            </ul>
        </section>
    </refbody>
</reference>
