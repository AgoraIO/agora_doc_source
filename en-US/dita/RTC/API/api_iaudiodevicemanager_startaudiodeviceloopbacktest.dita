<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE reference PUBLIC "-//OASIS//DTD DITA Reference//EN" "reference.dtd">
<reference id="api_iaudiodevicemanager_startaudiodeviceloopbacktest">
    <title><ph keyref="startAudioDeviceLoopbackTest" /></title>
    <shortdesc id="short"><ph id="shortdesc">Starts an audio device loopback test.</ph></shortdesc>
    <prolog>
        <metadata>
            <keywords>
                <indexterm keyref="startAudioDeviceLoopbackTest" />
            </keywords>
        </metadata>
    </prolog>
    <refbody>
        <section id="prototype">
            <p outputclass="codeblock">
            <codeblock props="mac" outputclass="language-objectivec">-(int)startAudioDeviceLoopbackTest:(int)indicationInterval;</codeblock>
            <codeblock props="cpp" outputclass="language-cpp">virtual int startAudioDeviceLoopbackTest(int indicationInterval) = 0;</codeblock>
            <codeblock props="electron" outputclass="language-typescript">startAudioDeviceLoopbackTest(indicationInterval: number): number</codeblock>
            <codeblock props="cs" outputclass="language-csharp">public abstract int StartAudioDeviceLoopbackTest(int indicationInterval);</codeblock>
            <codeblock props="flutter" outputclass="language-dart">Future&lt;void&gt; startAudioDeviceLoopbackTest(int indicationInterval)</codeblock> </p>
        </section>
        <section id="detailed_desc" props="rtc-ng">
            <p>This method tests whether the local audio capture device and playback device are working properly. After starting the test, the audio capture device records the local audio, and the audio playback device plays the captured audio. The SDK triggers two independent <xref keyref="onAudioVolumeIndication" /> callbacks at the time interval set in this method, which reports the volume information of the capture device (<parmname>uid</parmname> = 0) and the volume information of the playback device (<parmname>uid</parmname> = 1) respectively.</p>
            <note type="attention">
            <ul>
            <li>Ensure that you call this method before joining a channel.</li>
            <li>This method tests local audio devices and does not report the network conditions.</li>
            </ul> </note> </section>
        <section props="rtc">
            <p>This method tests whether the local audio capturing device and playback device work properly. After calling this method, the audio capturing device samples the local audio, and then the audio playback device plays the sampled audio.</p>
            <p>As of v3.6.2, you can call this method either before or after joining a channel. Depending on the call sequence, the SDK triggers the following callbacks at the set time interval to report the volume of the audio capturing and playback devices: 
                
            <ul>
            <li>Two <xref keyref="onAudioVolumeIndication" /> callbacks and two <xref keyref="onAudioDeviceTestVolumeIndication" /> callbacks when you call this method before joining the channel, with the following values: 
                    
                <ul>
                <li><codeph>uid = 0</codeph> and <codeph>volume</codeph> in one <apiname keyref="onAudioVolumeIndication" /> callback; <codeph>uid = 1</codeph> and <codeph>volume</codeph> in the other <apiname keyref="onAudioVolumeIndication" /> callback.</li>
                <li><codeph>volumeType = <ph keyref="AudioTestRecordingVolume" />(0)</codeph> and <codeph>volume</codeph> in one <apiname keyref="onAudioDeviceTestVolumeIndication" /> callback; <codeph>volumeType = <ph keyref="AudioTestPlaybackVolume" />(1)</codeph> and <codeph>volume</codeph> in the other <apiname keyref="onAudioDeviceTestVolumeIndication" /> callback.</li>
                </ul>The <apiname keyref="onAudioVolumeIndication" /> and <apiname keyref="onAudioDeviceTestVolumeIndication" /> callbacks report the same volume information. Agora recommends using <apiname keyref="onAudioVolumeIndication" />.</li>
            <li>Two <apiname keyref="onAudioDeviceTestVolumeIndication" /> callbacks when you call this method after joining a channel, with the following values: 
                    
                <ul>
                <li><codeph>volumeType = <ph keyref="AudioTestRecordingVolume" />(0)</codeph> and <codeph>volume</codeph> in one callback;</li>
                <li><codeph>volumeType = <ph keyref="AudioTestPlaybackVolume" />(1)</codeph> and <codeph>volume</codeph> in the other one.</li>
                </ul></li>
            </ul></p>
            <note type="attention">
            <ul>
            <li>When you call this method after joining a channel, ensure the audio capturing device is on ( <xref keyref="enableLocalAudio" /> is set as <codeph>true</codeph>); otherwise, the method call fails, and the SDK triggers the <xref keyref="onError" /> callback with <codeph>ERR_ADM_START_RECORDING(1012)</codeph>.</li>
            <li>Calling this method after joining a channel tests the audio capturing device that the SDK is using.</li>
            <li>This method tests local audio devices and does not report the network conditions.</li>
            <li>After calling <apiname>startRecordingDeviceTest</apiname>, you must call <xref keyref="stopAudioDeviceLoopbackTest" /> to stop the test.</li>
            </ul> </note> </section>
        <section id="parameters">
            <title>Parameters</title>
            <parml>
            <plentry>
                <pt>indicationInterval</pt>
                <pd props="rtc-ng">
                    <p>The time interval (ms) at which the SDK triggers the <apiname keyref="onAudioVolumeIndication" /> callback. Agora recommends a setting greater than 200 ms. This value must not be less than 10 ms; otherwise, you can not receive the callback.</p>
                </pd>
                <pd props="rtc">
                    <p>The time interval (ms) at which the SDK triggers the <apiname keyref="onAudioVolumeIndication" /> or <apiname keyref="onAudioDeviceTestVolumeIndication" /> callback. Agora recommends a setting greater than 200 ms. This value must not be less than 10 ms; otherwise, you can not receive these callbacks.</p>
                </pd>
            </plentry>
            </parml> </section>
        <section id="return_values" props="native electron cs">
            <title>Returns</title>
            <ul>
            <li>0: Success.</li>
            <li>&lt; 0: Failure.</li>
            </ul> </section>
    </refbody>
</reference>