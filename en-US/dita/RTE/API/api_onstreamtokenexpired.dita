<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE reference PUBLIC "-//OASIS//DTD DITA Reference//EN" "reference.dtd">
<reference id="api_onstreamtokenexpired">
    <title><ph keyref="OnStreamTokenExpired"/></title>
    <shortdesc id="short"><ph id="shortdesc">Occurs when the stream token expires.</ph></shortdesc>
    <prolog>
        <metadata>
            <keywords>
                <indexterm keyref="OnStreamTokenExpired"/>
            </keywords>
        </metadata>
    </prolog>
    <refbody>
        <section id="prototype">
            <p outputclass="codeblock">
                <codeblock props="android" outputclass="language-java"/>
                <codeblock props="ios mac" outputclass="language-objectivec"/>
                <codeblock props="windows" outputclass="language-cpp">virtual void OnStreamTokenExpired(const std::string&amp; stream_id) = 0;</codeblock>
                <codeblock props="electron" outputclass="language-typescript"/>
                <codeblock props="unity" outputclass="language-csharp"/>
                <codeblock props="rn" outputclass="language-typescript"/>
                <codeblock props="flutter" outputclass="language-dart"/>
            </p>
        </section>
        <section id="detailed_desc">
            <dl outputclass="since">
                <dlentry>
                    <dt>Since</dt>
                    <dd>v</dd>
                </dlentry>
            </dl>
            <p>After a stream token is specified by calling the <xref keyref="CreateOrUpdateRTCStream"/> method, if the SDK losses connection with the Agora server due to network issues, the stream token may expire after a certain period of time and a new stream token may be required to publish the stream.</p>
            <p>Once you receive this callback, generate a new token on your app server, and call
                <xref keyref="CreateOrUpdateRTCStream"/> to pass the new token to the SDK.</p>

            <note>If the SDK stops publishing the stream because
                of token expiration, the user is still in the scene before you
                call <xref keyref="Leave"></xref> to leave the scene.</note>
        </section>
        <section id="parameters"><title>Parameters</title>
            <parml>
                <plentry>
                    <pt>stream_id</pt>
                    <pd>The stream ID.</pd>
                </plentry>
            </parml>
        </section>
    </refbody>
</reference>
