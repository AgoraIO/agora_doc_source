<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE reference PUBLIC "-//OASIS//DTD DITA Reference//EN" "reference.dtd">
<reference id="api_imusicplayer_open">
    <title><ph keyref="open_IMusicPlayer" /></title>
    <shortdesc id="short"><ph id="shortdesc">通过音乐资源编号打开音乐资源。</ph></shortdesc>
    <prolog>
        <metadata>
            <keywords>
                <indexterm keyref="open_IMusicPlayer" />
            </keywords>
        </metadata>
    </prolog>
    <refbody>
        <section id="prototype">
            <p outputclass="codeblock">
            <codeblock props="android" outputclass="language-java">int open(long songCode, long startPos);</codeblock>
            <codeblock props="ios mac" outputclass="language-objectivec">- (NSInteger)openMediaWithSongCode:(NSInteger)songCode startPos:(NSInteger)startPos NS_SWIFT_NAME(openMedia(songCode:startPos:));</codeblock>
            <codeblock props="cpp unreal bp" outputclass="language-cpp">virtual int open(int64_t songCode, int64_t startPos = 0) = 0;</codeblock>
            <codeblock props="electron" outputclass="language-typescript">abstract openWithSongCode(songCode: number, startPos?: number): number;</codeblock>
            <codeblock props="unity cs" outputclass="language-csharp">public abstract int Open(Int64 songCode, Int64 startPos);</codeblock>
            <codeblock props="rn" outputclass="language-typescript">abstract openWithSongCode(songCode: number, startPos?: number): number;</codeblock>
            <codeblock props="flutter" outputclass="language-dart">Future&lt;void&gt; openWithSongCode({required int songCode, int startPos = 0});</codeblock>
            <codeblock props="reserve" outputclass="language-cpp" /></p>
        </section>
        <section id="detailed_desc">
            <title>Details</title>
            <dl outputclass="since">
            <dlentry props="native">
                <dt>Since</dt>
                <dd>v4.1.0</dd>
            </dlentry>
            </dl>
            <note type="note" id="note">If the music you want to open is protected by Digital Rights Management(DRM), you need to call this method to open the music. For music that are not DRM protected, you can either call this method or<apiname keyref="IMediaPlayer" /><xref keyref="open" />  method for opening.</note>
            <p>Before calling this method, make sure the music you want to play has been preloaded. 你可以调用 <xref keyref="isPreloaded" /> 方法来检测音乐资源是否已被预加载，或通过 <xref keyref="onPreLoadEvent_IMusicContentCenterEventHandler" /> 回调得知。</p>
            <p conkeyref="open/open" />
        </section>
        <section id="parameters">
            <title>Parameters</title>
            <parml>
            <plentry id="code">
                <pt>songCode</pt>
                <pd>The code of the music, which is an unique identifier of the music.</pd>
            </plentry>
            <plentry id="pos">
                <pt>startPos</pt>
                <pd>The starting position (ms) for playback. Default value is 0.</pd>
            </plentry>
            </parml> </section>
        <section id="return_values">
            <title><ph keyref="return-section-title" /></title>
            <p props="flutter">When the method call succeeds, there is no return value; when fails, the <xref keyref="AgoraRtcException" /> exception is thrown; you need to catch the exception and handle it accordingly.</p>
            <ul>
            <li props="native unity rn electron">0: Success.</li>
            <li>&lt; 0: Failure.</li>
            </ul> </section>
    </refbody>
</reference>