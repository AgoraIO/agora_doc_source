<?xml version='1.0' encoding='UTF-8'?>
<!DOCTYPE reference PUBLIC "-//OASIS//DTD DITA Reference//EN" "reference.dtd">
<reference id="class_simulcastconfig">
    <title><ph keyref="SimulcastConfig"/></title>
    <shortdesc id="short"><ph id="shortdesc">Configures simulcast video streams.</ph></shortdesc>
    <refbody>
        <section id="prototype">
            <p outputclass="codeblock">
            <codeblock props="android" outputclass="language-java">public class SimulcastConfig {
final public StreamLayerConfig[] configs = new StreamLayerConfig[StreamLayerIndex.STREAM_LAYER_COUNT_MAX.getValue()];
public boolean publishFallbackEnable;
public SimulcastConfig() {
for (int i = 0; i &amp;lt; StreamLayerIndex.STREAM_LAYER_COUNT_MAX.getValue(); i++) {
configs[i] = new StreamLayerConfig();
}
this.publishFallbackEnable = false;
}
}</codeblock>
            <codeblock props="hmos" outputclass="language-arkts"/>
            <codeblock props="ios mac" outputclass="language-objectivec">@interface AgoraSimulcastConfig: NSObject
@property (copy, nonatomic, readonly) NSArray&amp;lt;AgoraStreamLayerConfig*&amp;gt;* _Nonnull configs;
@property (assign, nonatomic) BOOL publishFallbackEnable;
@end</codeblock>
            <codeblock props="cpp unreal" outputclass="language-cpp">struct SimulcastConfig {
  StreamLayerConfig configs[STREAM_LAYER_COUNT_MAX];
  bool publish_fallback_enable;
  SimulcastConfig(): publish_fallback_enable(false) {}
};</codeblock>
            <codeblock props="bp" outputclass="language-cpp"/>
            <codeblock props="electron" outputclass="language-typescript"/>
            <codeblock props="unity cs" outputclass="language-csharp"/>
            <codeblock props="rn" outputclass="language-typescript"/>
            <codeblock props="flutter" outputclass="language-dart"/> </p>
        </section>
        <section id="detailed_desc">
            <dl outputclass="since">
            <dlentry props="native">
                <dt>Since:</dt>
                <dd>Available since v4.6.0.</dd>
                </dlentry>
            </dl>
            <p>Used to configure simulcast video streams. Supports dynamically disabling certain streams under poor network conditions or limited device performance to ensure continuity of the main stream and the lowest resolution auxiliary stream.</p>
            </section>
        <section id="parameters">
            <title><text conref="../conref/conref_api_metadata.dita#conref_api_metadata/property"/></title>
            <parml>
            <plentry props="android cpp ios">
                <pt props="android">publishFallbackEnable</pt>
                <pt props="ios">publishFallbackEnable</pt>
                <pt props="cpp">publish_fallback_enable</pt>
                <pd props="android">Sets whether to enable simulcast fallback.
                    <ul>
                        <li><codeph><ph keyref="true"/></codeph>: Enables fallback. When the publishing client's performance or network condition is poor, the system dynamically disables multiple video streams in the order of <ph keyref="kRteAbrSubscriptionLayer1"/> to <ph keyref="kRteAbrSubscriptionLayer6"/>.</li>
                        <li><codeph><ph keyref="false"/></codeph>: (Default) Disables fallback. The system ensures that the main stream and the lowest resolution auxiliary stream are retained even under poor network conditions or limited device performance to maintain basic video continuity.</li>
                        </ul>
                    </pd>
                <pd props="ios">Sets whether to enable simulcast fallback:
                    <ul>
                        <li><codeph><ph keyref="true"/></codeph>: Enables simulcast fallback. When the publishing client's performance or network condition is poor, the system dynamically disables multiple video streams in the order of layer1 to layer6.</li>
                        <li><codeph><ph keyref="false"/></codeph>: (Default) Disables simulcast fallback.</li>
                        </ul>
                    </pd>
                <pd props="cpp">Sets whether to enable simulcast fallback.
                    <ul>
                        <li><codeph><ph keyref="true"/></codeph>: Enables simulcast fallback. When the publishing client's performance or network condition is poor, the system dynamically disables multiple video streams in the order of layer1 to layer6, retaining only the main stream and the lowest resolution auxiliary stream to maintain basic video continuity.</li>
                        <li><codeph><ph keyref="false"/></codeph>: (Default) Disables simulcast fallback.</li>
                        </ul>
                    </pd>
            </plentry>
            </parml> </section>
            </refbody>
</reference>
