<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE reference PUBLIC "-//OASIS//DTD DITA Reference//EN" "reference.dtd">
<reference id="api_irtcengine_leavechannel2">
    <title><ph keyref="leaveChannel2"/></title>
    <shortdesc id="short"><ph id="shortdesc">Sets channel options and leaves the channel.</ph></shortdesc>
    <prolog>
        <metadata>
            <keywords>
                <indexterm keyref="leaveChannel2"/>
            </keywords>
        </metadata>
    </prolog>
    <refbody>
        <section id="prototype">
            <p outputclass="codeblock">
            <codeblock props="android" outputclass="language-java">public abstract int leaveChannel(LeaveChannelOptions options);</codeblock>
            <codeblock props="ios mac" outputclass="language-objectivec">- (int)leaveChannel:(AgoraLeaveChannelOptions * _Nonnull)options
  leaveChannelBlock:(void (^ _Nullable)(AgoraChannelStats * _Nonnull))leaveChannelBlock;</codeblock>
            <codeblock props="cpp unreal" outputclass="language-cpp">virtual int leaveChannel(const LeaveChannelOptions&amp; options) = 0;</codeblock>
         <codeblock props="bp" outputclass="language-cpp">UFUNCTION(BlueprintCallable, Category = &quot;Agora|RtcEngineProxy&quot;)
	int LeaveChannel(const FLeaveChannelOptions&amp; options);</codeblock>
            <codeblock props="electron" outputclass="language-typescript">abstract leaveChannel(options?: LeaveChannelOptions): number;</codeblock>
            <codeblock props="unity cs" outputclass="language-csharp">public abstract int LeaveChannel(LeaveChannelOptions options); </codeblock>
            <codeblock props="rn" outputclass="language-typescript">abstract leaveChannel(options?: LeaveChannelOptions): number;</codeblock>
            <codeblock props="flutter" outputclass="language-dart">Future&lt;void&gt; leaveChannel({LeaveChannelOptions? options});</codeblock>
            <codeblock props="reserve" outputclass="language-cpp"/></p>
        </section>
        <section id="detailed_desc" deliveryTarget="details" otherprops="no-title">
                <p>调用该方法后，SDK 会终止音视频互动、离开当前频道，并会释放会话相关的所有资源。</p>
                <p props="native unity cs unreal">After joining the channel, you must call this method or  to<apiname keyref="leaveChannel"/> end the call, otherwise, the next call cannot be started. If you have called<xref keyref="joinChannelEx"/>  to join multiple channels, calling this method will leave the channels when calling  and  at the same time.</p>
                <p props="flutter electron rn bp">After joining the channel, you must call this method to end the call; otherwise, you cannot join the next call. If you have called<xref keyref="joinChannelEx"/>  to join multiple channels, calling this method will leave the channels when calling  and  at the same time.</p>
                <note type="attention">This method call is asynchronous. When this method returns, it does not necessarily mean that the user has left the channel.</note>
        </section>
        <section id="scenario" deliveryTarget="details" props="hide">
            <title>Applicable scenarios</title>
            <p/>
        </section>
        <section id="timing" deliveryTarget="details">
            <title>Call timing</title>
            <p>Call this method after joining a channel.</p>
        </section>
        <section id="restriction" deliveryTarget="details">
            <title>Restrictions</title>
            <p>If you call  immediately after calling this method<xref keyref="release"/>, the SDK does not trigger the<apiname keyref="onLeaveChannel"/>  callback.</p>
        </section>
        <section id="related" deliveryTarget="details">
            <title>Related callbacks</title>
            <p>A successful call of this method triggers the following callbacks: <ul>
                <li>The local client:<xref keyref="onLeaveChannel"/> .</li>
                <li>远端：主播离开频道后，远端会触发 <xref keyref="onUserOffline"/> 回调。</li>
                </ul>
            </p>
        </section>
        <section id="parameters" deliveryTarget="details">
            <title>Parameters</title>
            <parml id="parml_jsr_dky_hqb">
            <plentry id="options">
                <pt>options</pt>
                <pd>The options for leaving the channel. See <xref keyref="LeaveChannelOptions"/>.</pd>
            </plentry>
            <plentry props="ios mac" id="leavechannelblock">
                <pt>leaveChannelBlock</pt>
                <pd>
                    <p>This callback indicates that a user leaves a channel, and provides the statistics of the call in <xref keyref="RtcStats"/>.</p>
                </pd>
            </plentry>
            </parml> </section>
        <section id="return_values">
            <title><ph keyref="return-section-title"/></title>
            <p props="flutter">When the method call succeeds, there is no return value; when fails, the <xref keyref="AgoraRtcException"/> exception is thrown. You need to catch the exception and handle it accordingly. <ph props="cn">See <xref keyref="error-code-link"/> for details and resolution suggestions.</ph></p>
            <ul props="native unreal bp electron unity rn cs">
            <li>0: Success.</li>
            <li>&lt; 0: Failure. <ph props="cn">See <xref keyref="error-code-link"/> for details and resolution suggestions.</ph></li>
            </ul> </section>
    </refbody>
</reference>
