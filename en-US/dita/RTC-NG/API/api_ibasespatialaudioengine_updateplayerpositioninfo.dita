<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE reference PUBLIC "-//OASIS//DTD DITA Reference//EN" "reference.dtd">
<reference id="api_ibasespatialaudioengine_updateplayerpositioninfo">
    <title><ph keyref="updatePlayerPositionInfo" /></title>
    <shortdesc id="short"><ph id="shortdesc">Updates the spatial position of the media player.</ph></shortdesc>
    <prolog>
        <metadata>
            <keywords>
                <indexterm keyref="updatePlayerPositionInfo" />
            </keywords>
        </metadata>
    </prolog>
    <refbody>
        <section id="prototype">
            <p outputclass="codeblock">
            <codeblock props="android" outputclass="language-java">public abstract int updatePlayerPositionInfo(int playerId, RemoteVoicePositionInfo positionInfo);</codeblock>
            <codeblock props="ios mac" outputclass="language-objectivec">- (int)updatePlayerPositionInfo:(NSInteger)playerId positionInfo:(AgoraRemoteVoicePositionInfo* _Nonnull)positionInfo;</codeblock>
            <codeblock props="cpp unreal" outputclass="language-cpp">virtual int updatePlayerPositionInfo(int playerId, const RemoteVoicePositionInfo&amp; positionInfo) = 0;</codeblock>
         <codeblock props="bp" outputclass="language-cpp">UFUNCTION(BlueprintCallable, Category = &quot;Agora|ILocalSpatialAudioEngine&quot;)
	int UpdatePlayerPositionInfo(int playerId, const FRemoteVoicePositionInfo&amp; positionInfo);</codeblock>
            <codeblock props="electron" outputclass="language-typescript">abstract updatePlayerPositionInfo(
    playerId: number,
    positionInfo: RemoteVoicePositionInfo
  ): number;</codeblock>
            <codeblock props="unity cs" outputclass="language-csharp">public abstract int UpdatePlayerPositionInfo(int playerId, RemoteVoicePositionInfo positionInfo);</codeblock>
            <codeblock props="rn" outputclass="language-typescript">abstract updatePlayerPositionInfo(
    playerId: number,
    positionInfo: RemoteVoicePositionInfo
  ): number;</codeblock>
            <codeblock props="flutter" outputclass="language-dart">Future&lt;void> updatePlayerPositionInfo(
      {required int playerId, required RemoteVoicePositionInfo positionInfo});</codeblock>
            <codeblock props="reserve" outputclass="language-cpp"></codeblock></p>
        </section>
        <section id="detailed_desc">
            <title>Details</title>
            <p>After a successful update, the local user can hear the change in the spatial position of the media player.</p>
        </section>
        <section id="parameters">
            <title>Parameters</title>
            <parml>
            <plentry id="mpkid">
                <pt>playerId</pt>
                <pd><ph>The ID of the media player. </ph><ph props="native unreal bp">You can get the Device ID by calling <xref keyref="getMediaPlayerId" />.</ph></pd>
            </plentry>
            <plentry props="native unreal bp rn unity electron flutter cs">
                    <pt>positionInfo</pt>
                    <pd>The spatial position of the media player. See <xref keyref="RemoteVoicePositionInfo"/>.</pd>
                </plentry>
            </parml> </section>
        <section id="return_values">
            <title><ph keyref="return-section-title"/></title>
            <p props="flutter">When the method call succeeds, there is no return value; when fails, the <xref keyref="AgoraRtcException"/> exception is thrown. You need to catch the exception and handle it accordingly. <ph props="cn">See <xref keyref="error-code-link"/> for details and resolution suggestions.</ph></p>
            <ul props="native unreal bp electron unity rn cs">
            <li>0: Success.</li>
            <li>&lt; 0: Failure. <ph props="cn">See <xref keyref="error-code-link"/> for details and resolution suggestions.</ph></li>
            </ul> </section>
    </refbody>
</reference>
