<?xml version='1.0' encoding='UTF-8'?>
<!DOCTYPE reference PUBLIC "-//OASIS//DTD DITA Reference//EN" "reference.dtd">
<reference id="api_irtcengine_setplaybackaudioframebeforemixingparameters1">
    <title><ph keyref="setPlaybackAudioFrameBeforeMixingParameters1"/></title>
    <shortdesc id="short"><ph id="shortdesc">Set the format of audio data in the <xref keyref="onPlaybackAudioFrameBeforeMixing"/> callback.</ph></shortdesc>
    <prolog>
        <metadata>
            <keywords>
                <indexterm keyref="setPlaybackAudioFrameBeforeMixingParameters1"/>
            </keywords>
        </metadata>
    </prolog>
    <refbody>
        <section id="prototype">
            <p outputclass="codeblock">
            <codeblock props="android" outputclass="language-java">public abstract int setPlaybackAudioFrameBeforeMixingParameters(int sampleRate, int channel, int samplesPerCall);</codeblock>
            <codeblock props="hmos" outputclass="language-arkts"/>
            <codeblock props="ios mac" outputclass="language-objectivec">- (int)setPlaybackAudioFrameBeforeMixingParametersWithSampleRate:(NSInteger)sampleRate channel:(NSInteger)channel samplesPerCall:(NSInteger)samplesPerCall NS_SWIFT_NAME(setPlaybackAudioFrameBeforeMixingParametersWithSampleRate(_:channel:samplesPerCall:));</codeblock>
            <codeblock props="cpp unreal" outputclass="language-cpp">virtual int setPlaybackAudioFrameBeforeMixingParameters(int sampleRate, int channel, int samplesPerCall) = 0;</codeblock>
            <codeblock props="bp" outputclass="language-cpp"/>
            <codeblock props="electron" outputclass="language-typescript"/>
            <codeblock props="unity cs" outputclass="language-csharp"/>
            <codeblock props="rn" outputclass="language-typescript"/>
            <codeblock props="flutter" outputclass="language-dart"/> </p>
        </section>
        <section id="detailed_desc" deliveryTarget="details" otherprops="no-title">
            <p>Used to set the sample rate, number of channels, and number of samples per callback for the audio data returned in the <xref keyref="onPlaybackAudioFrameBeforeMixing"/> callback.</p>
        </section>
        <section id="restriction" deliveryTarget="details">
            <title>Restrictions</title>
            <p>None.</p>
        </section>
        <section id="parameters" deliveryTarget="details">
            <title>Parameters</title>
            <parml>
            <plentry props="native">
                <pt props="android cpp">sampleRate</pt>
                <pt props="apple">sampleRate</pt>
                <pd props="android">Set the sample rate returned in the <xref keyref="onPlaybackAudioFrameBeforeMixing"/> callback. It can be set as the following values:<ul>
                        <li>8000.</li>
                        <li>16000</li>
                        <li>32000.</li>
                        <li>44100</li>
                        <li>48000 (Hz).</li>
                        </ul>
                    </pd>
                <pd props="apple">Input parameter, sampling rate (Hz) returned in the <xref keyref="onPlaybackAudioFrameBeforeMixing"/> callback. It can be set as the following values: 8000、16000、32000、44100 or 48000.</pd>
                <pd props="cpp">Set the sample rate returned in the <xref keyref="onPlaybackAudioFrameBeforeMixing"/> callback. It can be set as the following values: 8000、16000、32000、44100 or 48000.</pd>
            </plentry>
            <plentry props="native">
                <pt props="android cpp">channel</pt>
                <pt props="apple">channel</pt>
                <pd props="android">Set the number of channels for the audio data returned in the <xref keyref="onPlaybackAudioFrameBeforeMixing"/> callback. It can be set to:<ul>
                        <li>1: Mono.</li>
                        <li>2: Stereo.</li>
                        </ul>
                    </pd>
                <pd props="apple">Input parameter, the number of channels for the audio data returned in the <xref keyref="onPlaybackAudioFrameBeforeMixing"/> callback.<ul>
                        <li>1: Mono.</li>
                        <li>2: Stereo.</li>
                        </ul>
                    </pd>
                <pd props="cpp">Set the number of channels for the audio data returned in the <xref keyref="onPlaybackAudioFrameBeforeMixing"/> callback. It can be set to:<ul>
                        <li>1: Mono.</li>
                        <li>2: Stereo.</li>
                        </ul>
                    </pd>
            </plentry>
            <plentry props="native">
                <pt props="android cpp">samplesPerCall</pt>
                <pt props="apple">samplesPerCall</pt>
                <pd props="android">Set the sample rate of the audio data returned in the <xref keyref="onMixedAudioFrame"/> callback. In the RTMP streaming scenario, it is recommended to set it to 1024.</pd>
                <pd props="apple">Input parameter, the number of sample rate of the data returned in the <xref keyref="onPlaybackAudioFrameBeforeMixing"/> callback. For example, in the RTMP streaming scenario, it is recommended to set it to 1024.</pd>
                <pd props="cpp">Set the sample rate of the audio data returned in the <xref keyref="onPlaybackAudioFrameBeforeMixing"/> callback. 例如，推流时通常设置为 1024。</pd>
            </plentry>
            </parml> </section>
        <section id="return_values" props="bp cs electron flutter native rn unity unreal">
            <title><ph keyref="return-section-title"/></title>
        <p props="flutter">When the method call succeeds, there is no return value; when fails, the <xref keyref="AgoraRtcException"/> exception is thrown. You need to catch the exception and handle it accordingly. <ph props="cn">See <xref keyref="error-code-link"/> for details and resolution suggestions.</ph></p>
        <ul props="bp cs electron rn unity unreal">
                <li>0: Success.</li>
                <li>&lt; 0: Failure. <ph props="cn">See <xref keyref="error-code-link"/> for details and resolution suggestions.</ph></li>
                </ul>
        <p props="native"><ul>
                        <li>0: Success.</li>
                        <li>&lt; 0: Failure.</li>
                        </ul>
                    </p>
    </section>
        </refbody>
</reference>
