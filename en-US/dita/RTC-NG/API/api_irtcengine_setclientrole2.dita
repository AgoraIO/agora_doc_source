<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE reference PUBLIC "-//OASIS//DTD DITA Reference//EN" "reference.dtd">
<reference id="api_irtcengine_setclientrole2">
    <title><ph keyref="setClientRole2" /></title>
    <shortdesc id="short"><ph id="shortdesc">Sets the user role and level in an interactive live streaming channel.</ph></shortdesc>
    <prolog>
        <metadata>
            <keywords>
                <indexterm keyref="setClientRole2" />
            </keywords>
        </metadata>
    </prolog>
    <refbody>
        <section id="prototype">
            <p outputclass="codeblock">
            <codeblock props="android" outputclass="language-java">public abstract int setClientRole(int role, ClientRoleOptions options);</codeblock>
            <codeblock props="ios mac" outputclass="language-objectivec">- (int)setClientRole:(AgoraClientRole)role options:(AgoraClientRoleOptions * _Nullable)options;</codeblock>
            <codeblock props="cpp" outputclass="language-cpp">virtual int setClientRole(CLIENT_ROLE_TYPE role, const ClientRoleOptions&amp; options) = 0;</codeblock>
            <codeblock props="electron" outputclass="language-typescript">abstract setClientRole(
    role: ClientRoleType,
    options?: ClientRoleOptions
  ): number;</codeblock>
            <codeblock props="unity" outputclass="language-csharp">public abstract int SetClientRole(CLIENT_ROLE_TYPE role, ref ClientRoleOptions options);</codeblock>
            <codeblock props="rn" outputclass="language-typescript">abstract setClientRole(
    role: ClientRoleType,
    options?: ClientRoleOptions
  ): number;</codeblock>
            <codeblock props="flutter" outputclass="language-dart">Future&lt;void&gt; setClientRole(
    {required ClientRoleType role, ClientRoleOptions? options});</codeblock>
            <codeblock props="reserve" outputclass="language-cpp" /></p>
        </section>
        <section id="detailed_desc">
            <title>Details</title>
            <p>In the interactive live streaming profile, the SDK sets the user role as audience by default. You can call this method to set the user role as host.</p>
            <p>You can call this method either before or after joining a channel.</p>
            <p id="preview" props="native electron rn flutter">If you call this method to set the user's role as the host before joining the channel and set the local video property through the <xref keyref="setupLocalVideo" /> method, the local video preview is automatically enabled when the user joins the channel.</p>
            <p>If you call this method to switch the user role after joining a channel, the SDK automatically does the following:<ul>
            <li>Calls <xref keyref="muteLocalAudioStream" /> and <xref keyref="muteLocalVideoStream" /> to change the publishing state.</li>
            <li>Triggers <xref keyref="onClientRoleChanged" /> on the local client.</li>
            <li>Triggers <xref keyref="onUserJoined" /> or <xref keyref="onUserOffline" /> on the remote client.</li>
            </ul></p>
            <p props="native unity">The difference between this method and <xref keyref="setClientRole1" /> is that this method can set the user level in addition to the user role.<ul id="diff">
            <li>The user role (<parmname>role</parmname>) determines the permissions that the SDK grants to a user, such as permission to send local streams, receive remote streams, and push streams to a CDN address.</li>
            <li>The user level (<parmname>level</parmname>) determines the <parmname>level</parmname> of services that a user can enjoy within the permissions of the user's role. For example, an audience member can choose to receive remote streams with low latency or ultra-low latency. <b>User level affects the pricing of services.</b></li>
            </ul></p>
            <note type="attention">This method applies to the interactive live streaming profile (the <parmname>profile</parmname> parameter of <xref keyref="setChannelProfile" /> is <ph keyref="CHANNEL_PROFILE_LIVE_BROADCASTING" />) only.</note> </section>
        <section id="parameters">
            <title>Parameters</title>
            <parml>
            <plentry>
                <pt>role</pt>
                <pd><ph>The user role in the interactive live streaming. </ph><ph props="ios mac cpp electron unity flutter rn">See <xref keyref="CLIENT_ROLE_TYPE" />.</ph><ul props="android">
                    <li><ph keyref="CLIENT_ROLE_BROADCASTER" />(1): Host. A host can both send and receive streams.</li>
                    <li><ph keyref="CLIENT_ROLE_AUDIENCE" />(2): (Default) Audience. An audience member can only receive streams.</li>
                    </ul> </pd>
            </plentry>
            <plentry>
                <pt>options</pt>
                <pd>The detailed options of a user, including the user level. See <xref keyref="ClientRoleOptions" />.</pd>
            </plentry>
            </parml> </section>
        <section id="return_values">
            <title><ph keyref="return-section-title" /></title>
            <p props="flutter">When the method call succeeds, there is no return value; when fails, the <xref keyref="AgoraRtcException" /> exception is thrown; you need to catch the exception and handle it accordingly.</p>
            <ul>
            <li props="native electron unity rn">0: Success.</li>
            <li>&lt; 0: Failure.<ul>
                <li>-1: A general error occurs (no specified reason).</li>
                <li>-2: The parameter is invalid.</li>
                <li>-5: The request is rejected.</li>
                <li>-7: The SDK is not initialized.</li>
                </ul></li>
            </ul> </section>
    </refbody>
</reference>