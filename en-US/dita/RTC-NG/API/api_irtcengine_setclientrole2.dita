<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE reference PUBLIC "-//OASIS//DTD DITA Reference//EN" "reference.dtd">
<reference id="api_irtcengine_setclientrole2">
    <title><ph keyref="setClientRole2" /></title>
    <shortdesc id="short"><ph id="shortdesc">Set the user role and the audience latency level in a live streaming scenario.</ph></shortdesc>
    <prolog>
        <metadata>
            <keywords>
                <indexterm keyref="setClientRole2" />
            </keywords>
        </metadata>
    </prolog>
    <refbody>
        <section id="prototype">
            <p outputclass="codeblock">
            <codeblock props="android" outputclass="language-java">public abstract int setClientRole(int role, ClientRoleOptions options);</codeblock>
            <codeblock props="hmos" outputclass="language-arkts">public abstract setClientRole(role: number, options?: ClientRoleOptions): number;</codeblock>
            <codeblock props="ios mac" outputclass="language-objectivec">- (int)setClientRole:(AgoraClientRole)role options:(AgoraClientRoleOptions * _Nullable)options;</codeblock>
            <codeblock props="cpp unreal" outputclass="language-cpp">virtual int setClientRole(CLIENT_ROLE_TYPE role, const ClientRoleOptions&amp; options) = 0;</codeblock>
         <codeblock props="bp" outputclass="language-cpp">UFUNCTION(BlueprintCallable, Category = &quot;Agora|RtcEngineProxy&quot;)
	int SetClientRole(ECLIENT_ROLE_TYPE clientroletype, FClientRoleOptions&amp; options);</codeblock>
            <codeblock props="electron" outputclass="language-typescript">abstract setClientRole(
    role: ClientRoleType,
    options?: ClientRoleOptions
  ): number;</codeblock>
            <codeblock props="unity cs" outputclass="language-csharp">public abstract int SetClientRole(CLIENT_ROLE_TYPE role, ClientRoleOptions options);</codeblock>
            <codeblock props="rn" outputclass="language-typescript">abstract setClientRole(
    role: ClientRoleType,
    options?: ClientRoleOptions
  ): number;</codeblock>
            <codeblock props="flutter" outputclass="language-dart">Future&lt;void&gt; setClientRole(
    {required ClientRoleType role, ClientRoleOptions? options});</codeblock>
            <codeblock props="reserve" outputclass="language-cpp"></codeblock></p>
        </section>
        <section id="detailed_desc" deliveryTarget="details" otherprops="no-title">
            <p>By default,the SDK sets the user role as audience. You can call this method to set the user role as host. The user role (<parmname>roles</parmname>) determines the users' permissions at the SDK level, including whether they can publish audio and video streams in a channel.</p>
            <p props="native unreal unity cs">The difference between this method and <xref keyref="setClientRole1"/> is that, the former supports setting the <parmname>audienceLatencyLevel</parmname>. <parmname>audienceLatencyLevel</parmname> needs to be used together with <parmname>role</parmname> to determine the level of service that users can enjoy within their permissions. For example, an audience member can choose to receive remote streams with low latency or ultra-low latency. Latency of different levels differ in billing. See <xref keyref="billing-streaming"/>.</p>
        </section>
        <section id="timing" deliveryTarget="details">
            <title>Call timing</title>
            <p>You can call this method either before or after joining a channel.</p>
            <p id="preview1" props="native unreal bp electron flutter">If you call this method to set the user role as the host before joining the channel and set the local video property through the <xref keyref="setupLocalVideo" /> method, the local video preview is automatically enabled when the user joins the channel.</p>
            <p id="preview2" props="unity">If you call this method to set the user role as the host before joining the channel and call the <xref keyref="setEnable" /> method to enable video rendering, the local video preview is automatically enabled when the user joins the channel.</p>
            <p id="sdk">If you call this method to set the user role after joining a channel, the SDK will automatically call the <xref keyref="muteLocalAudioStream" /> and <xref keyref="muteLocalVideoStream" /> method to change the state for publishing audio and video streams.</p>
        </section>
        <section id="restriction" deliveryTarget="details">
            <title>Restrictions</title>
            <p>When the user role is set to host, the audience latency level can only be set to <ph keyref="AUDIENCE_LATENCY_LEVEL_ULTRA_LOW_LATENCY"/>.</p>
            <p>When calling this method before joining a channel and setting the <parmname>role</parmname> to <parmname>BROADCASTER</parmname>, the <xref keyref="onClientRoleChanged"/> callback will not be triggered on the local client.</p>
        </section>
        <section id="related" deliveryTarget="details">
            <title>Related callbacks</title>
            <p>If you call this method to switch the user role after joining the channel, the SDK triggers the following callbacks:<ul>
                <li>Triggers <xref keyref="onClientRoleChanged"/> on the local client.<note type="note">Calling this method before joining a channel and set the <parmname>role</parmname> to <parmname>AUDIENCE</parmname> will trigger this callback as well.</note></li>
                <li>Triggers <xref keyref="onUserJoined" /> or <xref keyref="onUserOffline"/> on the remote client.</li>
                </ul></p>
            <p>If you call this method to set the user role after joining a channel but encounter a failure, the SDK trigger the <xref keyref="onClientRoleChangeFailed"/> callback to report the reason for the failure and the current user role.</p>
        </section>
        <section id="parameters" deliveryTarget="details">
            <title>Parameters</title>
            <parml>
            <plentry>
                <pt props="native unreal flutter unity cs electron rn">role</pt>
                <pt props="bp">clientRoleType</pt>
                <pd><ph>The user role. </ph><ph props="ios mac cpp unreal bp electron unity flutter rn cs">See <xref keyref="CLIENT_ROLE_TYPE" />.</ph><ul props="android">
                    <li><ph keyref="CLIENT_ROLE_BROADCASTER" />(1): Host. A host can both send and receive streams.</li>
                    <li><ph keyref="CLIENT_ROLE_AUDIENCE" />(2): (Default) Audience. An audience member can only receive streams.</li>
                    </ul>
                    <note type="note">If you set the user role as an audience member, you cannot publish audio and video streams in the channel. If you want to publish media streams in a channel during live streaming, ensure you set the user role as broadcaster.</note>
                </pd>
            </plentry>
            <plentry>
                <pt>options</pt>
                <pd>The detailed options of a user, including the user level. See <xref keyref="ClientRoleOptions" />.</pd>
            </plentry>
            </parml> </section>
        <section id="return_values">
            <title><ph keyref="return-section-title"/></title>
            <p props="flutter">When the method call succeeds, there is no return value; when fails, the <xref keyref="AgoraRtcException"/> exception is thrown. You need to catch the exception and handle it accordingly. <ph props="cn">See <xref keyref="error-code-link"/> for details and resolution suggestions.</ph></p>
            <ul props="native unreal bp electron unity rn cs">
            <li>0: Success.</li>
            <li>&lt; 0: Failure. <ph props="cn">See <xref keyref="error-code-link"/> for details and resolution suggestions.</ph><ul>
                <li>-1: A general error occurs (no specified reason).</li>
                <li>-2: The parameter is invalid.</li>
                <li>-5: The request is rejected.</li>
                <li>-7: The SDK is not initialized.</li>
                </ul></li>
            </ul> </section>
    </refbody>
</reference>
