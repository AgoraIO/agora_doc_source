<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE reference PUBLIC "-//OASIS//DTD DITA Reference//EN" "reference.dtd">
<reference id="api_irtcengine_setencryptionmode">
    <title><ph keyref="setEncryptionMode" /></title>
    <shortdesc id="short"><ph id="shortdesc">Sets the built-in encryption mode.</ph></shortdesc>
    <prolog>
        <metadata>
            <keywords>
                <indexterm keyref="setEncryptionMode" />
            </keywords>
        </metadata>
    </prolog>
    <refbody>
        <section id="prototype">
            <p outputclass="codeblock">
            <codeblock props="android" outputclass="language-java">public abstract int setEncryptionMode(String encryptionMode);</codeblock>
            <codeblock props="ios mac" outputclass="language-objectivec">- (int)setEncryptionMode:(NSString * _Nullable)encryptionMode;</codeblock>
            <codeblock props="cpp unreal bp" outputclass="language-cpp">virtual int setEncryptionMode(const char* encryptionMode) = 0;</codeblock>
            <codeblock props="electron" outputclass="language-typescript">abstract setEncryptionMode(encryptionMode: string): number;</codeblock>
            <codeblock props="unity cs" outputclass="language-csharp">public abstract int SetEncryptionMode(string encryptionMode);</codeblock>
            <codeblock props="rn" outputclass="language-typescript">abstract setEncryptionMode(encryptionMode: string): number;</codeblock>
            <codeblock props="flutter" outputclass="language-dart">Future&lt;void&gt; setEncryptionMode(String encryptionMode);</codeblock>
            <codeblock props="reserve" outputclass="language-cpp" /></p>
        </section>
        <section id="detailed_desc">
            <title>Details</title>
            <dl outputclass="deprecated">
            <dlentry>
                <dt>Deprecated:</dt>
                <dd>Use <xref keyref="enableEncryption" /> instead.</dd>
            </dlentry>
            </dl>
            <p id="desc">The SDK supports built-in encryption schemes, AES-128-GCM is supported by default. Call this method to use other encryption modes. All users in the same channel must use the same encryption mode and <parmname>secret</parmname>. Refer to the information related to the AES encryption algorithm on the differences between the encryption modes.</p>
            <note type="attention">Before calling this method, please call <xref keyref="setEncryptionSecret" /> to enable the built-in encryption function.</note> </section>
        <section id="parameters">
            <title>Parameters</title>
            <parml>
            <plentry>
                <pt>encryptionMode</pt>
                <pd>
                    <p>The following encryption modes:<ul>
                    <li>"<codeph>aes-128-xts</codeph>": 128-bit AES encryption, XTS mode.</li>
                    <li>"<codeph>aes-128-ecb</codeph>": 128-bit AES encryption, ECB mode.</li>
                    <li>"<codeph>aes-256-xts</codeph>": 256-bit AES encryption, XTS mode.</li>
                    <li>"<codeph>sm4-128-ecb</codeph>": 128-bit SM4 encryption, ECB mode.</li>
                    <li>"<codeph>aes-128-gcm</codeph>": 128-bit AES encryption, GCM mode.</li>
                    <li>"<codeph>aes-256-gcm</codeph>": 256-bit AES encryption, GCM mode.</li>
                    <li>"": When this parameter is set as null, the encryption mode is set as "<codeph>aes-128-gcm</codeph>" by default.</li>
                    </ul> </p>
                </pd>
            </plentry>
            </parml> </section>
        <section id="return_values">
            <title><ph keyref="return-section-title" /></title>
            <p props="flutter">When the method call succeeds, there is no return value; when fails, the <xref keyref="AgoraRtcException" /> exception is thrown; and you need to catch the exception and handle it accordingly.</p>
            <ul>
            <li props="native unreal bp electron unity rn cs">0: Success.</li>
            <li>&lt; 0: Failure.</li>
            </ul> </section>
    </refbody>
</reference>