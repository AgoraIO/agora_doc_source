<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE reference PUBLIC "-//OASIS//DTD DITA Reference//EN" "reference.dtd">
<reference id="api_imediaplayer_open">
    <title><ph keyref="open" /></title>
    <shortdesc id="short"><ph id="shortdesc">Opens the media resource.</ph></shortdesc>
    <prolog>
        <metadata>
            <keywords>
                <indexterm keyref="open" />
            </keywords>
        </metadata>
    </prolog>
    <refbody>
        <section id="prototype">
            <p outputclass="codeblock">
            <codeblock props="android" outputclass="language-java">int open(String url, long startPos);
</codeblock>
            <codeblock props="hmos" outputclass="language-arkts"></codeblock>
            <codeblock props="ios mac" outputclass="language-objectivec">- (int)open:(NSString *)url startPos:(NSInteger)startPos;
</codeblock>
            <codeblock props="cpp unreal" outputclass="language-cpp">virtual int open(const char* url, int64_t startPos) = 0;</codeblock>
         <codeblock props="bp" outputclass="language-cpp">UFUNCTION(BlueprintCallable, Category = &quot;Agora|IMediaPlayer&quot;)
	int Open(FString url, int64 startPos);</codeblock>
            <codeblock props="electron" outputclass="language-typescript">abstract open(url: string, startPos: number): number;</codeblock>
            <codeblock props="unity cs" outputclass="language-csharp">public abstract int Open(string url, Int64 startPos);</codeblock>
            <codeblock props="rn" outputclass="language-typescript">abstract open(url: string, startPos: number): number;</codeblock>
            <codeblock props="flutter" outputclass="language-dart">Future&lt;void&gt; open({required String url, required int startPos});</codeblock>
            <codeblock props="reserve" outputclass="language-cpp"></codeblock></p>
        </section>
        <section id="detailed_desc" deliveryTarget="details" otherprops="no-title">
            <p props="hide">On the Android platform, if you need to open a file in URI format, use <xref keyref="open2" />.</p>
            <p id="uri" props="android hmos">This method supports playing URI files starting with <codeph>content://</codeph>.</p>
            <p id="format" props="native"><ph props="cn">For supported formats of Agora media player, see <xref keyref="media-player"/>.</ph></p>
            <p props="hide">If you want to choose the CDN route for playing the media resource, you can call the <xref keyref="openWithAgoraCDNSrc" /> method. Agora changes the CDN route through the self-developed scheduling center to improve the viewing user experience. If you do not need to choose the CDN route for playing the media resource, you can call the <xref keyref="open" /> method.</p>
            <note type="attention" id="note">
            <p props="native unreal bp unity electron flutter cs">This method is called asynchronously.</p>
            </note> </section>
        <section id="timing" deliveryTarget="details">
            <title>Call timing</title>
            <p>This method can be called either before or after joining the channel.</p>
        </section>        
        <section id="restriction" deliveryTarget="details">
            <title>Restrictions</title>
            <p>None.</p>
        </section>
        <section id="related" deliveryTarget="details">
            <title>Related callbacks</title>
            <p id="open">After calling this method, the SDK triggers the <xref keyref="onPlayerSourceStateChanged" /> callback. After receiving the report of the playback status as <apiname keyref="PLAYER_STATE_OPEN_COMPLETED" />, you can call the <xref keyref="play" /> method to play the media file.</p>
        </section>
        <section id="parameters" deliveryTarget="details">
            <title>Parameters</title>
            <parml>
            <plentry>
                <pt>url</pt>
                <pd>The path of the media file. Both local path and online path are supported.</pd>
            </plentry>
            <plentry>
                <pt>startPos</pt>
                <pd>The starting position (ms) for playback. Default value is 0.</pd>
            </plentry>
            </parml> </section>
        <section id="return_values">
            <title><ph keyref="return-section-title"/></title>
            <p props="flutter">When the method call succeeds, there is no return value; when fails, the <xref keyref="AgoraRtcException"/> exception is thrown. You need to catch the exception and handle it accordingly. <ph props="cn">See <xref keyref="error-code-link"/> for details and resolution suggestions.</ph></p>
            <ul props="native unreal bp unity rn electron cs">
            <li>0: Success.</li>
            <li>&lt; 0: Failure. <ph props="cn">See <xref keyref="error-code-link"/> for details and resolution suggestions.</ph></li>
            </ul> </section>
    </refbody>
</reference>
