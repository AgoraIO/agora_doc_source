<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE reference PUBLIC "-//OASIS//DTD DITA Reference//EN" "reference.dtd">
<reference id="callback_irtcengineeventhandler_onremoteaudiostatechanged">
     <title> <ph keyref="onRemoteAudioStateChanged" /> </title>
     <shortdesc id="short"><ph id="shortdesc">Occurs when the remote audio state changes.</ph></shortdesc>
     <prolog>
          <metadata>
               <keywords>
                    <indexterm keyref="onRemoteAudioStateChanged" />
               </keywords>
          </metadata>
     </prolog>
     <refbody>
          <section id="prototype">
               <p outputclass="codeblock">
               <codeblock props="android" outputclass="language-java">public void onRemoteAudioStateChanged(int uid, int state, int reason, int elapsed) {}</codeblock>
               <codeblock props="ios mac" outputclass="language-objectivec">- (void)rtcEngine:(AgoraRtcEngineKit * _Nonnull)engine
     remoteAudioStateChangedOfUid:(NSUInteger)uid state:(AgoraAudioRemoteState)state reason:(AgoraAudioRemoteReason)reason elapsed:(NSInteger)elapsed;</codeblock>
               <codeblock props="cpp unreal bp" outputclass="language-cpp">virtual void onRemoteAudioStateChanged(uid_t uid,
     REMOTE_AUDIO_STATE state,
     REMOTE_AUDIO_STATE_REASON reason,
     int elapsed) {
     (void)uid;
     (void)state;
     (void)reason;
     (void)elapsed;
     }</codeblock>
               <codeblock props="electron" outputclass="language-typescript">  onRemoteAudioStateChanged?(
    connection: RtcConnection,
    remoteUid: number,
    state: RemoteAudioState,
    reason: RemoteAudioStateReason,
    elapsed: number
  ): void;</codeblock>
               <codeblock props="unity cs" outputclass="language-csharp">public virtual void OnRemoteAudioStateChanged(RtcConnection connection, uint remoteUid, REMOTE_AUDIO_STATE state, REMOTE_AUDIO_STATE_REASON reason, int elapsed) {}</codeblock>
               <codeblock props="rn" outputclass="language-typescript">  onRemoteAudioStateChanged?(
    connection: RtcConnection,
    remoteUid: number,
    state: RemoteAudioState,
    reason: RemoteAudioStateReason,
    elapsed: number
  ): void;</codeblock>
               <codeblock props="flutter" outputclass="language-dart">final void Function(
      RtcConnection connection,
      int remoteUid,
      RemoteAudioState state,
      RemoteAudioStateReason reason,
      int elapsed)? onRemoteAudioStateChanged;</codeblock>
            <codeblock props="reserve" outputclass="language-cpp"></codeblock></p>
          </section>
          <section id="detailed_desc">
               <p id="desc">When the audio state of a remote user (in a voice/video call channel) or host (in a live streaming channel) changes, the SDK triggers this callback to report the current state of the remote audio stream.</p>
               <note id="note" type="attention">This callback does not work properly when the number of users (in the communication profile) or hosts (in the live streaming channel) in a channel exceeds 17.</note> </section>
          <section id="parameters">
               <title><ph keyref="callback-section-title" /></title>
               <parml>
               <plentry conkeyref="onJoinChannelSuccess/engine" props="ios mac">
                    <pt />
                    <pd />
               </plentry>
               <plentry props="unity flutter rn electron cs">
                    <pt>connection</pt>
                    <pd>The connection information. See <xref keyref="RtcConnection" />.</pd>
               </plentry>
               <plentry id="uid">
                    <pt props="native unreal bp">uid</pt>
                    <pt props="unity flutter rn electron cs">remoteUid</pt>
                    <pd>The ID of the remote user whose audio state changes.</pd>
               </plentry>
               <plentry id="state">
                    <pt>state</pt>
                    <pd props="ios mac cpp unreal bp unity electron rn flutter cs">The state of the remote audio. See <xref keyref="REMOTE_AUDIO_STATE" />.</pd>
                    <pd props="android">Remote audio states.<ul>
                         <li><ph keyref="REMOTE_AUDIO_STATE_STOPPED" />(0): The remote audo is in the initial state. The SDK reports this state in the case of <apiname keyref="REMOTE_AUDIO_REASON_LOCAL_MUTED" />, <apiname keyref="REMOTE_AUDIO_REASON_REMOTE_MUTED" />, or <apiname keyref="REMOTE_AUDIO_REASON_REMOTE_OFFLINE" />.</li>
                         <li><ph keyref="REMOTE_AUDIO_STATE_STARTING" />(1): The first remote audio packet is received.</li>
                         <li><ph keyref="REMOTE_AUDIO_STATE_DECODING" />(2): The remote audio stream is decoded and plays normally. The SDK reports this state in the case of <apiname keyref="REMOTE_VIDEO_STATE_REASON_NETWORK_RECOVERY" />, <apiname keyref="REMOTE_AUDIO_REASON_LOCAL_UNMUTED" /> or <apiname keyref="REMOTE_VIDEO_STATE_REASON_REMOTE_UNMUTED"/>.</li>
                         <li><ph keyref="REMOTE_AUDIO_STATE_FROZEN" />(3): The remote audio is frozen. The SDK reports this state in the case of <apiname keyref="REMOTE_AUDIO_REASON_NETWORK_CONGESTION" />.</li>
                         <li><ph keyref="REMOTE_AUDIO_STATE_FAILED" />(4): The remote audio fails to start. The SDK reports this state in the case of <apiname keyref="REMOTE_VIDEO_STATE_REASON_INTERNAL" />.</li>
                         </ul></pd>
               </plentry>
               <plentry id="reason">
                    <pt>reason</pt>
                    <pd props="ios mac cpp unreal bp unity electron rn flutter cs">The reason of the remote audio state change. See <xref keyref="REMOTE_AUDIO_STATE_REASON" />.</pd>
                    <pd props="android">Remote audio state reasons.<ul>
                         <li><ph keyref="REMOTE_AUDIO_REASON_INTERNAL" />(0): The SDK reports this reason when the audio state changes.</li>
                         <li><ph keyref="REMOTE_AUDIO_REASON_NETWORK_CONGESTION" />(1): Network congestion.</li>
                         <li><ph keyref="REMOTE_AUDIO_REASON_NETWORK_RECOVERY" />(2): Network recovery.</li>
                         <li><ph keyref="REMOTE_AUDIO_REASON_LOCAL_MUTED" />(3): The local user stops receiving the remote audio stream or disables the audio module.</li>
                         <li><ph keyref="REMOTE_AUDIO_REASON_LOCAL_UNMUTED" />(4): The local user resumes receiving the remote audio stream or enables the audio module.</li>
                         <li><ph keyref="REMOTE_AUDIO_REASON_REMOTE_MUTED" />(5): The remote user stops sending the audio stream or disables the audio module.</li>
                         <li><ph keyref="REMOTE_AUDIO_REASON_REMOTE_UNMUTED" />(6): The remote user resumes sending the audio stream or enables the audio module.</li>
                         <li><ph keyref="REMOTE_AUDIO_REASON_REMOTE_OFFLINE" />(7): The remote user leaves the channel.</li>
                         </ul> </pd>
               </plentry>
               <plentry>
                    <pt>elapsed</pt>
                    <pd>Time elapsed (ms) from the local user calling the <apiname keyref="joinChannel2" /> method until the SDK triggers this callback.</pd>
               </plentry>
               </parml> </section>
     </refbody>
</reference>