<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE reference PUBLIC "-//OASIS//DTD DITA Reference//EN" "reference.dtd">
<reference id="api_imediaplayer_openwithmediasource">
    <title><ph keyref="openWithMediaSource" /></title>
    <shortdesc id="short"><ph id="shortdesc">Opens a media file and configures the playback scenarios.</ph></shortdesc>
    <prolog>
        <metadata>
            <keywords>
                <indexterm keyref="openWithMediaSource" />
            </keywords>
        </metadata>
    </prolog>
    <refbody>
        <section id="prototype">
            <p outputclass="codeblock">
            <codeblock props="android" outputclass="language-java">int openWithMediaSource(MediaPlayerSource source);</codeblock>
            <codeblock props="hmos" outputclass="language-arkts"></codeblock>
            <codeblock props="ios mac" outputclass="language-objectivec">- (int)openWithMediaSource:(AgoraMediaSource *)source;</codeblock>
            <codeblock props="cpp unreal" outputclass="language-cpp">virtual int openWithMediaSource(const media::base::MediaSource &amp;source) = 0;</codeblock>
         <codeblock props="bp" outputclass="language-cpp">UFUNCTION(BlueprintCallable, Category = &quot;Agora|IMediaPlayer&quot;)
	int OpenWithMediaSource(const FAgoraMediaSource&amp; source);</codeblock>
            <codeblock props="electron" outputclass="language-typescript">abstract openWithMediaSource(source: MediaSource): number;</codeblock>
            <codeblock props="unity cs" outputclass="language-csharp">public abstract int OpenWithMediaSource(MediaSource source);</codeblock>
            <codeblock props="rn" outputclass="language-typescript">abstract openWithMediaSource(source: MediaSource): number;</codeblock>
            <codeblock props="flutter" outputclass="language-dart">Future&lt;void&gt; openWithMediaSource(MediaSource source);</codeblock>
            <codeblock props="reserve" outputclass="language-cpp"></codeblock></p></section>
        <section id="detailed_desc" deliveryTarget="details" otherprops="no-title">
            <p props="cpp framework">This method supports opening media files of different sources, including a custom media source, and allows you to configure the playback scenarios.</p>
            <p props="android hmos">该方法支持你打开不同类型的媒体资源，包括以 <codeph>content://</codeph> 开头的 URI 文件、<codeph>assets</codeph> 文件夹中的媒体文件、以及其他自定义的媒体资源文件，并可进行播放设置。</p>
            <p props="apple">该方法支持你打开不同类型的媒体资源，包括以 <codeph>ipod-library://</codeph> 开头的文件、以及其他自定义的媒体资源文件，并可进行播放设置。</p>
            <p id="format" props="native"><ph props="cn">For supported formats of Agora media player, see <xref keyref="media-player"/>.</ph></p>
        </section>
        <section id="timing" deliveryTarget="details">
            <title>Call timing</title>
            <p>You can call this method either before or after joining a channel.</p>
        </section>
        <section id="restriction" deliveryTarget="details">
            <title>Restrictions</title>
            <p>This method is called asynchronously. If you need to play a media file, make sure you receive the<xref keyref="onPlayerSourceStateChanged"/>  callback reporting<apiname keyref="PLAYER_STATE_OPEN_COMPLETED"/>  before calling the<xref keyref="play"/>  method to play the file.</p>
        </section>
        <section id="parameters" deliveryTarget="details">
            <title>Parameters</title>
            <parml>
            <plentry>
                <pt>source</pt>
                <pd>Media resources. See <xref keyref="MediaSource" />.</pd>
            </plentry>
            </parml> </section>
        <section id="return_values">
            <title><ph keyref="return-section-title"/></title>
            <p props="flutter">When the method call succeeds, there is no return value; when fails, the <xref keyref="AgoraRtcException"/> exception is thrown. You need to catch the exception and handle it accordingly. <ph props="cn">See <xref keyref="error-code-link"/> for details and resolution suggestions.</ph></p>
            <ul>
            <li props="native unreal bp unity rn electron cs">0: Success.</li>
            <li>&lt; 0: Failure. <ph props="cn">See <xref keyref="error-code-link"/> for details and resolution suggestions.</ph></li>
            </ul></section>
    </refbody>
</reference>
