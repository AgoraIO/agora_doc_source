<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE reference PUBLIC "-//OASIS//DTD DITA Reference//EN" "reference.dtd">
<reference id="api_imediaplayer_switchagoracdnsrc">
  <title> <ph keyref="switchAgoraCDNSrc" /> </title>
  <shortdesc id="short"><ph id="shortdesc">Switches the media resource being played.</ph></shortdesc>
  <prolog>
    <metadata>
      <keywords>
        <indexterm keyref="switchAgoraCDNSrc" />
      </keywords>
    </metadata>
  </prolog>
  <refbody>
    <section id="prototype">
      <p outputclass="codeblock">
      <codeblock props="android" outputclass="language-java">int switchAgoraCDNSrc(String src, boolean syncPts);
</codeblock>
      <codeblock props="ios mac" outputclass="language-objectivec">- (int)switchAgoraCDNSrc:(NSString *)src syncPts:(BOOL)syncPts;
</codeblock>
      <codeblock props="cpp unreal" outputclass="language-cpp">virtual int switchAgoraCDNSrc(const char* src, bool syncPts = false) = 0;
</codeblock>
      <codeblock props="electron" outputclass="language-typescript">abstract switchAgoraCDNSrc(src: string, syncPts?: boolean): number;</codeblock>
      <codeblock props="unity cs" outputclass="language-csharp">public abstract int SwitchAgoraCDNSrc(string src, bool syncPts = false);</codeblock>
      <codeblock props="rn" outputclass="language-typescript">abstract switchAgoraCDNSrc(src: string, syncPts?: boolean): number;</codeblock>
      <codeblock props="flutter" outputclass="language-dart">Future&lt;void&gt; switchAgoraCDNSrc({required String src, bool syncPts = false});</codeblock>
            <codeblock props="reserve" outputclass="language-cpp"></codeblock></p>
    </section>
    <section id="detailed_desc">
            <title>Details</title>
      <p>If you want to customize the CDN routes for playing the media resource, call this method to switch media resources.  Agora changes the CDN route through the self-developed scheduling center to improve the viewing user experience. If you do not need to customize CDN routes for playing the media resource, call the <xref keyref="switchSrc" /> method to switch media resources.
</p>
      <note type="note">
      <ul>
      <li>Call this method after calling <xref keyref="openWithAgoraCDNSrc" />.</li>
      <li>You can call this method either before or after <xref keyref="play" />. If you call this method before <apiname keyref="play" />, the SDK waits for you to call <apiname keyref="play" /> before completing the route switch.
</li>
      </ul> </note>
      <p conkeyref="openWithAgoraCDNSrc/auth" />
    </section>
    <section id="parameters">
      <title>Parameters</title>
      <parml>
      <plentry id="src">
        <pt>src</pt>
        <pd>The URL of the media resource.</pd>
      </plentry>
      <plentry id="syncPts">
        <pt>syncPts</pt>
        <pd>Whether to synchronize the playback position (ms) before and after the switch:<ul>
          <li><codeph><ph keyref="true" /></codeph>: Synchronize the playback position before and after the switch.</li>
          <li><codeph><ph keyref="false" /></codeph>: (Default) Do not synchronize the playback position before and after the switch.</li>
          </ul>
          <p>Make sure to set this parameter as <codeph><ph keyref="false" /></codeph> if you need to play live streams, or the switch fails. If you need to play on-demand streams, you can set the value of this parameter according to your scenarios.</p>
        </pd>
      </plentry>
      </parml> </section>
    <section id="return_values">
      <title><ph keyref="return-section-title"/></title>
            <p props="flutter">When the method call succeeds, there is no return value; when fails, the <xref keyref="AgoraRtcException"/> exception is thrown; and you need to catch the exception and handle it accordingly. <ph props="cn">See <xref keyref="error-code-link"/> for details and resolution suggestions.</ph></p>
      <ul>
      <li props="native unreal bp electron unity cs">0: Success.</li>
      <li>&lt; 0: Failure. <ph props="cn">See <xref keyref="error-code-link"/> for details and resolution suggestions.</ph></li>
      </ul> </section>
  </refbody>
</reference>