<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE reference PUBLIC "-//OASIS//DTD DITA Reference//EN" "reference.dtd">
<reference id="callback_iaudiospectrumobserver_onlocalaudiospectrum">
    <title><ph keyref="onLocalAudioSpectrum" /></title>
    <shortdesc id="short"><ph id="shortdesc">Gets the statistics of a local audio spectrum.</ph></shortdesc>
    <prolog>
        <metadata>
            <keywords>
                <indexterm keyref="onLocalAudioSpectrum" />
            </keywords>
        </metadata>
    </prolog>
    <refbody>
        <section id="prototype">
            <p outputclass="codeblock">
            <codeblock props="android" outputclass="language-java">boolean onLocalAudioSpectrum(AudioSpectrumInfo data);
</codeblock>
            <codeblock props="ios mac" outputclass="language-objectivec">- (BOOL)onLocalAudioSpectrum:(NSArray&lt;NSNumber *&gt; * _Nullable)audioSpectrumData;</codeblock>
            <codeblock props="cpp" outputclass="language-cpp">virtual bool onLocalAudioSpectrum(const AudioSpectrumData&amp; data) = 0;</codeblock>
            <codeblock props="electron" outputclass="language-typescript">onLocalAudioSpectrum?(data: AudioSpectrumData): boolean;</codeblock>
            <codeblock props="unity" outputclass="language-csharp">public virtual bool OnLocalAudioSpectrum(AudioSpectrumData data)
        {
            return true;
        }</codeblock>
            <codeblock props="rn" outputclass="language-typescript">onLocalAudioSpectrum?(data: AudioSpectrumData): boolean;</codeblock>
            <codeblock props="flutter" outputclass="language-dart">final void Function(AudioSpectrumData data)? onLocalAudioSpectrum;</codeblock>
            <codeblock props="reserve" outputclass="language-cpp"></codeblock></p>
        </section>
        <section id="detailed_desc">
            <p>After successfully calling <xref keyref="registerAudioSpectrumObserver" /> to implement the <apiname keyref="onLocalAudioSpectrum" />callback in <xref keyref="IAudioSpectrumObserver" /> and calling <xref keyref="enableAudioSpectrumMonitor" /> to enable audio spectrum monitoring, the SDK will trigger the callback as the time interval you set to report the received remote audio data spectrum.</p>
        </section>
        <section id="parameters">
            <title>Parameters</title>
            <parml>
            <plentry>
                <pt props="android cpp unity electron rn flutter">data</pt>
                <pt props="ios mac">audioSpectrumData</pt>
                <pd props="android cpp unity electron rn flutter">The audio spectrum data of the local user. See <xref keyref="AudioSpectrumData" />.</pd>
                <pd props="ios mac">The audio spectrum data of the local user. Agora divides the audio frequency into 256 frequency domains, and reports the energy value of each frequency domain through this parameter. The value range of each energy type is [-300, 1] and the unit is dBFS.</pd>
            </plentry>
            </parml> </section>
        <section id="return_values">
            <title><ph keyref="return-section-title"/></title>
            <p props="flutter">When the method call succeeds, there is no return value; when fails, the <xref keyref="AgoraRtcException"/> exception is thrown; you need to catch the exception and handle it accordingly.</p>
            <p props="native electron unity rn">Whether the spectrum data is received:<ul>
            <li><codeph><ph keyref="true" /></codeph>: Spectrum data is received.</li>
            <li><codeph><ph keyref="false" /></codeph>: No spectrum data is received.</li>
            </ul></p>
        </section>
    </refbody>
</reference>