<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE reference PUBLIC "-//OASIS//DTD DITA Reference//EN" "reference.dtd">
<reference id="api_switchchannel2">
    <title><ph keyref="switchChannel2" /></title>
    <shortdesc id="short"><ph id="shortdesc">Switches to a different channel, and configures whether to automatically subscribe to audio or video streams in the target channel.</ph></shortdesc>
    <prolog>
        <metadata>
            <keywords>
                <indexterm keyref="switchChannel2" />
            </keywords>
        </metadata>
    </prolog>
    <refbody>
        <section id="prototype">
            <p outputclass="codeblock">
            <codeblock props="android" outputclass="language-java" />
            <codeblock props="ios mac" outputclass="language-objectivec" />
            <codeblock props="cpp" outputclass="language-cpp">virtual int switchChannel(const char* token,
    const char* channelId,
    const ChannelMediaOptions&amp; options) = 0;</codeblock>
            <codeblock props="electron" outputclass="language-typescript" />
            <codeblock props="unity" outputclass="language-csharp">public abstract int SwitchChannel(string token, string channelId, ChannelMediaOptions options);</codeblock>
            <codeblock props="rn" outputclass="language-typescript" />
            <codeblock props="flutter" outputclass="language-dart" /></p>
        </section>
        <section id="detailed_desc">
            <p>When the viewers in the live channel want to switch from one channel to another, this method can be called to achieve fast switching.</p>
            <p>After the user successfully switches to another channel, the <xref keyref="onLeaveChannel" /> and <xref keyref="onJoinChannelSuccess" /> callbacks are triggered to indicate that the user has left the original channel and joined a new one.</p>
            <p>Once the user switches to another channel, the user subscribes to the audio and video streams of all the other users in the channel by default, giving rise to usage and billing calculation. To stop subscribing to a specified stream or all remote streams, call the corresponding <apiname>mute</apiname> methods.</p>
        </section>
        <section id="parameters">
            <title>Parameters</title>
            <parml>
            <plentry>
                <pt>token</pt>
                <pd>
                    <p>The token generated at your server.<ul>
                    <li>In scenarios with low security requirements, token is optional and can be set as <ph keyref="NULL" />.</li>
                    <li>In scenarios with high security requirements, set the value to the token generated from your server. If you enable the App Certificate, you must use a token to join the channel.</li>
                    </ul>
                    <note type="caution">Ensure that the App ID, channel name, and user name used for creating the token are the same ones as those used by the <xref keyref="initialize" /> method for initializing the RTC engine.</note> </p>
                </pd>
            </plentry>
            <plentry>
                <pt props="android ios mac unity electron">channelId</pt>
                <pt props="flutter">channelName</pt>
                <pd>
                    <p>The channel name. This parameter signifies the channel in which users engage in real-time audio and video interaction. Under the premise of the same App ID, users who fill in the same <codeph>channelId</codeph> enter the same channel for audio and video interaction. The string length must be less than 64 bytes. Supported characters:<ul>
                    <li>All lowercase English letters: a to z.</li>
                    <li>All uppercase English letters: A to Z.</li>
                    <li>All numeric characters: 0 to 9.</li>
                    <li>Space</li>
                    <li>"!", "#", "$", "%", "&amp;amp;", "(", ")", "+", "-", ":", ";", "&amp;lt;", "= ", ".", "&amp;gt;", "?", "@", "[", "]", "^", "_", "{", "}", "|", "~", ","</li>
                    </ul></p>
                </pd>
            </plentry>
            <plentry>
                <pt>options</pt>
                <pd>The channel media options. See <xref href="class_channelmediaoptions.dita" />.</pd>
            </plentry>
            </parml> </section>
        <section id="return_values" props="native electron unity rn">
            <title>Returns</title>
            <ul>
            <li>0: Success.</li>
            <li>&lt; 0: Failure.<ul>
                <li>-1(ERR_FAILED): A general error occurs (no specified reason).</li>
                <li>-2 (ERR_INVALID_ARGUMENT): The parameter is invalid.</li>
                <li>-5(ERR_REFUSED): The request is rejected. Probably because the user is not an audience member.</li>
                <li>-7(ERR_NOT_INITIALIZED): The SDK is not initialized.</li>
                <li>-102(ERR_INVALID CHANNEL_NAME): The channel name is invalid. Please use a valid channel name.</li>
                <li>-113(ERR_NOT_IN_CHANNEL): The user is not in the channel.</li>
                </ul></li>
            </ul> </section>
    </refbody>
</reference>