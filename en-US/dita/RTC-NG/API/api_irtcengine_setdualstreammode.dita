<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE reference PUBLIC "-//OASIS//DTD DITA Reference//EN" "reference.dtd">
<reference id="api_irtcengine_setdualstreammode">
    <title><ph keyref="setDualStreamMode" /></title>
    <shortdesc id="short"><ph id="shortdesc">Sets dual-stream mode on the sender side.</ph></shortdesc>
    <prolog>
        <metadata>
            <keywords>
                <indexterm keyref="setDualStreamMode" />
            </keywords>
        </metadata>
    </prolog>
    <refbody>
        <section id="prototype">
            <p outputclass="codeblock">
            <codeblock props="android" outputclass="language-java">public abstract int setDualStreamMode(Constants.SimulcastStreamMode mode);</codeblock>
            <codeblock props="ios mac" outputclass="language-objectivec">- (int)setDualStreamMode:(AgoraSimulcastStreamMode)mode;</codeblock>
            <codeblock props="cpp" outputclass="language-cpp">virtual int setDualStreamMode(SIMULCAST_STREAM_MODE mode) = 0;</codeblock>
            <codeblock props="cs" outputclass="language-csharp" />
            <codeblock props="electron" outputclass="language-typescript" />
            <codeblock props="unity" outputclass="language-csharp">public abstract int SetDualStreamMode(SIMULCAST_STREAM_MODE mode);</codeblock>
            <codeblock props="rn" outputclass="language-typescript" />
           <codeblock props="flutter" outputclass="language-dart" /> 
            <codeblock props="unreal" outputclass="language-cpp" /></p>
        </section>
        <section id="detailed_desc"> <dl outputclass="since">
            <dlentry props="native">
                <dt>Since</dt>
                <dd>v4.0.1</dd>
            </dlentry>
            </dl>
            <p id="desc">The SDK enables the low-quality video stream auto mode on the sender by default, which is equivalent to calling this method and setting the <parmname>mode</parmname> to <apiname keyref="AUTO_SIMULCAST_STREAM" />. If you want to modify this behavior, you can call this method and modify the <parmname>mode</parmname> to <apiname keyref="DISABLE_SIMULCAST_STREAM" />(always never send low-quality video streams) or <apiname keyref="ENABLE_SIMULCAST_STREAM" /> (always send low-quality video streams).</p>
            <note id="note">The difference and connection between this method and <xref keyref="enableDualStreamMode" /> is as follows:<ul>
                <li>When calling this method and setting <parmname>mode</parmname> to <ph keyref="DISABLE_SIMULCAST_STREAM" />, it has the same effect as <codeph><apiname keyref="enableDualStreamMode" />(<ph keyref="false" />)</codeph>.</li>
                <li>When calling this method and setting <parmname>mode</parmname> to <ph keyref="ENABLE_SIMULCAST_STREAM" />, it has the same effect as <codeph><apiname keyref="enableDualStreamMode" />(<ph keyref="true" />)</codeph>.</li>
                <li>Both methods can be called before and after joining a channel. If they are used at the same time, the settings in the method called later shall prevail.</li>
                </ul></note>
        </section>
        <section id="parameters">
            <title>Parameters</title>
            <parml>
            <plentry id="mode">
                    <pt>mode</pt>
                    <pd>The mode in which the video stream is sent. See <xref keyref="SIMULCAST_STREAM_MODE" />.</pd>
                </plentry>
            </parml> </section>
        <section id="return_values">
            <title>Returns</title>
            <ul>
            <li>0: Success.</li>
            <li>&lt; 0: Failure.</li>
            </ul>
        </section>
    </refbody>
</reference>