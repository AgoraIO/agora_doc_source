<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE reference PUBLIC "-//OASIS//DTD DITA Reference//EN" "reference.dtd">
<reference id="api_createagorartcengine">
    <title><ph keyref="createAgoraRtcEngine" /></title>
    <shortdesc id="short"><ph id="shortdesc">Creates the <apiname keyref="IRtcEngineEx" /> object.</ph></shortdesc>
    <prolog>
        <metadata>
            <keywords>
                <indexterm>createAgoraRtcEngine</indexterm>
            </keywords>
        </metadata>
    </prolog>
    <refbody>
        <section id="prototype">
            <p outputclass="codeblock">
            <codeblock props="android" outputclass="language-java" />
            <codeblock props="ios mac" outputclass="language-objectivec" />
            <codeblock props="cpp" outputclass="language-cpp" />
            <codeblock props="cs" outputclass="language-csharp" />
            <codeblock props="electron" outputclass="language-typescript" />
            <codeblock props="unity" outputclass="language-csharp" />
            <codeblock props="rn" outputclass="language-typescript" />
            <codeblock props="flutter" outputclass="language-dart">RtcEngineEx createAgoraRtcEngineEx() {
  return impl.RtcEngineImpl.create();
}
</codeblock> </p>
        </section>
        <section id="detailed_desc">
            <p>Currently, the Agora RTC SDK v4.0.0 supports creating only one <apiname keyref="IRtcEngineEx" /> object for an app.</p>
        </section>
        <section id="return_values">
            <title>Returns</title>
            <p props="electron unity rn flutter"><apiname keyref="IRtcEngineEx" /> object.</p>
        </section>
    </refbody>
</reference>