<?xml version='1.0' encoding='UTF-8'?>
<!DOCTYPE reference PUBLIC "-//OASIS//DTD DITA Reference//EN" "reference.dtd">
<reference id="api_irtcengineex_setsimulcastconfigex">
    <title><ph keyref="setSimulcastConfigEx"/></title>
    <shortdesc id="short"><ph id="shortdesc">Configures multi-quality video streams.</ph></shortdesc>
    <prolog>
        <metadata>
            <keywords>
                <indexterm keyref="setSimulcastConfigEx"/>
            </keywords>
        </metadata>
    </prolog>
    <refbody>
        <section id="prototype">
            <p outputclass="codeblock">
            <codeblock props="android" outputclass="language-java">public abstract int setSimulcastConfigEx(SimulcastConfig simulcastConfig, RtcConnection connection);</codeblock>
            <codeblock props="hmos" outputclass="language-arkts"/>
            <codeblock props="ios mac" outputclass="language-objectivec">- (int)setSimulcastConfigEx:(AgoraSimulcastConfig*)simulcastConfig
                 connection:(AgoraRtcConnection* _Nonnull)connection NS_SWIFT_NAME(setDualStreamModeEx(_:connection:));</codeblock>
            <codeblock props="cpp unreal" outputclass="language-cpp">virtual int setSimulcastConfigEx(const SimulcastConfig&amp;amp; simulcastConfig, const RtcConnection&amp;amp; connection) = 0;</codeblock>
            <codeblock props="bp" outputclass="language-cpp"/>
            <codeblock props="electron" outputclass="language-typescript"/>
            <codeblock props="unity cs" outputclass="language-csharp"/>
            <codeblock props="rn" outputclass="language-typescript"/>
            <codeblock props="flutter" outputclass="language-dart"/> </p>
        </section>
        <section id="detailed_desc" deliveryTarget="details" otherprops="no-title">
            <dl outputclass="since">
            <dlentry props="native">
                <dt>Since:</dt>
                <dd props="native">Available since v4.6.0.</dd>
                </dlentry>
            </dl>
            <p>This method allows the same UID to send multiple video streams with different resolutions simultaneously. On the receiving end, you can call <xref keyref="setRemoteVideoStreamType"/> to select the desired stream layer to receive.

This configuration supports enabling up to four layers at the same time: one main stream (highest resolution) and three additional streams of different quality levels.</p>
            </section>
        <section id="scenario" deliveryTarget="details">
            <title>Scenario</title>
            <p>This method is applicable in multi-channel scenarios.</p>
        </section>
        <section id="restriction" deliveryTarget="details">
            <title>Restrictions</title>
            <p>None.</p>
        </section>
        <section id="return_values">
            <title><ph keyref="return-section-title"/></title>
            <p props="flutter">When the method call succeeds, there is no return value; when fails, the <xref keyref="AgoraRtcException"/> exception is thrown. You need to catch the exception and handle it accordingly. <ph props="cn">See <xref keyref="error-code-link"/> for details and resolution suggestions.</ph></p>
            <ul props="bp cs electron native rn unity unreal">
                <li>0: Success.</li>
                <li>&lt; 0: Failure. <ph props="cn">See <xref keyref="error-code-link"/> for details and resolution suggestions.</ph></li>
                </ul> </section>
        </refbody>
</reference>
