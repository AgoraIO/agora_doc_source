<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE reference PUBLIC "-//OASIS//DTD DITA Reference//EN" "reference.dtd">
<reference id="api_irtcengine_muterecordingsignal">
    <title><ph keyref="muteRecordingSignal" /></title>
    <shortdesc id="short"><ph id="shortdesc">Whether to mute the recording signal.</ph></shortdesc>
    <prolog>
        <metadata>
            <keywords>
                <indexterm keyref="muteRecordingSignal" />
            </keywords>
        </metadata>
    </prolog>
    <refbody>
        <section id="prototype">
            <p outputclass="codeblock">
            <codeblock props="android" outputclass="language-java">public abstract int muteRecordingSignal(boolean muted);</codeblock>
            <codeblock props="ios mac" outputclass="language-objectivec">-(int)muteRecordingSignal:(BOOL)muted;</codeblock>
            <codeblock props="cpp unreal" outputclass="language-cpp">virtual int muteRecordingSignal(bool mute) = 0;</codeblock>
            <codeblock props="bp" outputclass="language-cpp">UFUNCTION(BlueprintCallable, Category = &quot;Agora|RtcEngineProxy&quot;)
        int MuteRecordingSignal(bool mute);</codeblock>
            <codeblock props="electron" outputclass="language-typescript">abstract muteRecordingSignal(mute: boolean): number;</codeblock>
            <codeblock props="unity cs" outputclass="language-csharp">public abstract int MuteRecordingSignal(bool mute);</codeblock>
            <codeblock props="rn" outputclass="language-typescript">abstract muteRecordingSignal(mute: boolean): number;</codeblock>
            <codeblock props="flutter" outputclass="language-dart">Future&lt;void&gt; muteRecordingSignal(bool mute);</codeblock>
            <codeblock props="reserve" outputclass="language-cpp"></codeblock></p>
        </section>
        <section id="detailed_desc" deliveryTarget="details" otherprops="no-title">
            <p>如果你已经调用 <xref keyref="adjustRecordingSignalVolume"/> 调节了音频采集信号音量，则调用该方法并设置为 <codeph><ph keyref="true" /></codeph> 时，SDK 的行为如下：<ol>
            <li>记录调节后的音量。</li>
            <li>将音频采集信号静音。</li></ol>            当你再次调用该方法并设置为 <codeph><ph keyref="false" /></codeph> 时，录音信号会恢复为静音前 SDK 记录的音量。</p>
        </section>
        <section id="timing" deliveryTarget="details">
            <title>Call timing</title>
            <p>It can be called either before or after joining the channel.</p>
        </section>        
        <section id="restriction" deliveryTarget="details">
            <title>Restrictions</title>
            <p>None.</p>
        </section>
        <section id="parameters" deliveryTarget="details">
            <title>Parameters</title>
            <parml>
            <plentry>
                <pt props="android apple">muted</pt>
                <pt props="cpp framework">mute</pt>
                <pd>
                    <ul>
                    <li><codeph><ph keyref="true" /></codeph>: The media file is muted.</li>
                    <li><codeph><ph keyref="false" /></codeph>: (Default) Do not mute the recording signal.</li>
                    </ul>
                </pd>
            </plentry>
            </parml> </section>
        <section id="return_values">
            <title><ph keyref="return-section-title"/></title>
            <p props="flutter">When the method call succeeds, there is no return value; when fails, the <xref keyref="AgoraRtcException"/> exception is thrown. You need to catch the exception and handle it accordingly. <ph props="cn">See <xref keyref="error-code-link"/> for details and resolution suggestions.</ph></p>
            <ul props="native unreal bp electron unity rn cs">
            <li>0: Success.</li>
            <li>&lt; 0: Failure. <ph props="cn">See <xref keyref="error-code-link"/> for details and resolution suggestions.</ph></li>
            </ul> </section>
        </refbody>
</reference>