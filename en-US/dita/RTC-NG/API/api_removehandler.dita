<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE reference PUBLIC "-//OASIS//DTD DITA Reference//EN" "reference.dtd">
<reference id="api_removehandler">
    <title><ph keyref="removeHandler" /></title>
    <shortdesc id="short"><ph id="shortdesc">Removes the specified IRtcEngineEventHandler instance.</ph></shortdesc>
    <prolog>
        <metadata>
   <keywords>
       <indexterm keyref="removeHandler" />
   </keywords>
        </metadata>
    </prolog>
    <refbody><section id="prototype">
        <p outputclass="codeblock">
                <codeblock props="android" outputclass="language-java">public void removeHandler(IRtcEngineEventHandler handler) {
    mInstance.removeHandler((IAgoraEventHandler) handler);
  }</codeblock>
                <codeblock props="ios mac" outputclass="language-objectivec" />
                <codeblock props="cpp" outputclass="language-cpp" />
                <codeblock props="electron" outputclass="language-typescript" />
                <codeblock props="unity" outputclass="language-csharp" />
                <codeblock props="rn" outputclass="language-typescript" />
                <codeblock props="flutter" outputclass="language-dart" />
        </p>
        </section>
        <section id="detailed_desc">

   <dl props="cpp" outputclass="since">
       <dlentry>
  <dt>Since</dt>
  <dd>v2.9.1</dd>
       </dlentry>
   </dl>
   <p>This method removes the specified callback handler. For callback events that you want to listen for only once, call this method to remove the relevant callback handler after you have received them.</p>
        </section>
        <section id="parameters"><title>Parameters</title>
   <parml>
       <plentry>
  <pt>handler</pt>
  <pd>The callback handler to be deleted. For details, see <xref keyref="IRtcEngineEventHandler" />.</pd>
       </plentry>
   </parml>
        </section>
</refbody>
</reference>