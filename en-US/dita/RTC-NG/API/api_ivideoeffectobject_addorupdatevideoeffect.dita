<?xml version='1.0' encoding='UTF-8'?>
<!DOCTYPE reference PUBLIC "-//OASIS//DTD DITA Reference//EN" "reference.dtd">
<reference id="api_ivideoeffectobject_addorupdatevideoeffect">
    <title><ph keyref="addOrUpdateVideoEffect"/></title>
    <shortdesc id="short"><ph id="shortdesc">Adds or updates the visual effect for the specified node ID and template.</ph></shortdesc>
    <prolog>
        <metadata>
            <keywords>
                <indexterm keyref="addOrUpdateVideoEffect"/>
            </keywords>
        </metadata>
    </prolog>
    <refbody>
        <section id="prototype">
            <p outputclass="codeblock">
            <codeblock props="android" outputclass="language-java">int addOrUpdateVideoEffect(int nodeId, String templateName);</codeblock>
            <codeblock props="hmos" outputclass="language-arkts"/>
            <codeblock props="ios mac" outputclass="language-objectivec"/>
            <codeblock props="cpp unreal" outputclass="language-cpp">virtual int addOrUpdateVideoEffect(uint32_t nodeId, const char* templateName) = 0;</codeblock>
            <codeblock props="bp" outputclass="language-cpp"/>
            <codeblock props="electron" outputclass="language-typescript"/>
            <codeblock props="unity cs" outputclass="language-csharp"/>
            <codeblock props="rn" outputclass="language-typescript"/>
            <codeblock props="flutter" outputclass="language-dart"/> </p>
        </section>
        <section id="detailed_desc" deliveryTarget="details" otherprops="no-title">
            <dl outputclass="since">
            <dlentry props="native">
                <dt>Since:</dt>
                <dd props="android cpp">Available since v4.6.0.</dd>
                </dlentry>
            </dl>
            <p>Used to add or update the specified visual effect node and template.</p>
            <note type="attention" props="cpp">Priority rules:
                    <ul>
                        <li>The <codeph>VIDEO_EFFECT_NODE_ID::STYLE_MAKEUP</codeph> node takes precedence over the <codeph>VIDEO_EFFECT_NODE_ID::FILTER</codeph> parameter.</li>
                        <li>To apply the <codeph>VIDEO_EFFECT_NODE_ID::FILTER</codeph> parameter, you must first remove the <codeph>VIDEO_EFFECT_NODE_ID::STYLE_MAKEUP</codeph> node:
<codeblock outputclass="language-cpp">removeVideoEffect(VIDEO_EFFECT_NODE_ID::STYLE_MAKEUP);
addOrUpdateVideoEffect(VIDEO_EFFECT_NODE_ID::FILTER, "template name");</codeblock></li>
                        </ul>
                    </note>
            <note type="attention" props="android">Priority rules:
                    <ul>
                        <li>The <codeph>VIDEO_EFFECT_NODE_ID.STYLE_MAKEUP</codeph> node takes precedence over the filter parameter.</li>
                        <li>To apply the filter parameter, you must first remove the <ph keyref="STYLE_MAKEUP"/> node:
<codeblock outputclass="language-cpp">removeVideoEffect(VIDEO_EFFECT_NODE_ID::STYLE_MAKEUP);
addOrUpdateVideoEffect(VIDEO_EFFECT_NODE_ID::FILTER, "template name");</codeblock></li>
                        </ul>
                    </note>
            </section>
        <section id="restriction" deliveryTarget="details">
            <title>Restrictions</title>
            <p>None.</p>
        </section>
        <section id="return_values">
            <title><ph keyref="return-section-title"/></title>
            <p props="flutter">When the method call succeeds, there is no return value; when fails, the <xref keyref="AgoraRtcException"/> exception is thrown. You need to catch the exception and handle it accordingly. <ph props="cn">See <xref keyref="error-code-link"/> for details and resolution suggestions.</ph></p>
            <ul props="bp cs electron native rn unity unreal">
                <li>0: Success.</li>
                <li>&lt; 0: Failure. <ph props="cn">See <xref keyref="error-code-link"/> for details and resolution suggestions.</ph></li>
                </ul> </section>
        </refbody>
</reference>
