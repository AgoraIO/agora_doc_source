<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE reference PUBLIC "-//OASIS//DTD DITA Reference//EN" "reference.dtd">
<reference id="api_irtcengine_setremoterendermode2">
    <title><ph keyref="setRemoteRenderMode2" /></title>
    <shortdesc id="short"><ph id="shortdesc">Updates the display mode of the video view of a remote user.</ph></shortdesc>
    <prolog>
        <metadata>
            <keywords>
                <indexterm keyref="setRemoteRenderMode2" />
            </keywords>
        </metadata>
    </prolog>
    <refbody>
        <section id="prototype">
            <p outputclass="codeblock">
            <codeblock props="android" outputclass="language-java">public abstract int setRemoteRenderMode(int userId, int renderMode, int mirrorMode);</codeblock>
            <codeblock props="ios mac" outputclass="language-objectivec">- (int)setRemoteRenderMode:(NSUInteger)uid
                      mode:(AgoraVideoRenderMode)mode
                    mirror:(AgoraVideoMirrorMode)mirror;</codeblock>
            <codeblock props="cpp unreal" outputclass="language-cpp">virtual int setRemoteRenderMode(uid_t userId, RENDER_MODE_TYPE renderMode, VIDEO_MIRROR_MODE_TYPE mirrorMode) = 0;</codeblock>
         <codeblock props="bp" outputclass="language-cpp">UFUNCTION(BlueprintCallable, Category = &quot;Agora|RtcEngineProxy&quot;)
	int SetRemoteRenderMode(int64 uid, ERENDER_MODE_TYPE renderMode, EVIDEO_MIRROR_MODE_TYPE mirrorMode);</codeblock>
            <codeblock props="electron" outputclass="language-typescript">abstract setRemoteRenderMode(
    uid: number,
    renderMode: RenderModeType,
    mirrorMode: VideoMirrorModeType
  ): number;</codeblock>
            <codeblock props="unity cs" outputclass="language-csharp">public abstract int SetRemoteRenderMode(uint uid, RENDER_MODE_TYPE renderMode, VIDEO_MIRROR_MODE_TYPE mirrorMode);</codeblock>
            <codeblock props="rn" outputclass="language-typescript">abstract setRemoteRenderMode(
    uid: number,
    renderMode: RenderModeType,
    mirrorMode: VideoMirrorModeType
  ): number;</codeblock>
            <codeblock props="flutter" outputclass="language-dart">Future&lt;void&gt; setRemoteRenderMode(
    {required int uid,
    required RenderModeType renderMode,
    required VideoMirrorModeType mirrorMode});</codeblock>
            <codeblock props="reserve" outputclass="language-cpp"></codeblock></p>
        </section>
        <section id="detailed_desc">
            <title>Details</title>
            <p>After initializing the video view of a remote user, you can call this method to update its rendering and mirror modes. This method affects only the video view that the local user sees.</p>
            <note type="attention">
            <ul>
            <li props="native unreal bp flutter electron">Call this method after initializing the remote view by calling the <xref keyref="setupRemoteVideo" /> method.</li>
            <li>During a call, you can call this method as many times as necessary to update the display mode of the video view of a remote user.</li>
            </ul> </note> </section>
        <section id="parameters">
            <title>Parameters</title>
            <parml>
            <plentry>
                <pt props="android cpp unreal bp">userId</pt>
                <pt props="ios mac unity flutter rn electron cs">uid</pt>
                <pd>The user ID of the remote user.</pd>
            </plentry>
            <plentry>
                <pt props="android cpp unreal bp unity flutter rn electron cs">renderMode</pt>
                <pt props="ios mac">mode</pt>
                <pd>
                    <p props="ios mac cpp unreal bp unity flutter rn electron cs">The rendering mode of the remote user view. For details, see <xref keyref="RENDER_MODE_TYPE" />.</p>
                    <p props="android">The rendering mode of the remote user view.<ul conkeyref="setLocalRenderMode2/rendermodetype">
                    <li />
                    </ul> </p>
                </pd>
            </plentry>
            <plentry>
                <pt props="android cpp unreal bp unity flutter rn electron cs">mirrorMode</pt>
                <pt props="ios mac">mirror</pt>
                <pd>
                    <p props="ios mac cpp unreal bp unity flutter rn electron cs">The mirror mode of the remote user view. See <xref keyref="VIDEO_MIRROR_MODE_TYPE" />.</p>
                    <p props="android">The mirror mode of the remote user view.<ul conkeyref="setLocalRenderMode2/videomirrormodetype">
                    <li />
                    </ul> </p>
                </pd>
            </plentry>
            </parml> </section>
        <section id="return_values">
            <title><ph keyref="return-section-title"/></title>
            <p props="flutter">When the method call succeeds, there is no return value; when fails, the <xref keyref="AgoraRtcException"/> exception is thrown. You need to catch the exception and handle it accordingly. <ph props="cn">See <xref keyref="error-code-link"/> for details and resolution suggestions.</ph></p>
            <ul>
            <li props="native unreal bp unity electron rn cs">0: Success.</li>
            <li>&lt; 0: Failure. <ph props="cn">See <xref keyref="error-code-link"/> for details and resolution suggestions.</ph></li>
            </ul> </section>
    </refbody>
</reference>
