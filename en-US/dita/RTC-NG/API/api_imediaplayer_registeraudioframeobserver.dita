<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE reference PUBLIC "-//OASIS//DTD DITA Reference//EN" "reference.dtd">
<reference id="api_imediaplayer_registeraudioframeobserver">
    <title><ph keyref="registerAudioFrameObserver1_IMediaPlayer" /></title>
    <shortdesc id="short"><ph id="shortdesc">Registers an audio frame observer object.</ph></shortdesc>
    <prolog>
        <metadata>
            <keywords>
                <indexterm keyref="registerAudioFrameObserver1_IMediaPlayer" />
            </keywords>
        </metadata>
    </prolog>
    <refbody>
        <section id="prototype">
            <p outputclass="codeblock">
            <codeblock props="android" outputclass="language-java" />
            <codeblock props="ios mac" outputclass="language-objectivec" />
            <codeblock props="cpp" outputclass="language-cpp">virtual int registerAudioFrameObserver(media::base::IAudioFrameObserver* observer) = 0;</codeblock>
            <codeblock props="electron" outputclass="language-typescript">abstract registerAudioFrameObserver(
    observer: IMediaPlayerAudioFrameObserver
  ): number;</codeblock>
            <codeblock props="unity" outputclass="language-csharp">public abstract void RegisterAudioFrameObserver(IMediaPlayerAudioFrameObserver observer);</codeblock>
            <codeblock props="rn" outputclass="language-typescript">abstract registerAudioFrameObserver(
    observer: IMediaPlayerAudioFrameObserver
  ): number;</codeblock>
            <codeblock props="flutter" outputclass="language-dart">void registerAudioFrameObserver(MediaPlayerAudioFrameObserver observer);</codeblock>
            <codeblock props="unreal" outputclass="language-cpp" /></p>
        </section>
        <section id="detailed_desc">
            <p>You need to implement the <xref props="cpp" keyref="IAudioFrameObserver" /><xref props="electron unity rn flutter" keyref="IMediaPlayerAudioFrameObserver" /> class in this method and register callbacks according to your scenarios. After you successfully register the video frame observer, the SDK triggers the registered callbacks each time a video frame is received.</p>
        </section>
        <section id="parameters">
            <title>Parameters</title>
            <parml>
            <plentry>
                <pt>observer</pt>
                <pd props="cpp">The audio frame observer, reporting the reception of each audio frame. See <xref keyref="IAudioFrameObserver" />.</pd>
                <pd props="electron unity rn flutter">The audio frame observer, reporting the reception of each audio frame. See <xref keyref="IMediaPlayerAudioFrameObserver" />.</pd>
            </plentry>
            </parml> </section>
        <section id="return_values" props="cpp electron rn">
            <title>Returns</title>
            <ul id="ul_uns_l2y_hqb">
            <li>0: Success.</li>
            <li>&lt; 0: Failure.</li>
            </ul> </section>
    </refbody>
</reference>