<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE reference PUBLIC "-//OASIS//DTD DITA Reference//EN" "reference.dtd">
<reference id="api_irtcengineex_sendstreammessageex">
    <title><ph keyref="sendStreamMessageEx" /></title>
    <shortdesc id="short"><ph id="shortdesc">Sends data stream messages.</ph></shortdesc>
    <prolog>
        <metadata>
            <keywords>
                <indexterm keyref="sendStreamMessageEx" />
            </keywords>
        </metadata>
    </prolog>
    <refbody>
        <section id="prototype">
            <p outputclass="codeblock">
            <codeblock props="android" outputclass="language-java">public abstract int sendStreamMessageEx(int streamId, byte[] message, RtcConnection connection);</codeblock>
            <codeblock props="ios mac" outputclass="language-objectivec" />
            <codeblock props="cpp unreal" outputclass="language-cpp">virtual int sendStreamMessageEx(int streamId, const char* data, size_t length, const RtcConnection&amp; connection) = 0;</codeblock>
         <codeblock props="bp" outputclass="language-cpp">UFUNCTION(BlueprintCallable, Category = &quot;Agora|RtcEngineProxy&quot;)
	int SendStreamMessageEx(int streamId, FString data, const  FRtcConnection&amp; connection);</codeblock>
            <codeblock props="electron" outputclass="language-typescript">abstract sendStreamMessageEx(streamId: number, data: Uint8Array, length: number, connection: RtcConnection): number;</codeblock>
            <codeblock props="unity cs" outputclass="language-csharp">public abstract int SendStreamMessageEx(int streamId, byte[] data, uint length, RtcConnection connection);</codeblock>
            <codeblock props="rn" outputclass="language-typescript">abstract sendStreamMessageEx(
  streamId: number,
  data: Uint8Array,
  length: number,
  connection: RtcConnection
): number;</codeblock>
            <codeblock props="flutter" outputclass="language-dart">Future&lt;void&gt; sendStreamMessageEx(
      {required int streamId,
      required Uint8List data,
      required int length,
      required RtcConnection connection});</codeblock>
            <codeblock props="reserve" outputclass="language-cpp"></codeblock></p>
        </section>
        <section id="detailed_desc">
            <title>Details</title>
            <p>After calling <xref keyref="createDataStreamEx2" />, you can call this method to send data stream messages to all users in the channel.</p>
            <p id="desc">The SDK has the following restrictions on this method:<ul>
            <li>Up to 60 packets can be sent per second in a channel with each packet having a maximum size of 1 KB.</li>
            <li>Each client can send up to 30 KB of data per second.</li>
            <li>Each user can have up to five data streams simultaneously.</li>
            </ul></p>
            <p>A successful method call triggers the <xref keyref="onStreamMessage" /> callback on the remote client, from which the remote user gets the stream message. A failed method call triggers the <xref keyref="onStreamMessageError" /> callback on the remote client.</p>
            <note type="attention">
            <ul>
            <li>Ensure that you call <apiname keyref="createDataStreamEx2" /> to create a data channel before calling this method.</li>
            <li>This method applies only to the COMMUNICATION profile or to the hosts in the LIVE_BROADCASTING profile. If an audience in the LIVE_BROADCASTING profile calls this method, the audience may be switched to a host.</li>
            </ul></note> </section>
        <section id="parameters">
            <title>Parameters</title>
            <parml>
            <plentry>
                <pt>streamId</pt>
                <pd>The data stream ID. You can get the data stream ID by calling <apiname keyref="createDataStreamEx2" />.</pd>
            </plentry>
            <plentry>
                <pt props="android">message</pt>
                <pt props="cpp unreal bp rn unity electron flutter cs">data</pt>
                <pd>The message to be sent.</pd>
            </plentry>
            <plentry props="cpp unreal bp rn unity electron flutter cs">
                    <pt>length</pt>
                    <pd>The length of the data.</pd>
                </plentry>
            <plentry conkeyref="joinChannelEx/connection">
                <pt />
                <pd />
            </plentry>
            </parml> </section>
        <section id="return_values">
            <title><ph keyref="return-section-title"/></title>
            <p props="flutter">When the method call succeeds, there is no return value; when fails, the <xref keyref="AgoraRtcException"/> exception is thrown; and you need to catch the exception and handle it accordingly. <ph props="cn">See <xref keyref="error-code-link"/> for details and resolution suggestions.</ph></p>
            <ul props="native unreal bp unity rn electron cs">
            <li>0: Success.</li>
            <li>&lt; 0: Failure. <ph props="cn">See <xref keyref="error-code-link"/> for details and resolution suggestions.</ph></li>
            </ul> </section>
    </refbody>
</reference>