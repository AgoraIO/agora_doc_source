<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE reference PUBLIC "-//OASIS//DTD DITA Reference//EN" "reference.dtd">
<reference id="api_irtcengine_updatescreencapture">
    <title><ph keyref="updateScreenCapture" /></title>
    <shortdesc id="short"><ph id="shortdesc">Updates the screen sharing parameters.</ph></shortdesc>
    <prolog>
        <metadata>
            <keywords>
                <indexterm keyref="updateScreenCapture" />
            </keywords>
        </metadata>
    </prolog>
    <refbody>
        <section id="prototype">
            <p outputclass="codeblock">
            <codeblock props="android" outputclass="language-java" />
            <codeblock props="ios" outputclass="language-objectivec">- (int)updateScreenCapture:(AgoraScreenCaptureParameters2* _Nonnull)parameters NS_SWIFT_NAME(updateScreenCapture(_:));</codeblock>
            <codeblock props="cpp" outputclass="language-cpp">virtual int updateScreenCapture(const ScreenCaptureParameters2&amp; captureParams) = 0;
</codeblock>
            <codeblock props="cs" outputclass="language-csharp" />
            <codeblock props="electron" outputclass="language-typescript">abstract updateScreenCapture(captureParams: ScreenCaptureParameters2): number;</codeblock>
            <codeblock props="unity" outputclass="language-csharp">public abstract int UpdateScreenCapture(ScreenCaptureParameters2 captureParams);</codeblock>
            <codeblock props="rn" outputclass="language-typescript">abstract updateScreenCapture(captureParams: ScreenCaptureParameters2): number;</codeblock>
            <codeblock props="flutter" outputclass="language-dart">Future&lt;void&gt; updateScreenCapture(ScreenCaptureParameters2 captureParams);</codeblock>
            <codeblock props="reserve" outputclass="language-cpp" /></p>
        </section>
        <section id="detailed_desc">
            <p>If the system audio is not captured when screen sharing is enabled, and then you want to update the parameter configuration and publish the system audio, you can refer to the following steps:<ol>
                <li>Call this method, and set <parmname>captureAudio</parmname> to <codeph><ph keyref="true" /></codeph>.</li>
                <li>Call <xref keyref="updateChannelMediaOptions" />, and set <parmname>publishScreenCaptureAudio</parmname> to <codeph><ph keyref="true" /></codeph> to publish the audio captured by the screen.</li>
                </ol></p>
            <note type="attention">
                <ul>
                    <li props="cpp rn unity flutter">This method applies to Android and iOS only.</li>
                    <li props="cpp rn unity flutter ios">On the iOS platform, screen sharing is only available on iOS 12.0 and later.</li>
                </ul>
            </note>
        </section>
        <section id="parameters">
            <title>Parameters</title>
            <parml>
            <plentry>
                <pt props="ios">parameters</pt>
                <pt props="cpp electron unity rn flutter">captureParams</pt>
                <pd>The screen sharing encoding parameters. The default video resolution is 1920 Ã— 1080, that is, 2,073,600 pixels. Agora uses the value of this parameter to calculate the charges. See <xref keyref="ScreenCaptureParameters2" />.</pd>
            </plentry>
            </parml> </section>
        <section id="return_values" props="ios cpp electron unity rn">
            <title>Returns</title>
            <ul>
            <li>0: Success.</li>
            <li>&lt; 0: Failure.<ul conkeyref="startScreenCaptureByDisplayId/err" props="ios cpp rn unity electron">
                    <li />
                    </ul> </li>
            </ul> </section>
    </refbody>
</reference>