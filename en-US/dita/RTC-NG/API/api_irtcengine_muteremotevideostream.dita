<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE reference PUBLIC "-//OASIS//DTD DITA Reference//EN" "reference.dtd">
<reference id="api_irtcengine_muteremotevideostream">
    <title><ph keyref="muteRemoteVideoStream" /></title>
    <shortdesc id="short"><ph id="shortdesc">Stops or resumes subscribing to the video stream of a specified user.</ph></shortdesc>
    <prolog>
        <metadata>
            <keywords>
                <indexterm keyref="muteRemoteVideoStream" />
            </keywords>
        </metadata>
    </prolog>
    <refbody>
        <section id="prototype">
            <p outputclass="codeblock">
            <codeblock props="android" outputclass="language-java">public abstract int muteRemoteVideoStream(int userId, boolean muted);</codeblock>
            <codeblock props="ios mac" outputclass="language-objectivec">- (int)muteRemoteVideoStream:(NSUInteger)uid
                        mute:(BOOL)mute;</codeblock>
            <codeblock props="cpp" outputclass="language-cpp">virtual int muteRemoteVideoStream(uid_t userId, bool mute) = 0;</codeblock>
            <codeblock props="electron" outputclass="language-typescript">abstract muteRemoteVideoStream(uid: number, mute: boolean): number;</codeblock>
            <codeblock props="unity" outputclass="language-csharp">public abstract int MuteRemoteVideoStream(uint uid, bool mute);</codeblock>
            <codeblock props="rn" outputclass="language-typescript">abstract muteRemoteVideoStream(uid: number, mute: boolean): number;</codeblock>
            <codeblock props="flutter" outputclass="language-dart">Future&lt;void&gt; muteRemoteVideoStream({required int uid, required bool mute});</codeblock>
            <codeblock props="reserve" outputclass="language-cpp" /></p>
        </section>
        <section id="detailed_desc">
            <title>Details</title>
            <note type="attention">
            <ul>
            <li>Call this method after joining a channel.</li>
            <li props="hide">See recommended settings in Set the Subscribing State.</li>
            </ul> </note> </section>
        <section id="parameters">
            <title>Parameters</title>
            <parml>
            <plentry>
                <pt props="android cpp">userId</pt>
                <pt props="ios mac unity flutter rn electron">uid</pt>
                <pd id="userId">The user ID of the specified user.</pd>
            </plentry>
            <plentry>
                <pt props="android">muted</pt>
                <pt props="ios mac cpp unity flutter rn electron">mute</pt>
                <pd id="mute">
                    <p>Whether to subscribe to the specified remote user's video stream.<ul>
                    <li><codeph><ph keyref="true" /></codeph>: Stop subscribing to the video streams of the specified user.</li>
                    <li><codeph><ph keyref="false" /></codeph>: (Default) Subscribe to the video stream of the specified user.</li>
                    </ul></p>
                </pd>
            </plentry>
            </parml> </section>
        <section id="return_values">
            <title><ph keyref="return-section-title" /></title>
            <p props="flutter">When the method call succeeds, there is no return value; when fails, the <xref keyref="AgoraRtcException" /> exception is thrown; you need to catch the exception and handle it accordingly.</p>
            <ul>
            <li props="native electron unity rn">0: Success.</li>
            <li>&lt; 0: Failure.</li>
            </ul> </section>
    </refbody>
</reference>