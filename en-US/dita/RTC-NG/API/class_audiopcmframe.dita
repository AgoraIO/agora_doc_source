<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE reference PUBLIC "-//OASIS//DTD DITA Reference//EN" "reference.dtd">
<reference id="class_audiopcmframe">
    <title> <ph keyref="AudioPcmFrame" /> </title>
    <shortdesc id="short"><ph id="shortdesc">The parameters of the audio frame in PCM format.</ph></shortdesc>
    <refbody>
        <section id="prototype">
            <p outputclass="codeblock">
            <codeblock props="android" outputclass="language-java" />
            <codeblock props="ios mac" outputclass="language-objectivec">__attribute__((visibility("default"))) @interface AgoraAudioPcmFrame: NSObject
                @property (assign, nonatomic) uint32_t captureTimestamp;
                @property (assign, nonatomic) size_t samplesPerChannel;
                @property (assign, nonatomic) int sampleRateHz;
                @property (assign, nonatomic) size_t channelNumbers;
                @property (strong, nonatomic) NSData* __nonnull pcmBuffer;
                @property (assign, nonatomic) BytesPerSampleType bytesPerSample;
               @end
            </codeblock>
            <codeblock props="cpp" outputclass="language-cpp">struct AudioPcmFrame {
                OPTIONAL_ENUM_SIZE_T {
                  kMaxDataSizeSamples = 3840,
                  kMaxDataSizeBytes = kMaxDataSizeSamples * sizeof(int16_t),
                };
              
                uint32_t capture_timestamp;
                size_t samples_per_channel_;
                int sample_rate_hz_;
                size_t num_channels_;
                rtc::BYTES_PER_SAMPLE bytes_per_sample;
                int16_t data_[kMaxDataSizeSamples];
              };
            </codeblock>
            <codeblock props="electron" outputclass="language-typescript" />
            <codeblock props="unity" outputclass="language-csharp">
        public struct AudioPcmFrame {
        public UInt32 capture_timestamp;
        public UInt64 samples_per_channel_;
        public int sample_rate_hz_;
        public UInt64 num_channels_;
        public BYTES_PER_SAMPLE bytes_per_sample;
        public Int16[] data_;
    };</codeblock>
            <codeblock props="rn" outputclass="language-typescript" />
            <codeblock props="flutter" outputclass="language-dart" /> </p>
        </section>
        <section id="parameters">
            <title> <text conref="../conref/conref_api_metadata.dita#conref_api_metadata/property" /> </title>
            <parml>
            <plentry>
                <pt>capture_timestamp</pt>
                <pd>The timestamp (ms) of the audio frame.</pd>
            </plentry>
            <plentry>
                <pt>samples_per_channel_</pt>
                <pd>The number of samples per channel in the audio frame.</pd>
            </plentry>
            <plentry>
                <pt>sample_rate_hz_</pt>
                <pd>Audio sample rate (Hz).</pd>
            </plentry>
            <plentry>
                <pt>num_channels_</pt>
                <pd>The number of audio channels.</pd>
            </plentry>
            <plentry>
                <pt>bytes_per_sample</pt>
                <pd>The number of bytes per sample.</pd>
            </plentry>
            <plentry>
                <pt>data_</pt>
                <pd>The max number of the bytes of the data.</pd>
            </plentry>
            </parml> </section>
    </refbody>
</reference>