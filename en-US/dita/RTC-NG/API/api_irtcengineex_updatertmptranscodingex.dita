<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE reference PUBLIC "-//OASIS//DTD DITA Reference//EN" "reference.dtd">
<reference id="api_irtcengineex_updatertmptranscodingex">
    <title> <ph keyref="updateRtmpTranscodingEx" /> </title>
    <shortdesc id="short"><ph id="shortdesc">Updates the transcoding configuration.</ph></shortdesc>
    <prolog>
        <metadata>
            <keywords>
                <indexterm keyref="updateRtmpTranscodingEx" />
            </keywords>
        </metadata>
    </prolog>
    <refbody>
        <section id="prototype">
            <p outputclass="codeblock">
            <codeblock props="android" outputclass="language-java">public abstract int updateRtmpTranscodingEx(
    LiveTranscoding transcoding, RtcConnection connection);</codeblock>
            <codeblock props="ios mac" outputclass="language-objectivec">- (int)updateRtmpTranscodingEx:(AgoraLiveTranscoding* _Nullable)transcoding
                    connection:(AgoraRtcConnection * _Nonnull)connection NS_SWIFT_NAME(updateRtmpTranscodingEx(_:connection:));</codeblock>
            <codeblock props="cpp unreal bp" outputclass="language-cpp">virtual int updateRtmpTranscodingEx(const LiveTranscoding&amp; transcoding, const RtcConnection&amp; connection) = 0;</codeblock>
            <codeblock props="electron" outputclass="language-typescript">abstract updateRtmpTranscodingEx(
    transcoding: LiveTranscoding,
    connection: RtcConnection
  ): number;</codeblock>
            <codeblock props="unity cs" outputclass="language-csharp">public abstract int UpdateRtmpTranscodingEx(LiveTranscoding transcoding, RtcConnection connection);</codeblock>
            <codeblock props="rn" outputclass="language-typescript">abstract updateRtmpTranscodingEx(
    transcoding: LiveTranscoding,
    connection: RtcConnection
  ): number;</codeblock>
            <codeblock props="flutter" outputclass="language-dart">Future&lt;void&gt; updateRtmpTranscodingEx(
      {required LiveTranscoding transcoding,
      required RtcConnection connection});</codeblock>
            <codeblock props="reserve" outputclass="language-cpp" /></p>
        </section>
        <section id="detailed_desc">
            <title>Details</title>
            <p>Agora recommends that you use the server-side Media Push function. For details, see <xref keyref="cdn-streaming-restful">Use RESTful API</xref>.</p>
            <p>After you start pushing media streams to CDN with transcoding, you can dynamically update the transcoding configuration according to the scenario. The SDK triggers the <xref keyref="onTranscodingUpdated" /> callback after the transcoding configuration is updated.</p>
        </section>
        <section id="parameters">
            <title>Parameters</title>
            <parml>
            <plentry conkeyref="startRtmpStreamWithTranscoding/transcoding">
                <pt />
                <pd />
            </plentry>
            <plentry conkeyref="joinChannelEx/connection">
                <pt />
                <pd />
            </plentry>               
            </parml> </section>
        <section id="return_values">
            <title><ph keyref="return-section-title" /></title>
            <p props="flutter">When the method call succeeds, there is no return value; when fails, the <xref keyref="AgoraRtcException" /> exception is thrown; and you need to catch the exception and handle it accordingly.</p>
            <ul>
            <li props="native unreal bp electron unity rn cs">0: Success.</li>
            <li>&lt; 0: Failure.</li>
            </ul> </section>
    </refbody>
</reference>