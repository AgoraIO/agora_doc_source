<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE reference PUBLIC "-//OASIS//DTD DITA Reference//EN" "reference.dtd">
<reference id="api_irtcengine_adjustcustomaudiopublishvolume">
    <title><ph keyref="adjustCustomAudioPublishVolume" /></title>
    <shortdesc id="short"><ph id="shortdesc">Adjusts the volume of the custom audio track played remotely.</ph></shortdesc>
    <prolog>
        <metadata>
            <keywords>
                <indexterm keyref="adjustCustomAudioPublishVolume" />
            </keywords>
        </metadata>
    </prolog>
    <refbody>
        <section id="prototype">
            <p outputclass="codeblock">
            <codeblock props="android" outputclass="language-java">public abstract int adjustCustomAudioPublishVolume(int trackId, int volume);</codeblock>
            <codeblock props="ios mac" outputclass="language-objectivec">- (int)adjustCustomAudioPublishVolume:(NSInteger)trackId volume:(NSInteger)volume NS_SWIFT_NAME(adjustCustomAudioPublishVolume(_:volume:));</codeblock>
            <codeblock props="cpp unreal" outputclass="language-cpp">virtual int adjustCustomAudioPublishVolume(track_id_t trackId, int volume) = 0;</codeblock>
         <codeblock props="bp" outputclass="language-cpp">UFUNCTION(BlueprintCallable, Category = &quot;Agora|RtcEngineProxy&quot;)
	int AdjustCustomAudioPublishVolume(int64 trackId, int volume);</codeblock>
            <codeblock props="electron" outputclass="language-typescript">abstract adjustCustomAudioPublishVolume(
    trackId: number,
    volume: number
  ): number;</codeblock>
            <codeblock props="unity cs" outputclass="language-csharp">public abstract int AdjustCustomAudioPublishVolume(uint trackId, int volume);</codeblock>
            <codeblock props="rn" outputclass="language-typescript">abstract adjustCustomAudioPublishVolume(
    trackId: number,
    volume: number
  ): number;</codeblock>
            <codeblock props="flutter" outputclass="language-dart">Future&lt;void> adjustCustomAudioPublishVolume(
      {required int trackId, required int volume});</codeblock>
            <codeblock props="reserve" outputclass="language-cpp"></codeblock></p>
        </section>
        <section id="detailed_desc">
            <title>Details</title>
            <note type="attention">Ensure you have called the <xref keyref="createCustomAudioTrack" /> method to create a custom audio track before calling this method.</note>
            <p>If you want to change the volume of the audio played remotely, you need to call this method again.</p>
        </section>
        <section id="parameters">
            <title>Parameters</title>
            <parml>
            <plentry id="trackid">
                <pt>trackId</pt>
                <pd>The audio track ID. Set this parameter to the custom audio track ID returned in <apiname keyref="createCustomAudioTrack"/>.</pd>
            </plentry>
            <plentry id="volume">
                <pt>volume</pt>
                <pd>The volume of the audio source. The value can range from 0 to 100. 0 means mute; 100 means the original volume.</pd>
            </plentry>
            </parml> </section>
        <section id="return_values">
            <title><ph keyref="return-section-title"/></title>
            <p props="flutter">When the method call succeeds, there is no return value; when fails, the <xref keyref="AgoraRtcException"/> exception is thrown. You need to catch the exception and handle it accordingly. <ph props="cn">See <xref keyref="error-code-link"/> for details and resolution suggestions.</ph></p>
            <ul>
            <li props="native unreal bp rn electron unity cs">0: Success.</li>
            <li>&lt; 0: Failure. <ph props="cn">See <xref keyref="error-code-link"/> for details and resolution suggestions.</ph></li>
            </ul>
        </section>
    </refbody>
</reference>