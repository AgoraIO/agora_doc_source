<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE reference PUBLIC "-//OASIS//DTD DITA Reference//EN" "reference.dtd">
<reference id="api_ivideodevicemanager_numberofcapabilities">
    <title><ph keyref="numberOfCapabilities" /></title>
    <shortdesc id="short"><ph id="shortdesc">Gets the number of video formats supported by the specified video capture device.</ph></shortdesc>
    <prolog>
        <metadata>
            <keywords>
                <indexterm keyref="numberOfCapabilities" />
            </keywords>
        </metadata>
    </prolog>
    <refbody>
        <section id="prototype">
            <p outputclass="codeblock">
            <codeblock props="android" outputclass="language-java" />
            <codeblock props="ios mac" outputclass="language-objectivec" />
            <codeblock props="cpp unreal" outputclass="language-cpp">virtual int numberOfCapabilities(const char* deviceIdUTF8) = 0;
</codeblock>
         <codeblock props="bp" outputclass="language-cpp">UFUNCTION(BlueprintCallable, Category = &quot;Agora|IVideoDeviceManager&quot;)
	int NumberOfCapabilities(FString deviceIdUTF8);</codeblock>
            <codeblock props="electron" outputclass="language-typescript">abstract numberOfCapabilities(deviceIdUTF8: string): number;</codeblock>
            <codeblock props="unity cs" outputclass="language-csharp">public abstract int NumberOfCapabilities(string deviceIdUTF8);</codeblock>
            <codeblock props="rn" outputclass="language-typescript">abstract numberOfCapabilities(deviceIdUTF8: string): number;</codeblock>
            <codeblock props="flutter" outputclass="language-dart">Future&lt;void&gt; numberOfCapabilities(String deviceIdUTF8);</codeblock>
            <codeblock props="reserve" outputclass="language-cpp"></codeblock></p>
        </section>
        <section id="detailed_desc">
            <title>Details</title>
            <note type="attention" props="cpp unreal bp unity flutter">This method is for Windows and macOS only.</note>
            <p>Video capture devices may support multiple video formats, and each format supports different combinations of video frame width, video frame height, and frame rate.</p>
            <p>You can call this method to get how many video formats the specified video capture device can support, and then call <xref keyref="getCapability" /> to get the specific video frame information in the specified video format.</p>
        </section>
        <section id="parameters">
            <title>Parameters</title>
            <parml>
            <plentry id="id">
                <pt>deviceIdUTF8</pt>
                <pd>The ID of the video capture device.</pd>
            </plentry>
            </parml> </section>
        <section id="return_values">
            <title><ph keyref="return-section-title"/></title>
            <p props="flutter">When the method call succeeds, there is no return value; when fails, the <xref keyref="AgoraRtcException"/> exception is thrown; and you need to catch the exception and handle it accordingly. <ph props="cn">See <xref keyref="error-code-link"/> for details and resolution suggestions.</ph></p>
            <ul>
            <li props="cpp unreal bp electron unity rn cs">> 0: Success. Returns the number of video formats supported by this device. For example: If the specified camera supports 10 different video formats, the return value is 10.</li>
            <li>â‰¤ 0: Failure. <ph props="cn">See <xref keyref="error-code-link"/> for details and resolution suggestions.</ph></li>
            </ul> </section>
    </refbody>
</reference>