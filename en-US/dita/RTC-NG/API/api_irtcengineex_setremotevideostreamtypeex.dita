<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE reference PUBLIC "-//OASIS//DTD DITA Reference//EN" "reference.dtd">
<reference id="api_irtcengineex_setremotevideostreamtypeex">
     <title> <ph keyref="setRemoteVideoStreamTypeEx"/> </title>
     <shortdesc id="short"><ph id="shortdesc">Sets the video stream type to subscribe to.</ph></shortdesc>
     <prolog>
          <metadata>
               <keywords>
                    <indexterm keyref="setRemoteVideoStreamTypeEx"/>
               </keywords>
          </metadata>
     </prolog>
     <refbody>
          <section id="prototype">
               <p outputclass="codeblock">
               <codeblock props="android" outputclass="language-java">public abstract int setRemoteVideoStreamTypeEx(int uid, int streamType, RtcConnection connection);</codeblock>
               <codeblock props="ios mac" outputclass="language-objectivec">- (int)setRemoteVideoStreamEx:(NSUInteger)uid
                         type:(AgoraVideoStreamType)streamType
                   connection:(AgoraRtcConnection * _Nonnull)connection NS_SWIFT_NAME(setRemoteVideoStreamEx(_:type:connection:));</codeblock>
               <codeblock props="cpp unreal" outputclass="language-cpp">virtual int setRemoteVideoStreamTypeEx(uid_t uid, VIDEO_STREAM_TYPE streamType, const RtcConnection&amp; connection) = 0;</codeblock>
         <codeblock props="bp" outputclass="language-cpp">UFUNCTION(BlueprintCallable, Category = &quot;Agora|RtcEngineProxy&quot;)
	int SetRemoteVideoStreamTypeEx(int64 uid, EVIDEO_STREAM_TYPE streamType, const FRtcConnection&amp; connection);</codeblock>
               <codeblock props="electron" outputclass="language-typescript">abstract setRemoteVideoStreamTypeEx(
    uid: number,
    streamType: VideoStreamType,
    connection: RtcConnection
  ): number;</codeblock>
               <codeblock props="unity cs" outputclass="language-csharp">public abstract int SetRemoteVideoStreamTypeEx(uint uid, VIDEO_STREAM_TYPE streamType, RtcConnection connection);</codeblock>
               <codeblock props="rn" outputclass="language-typescript">abstract setRemoteVideoStreamTypeEx(
    uid: number,
    streamType: VideoStreamType,
    connection: RtcConnection
  ): number;</codeblock>
               <codeblock props="flutter" outputclass="language-dart">Future&lt;void> setRemoteVideoStreamTypeEx(
      {required int uid,
      required VideoStreamType streamType,
      required RtcConnection connection});</codeblock>
               <codeblock props="reserve" outputclass="language-cpp"/></p>
          </section>
          <section id="detailed_desc">
            <title>Details</title>
               <p conkeyref="setRemoteVideoStreamType/desc1"/>
               <p conkeyref="setRemoteVideoStreamType/desc2"/>
               <note type="attention"><ul>
                    <li>If the publisher has already called <xref keyref="setDualStreamModeEx"/> and set <parmname>mode</parmname> to <apiname keyref="DISABLE_SIMULCAST_STREAM"/> (never send low-quality video stream), calling this method will not take effect, you should call <apiname keyref="setDualStreamModeEx"/> again on the sending end and adjust the settings.</li>
                    <li>Calling this method on the receiving end of the <b>audience</b> role will not take effect.</li></ul></note>
          </section>
          <section id="parameters">
               <title>Parameters</title>
               <parml>
               <plentry conkeyref="setRemoteVideoStreamType/uid">
                    <pt/>
                    <pd/>
               </plentry>
               <plentry conkeyref="setRemoteVideoStreamType/streamtype">
                    <pt/>
                    <pd/>
               </plentry> 
               <plentry conkeyref="joinChannelEx/connection">
                    <pt/>
                    <pd/>
               </plentry>                    
               </parml> </section>
          <section id="return_values">
               <title><ph keyref="return-section-title"/></title>
            <p props="flutter">When the method call succeeds, there is no return value; when fails, the <xref keyref="AgoraRtcException"/> exception is thrown. You need to catch the exception and handle it accordingly. <ph props="cn">See <xref keyref="error-code-link"/> for details and resolution suggestions.</ph></p>
               <ul props="native unreal bp unity electron rn cs">
               <li>0: Success.</li>
               <li>&lt; 0: Failure. <ph props="cn">See <xref keyref="error-code-link"/> for details and resolution suggestions.</ph></li>
               </ul> </section>
     </refbody>
</reference>
