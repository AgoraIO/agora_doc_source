<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE reference PUBLIC "-//OASIS//DTD DITA Reference//EN" "reference.dtd">
<reference id="callback_iaudioframeobserverbase_onplaybackaudioframe">
    <title><ph keyref="onPlaybackAudioFrame"/></title>
    <shortdesc id="short"><ph id="shortdesc">Gets the raw audio frame for playback.</ph></shortdesc>
    <prolog>
        <metadata>
            <keywords>
                <indexterm keyref="onPlaybackAudioFrame"/>
            </keywords>
        </metadata>
    </prolog>
    <refbody>
        <section id="prototype">
            <p outputclass="codeblock">
            <codeblock props="android" outputclass="language-java">public abstract boolean onPlaybackAudioFrame(int type, int samplesPerChannel, int bytesPerSample,
      int channels, int samplesPerSec, ByteBuffer buffer, long renderTimeMs, int avsync_type);
</codeblock>
            <codeblock props="ios mac" outputclass="language-objectivec">- (BOOL)onPlaybackAudioFrame:(AgoraAudioFrame* _Nonnull)frame;</codeblock>
            <codeblock props="cpp unreal" outputclass="language-cpp">virtual bool onPlaybackAudioFrame(const char* channelId, AudioFrame&amp; audioFrame) = 0;</codeblock>
            <codeblock props="bp" outputclass="language-cpp">DECLARE_DYNAMIC_MULTICAST_DELEGATE_TwoParams(FOnPlaybackAudioFrame, const FString, channelId, const FAudioFrame&amp;, audioFrame);</codeblock>
            <codeblock props="electron" outputclass="language-typescript">  onPlaybackAudioFrame?(channelId: string, audioFrame: AudioFrame): boolean;</codeblock>
            <codeblock props="unity cs" outputclass="language-csharp">public virtual bool OnPlaybackAudioFrame(string channelId, AudioFrame audio_frame)
        {
            return true;
        }</codeblock>
            <codeblock props="rn" outputclass="language-typescript">  onPlaybackAudioFrame?(channelId: string, audioFrame: AudioFrame): boolean;</codeblock>
            <codeblock props="flutter" outputclass="language-dart">final void Function(String channelId, AudioFrame audioFrame)?
      onPlaybackAudioFrame;</codeblock>
            <codeblock props="reserve" outputclass="language-cpp"/></p>
        </section>
        <section id="detailed_desc">
            <p props="native unreal bp cs">To ensure that the data format of audio frame for playback is as expected, Agora recommends that you choose one of the following two methods to set the audio data format:<ul>
            <li>Method 1: After calling <xref keyref="setPlaybackAudioFrameParameters"/> to set the audio data format and <xref keyref="registerAudioFrameObserver"/> to register the audio frame observer object, the SDK calculates the sampling interval according to the parameters set in the methods, and triggers the <apiname keyref="onPlaybackAudioFrame"/> callback according to the sampling interval.</li>
            <li>Method 2: After calling <xref keyref="registerAudioFrameObserver"/> to register the audio frame observer object, set the audio data format in the return value of the <xref keyref="getObservedAudioFramePosition"/> callback. The SDK then calculates the sampling interval according to the return value of the <xref keyref="getPlaybackAudioParams"/> callback, and triggers the <apiname keyref="onPlaybackAudioFrame"/> callback according to the sampling interval.</li>
            </ul> </p>
            <p props="flutter rn electron">To ensure that the data format of audio frame for playback is as expected, Agora recommends that you set the audio data format as follows: After calling <xref keyref="setPlaybackAudioFrameParameters"/> to set the audio data format and <xref keyref="registerAudioFrameObserver"/> to register the audio frame observer object, the SDK calculates the sampling interval according to the parameters set in the methods, and triggers the <apiname keyref="onPlaybackAudioFrame"/> callback according to the sampling interval.</p>
            <note type="note" id="attention" props="native unreal bp flutter cs">
            <ul>
            <li props="native unreal bp cs">The priority of method 1 is higher than that of method 2. If method 1 is used to set the audio data format, the setting of method 2 is invalid.</li>
            <li props="flutter">Due to the limitations of Flutter, this callback does not support sending processed audio data back to the SDK.</li>
            </ul></note>
        <p props="unity">To ensure that the data format of audio frame for playback is as expected, Agora recommends that you set the audio data format as follows: After calling <xref keyref="setPlaybackAudioFrameParameters"/> to set the audio data format and <xref keyref="registerAudioFrameObserver"/> to register the audio frame observer object, the SDK calculates the sampling interval according to the parameters set in the methods, and triggers the <apiname keyref="onPlaybackAudioFrame"/> callback according to the sampling interval.</p></section>
        <section id="parameters" conkeyref="onMixedAudioFrame/parameters"/>
        <section id="return_values" conkeyref="onMixedAudioFrame/return_values" props="native unreal bp unity electron rn cs"/>
    </refbody>
</reference>
