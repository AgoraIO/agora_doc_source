<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE reference PUBLIC "-//OASIS//DTD DITA Reference//EN" "reference.dtd">
<reference id="callback_imediaplayersourceobserver_onplayerinfoupdated">
    <title><ph keyref="onPlayerInfoUpdated" /></title>
    <shortdesc id="short"><ph id="shortdesc">Occurs when information related to the media player changes.</ph></shortdesc>
    <prolog>
        <metadata>
            <keywords>
                <indexterm keyref="onPlayerInfoUpdated" />
            </keywords>
        </metadata>
    </prolog>
    <refbody>
        <section id="prototype">
            <p outputclass="codeblock">
            <codeblock props="android" outputclass="language-java">void onPlayerInfoUpdated(PlayerUpdatedInfo info);
</codeblock>
            <codeblock props="ios mac" outputclass="language-objectivec">- (void)AgoraRtcMediaPlayer:(id&lt;AgoraRtcMediaPlayerProtocol&gt; _Nonnull)playerKit infoUpdated:(AgoraMediaPlayerUpdatedInfo *_Nonnull)info;
</codeblock>
            <codeblock props="cpp unreal" outputclass="language-cpp">virtual void onPlayerInfoUpdated(const media::base::PlayerUpdatedInfo&amp; info) = 0;
</codeblock>
         <codeblock props="bp" outputclass="language-cpp">DECLARE_DYNAMIC_MULTICAST_DELEGATE_OneParam(FOnPlayerInfoUpdated, const FPlayerUpdatedInfo&amp;, info);</codeblock>
            <codeblock props="electron" outputclass="language-typescript">  onPlayerInfoUpdated?(info: PlayerUpdatedInfo): void;</codeblock>
            <codeblock props="unity cs" outputclass="language-csharp">public virtual void OnPlayerInfoUpdated(PlayerUpdatedInfo info) { }</codeblock>
            <codeblock props="rn" outputclass="language-typescript">  onPlayerInfoUpdated?(info: PlayerUpdatedInfo): void;</codeblock>
            <codeblock props="flutter" outputclass="language-dart">final void Function(PlayerUpdatedInfo info)? onPlayerInfoUpdated;</codeblock>
            <codeblock props="reserve" outputclass="language-cpp"></codeblock></p>
        </section>
        <section id="detailed_desc">
            <p>When the information about the media player changes, the SDK triggers this callback. You can use this callback for troubleshooting.</p>
        </section>
        <section id="parameters">
            <title>Parameters</title>
            <parml>
            <plentry conkeyref="onPlayerEvent/playerkit" props="ios mac">
                <pt />
                <pd />
            </plentry>
            <plentry>
                <pt>info</pt>
                <pd>Information related to the media player. See <xref keyref="PlayerUpdatedInfo" />.</pd>
            </plentry>
            </parml> </section>
    </refbody>
</reference>