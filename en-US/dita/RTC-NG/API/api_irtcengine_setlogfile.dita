<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE reference PUBLIC "-//OASIS//DTD DITA Reference//EN" "reference.dtd">
<reference id="api_irtcengine_setlogfile">
    <title><ph keyref="setLogFile" /></title>
    <shortdesc id="short"><ph id="shortdesc">Sets the log file.</ph></shortdesc>
    <prolog>
        <metadata>
            <keywords>
                <indexterm keyref="setLogFile" />
            </keywords>
        </metadata>
    </prolog>
    <refbody>
        <section id="prototype">
            <p outputclass="codeblock">
            <codeblock props="android" outputclass="language-java">public abstract int setLogFile(String filePath);</codeblock>
            <codeblock props="hmos" outputclass="language-arkts">public abstract setLogFile(filePath: string): number;</codeblock>
            <codeblock props="ios mac" outputclass="language-objectivec">- (int)setLogFile:(NSString * _Nonnull)filePath;</codeblock>
            <codeblock props="cpp unreal" outputclass="language-cpp">virtual int setLogFile(const char* filePath) = 0;</codeblock>
         <codeblock props="bp" outputclass="language-cpp">UFUNCTION(BlueprintCallable, Category = &quot;Agora|RtcEngineProxy&quot;)
	int SetLogFile(FString filePath);</codeblock>
            <codeblock props="electron" outputclass="language-typescript">abstract setLogFile(filePath: string): number;</codeblock>
            <codeblock props="unity cs" outputclass="language-csharp">public abstract int SetLogFile(string filePath);</codeblock>
            <codeblock props="rn" outputclass="language-typescript">abstract setLogFile(filePath: string): number;</codeblock>
            <codeblock props="flutter" outputclass="language-dart">Future&lt;void&gt; setLogFile(String filePath);</codeblock>
            <codeblock props="reserve" outputclass="language-cpp"></codeblock></p>
        </section>
        <section id="detailed_desc" deliveryTarget="details" otherprops="no-title">
            <dl outputclass="deprecated">
            <dlentry>
                <dt>Deprecated:</dt>
                <dd>该方法已废弃，请在调用 <xref keyref="initialize"/> 时通过 <parmname props="cpp unreal bp electron unity rn flutter cs">context</parmname><parmname props="android ios mac">config</parmname> 参数设置日志文件路径。</dd>
            </dlentry>
            </dl>
            <p>Specifies an SDK output log file. The log file records all log data for the SDK’s operation.</p>
        </section>
            <section id="timing" deliveryTarget="details">
                <title>Call timing</title>
                <p>该方法需要在 <apiname keyref="initialize" /> 后立即调用，否则输出日志可能不完整。</p>
            </section>        
            <section id="restriction" deliveryTarget="details">
                <title>Restrictions</title>
                <p>Ensure that the directory for the log file exists and is writable.</p>
            </section>
            <section id="parameters" deliveryTarget="details">
                <title>Parameters</title>
            <parml>
            <plentry>
                <pt>filePath</pt>
                <pd>The complete path of the log files. These log files are encoded in UTF-8.</pd>
            </plentry>
            </parml> </section>
        <section id="return_values">
            <title><ph keyref="return-section-title"/></title>
            <p props="flutter">When the method call succeeds, there is no return value; when fails, the <xref keyref="AgoraRtcException"/> exception is thrown. You need to catch the exception and handle it accordingly. <ph props="cn">See <xref keyref="error-code-link"/> for details and resolution suggestions.</ph></p>
            <ul props="native unreal bp electron unity rn cs">
            <li>0: Success.</li>
            <li>&lt; 0: Failure. <ph props="cn">See <xref keyref="error-code-link"/> for details and resolution suggestions.</ph></li>
            </ul> </section>
    </refbody>
</reference>