<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE reference PUBLIC "-//OASIS//DTD DITA Reference//EN" "reference.dtd">
<reference id="api_irtcengine_setadvancedaudiooptions">
    <title><ph keyref="setAdvancedAudioOptions" /></title>
    <shortdesc id="short"><ph id="shortdesc">Sets audio advanced options.</ph></shortdesc>
    <prolog>
        <metadata>
            <keywords>
                <indexterm keyref="setAdvancedAudioOptions" />
            </keywords>
        </metadata>
    </prolog>
    <refbody>
        <section id="prototype">
            <p outputclass="codeblock">
            <codeblock props="android" outputclass="language-java">public abstract int SetAdvancedAudioOptions(AdvancedAudioOptions options);</codeblock>
            <codeblock props="ios mac" outputclass="language-objectivec">- (int)setAdvancedAudioOptions:(AgoraAdvancedAudioOptions * _Nonnull)options;</codeblock>
            <codeblock props="cpp unreal" outputclass="language-cpp">virtual int setAdvancedAudioOptions(media::base::AdvancedAudioOptions &amp;options) = 0;</codeblock>
         <codeblock props="bp" outputclass="language-cpp">UFUNCTION(BlueprintCallable, Category = &quot;Agora|RtcEngineProxy&quot;)
	int SetAdvancedAudioOptions(const FAdvancedAudioOptions&amp; options);</codeblock>
            <codeblock props="electron" outputclass="language-typescript">abstract setAdvancedAudioOptions(options: AdvancedAudioOptions): number;</codeblock>
            <codeblock props="unity cs" outputclass="language-csharp">public abstract int SetAdvancedAudioOptions(AdvancedAudioOptions options);</codeblock>
            <codeblock props="rn" outputclass="language-typescript">abstract setAdvancedAudioOptions(options: AdvancedAudioOptions): number;</codeblock>
            <codeblock props="flutter" outputclass="language-dart">Future&lt;void> setAdvancedAudioOptions(AdvancedAudioOptions options);</codeblock>
            <codeblock props="reserve" outputclass="language-cpp"></codeblock></p>
        </section>
        <section id="detailed_desc">
            <title>Details</title>
            <p>If you have advanced audio processing requirements, such as capturing and sending stereo audio, you can call this method to set advanced audio options.</p>
            <note type="attention">Call this method after calling <xref keyref="joinChannel2" />, <xref keyref="enableAudio" /> and <xref keyref="enableLocalAudio" />.</note> </section>
        <section id="parameters">
            <title>Parameters</title>
            <parml>
            <plentry>
                <pt>options</pt>
                <pd>The advanced options for audio. See <xref keyref="AdvancedAudioOptions" />.</pd>
            </plentry>
            </parml> </section>
        <section id="return_values">
            <title><ph keyref="return-section-title"/></title>
            <p props="flutter">When the method call succeeds, there is no return value; when fails, the <xref keyref="AgoraRtcException"/> exception is thrown; and you need to catch the exception and handle it accordingly. <ph props="cn">See <xref keyref="error-code-link"/> for details and resolution suggestions.</ph></p>
            <ul props="native unreal bp unity rn electron cs">
            <li>0: Success.</li>
            <li>&lt; 0: Failure. <ph props="cn">See <xref keyref="error-code-link"/> for details and resolution suggestions.</ph></li>
            </ul></section>
    </refbody>
</reference>