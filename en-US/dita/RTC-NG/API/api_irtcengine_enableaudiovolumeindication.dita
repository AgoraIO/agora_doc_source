<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE reference PUBLIC "-//OASIS//DTD DITA Reference//EN" "reference.dtd">
<reference id="api_irtcengine_enableaudiovolumeindication">
    <title><ph keyref="enableAudioVolumeIndication" /></title>
    <shortdesc id="short"><ph id="shortdesc">Enables the reporting of users' volume indication.</ph></shortdesc>
    <prolog>
        <metadata>
            <keywords>
                <indexterm keyref="enableAudioVolumeIndication" />
            </keywords>
        </metadata>
    </prolog>
    <refbody>
        <section id="prototype">
            <p outputclass="codeblock">
            <codeblock props="android" outputclass="language-java">public abstract int enableAudioVolumeIndication(int interval, int smooth, boolean reportVad);</codeblock>
            <codeblock props="ios mac" outputclass="language-objectivec">- (int)enableAudioVolumeIndication:(NSInteger)interval
                            smooth:(NSInteger)smooth
                            reportVad:(BOOL)reportVad;</codeblock>
            <codeblock props="cpp" outputclass="language-cpp">virtual int enableAudioVolumeIndication(int interval, int smooth, bool reportVad) = 0;</codeblock>
            <codeblock props="electron" outputclass="language-typescript">abstract enableAudioVolumeIndication(
    interval: number,
    smooth: number,
    reportVad: boolean
  ): number;</codeblock>
            <codeblock props="unity" outputclass="language-csharp">public abstract int EnableAudioVolumeIndication(int interval, int smooth, bool reportVad);</codeblock>
            <codeblock props="rn" outputclass="language-typescript">abstract enableAudioVolumeIndication(
    interval: number,
    smooth: number,
    reportVad: boolean
  ): number;</codeblock>
            <codeblock props="flutter" outputclass="language-dart">Future&lt;void&gt; enableAudioVolumeIndication(
    {required int interval, required int smooth, required bool reportVad});</codeblock>
            <codeblock props="reserve" outputclass="language-cpp" /></p>
        </section>
        <section id="detailed_desc">
            <title>Details</title>
            <p>This method enables the SDK to regularly report the volume information to the app of the local user who sends a stream and remote users (three users at most) whose instantaneous volumes are the highest. Once you call this method and users send streams in the channel, the SDK triggers the <xref keyref="onAudioVolumeIndication" /> callback at the time interval set in this method.</p>
            <note type="attention">You can call this method either before or after joining a channel.</note> </section>
        <section id="parameters">
            <title>Parameters</title>
            <parml>
            <plentry id="interval">
                <pt>interval</pt>
                <pd>Sets the time interval between two consecutive volume indications:<ul>
                    <li>â‰¤ 0: Disables the volume indication.</li>
                    <li>&gt; 0: Time interval (ms) between two consecutive volume indications. The lowest value is 50.</li>
                    </ul></pd>
            </plentry>
            <plentry id="smooth">
                <pt>smooth</pt>
                <pd>The smoothing factor that sets the sensitivity of the audio volume indicator. The value ranges between 0 and 10. The recommended value is 3. The greater the value, the more sensitive the indicator.</pd>
            </plentry>
            <plentry id="vad">
                <pt>reportVad</pt>
                <pd>
                    <ul>
                    <li><codeph><ph keyref="true" /></codeph>: Enables the voice activity detection of the local user. Once it is enabled, the <parmname>vad</parmname> parameter of the <apiname keyref="onAudioVolumeIndication" /> callback reports the voice activity status of the local user.</li>
                    <li><codeph><ph keyref="false" /></codeph>: (Default) Disables the voice activity detection of the local user. Once it is disabled, the <parmname>vad</parmname> parameter of the <apiname keyref="onAudioVolumeIndication" /> callback does not report the voice activity status of the local user, except for the scenario where the engine automatically detects the voice activity of the local user.</li>
                    </ul> </pd>
            </plentry>
            </parml> </section>
        <section id="return_values">
            <title><ph keyref="return-section-title" /></title>
            <p props="flutter">When the method call succeeds, there is no return value; when fails, the <xref keyref="AgoraRtcException" /> exception is thrown; you need to catch the exception and handle it accordingly.</p>
            <ul>
            <li props="native electron unity rn">0: Success.</li>
            <li>&lt; 0: Failure.</li>
            </ul> </section>
    </refbody>
</reference>