<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE reference PUBLIC "-//OASIS//DTD DITA Reference//EN" "reference.dtd">
<reference id="api_irtcengine_setplaybackaudioframebeforemixingparameters">
    <title><ph keyref="setPlaybackAudioFrameBeforeMixingParameters" /></title>
    <shortdesc id="short"><ph id="shortdesc">Sets the audio data format reported by <xref keyref="onPlaybackAudioFrameBeforeMixing" />.</ph></shortdesc>
    <prolog>
        <metadata>
            <keywords>
                <indexterm keyref="setPlaybackAudioFrameBeforeMixingParameters" />
            </keywords>
        </metadata>
    </prolog>
    <refbody>
        <section id="prototype">
            <p outputclass="codeblock">
            <codeblock props="android" outputclass="language-java">public abstract int setPlaybackAudioFrameBeforeMixingParameters(int sampleRate, int channel);</codeblock>
            <codeblock props="ios mac" outputclass="language-objectivec">- (int)setPlaybackAudioFrameBeforeMixingParametersWithSampleRate:(NSInteger)sampleRate
                                                         channel:(NSInteger)channel;</codeblock>
            <codeblock props="cpp unreal" outputclass="language-cpp">virtual int setPlaybackAudioFrameBeforeMixingParameters(int sampleRate, int channel) = 0;</codeblock>
         <codeblock props="bp" outputclass="language-cpp">UFUNCTION(BlueprintCallable, Category = &quot;Agora|RtcEngineProxy&quot;)
	int SetPlaybackAudioFrameBeforeMixingParameters(int sampleRate, int channel);</codeblock>
            <codeblock props="electron" outputclass="language-typescript">abstract setPlaybackAudioFrameBeforeMixingParameters(
    sampleRate: number,
    channel: number
  ): number;</codeblock>
            <codeblock props="unity cs" outputclass="language-csharp">public abstract int SetPlaybackAudioFrameBeforeMixingParameters(int sampleRate, int channel);</codeblock>
            <codeblock props="rn" outputclass="language-typescript">abstract setPlaybackAudioFrameBeforeMixingParameters(
    sampleRate: number,
    channel: number
  ): number;</codeblock>
            <codeblock props="flutter" outputclass="language-dart">Future&lt;void> setPlaybackAudioFrameBeforeMixingParameters(
      {required int sampleRate, required int channel});</codeblock>
            <codeblock props="reserve" outputclass="language-cpp"></codeblock></p>
        </section>
        <section id="parameters">
            <title>Parameters</title>
            <parml>
            <plentry>
                <pt>sampleRate</pt>
                <pd>
                    <p>The sample rate (Hz) of the audio data, which can be set as <codeph>8000</codeph>, <codeph>16000</codeph>, <codeph>32000</codeph>, <codeph>44100</codeph>, or <codeph>48000</codeph>.</p>
                </pd>
            </plentry>
            </parml>
            <parml id="parml_imv_m3g_3qb">
            <plentry>
                <pt>channel</pt>
                <pd>
                    <p>The number of channels of the audio data, which can be set as <codeph>1</codeph>(Mono) or <codeph>2</codeph>(Stereo).</p>
                </pd>
            </plentry>
            </parml> </section>
        <section id="return_values">
            <title><ph keyref="return-section-title"/></title>
            <p props="flutter">When the method call succeeds, there is no return value; when fails, the <xref keyref="AgoraRtcException"/> exception is thrown; and you need to catch the exception and handle it accordingly. <ph props="cn">See <xref keyref="error-code-link"/> for details and resolution suggestions.</ph></p>
            <ul props="native unreal bp electron rn unity cs">
            <li>0: Success.</li>
            <li>&lt; 0: Failure. <ph props="cn">See <xref keyref="error-code-link"/> for details and resolution suggestions.</ph></li>
            </ul> </section>
    </refbody>
</reference>