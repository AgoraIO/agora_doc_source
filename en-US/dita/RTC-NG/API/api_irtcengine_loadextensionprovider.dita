<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE reference PUBLIC "-//OASIS//DTD DITA Reference//EN" "reference.dtd">
<reference id="api_irtcengine_loadextensionprovider">
    <title><ph keyref="loadExtensionProvider" /></title>
    <shortdesc id="short"><ph id="shortdesc">Adds an extension to the SDK.</ph></shortdesc>
    <prolog>
        <metadata>
            <keywords>
                <indexterm keyref="loadExtensionProvider" />
            </keywords>
        </metadata>
    </prolog>
    <refbody>
        <section id="prototype">
            <p outputclass="codeblock">
            <codeblock props="android" outputclass="language-java" />
            <codeblock props="ios mac" outputclass="language-objectivec" />
            <codeblock props="cpp" outputclass="language-cpp">virtual int loadExtensionProvider(const char* path, bool unload_after_use = false) = 0;</codeblock>
            <codeblock props="electron" outputclass="language-typescript">abstract loadExtensionProvider(
    path: string,
    unloadAfterUse?: boolean
  ): number;</codeblock>
            <codeblock props="unity" outputclass="language-csharp">public abstract int LoadExtensionProvider(string path, bool unload_after_use = false);</codeblock>
            <codeblock props="rn" outputclass="language-typescript">abstract loadExtensionProvider(
    path: string,
    unloadAfterUse?: boolean
  ): number;</codeblock>
            <codeblock props="flutter" outputclass="language-dart">Future&lt;void&gt; loadExtensionProvider(
      {required String path, bool unloadAfterUse = false});</codeblock>
            <codeblock props="reserve" outputclass="language-cpp" /></p>
        </section>
        <section id="detailed_desc">
            <title>Details</title>
            <p>
            <note type="attention" props="unity flutter">(For Windows and Android only)</note> </p>
        </section>
        <section id="parameters">
            <title>Parameters</title>
            <parml>
            <plentry>
                <pt>path</pt>
                <pd>The extension library path and name. For example: <codeph>/library/libagora_segmentation_extension.dll</codeph>.</pd>
            </plentry>
            <plentry>
                <pt props="cpp unity">unload_after_use</pt>
                <pt props="electron rn flutter">unloadAfterUse</pt>
                <pd>Whether to uninstall the current extension when you no longer using it:<ul>
                        <li><codeph><ph keyref="true" /></codeph>: Uninstall the extension when the <xref keyref="IRtcEngine" /> is destroyed.</li>
                        <li><codeph><ph keyref="false" /></codeph>: (Rcommended) Do not uninstall the extension until the process terminates.</li>    
                    </ul>
                </pd>
            </plentry>
            </parml> </section>
        <section id="return_values">
            <title><ph keyref="return-section-title" /></title>
            <p props="flutter">When the method call succeeds, there is no return value; when fails, the <xref keyref="AgoraRtcException" /> exception is thrown; you need to catch the exception and handle it accordingly.</p>
            <ul>
            <li props="native electron unity rn">0: Success.</li>
            <li>&lt; 0: Failure.</li>
            </ul> </section>
    </refbody>
</reference>