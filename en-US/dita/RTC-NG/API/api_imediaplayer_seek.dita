<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE reference PUBLIC "-//OASIS//DTD DITA Reference//EN" "reference.dtd">
<reference id="api_imediaplayer_seek">
    <title><ph keyref="seek" /></title>
    <shortdesc id="short"><ph id="shortdesc">Seeks to a new playback position.</ph></shortdesc>
    <prolog>
        <metadata>
            <keywords>
                <indexterm keyref="seek" />
            </keywords>
        </metadata>
    </prolog>
    <refbody>
        <section id="prototype">
            <p outputclass="codeblock">
            <codeblock props="android" outputclass="language-java">int seek(long newPos);
</codeblock>
            <codeblock props="hmos" outputclass="language-arkts"></codeblock>
            <codeblock props="ios mac" outputclass="language-objectivec">- (void)seekToPosition:(NSInteger)position;
</codeblock>
            <codeblock props="cpp unreal" outputclass="language-cpp">virtual int seek(int64_t newPos) = 0;</codeblock>
         <codeblock props="bp" outputclass="language-cpp">UFUNCTION(BlueprintCallable, Category = &quot;Agora|IMediaPlayer&quot;)
	int Seek(int64 newPos);</codeblock>
            <codeblock props="electron" outputclass="language-typescript">abstract seek(newPos: number): number;</codeblock>
            <codeblock props="unity cs" outputclass="language-csharp">public abstract int Seek(Int64 newPos);</codeblock>
            <codeblock props="rn" outputclass="language-typescript">abstract seek(newPos: number): number;</codeblock>
            <codeblock props="flutter" outputclass="language-dart">Future&lt;void&gt; seek(int newPos);</codeblock>
            <codeblock props="reserve" outputclass="language-cpp"></codeblock></p>
        </section>
        <section id="detailed_desc">
            <title>Details</title>
            <p>After successfully calling this method, you will receive the <xref keyref="onPlayerEvent" /> callback, reporting the result of the seek operation to the new playback position.</p>
            <ul>
                <li>如果你在播放已经完成后（收到 <xref keyref="onPlayerSourceStateChanged"/> 回调报告播放状态为 <ph keyref="PLAYER_STATE_PLAYBACK_COMPLETED"/> 或 <ph keyref="PLAYER_STATE_PLAYBACK_ALL_LOOPS_COMPLETED"/>）再调用 <apiname keyref="seek"/>，方法调用成功后，SDK 会从你指定的位置开始自动播放，此时你会收到 <xref keyref="onPlayerSourceStateChanged"/> 回调报告播放状态为 <ph keyref="PLAYER_STATE_PLAYING"/>。</li>
                <li>如果你在播放暂停的情况下调用 <apiname keyref="seek"/>，调用成功后 SDK 会定位到你指定位置，如需播放，请调用 <xref keyref="resume"/> 或 <xref keyref="play"/>。</li>
            </ul>
        </section>
        <section id="parameters">
            <title>Parameters</title>
            <parml>
            <plentry>
                <pt props="android cpp unreal bp unity rn electron flutter cs">newPos</pt>
                <pt props="ios mac">position</pt>
                <pd>The new playback position (ms).</pd>
            </plentry>
            </parml> </section>
        <section id="return_values">
            <title><ph keyref="return-section-title"/></title>
            <p props="flutter">When the method call succeeds, there is no return value; when fails, the <xref keyref="AgoraRtcException"/> exception is thrown. You need to catch the exception and handle it accordingly. <ph props="cn">See <xref keyref="error-code-link"/> for details and resolution suggestions.</ph></p>
            <ul props="native unreal bp electron unity rn cs">
            <li>0: Success.</li>
            <li>&lt; 0: Failure. <ph props="cn">See <xref keyref="error-code-link"/> for details and resolution suggestions.</ph></li>
            </ul> </section>
    </refbody>
</reference>