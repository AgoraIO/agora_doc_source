<?xml version='1.0' encoding='UTF-8'?>
<!DOCTYPE reference PUBLIC "-//OASIS//DTD DITA Reference//EN" "reference.dtd">
<reference id="api_irtcengineex_playeffectex">
    <title><ph keyref="playEffectEx"/></title>
    <shortdesc id="short"><ph id="shortdesc">Plays the specified audio effect to the specified channel.</ph></shortdesc>
    <prolog>
        <metadata>
            <keywords>
                <indexterm keyref="playEffectEx"/>
            </keywords>
        </metadata>
    </prolog>
    <refbody>
        <section id="prototype">
            <p outputclass="codeblock">
            <codeblock props="android" outputclass="language-java">public abstract int playEffectEx(RtcConnection connection, int soundId, String filePath, int loopCount, double pitch, double pan, double gain, boolean publish);</codeblock>
            <codeblock props="hmos" outputclass="language-arkts"/>
            <codeblock props="ios mac" outputclass="language-objectivec">- (int)playEffectEx:(AgoraRtcConnection* _Nonnull)connection soundId:(int)soundId filePath:(NSString* _Nonnull)filePath loopCount:(NSInteger)loopCount pitch:(double)pitch pan:(double)pan gain:(NSInteger)gain startPos:(int)startPos NS_SWIFT_NAME(playEffectEx(_:soundId:filePath:loopCount:pitch:pan:gain:startPos:));</codeblock>
            <codeblock props="cpp unreal" outputclass="language-cpp">virtual int playEffectEx(const RtcConnection&amp;amp; connection, int soundId, const char* filePath, int loopCount, double pitch, double pan, int gain, bool publish = false, int startPos = 0) = 0;</codeblock>
            <codeblock props="bp" outputclass="language-cpp"/>
            <codeblock props="electron" outputclass="language-typescript"/>
            <codeblock props="unity cs" outputclass="language-csharp"/>
            <codeblock props="rn" outputclass="language-typescript"/>
            <codeblock props="flutter" outputclass="language-dart"/> </p>
        </section>
        <section id="detailed_desc" deliveryTarget="details" otherprops="no-title">
            <dl outputclass="since">
            <dlentry props="native">
                <dt>Since:</dt>
                <dd props="native">Available since v4.6.0.</dd>
                </dlentry>
            </dl>
            <p>This method allows you to set whether to publish the audio effect in the channel. To play multiple audio effects at the same time, call this method multiple times with different <codeph>soundId</codeph> and <codeph>filePath</codeph>. </p>

            <note type="attention"><ul>
                        <li>Agora recommends playing no more than three audio effects simultaneously.</li>
                        <li>The sound ID and file path in this method must be the same as those used in the <xref keyref="preloadEffect"/> method.</li>
                        </ul>
                    </note>
            </section>
        <section id="scenario" deliveryTarget="details">
            <title>Scenario</title>
            <p>This method applies to multi-channel scenarios.</p>
        </section>
        <section id="restriction" deliveryTarget="details">
            <title>Restrictions</title>
            <p>None.</p>
        </section>
        <section id="parameters" deliveryTarget="details">
            <title>Parameters</title>
            <parml>
            <plentry props="native">
                <pt props="native">connection</pt>
                <pd props="android">Channel connection information. See <xref keyref="RtcConnection"/>.</pd>
                <pd props="apple"><xref keyref="RtcConnection"/> object. See <xref keyref="RtcConnection"/>.</pd>
                <pd props="cpp"><xref keyref="RtcConnection"/> object. See <xref keyref="RtcConnection"/>.</pd>
            </plentry>
            <plentry props="native">
                <pt props="native">soundId</pt>
                <pd props="android cpp">The ID of the audio effect.</pd>
                <pd props="apple">Specify the ID of the audio effect. Each effect has a unique ID. If you preload the audio effect into memory using <xref keyref="preloadEffect"/>, make sure this value matches the one in <xref keyref="preloadEffect"/>.</pd>
            </plentry>
            <plentry props="native">
                <pt props="native">filePath</pt>
                <pd props="android cpp">The absolute path of the local audio effect file or the URL of the online file. Supported formats: mp3, mp4, m4a, aac, 3gp, mkv, and wav.</pd>
                <pd props="apple">The absolute path (including file extension) of the local audio effect file or the URL of the online file, e.g., <ph keyref="filePath-example"/>. Supported formats: mp3, mp4, m4a, aac, 3gp, mkv, and wav.</pd>
            </plentry>
            <plentry props="native">
                <pt props="native">loopCount</pt>
                <pd props="android cpp">The number of times to loop the audio effect:
                    <ul>
                        <li><codeph>-1</codeph>: Loop indefinitely until <xref keyref="stopEffect"/> or <xref keyref="stopAllEffects"/> is called.</li>
                        <li><codeph>0</codeph>: Play once.</li>
                        <li><codeph>1</codeph>: Play twice.</li>
                        </ul>
                    </pd>
                <pd props="apple">Set the number of times to loop the audio effect:
                    <ul>
                        <li>0: Play once.</li>
                        <li>1: Play twice.</li>
                        <li>-1: Loop indefinitely until you call <xref keyref="stopEffect"/> or <xref keyref="stopAllEffects"/>.</li>
                        </ul>
                    </pd>
            </plentry>
            <plentry props="native">
                <pt props="native">pitch</pt>
                <pd props="android cpp">The pitch of the audio effect. Range: 0.5 to 2.0. Default is 1.0 (original pitch). Lower values mean lower pitch.</pd>
                <pd props="apple">Set the pitch of the audio effect. Range: 0.5 to 2. Default is 1 (no change). Lower values mean lower pitch.</pd>
            </plentry>
            <plentry props="native">
                <pt props="native">pan</pt>
                <pd props="android cpp">The spatial position of the audio effect. Range: -1.0 to 1.0:
                    <ul>
                        <li><codeph>-1.0</codeph>: Left.</li>
                        <li><codeph>0.0</codeph>: Center.</li>
                        <li><codeph>1.0</codeph>: Right.</li>
                        </ul>
                    </pd>
                <pd props="apple">Set the spatial position of the audio effect. Range: -1.0 to 1.0.
                    <ul>
                        <li>0.0: Center.</li>
                        <li>1.0: Right.</li>
                        <li>-1.0: Left.</li>
                        </ul>
                    </pd>
            </plentry>
            <plentry props="native">
                <pt props="native">gain</pt>
                <pd props="android">The volume of the audio effect. Range: 0.0 to 100.0. Default is 100 (original volume). Lower values mean lower volume.</pd>
                <pd props="apple">Set the volume of the audio effect. Range: 0 to 100 (default). Lower values mean lower volume.</pd>
                <pd props="cpp">The volume of the audio effect. Range: 0 to 100. Default is 100 (original volume). Lower values mean lower volume.</pd>
            </plentry>
            <plentry props="native">
                <pt props="android">publish</pt>
                <pt props="apple cpp">publish</pt>
                <pd props="android">Whether to publish the audio effect in the channel:
                    <ul>
                        <li><codeph><ph keyref="true"/></codeph>: Publish the effect so remote users can hear it.</li>
                        <li><codeph><ph keyref="false"/></codeph>: Do not publish the effect.</li>
                        </ul>
                    </pd>
                <pd props="apple">Set whether to publish the specified audio effect in the channel:
                    <ul>
                        <li><codeph><ph keyref="true"/></codeph>: Publish the effect so remote users can hear it.</li>
                        <li><codeph><ph keyref="false"/></codeph>: Do not publish the effect.</li>
                        </ul>
                    </pd>
                <pd props="cpp">Whether to publish the audio effect in the channel:
                    <ul>
                        <li><codeph><ph keyref="true"/></codeph>: Publish the effect so remote users can hear it.</li>
                        <li><codeph><ph keyref="false"/></codeph>: (Default) Do not publish the effect.</li>
                        </ul>
                    </pd>
            </plentry>
            <plentry props="native">
                <pt props="native">startPos</pt>
                <pd props="android cpp">The start position of the audio effect file in milliseconds.</pd>
                <pd props="apple">The start position of the audio effect file (in milliseconds).</pd>
            </plentry>
            </parml> </section>
        <section id="return_values" props="bp cs electron flutter native rn unity unreal">
            <title><ph keyref="return-section-title"/></title>
        <p props="flutter">When the method call succeeds, there is no return value; when fails, the <xref keyref="AgoraRtcException"/> exception is thrown. You need to catch the exception and handle it accordingly. <ph props="cn">See <xref keyref="error-code-link"/> for details and resolution suggestions.</ph></p>
        <ul props="bp cs electron rn unity unreal">
                <li>0: Success.</li>
                <li>&lt; 0: Failure. <ph props="cn">See <xref keyref="error-code-link"/> for details and resolution suggestions.</ph></li>
                </ul>
        <p props="native"><ul>
                        <li>0: Success.</li>
                        <li>&lt; 0: Failure.</li>
                        </ul>
                    </p>
    </section>
        </refbody>
</reference>
