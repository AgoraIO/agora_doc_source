<?xml version='1.0' encoding='UTF-8'?>
<!DOCTYPE reference PUBLIC "-//OASIS//DTD DITA Reference//EN" "reference.dtd">
<reference id="api_irtcengineex_playeffectex">
    <title><ph keyref="playEffectEx"/></title>
    <shortdesc id="short"><ph id="shortdesc">Plays a specified audio effect to a specified channel.</ph></shortdesc>
    <prolog>
        <metadata>
            <keywords>
                <indexterm keyref="playEffectEx"/>
            </keywords>
        </metadata>
    </prolog>
    <refbody>
        <section id="prototype">
            <p outputclass="codeblock">
            <codeblock props="android" outputclass="language-java">public abstract int playEffectEx(RtcConnection connection, int soundId, String filePath, int loopCount, double pitch, double pan, double gain, boolean publish);</codeblock>
            <codeblock props="hmos" outputclass="language-arkts"/>
            <codeblock props="ios mac" outputclass="language-objectivec">- (int)playEffectEx:(AgoraRtcConnection* _Nonnull)connection soundId:(int)soundId filePath:(NSString* _Nonnull)filePath loopCount:(NSInteger)loopCount pitch:(double)pitch pan:(double)pan gain:(NSInteger)gain startPos:(int)startPos NS_SWIFT_NAME(playEffectEx(_:soundId:filePath:loopCount:pitch:pan:gain:startPos:));</codeblock>
            <codeblock props="cpp unreal" outputclass="language-cpp">virtual int playEffectEx(const RtcConnection&amp;amp; connection, int soundId, const char* filePath, int loopCount, double pitch, double pan, int gain, bool publish = false, int startPos = 0) = 0;</codeblock>
            <codeblock props="bp" outputclass="language-cpp"/>
            <codeblock props="electron" outputclass="language-typescript"/>
            <codeblock props="unity cs" outputclass="language-csharp"/>
            <codeblock props="rn" outputclass="language-typescript"/>
            <codeblock props="flutter" outputclass="language-dart"/> </p>
        </section>
        <section id="detailed_desc" deliveryTarget="details" otherprops="no-title">
            <dl outputclass="since">
            <dlentry props="native">
                <dt>Since:</dt>
                <dd props="native">Available since v4.6.0.</dd>
                </dlentry>
            </dl>
            <p>You can call this method to play a specified audio effect to all users in the channel. Each call can only play one audio effect. To play multiple audio effects simultaneously, call this method multiple times. This method allows you to choose whether to publish the audio effect to the channel. To play multiple audio effect files at the same time, use different <codeph>soundId</codeph> and <codeph>filePath</codeph> values in multiple calls. It is recommended to play no more than three audio effects simultaneously.</p>
            <note type="attention" props="apple">If you have preloaded the audio effect file into memory using <codeph>preloadEffect</codeph>, you can use this method to play the effect.</note>
            <note type="attention" props="android"><ul>
                        <li>Agora recommends playing no more than three audio effects simultaneously.</li>
                        <li>The sound ID and file path in this method must match those used in the <codeph>preloadEffect</codeph> method.</li>
                        </ul>
                    </note>
            </section>
        <section id="scenario" deliveryTarget="details">
            <title>Scenario</title>
            <p>This method applies to multi-channel scenarios.</p>
        </section>
        <section id="restriction" deliveryTarget="details">
            <title>Restrictions</title>
            <p>None.</p>
        </section>
        <section id="parameters" deliveryTarget="details">
            <title>Parameters</title>
            <parml>
            <plentry props="native">
                <pt props="native">connection</pt>
                <pd props="android">Information about the connected channel. See <codeph>RtcConnection</codeph>.</pd>
                <pd props="apple"><codeph>AgoraRtcConnection</codeph> object. See <codeph>AgoraRtcConnection</codeph>.</pd>
                <pd props="cpp"><codeph>RtcConnection</codeph> object. See <codeph>RtcConnection</codeph>.</pd>
            </plentry>
            <plentry props="native">
                <pt props="native">soundId</pt>
                <pd props="android cpp">The ID of the audio effect.</pd>
                <pd props="apple">The ID of the specified audio effect. Each effect must have a unique ID. If you preload the effect into memory using the <codeph>preloadEffect</codeph> method, ensure this value matches the one used in <codeph>preloadEffect</codeph>.</pd>
            </plentry>
            <plentry props="native">
                <pt props="native">filePath</pt>
                <pd props="android">The absolute path of the local audio effect file or the URL of an online file. Supported audio formats include: mp3, mp4, m4a, aac, 3gp, mkv, and wav.</pd>
                <pd props="apple">The absolute path (including file extension) of the local audio effect file or the URL of an online file, such as <codeph>/var/mobile/Containers/Data/audio.mp4</codeph>. Supported audio formats include: mp3, mp4, m4a, aac, 3gp, mkv, and wav.</pd>
                <pd props="cpp">The absolute path of the local audio effect file or the URL of an online file. Supported audio formats include mp3, mp4, m4a, aac, 3gp, mkv, and wav.</pd>
            </plentry>
            <plentry props="native">
                <pt props="native">loopCount</pt>
                <pd props="android cpp">The number of times to loop the audio effect:
                    <ul>
                        <li><codeph>-1</codeph>: Loop indefinitely until <codeph>stopEffect</codeph> or <codeph>stopAllEffects</codeph> is called.</li>
                        <li><codeph>0</codeph>: Play once.</li>
                        <li><codeph>1</codeph>: Play twice.</li>
                        </ul>
                    </pd>
                <pd props="apple">The number of times to loop the audio effect:
                    <ul>
                        <li>0: Play once.</li>
                        <li>1: Play twice.</li>
                        <li>-1: Loop indefinitely until you call <codeph>stopEffect</codeph> or <codeph>stopAllEffects</codeph>.</li>
                        </ul>
                    </pd>
            </plentry>
            <plentry props="native">
                <pt props="native">pitch</pt>
                <pd props="android cpp">The pitch of the audio effect. Range: 0.5 to 2.0. Default is 1.0 (original pitch). The lower the value, the lower the pitch.</pd>
                <pd props="apple">The pitch of the audio effect. Range: 0.5 to 2. Default is 1 (original pitch). The lower the value, the lower the pitch.</pd>
            </plentry>
            <plentry props="native">
                <pt props="native">pan</pt>
                <pd props="android cpp">The spatial position of the audio effect. Range: -1.0 to 1.0:
                    <ul>
                        <li><codeph>-1.0</codeph>: Left.</li>
                        <li><codeph>0.0</codeph>: Center.</li>
                        <li><codeph>1.0</codeph>: Right.</li>
                        </ul>
                    </pd>
                <pd props="apple">The spatial position of the audio effect. Range: -1.0 to 1.0:
                    <ul>
                        <li>0.0: Center.</li>
                        <li>1.0: Right.</li>
                        <li>-1.0: Left.</li>
                        </ul>
                    </pd>
            </plentry>
            <plentry props="native">
                <pt props="native">gain</pt>
                <pd props="android">The volume of the audio effect. Range: 0.0 to 100.0. Default is 100 (original volume). The lower the value, the lower the volume.</pd>
                <pd props="apple">The volume of the audio effect. Range: 0 to 100 (default). The lower the value, the lower the volume.</pd>
                <pd props="cpp">The volume of the audio effect. Range: 0 to 100. Default is 100 (original volume). The lower the value, the lower the volume.</pd>
            </plentry>
            <plentry props="native">
                <pt props="android">publish</pt>
                <pt props="apple cpp">publish</pt>
                <pd props="android">Whether to publish the audio effect to the channel:
                    <ul>
                        <li><codeph>true</codeph>: Publish the audio effect to the channel so that remote users can hear it.</li>
                        <li><codeph>false</codeph>: Do not publish the audio effect to the channel.</li>
                        </ul>
                    </pd>
                <pd props="apple">Whether to publish the specified audio effect to the channel:
                    <ul>
                        <li><codeph>YES</codeph>: Publish the audio effect to the channel so that remote users can hear it.</li>
                        <li><codeph>NO</codeph>: Do not publish the audio effect to the channel.</li>
                        </ul>
                    </pd>
                <pd props="cpp">Whether to publish the audio effect to the channel:
                    <ul>
                        <li><codeph>true</codeph>: Publish the audio effect to the channel so that remote users can hear it.</li>
                        <li><codeph>false</codeph>: (Default) Do not publish the audio effect to the channel.</li>
                        </ul>
                    </pd>
            </plentry>
            <plentry props="native">
                <pt props="native">startPos</pt>
                <pd props="native">The starting playback position of the audio effect file in milliseconds.</pd>
            </plentry>
            </parml> </section>
        <section id="return_values" props="bp cs electron flutter native rn unity unreal">
            <title><ph keyref="return-section-title"/></title>
        <p props="flutter">When the method call succeeds, there is no return value; when fails, the <xref keyref="AgoraRtcException"/> exception is thrown. You need to catch the exception and handle it accordingly. <ph props="cn">See <xref keyref="error-code-link"/> for details and resolution suggestions.</ph></p>
        <ul props="bp cs electron rn unity unreal">
                <li>0: Success.</li>
                <li>&lt; 0: Failure. <ph props="cn">See <xref keyref="error-code-link"/> for details and resolution suggestions.</ph></li>
                </ul>
        <p props="native"><ul>
                        <li>0: Success.</li>
                        <li>&lt; 0: Failure.</li>
                        </ul>
                    </p>
    </section>
        </refbody>
</reference>
