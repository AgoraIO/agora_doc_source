<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE reference PUBLIC "-//OASIS//DTD DITA Reference//EN" "reference.dtd">
<reference id="class_codeccapinfo">
    <title><ph keyref="CodecCapInfo" /></title>
    <shortdesc id="short"><ph id="shortdesc">The codec capability of the device.</ph></shortdesc>
    <refbody>
        <section id="prototype">
            <p outputclass="codeblock">
            <codeblock props="android" outputclass="language-java">public class CodecCapInfo {
  public int codecType;
  public int codecCapMask;
  public CodecCapLevels codecLevels;
  @CalledByNative
  public CodecCapInfo(int codecType, int codecCapMask, CodecCapLevels levels) {
    this.codecType = codecType;
    this.codecCapMask = codecCapMask;
    this.codecLevels = levels;
  }
  @CalledByNative
  public void SetCodecType(int codecType) {
    this.codecType = codecType;
  }
  @CalledByNative
  public void SetCodecCapMask(int codecCapMask) {
    this.codecCapMask = codecCapMask;
  }
}</codeblock>
            <codeblock props="ios mac" outputclass="language-objectivec">__attribute__((visibility("default"))) @interface AgoraVideoCodecCapInfo : NSObject
@property(assign, nonatomic) AgoraVideoCodecType codecType;
@property(assign, nonatomic) NSUInteger codecCapMask;
@property(strong, nonatomic) AgoraVideoCodecCapLevels *_Nonnull codecCapLevels;
@end</codeblock>
            <codeblock props="cpp unreal bp" outputclass="language-cpp">struct CodecCapInfo {
  VIDEO_CODEC_TYPE codecType;
  int codecCapMask;
  CodecCapLevels codecLevels;
};</codeblock>
            <codeblock props="electron" outputclass="language-typescript">export class CodecCapInfo {
  codecType?: VideoCodecType;
  codecCapMask?: number;
  codecLevels?: CodecCapLevels;
}</codeblock>
            <codeblock props="unity cs" outputclass="language-csharp">public class CodecCapInfo
    {
        public VIDEO_CODEC_TYPE codecType;

        public int codecCapMask;

        public CodecCapLevels codecLevels;
    };</codeblock>
            <codeblock props="rn" outputclass="language-typescript">export class CodecCapInfo {
  codecType?: VideoCodecType;
  codecCapMask?: number;
  codecLevels?: CodecCapLevels;
}</codeblock>
            <codeblock props="flutter" outputclass="language-dart">@JsonSerializable(explicitToJson: true, includeIfNull: false)
class CodecCapInfo {
  const CodecCapInfo({this.codecType, this.codecCapMask, this.codecLevels});

  @JsonKey(name: 'codecType')
  final VideoCodecType? codecType;

  @JsonKey(name: 'codecCapMask')
  final int? codecCapMask;

  @JsonKey(name: 'codecLevels')
  final CodecCapLevels? codecLevels;

  factory CodecCapInfo.fromJson(Map&lt;String, dynamic&gt; json) =&gt;
      _$CodecCapInfoFromJson(json);

  Map&lt;String, dynamic&gt; toJson() =&gt; _$CodecCapInfoToJson(this);
}</codeblock> </p>
        </section>
        <section id="detailed_desc">
            <dl outputclass="since">
            <dlentry props="native">
                <dt>Since</dt>
                <dd>v4.2.0</dd>
            </dlentry>
            </dl>
            <p />
        </section>
        <section id="parameters">
            <title><text conref="../conref/conref_api_metadata.dita#conref_api_metadata/property" /></title>
            <parml>
            <plentry>
                <pt>codecType</pt>
                <pd props="apple cpp unreal bp unity electron rn flutter cs">The video codec types. See <xref keyref="VIDEO_CODEC_TYPE" />.</pd>
                <pd props="android">
                    <p>The video codec types:<ul>
                    <li>1: VP8.</li>
                    <li>2: (Default) H.264.</li>
                    <li>3: H.265.</li></ul> </p>
                </pd>
            </plentry>
            <plentry>
                <pt>codecCapMask</pt>
                <pd props="apple cpp unreal bp unity electron rn flutter cs">The bit mask of the codec type. See <xref keyref="CODEC_CAP_MASK" />.</pd>
                <pd props="android">
                    <p>The bit mask of the codec type:<ul>
                    <li>(0): The device does not support encoding or decoding.</li>
                    <li>(1 &lt;&lt; 0): The device supports hardware decoding.</li>
                    <li>(1 &lt;&lt; 1): The device supports hardware encoding.</li>
                    <li>(1 &lt;&lt; 2): The device supports software decoding.</li>
                    <li>(1 &lt;&lt; 3): The device supports software ecoding.</li>
                    </ul></p>
                </pd>
            </plentry>
            </parml> </section>
    </refbody>
</reference>