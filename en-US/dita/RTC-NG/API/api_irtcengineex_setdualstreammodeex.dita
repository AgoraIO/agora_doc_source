<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE reference PUBLIC "-//OASIS//DTD DITA Reference//EN" "reference.dtd">
<reference id="api_irtcengineex_setdualstreammodeex">
    <title><ph keyref="setDualStreamModeEx" /></title>
    <shortdesc id="short"><ph id="shortdesc">Sets the dual-stream mode on the sender side.</ph></shortdesc>
    <prolog>
        <metadata>
            <keywords>
                <indexterm keyref="setDualStreamModeEx" />
            </keywords>
        </metadata>
    </prolog>
    <refbody>
        <section id="prototype">
            <p outputclass="codeblock">
            <codeblock props="android" outputclass="language-java">public abstract int setDualStreamModeEx(Constants.SimulcastStreamMode mode,
      SimulcastStreamConfig streamConfig, RtcConnection connection);</codeblock>
            <codeblock props="ios mac" outputclass="language-objectivec">- (int)setDualStreamModeEx:(AgoraSimulcastStreamMode)mode
              streamConfig:(AgoraSimulcastStreamConfig*)streamConfig
                connection:(AgoraRtcConnection* _Nonnull)connection;</codeblock>
            <codeblock props="cpp" outputclass="language-cpp">virtual int setDualStreamModeEx(SIMULCAST_STREAM_MODE mode,
                                   const SimulcastStreamConfig&amp; streamConfig,
                                   const RtcConnection&amp; connection) = 0;</codeblock>
            <codeblock props="electron" outputclass="language-typescript">abstract setDualStreamModeEx(
    mode: SimulcastStreamMode,
    streamConfig: SimulcastStreamConfig,
    connection: RtcConnection
  ): number;</codeblock>
            <codeblock props="unity cs" outputclass="language-csharp">public abstract int SetDualStreamModeEx(SIMULCAST_STREAM_MODE mode, SimulcastStreamConfig streamConfig, RtcConnection connection);</codeblock>
            <codeblock props="rn" outputclass="language-typescript">abstract setDualStreamModeEx(
    mode: SimulcastStreamMode,
    streamConfig: SimulcastStreamConfig,
    connection: RtcConnection
  ): number;</codeblock>
            <codeblock props="flutter" outputclass="language-dart">Future&lt;void&gt; setDualStreamModeEx(
      {required SimulcastStreamMode mode,
      required SimulcastStreamConfig streamConfig,
      required RtcConnection connection});</codeblock>
            <codeblock props="reserve" outputclass="language-cpp" /></p>
        </section>
        <section id="detailed_desc">
            <title>Details</title>
            <dl outputclass="since">
            <dlentry props="native">
                <dt>Since</dt>
                <dd>v4.0.1</dd>
            </dlentry>
            </dl>
            <p>The SDK enables the low-quality video stream auto mode on the sender by default, which is equivalent to calling this method and setting the <parmname>mode</parmname> to <apiname keyref="AUTO_SIMULCAST_STREAM" />. If you want to modify this behavior, you can call this method and modify the <parmname>mode</parmname> to <apiname keyref="DISABLE_SIMULCAST_STREAM" /> (never send low-quality video streams) or <apiname keyref="ENABLE_SIMULCAST_STREAM" /> (always send low-quality video streams).</p>
            <note id="note">The difference and connection between this method and <xref keyref="enableDualStreamModeEx" /> is as follows:<ul>
            <li>When calling this method and setting <parmname>mode</parmname> to <ph keyref="DISABLE_SIMULCAST_STREAM" />, it has the same effect as <codeph><apiname keyref="enableDualStreamModeEx" />(<ph keyref="false" />)</codeph>.</li>
            <li>When calling this method and setting <parmname>mode</parmname> to <ph keyref="ENABLE_SIMULCAST_STREAM" />, it has the same effect as <codeph><apiname keyref="enableDualStreamModeEx" />(<ph keyref="true" />)</codeph>.</li>
            <li>Both methods can be called before and after joining a channel. If both methods are used, the settings in the method called later takes precedence.</li>
            </ul></note> </section>
        <section id="parameters">
            <title>Parameters</title>
            <parml>
            <plentry>
                <pt>mode</pt>
                <pd>The mode in which the video stream is sent. See <xref keyref="SIMULCAST_STREAM_MODE" />.</pd>
            </plentry>
            <plentry conkeyref="enableDualStreamMode3/streamconfig">
                <pt />
                <pd />
            </plentry>
            <plentry conkeyref="joinChannelEx/connection">
                <pt />
                <pd />
            </plentry>
            </parml> </section>
        <section id="return_values">
            <title><ph keyref="return-section-title" /></title>
            <p props="flutter">When the method call succeeds, there is no return value; when fails, the <xref keyref="AgoraRtcException" /> exception is thrown; and you need to catch the exception and handle it accordingly.</p>
            <ul id="ul_bpp_x2z_hqb">
            <li props="native unity rn electron cs">0: Success.</li>
            <li>&lt; 0: Failure.</li>
            </ul> </section>
    </refbody>
</reference>