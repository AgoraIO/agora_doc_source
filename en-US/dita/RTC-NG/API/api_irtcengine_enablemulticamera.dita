<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE reference PUBLIC "-//OASIS//DTD DITA Reference//EN" "reference.dtd">
<reference id="api_irtcengine_enablemulticamera">
    <title><ph keyref="enableMultiCamera" /></title>
    <shortdesc id="short"><ph id="shortdesc">Enables or disables multi-camera capture.</ph></shortdesc>
    <prolog>
        <metadata>
            <keywords>
                <indexterm keyref="enableMultiCamera" />
            </keywords>
        </metadata>
    </prolog>
    <refbody>
        <section id="prototype">
            <p outputclass="codeblock">
            <codeblock props="android" outputclass="language-java" />
            <codeblock props="ios mac" outputclass="language-objectivec">- (int)enableMultiCamera:(BOOL)enabled config:(AgoraCameraCapturerConfiguration* _Nullable)config NS_SWIFT_NAME(enableMultiCamera(_:config:));</codeblock>
            <codeblock props="cpp" outputclass="language-cpp">#if defined(__APPLE__) &amp;&amp; TARGET_OS_IOS
    virtual int enableMultiCamera(bool enabled, const CameraCapturerConfiguration&amp; config) = 0;
#endif</codeblock>
            <codeblock props="electron" outputclass="language-typescript">abstract enableMultiCamera(
    enabled: boolean,
    config: CameraCapturerConfiguration
  ): number;</codeblock>
            <codeblock props="unity cs" outputclass="language-csharp">public abstract int EnableMultiCamera(bool enabled, CameraCapturerConfiguration config);</codeblock>
            <codeblock props="rn" outputclass="language-typescript">abstract enableMultiCamera(
    enabled: boolean,
    config: CameraCapturerConfiguration
  ): number;</codeblock>
            <codeblock props="flutter" outputclass="language-dart">Future&lt;void&gt; enableMultiCamera(
      {required bool enabled, required CameraCapturerConfiguration config});</codeblock>
            <codeblock props="reserve" outputclass="language-cpp" /></p>
        </section>
        <section id="detailed_desc">
            <title>Details</title>
            <dl outputclass="since">
            <dlentry props="native">
                <dt>Since</dt>
                <dd>v4.1.0</dd>
            </dlentry>
            </dl>
            <p>In scenarios where there are existing cameras to capture video, Agora recommends that you use the following steps to capture and publish video with multiple cameras:<ol>
            <li>Call this method to enable multi-channel camera capture.</li>
            <li>Call <xref keyref="startPreview" /> to start the local video preview.</li>
            <li>Call <xref keyref="startCameraCapture" />, and set <parmname>sourceType</parmname> to start video capture with the second camera.</li>
            <li>Call <xref keyref="joinChannelEx" />, and set <parmname>publishSecondaryCameraTrack</parmname> to <codeph><ph keyref="true" /></codeph> to publish the video stream captured by the second camera in the channel.</li>
            </ol></p>
            <p>If you want to disable multi-channel camera capture, use the following steps:<ol>
            <li>Call <xref keyref="stopCameraCapture" />.</li>
            <li>Call this method with <parmname>enabled</parmname> set to <codeph><ph keyref="false" /></codeph>.</li>
            </ol></p>
            <note>
            <p>You can call this method before and after <xref keyref="startPreview" /> to enable multi-camera capture:<ul>
            <li>If it is enabled before <apiname keyref="startPreview" />, the local video preview shows the image captured by the two cameras at the same time.</li>
            <li>If it is enabled after <apiname keyref="startPreview" />, the SDK stops the current camera capture first, and then enables the primary camera and the second camera. The local video preview appears black for a short time, and then automatically returns to normal.</li>
            </ul></p>
            </note>
            <p props="cpp">This method applies to iOS only.</p>
            <p>When using this function, ensure that the system version is 13.0 or later.</p>
            <p>The minimum iOS device types that support multi-camera capture are as follows:<ul>
            <li>iPhone XR</li>
            <li>iPhone XS</li>
            <li>iPhone XS Max</li>
            <li>iPad Pro 3rd generation and later</li>
            </ul></p>
        </section>
        <section id="parameters">
            <title>Parameters</title>
            <parml>
            <plentry>
                <pt>enabled</pt>
                <pd>Whether to enable multi-camera video capture mode:<ul>
                    <li><codeph><ph keyref="true" /></codeph>: Enable multi-camera capture mode; the SDK uses multiple cameras to capture video.</li>
                    <li><codeph><ph keyref="false" /></codeph>: Disable multi-camera capture mode; the SDK uses a single camera to capture video.</li>
                    </ul></pd>
            </plentry>
            <plentry>
                <pt>config</pt>
                <pd>Capture configuration for the second camera. See <xref keyref="CameraCapturerConfiguration" />.</pd>
            </plentry>
            </parml> </section>
        <section id="return_values">
            <title><ph keyref="return-section-title" /></title>
            <p props="flutter">When the method call succeeds, there is no return value; when fails, the <xref keyref="AgoraRtcException" /> exception is thrown; and you need to catch the exception and handle it accordingly.</p>
            <ul>
            <li props="apple cpp electron unity rn cs">0: Success.</li>
            <li>&lt; 0: Failure.</li>
            </ul>
        </section>
    </refbody>
</reference>