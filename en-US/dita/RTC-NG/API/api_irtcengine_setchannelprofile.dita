<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE reference PUBLIC "-//OASIS//DTD DITA Reference//EN" "reference.dtd">
<reference id="api_irtcengine_setchannelprofile">
    <title><ph keyref="setChannelProfile" /></title>
    <shortdesc id="short"><ph id="shortdesc">Sets the channel profile.</ph></shortdesc>
    <prolog>
        <metadata>
            <keywords>
                <indexterm keyref="setChannelProfile" />
            </keywords>
        </metadata>
    </prolog>
    <refbody>
        <section id="prototype">
            <p outputclass="codeblock">
            <codeblock props="android" outputclass="language-java">public abstract int setChannelProfile(int profile);</codeblock>
            <codeblock props="ios mac" outputclass="language-objectivec">- (int)setChannelProfile:(AgoraChannelProfile)profile;</codeblock>
            <codeblock props="cpp unreal" outputclass="language-cpp">virtual int setChannelProfile(CHANNEL_PROFILE_TYPE profile) = 0;</codeblock>
         <codeblock props="bp" outputclass="language-cpp">UFUNCTION(BlueprintCallable, Category = &quot;Agora|RtcEngineProxy&quot;)
	int SetChannelProfile(ECHANNEL_PROFILE_TYPE profile);</codeblock>
            <codeblock props="electron" outputclass="language-typescript">abstract setChannelProfile(profile: ChannelProfileType): number;</codeblock>
            <codeblock props="unity cs" outputclass="language-csharp">public abstract int SetChannelProfile(CHANNEL_PROFILE_TYPE profile);</codeblock>
            <codeblock props="rn" outputclass="language-typescript">abstract setChannelProfile(profile: ChannelProfileType): number;</codeblock>
            <codeblock props="flutter" outputclass="language-dart">Future&lt;void&gt; setChannelProfile(ChannelProfileType profile);</codeblock>
            <codeblock props="reserve" outputclass="language-cpp"></codeblock></p>
        </section>
        <section id="detailed_desc" deliveryTarget="details" otherprops="no-title">
            <p>You can call this method to set the channel profile. The SDK adopts different optimization strategies for different channel profiles. For example, in a live streaming scenario, the SDK prioritizes video quality. After initializing the SDK, the default channel profile is the live streaming profile.</p>
            <note type="attention" props="android ios cpp unreal bp rn">
            <p>In different channel scenarios, the default audio routing of the SDK is different. See <xref keyref="setDefaultAudioRouteToSpeakerphone" />.</p>
           </note>
        </section>
        <section id="timing" deliveryTarget="details">
            <title>Call timing</title>
            <p>Ensure that you call this method before joining a channel.</p>
        </section>
        <section id="restriction" deliveryTarget="details">
            <title>Restrictions</title>
            <p>To ensure the quality of real-time communication, Agora recommends that all users in a channel use the same channel profile.</p>
        </section>
        <section id="parameters" deliveryTarget="details">
            <title>Parameters</title>
            <parml>
            <plentry>
                <pt>profile</pt>
                <pd id="channelprofiletype">
                    <p props="ios mac cpp unreal bp electron unity flutter rn cs">The channel profile. See <xref keyref="CHANNEL_PROFILE_TYPE" />.</p>
                    <p props="android">The channel profile.<ul>
                    <li><ph keyref="CHANNEL_PROFILE_COMMUNICATION" />(0): Communication. Agora recommends using the live streaming profile for a better audio and video experience.</li>
                    <li><ph keyref="CHANNEL_PROFILE_LIVE_BROADCASTING" />(1): (Default) Live streaming.</li>
                    <li><ph keyref="CHANNEL_PROFILE_GAME" />(2): Gaming.<dl outputclass="deprecated">
                    <dlentry>
                    <dt>Deprecated:</dt>
                    <dd>Use <ph keyref="CHANNEL_PROFILE_LIVE_BROADCASTING"/> instead.</dd>
                    </dlentry></dl>
                    </li>
                    <li><ph keyref="CHANNEL_PROFILE_CLOUD_GAMING" />(3): Interaction. The scenario is optimized for latency. Use this profile if the use case requires frequent interactions between users.<dl outputclass="deprecated">
                    <dlentry>
                    <dt>Deprecated:</dt>
                    <dd>Use <ph keyref="CHANNEL_PROFILE_LIVE_BROADCASTING"/> instead.</dd>
                    </dlentry></dl>
                    </li>
                    </ul> </p>
                </pd>
            </plentry>
            </parml> </section>
        <section id="return_values">
            <title><ph keyref="return-section-title"/></title>
            <p props="flutter">When the method call succeeds, there is no return value; when fails, the <xref keyref="AgoraRtcException"/> exception is thrown. You need to catch the exception and handle it accordingly. <ph props="cn">See <xref keyref="error-code-link"/> for details and resolution suggestions.</ph></p>
            <ul>
            <li props="native unreal bp electron unity rn cs">0: Success.</li>
            <li>&lt; 0: Failure. <ph props="cn">See <xref keyref="error-code-link"/> for details and resolution suggestions.</ph><ul>
                <li>-2: The parameter is invalid.</li>
                <li>-7: The SDK is not initialized.</li>
                </ul></li>
            </ul> </section>
    </refbody>
</reference>