<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE reference PUBLIC "-//OASIS//DTD DITA Reference//EN" "reference.dtd">
<reference id="api_irtcengineex_updatechannelmediarelayex">
    <title><ph keyref="updateChannelMediaRelayEx" /></title>
    <shortdesc id="short"><ph id="shortdesc">Updates the channels for media stream relay.</ph></shortdesc>
    <prolog>
        <metadata>
            <keywords>
                <indexterm keyref="updateChannelMediaRelayEx" />
            </keywords>
        </metadata>
    </prolog>
    <refbody>
        <section id="prototype">
            <p outputclass="codeblock">
            <codeblock props="android" outputclass="language-java">public abstract int updateChannelMediaRelayEx(
      ChannelMediaRelayConfiguration channelMediaRelayConfiguration, RtcConnection connection);</codeblock>
            <codeblock props="ios mac" outputclass="language-objectivec">- (int)updateChannelMediaRelayEx:(AgoraChannelMediaRelayConfiguration * _Nonnull)config connection:(AgoraRtcConnection * _Nonnull)connection NS_SWIFT_NAME(updateChannelMediaRelayEx(_:connection:));</codeblock>
            <codeblock props="cpp" outputclass="language-cpp">virtual int updateChannelMediaRelayEx(const ChannelMediaRelayConfiguration&amp; configuration, const RtcConnection&amp; connection) = 0;</codeblock>
            <codeblock props="electron" outputclass="language-typescript">abstract updateChannelMediaRelayEx(
    configuration: ChannelMediaRelayConfiguration,
    connection: RtcConnection
  ): number;</codeblock>
            <codeblock props="unity" outputclass="language-csharp">public abstract int UpdateChannelMediaRelayEx(ChannelMediaRelayConfiguration configuration, RtcConnection connection);</codeblock>
            <codeblock props="rn" outputclass="language-typescript">abstract updateChannelMediaRelayEx(
    configuration: ChannelMediaRelayConfiguration,
    connection: RtcConnection
  ): number;</codeblock>
            <codeblock props="flutter" outputclass="language-dart">Future&lt;void&gt; updateChannelMediaRelayEx(
      {required ChannelMediaRelayConfiguration configuration,
      required RtcConnection connection});</codeblock>
            <codeblock props="reserve" outputclass="language-cpp" /></p>
        </section>
        <section id="detailed_desc">
            <p id="desc">After the media relay starts, if you want to relay the media stream to more channels, or leave the current relay channel, you can call the updateChannelMediaRelay method.</p>
            <p>After a successful method call, the SDK triggers the <xref keyref="onChannelMediaRelayEvent" /> callback with the <apiname keyref="RELAY_EVENT_PACKET_UPDATE_DEST_CHANNEL" /> (7) state code.</p>
            <note type="attention">Call the method after successfully calling the <xref keyref="startChannelMediaRelayEx" /> method and receiving <codeph><xref keyref="onChannelMediaRelayStateChanged" />(<ph keyref="RELAY_STATE_RUNNING" />, <ph keyref="RELAY_OK" />)</codeph>; otherwise, the method call fails.</note> </section>
        <section id="parameters">
            <title>Parameters</title>
            <parml>
            <plentry>
                <pt props="android">channelMediaRelayConfiguration</pt>
                <pt props="ios mac">config</pt>
                <pt props="cpp flutter rn electron unity">configuration</pt>
                <pd>The configuration of the media stream relay. See <xref keyref="ChannelMediaRelayConfiguration" />.</pd>
            </plentry>
            <plentry conkeyref="joinChannelEx/connection">
                <pt />
                <pd />
            </plentry>
            </parml> </section>
        <section id="return_values" props="native electron unity rn">
            <title>Returns</title>
            <ul>
            <li>0: Success.</li>
            <li>&lt; 0: Failure.</li>
            </ul> </section>
    </refbody>
</reference>