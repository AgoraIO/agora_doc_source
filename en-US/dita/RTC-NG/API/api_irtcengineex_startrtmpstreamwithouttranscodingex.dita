<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE reference PUBLIC "-//OASIS//DTD DITA Reference//EN" "reference.dtd">
<reference id="api_irtcengineex_startrtmpstreamwithouttranscodingex">
    <title><ph keyref="startRtmpStreamWithoutTranscodingEx" /></title>
    <shortdesc id="short"><ph id="shortdesc">Starts pushing media streams to a CDN without transcoding.</ph></shortdesc>
    <prolog>
        <metadata>
            <keywords>
                <indexterm keyref="startRtmpStreamWithoutTranscodingEx" />
            </keywords>
        </metadata>
    </prolog>
    <refbody>
        <section id="prototype">
            <p outputclass="codeblock">
            <codeblock props="android" outputclass="language-java">public abstract int startRtmpStreamWithoutTranscodingEx(String url, RtcConnection connection);</codeblock>
            <codeblock props="ios mac" outputclass="language-objectivec">- (int)startRtmpStreamWithoutTranscodingEx:(NSString* _Nonnull)url
                                connection:(AgoraRtcConnection * _Nonnull)connection NS_SWIFT_NAME(startRtmpStreamWithoutTranscodingEx(_:connection:));</codeblock>
            <codeblock props="cpp" outputclass="language-cpp">virtual int startRtmpStreamWithoutTranscodingEx(const char* url, const RtcConnection&amp; connection) = 0;</codeblock>
            <codeblock props="cs" outputclass="language-csharp" />
            <codeblock props="electron" outputclass="language-typescript">abstract startRtmpStreamWithoutTranscodingEx(
    url: string,
    connection: RtcConnection
  ): number;</codeblock>
            <codeblock props="unity" outputclass="language-csharp">public abstract int StartRtmpStreamWithoutTranscodingEx(string url, RtcConnection connection);</codeblock>
            <codeblock props="rn" outputclass="language-typescript">abstract startRtmpStreamWithoutTranscodingEx(
    url: string,
    connection: RtcConnection
  ): number;</codeblock>
            <codeblock props="flutter" outputclass="language-dart">Future&lt;void&gt; startRtmpStreamWithoutTranscodingEx(
      {required String url, required RtcConnection connection});</codeblock> </p>
        </section>
        <section id="detailed_desc">
            <dl outputclass="since">
            <dlentry props="native">
                <dt>Since</dt>
                <dd>v4.1.0</dd>
            </dlentry>
            </dl>
            <p>You can call this method to push an audio or video stream to the specified CDN address. This method can push media streams to only one CDN address at a time, so if you need to push streams to multiple addresses, call this method multiple times.</p>
            <p>After you call this method, the SDK triggers the <xref keyref="onRtmpStreamingStateChanged" /> callback on the local client to report the state of the streaming.</p>
            <note conkeyref="startRtmpStreamWithTranscoding/note" /> </section>
        <section id="parameters">
            <title>Parameters</title>
            <parml>
            <plentry conkeyref="startRtmpStreamWithTranscoding/url">
                <pt />
                <pd />
            </plentry>
            <plentry conkeyref="joinChannelEx/connection">
                <pt />
                <pd />
            </plentry>
            </parml> </section>
        <section conkeyref="startRtmpStreamWithTranscoding/return_values" props="native unity electron rn" />
    </refbody>
</reference>