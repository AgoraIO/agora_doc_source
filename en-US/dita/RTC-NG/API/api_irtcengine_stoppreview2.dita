<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE reference PUBLIC "-//OASIS//DTD DITA Reference//EN" "reference.dtd">
<reference id="api_irtcengine_stoppreview2">
    <title><ph keyref="stopPreview2" /></title>
    <shortdesc id="short"><ph id="shortdesc">Stops the local video preview.</ph></shortdesc>
    <prolog>
        <metadata>
            <keywords>
                <indexterm keyref="stopPreview2" />
            </keywords>
        </metadata>
    </prolog>
    <refbody>
        <section id="prototype">
            <p outputclass="codeblock">
            <codeblock props="android" outputclass="language-java">public abstract int stopPreview(Constants.VideoSourceType sourceType);
</codeblock>
            <codeblock props="hmos" outputclass="language-arkts">public abstract stopPreview(sourceType?: Constants.VideoSourceType): number;</codeblock>
            <codeblock props="ios mac" outputclass="language-objectivec">- (int)stopPreview: (AgoraVideoSourceType)sourceType NS_SWIFT_NAME(stopPreview(_:));</codeblock>
            <codeblock props="cpp unreal" outputclass="language-cpp">virtual int stopPreview(VIDEO_SOURCE_TYPE sourceType) = 0;</codeblock>
         <codeblock props="bp" outputclass="language-cpp">UFUNCTION(BlueprintCallable, Category = &quot;Agora|IRtcEngine&quot;)
	int StopPreview(EVIDEO_SOURCE_TYPE sourceType = EVIDEO_SOURCE_TYPE::VIDEO_SOURCE_CAMERA_PRIMARY);</codeblock>
            <codeblock props="electron" outputclass="language-typescript">abstract stopPreview(sourceType?: VideoSourceType): number;</codeblock>
            <codeblock props="unity cs" outputclass="language-csharp">public abstract int StopPreview(VIDEO_SOURCE_TYPE sourceType);</codeblock>
            <codeblock props="rn" outputclass="language-typescript">abstract stopPreview(sourceType?: VideoSourceType): number;</codeblock>
            <codeblock props="flutter" outputclass="language-dart">Future&lt;void&gt; stopPreview(
    {VideoSourceType sourceType = VideoSourceType.videoSourceCameraPrimary});</codeblock>
            <codeblock props="reserve" outputclass="language-cpp"></codeblock></p>
        </section>
        <section id="detailed_desc" deliveryTarget="details" otherprops="no-title">
            <dl outputclass="since">
                <dlentry props="apple">
                    <dt>Since</dt>
                    <dd>v4.2.2</dd>
                </dlentry>
                </dl>    
        </section>
        <section id="scenario" deliveryTarget="details">
            <title>Applicable scenarios</title>
            <p>After calling <xref keyref="startPreview2" /> to start the preview, if you want to stop the local video preview, call this method.</p>
        </section>
        <section id="timing" deliveryTarget="details" conkeyref="stopPreview/timing">
            <title/>
        </section>        
        <section id="restriction" deliveryTarget="details">
            <title>Restrictions</title>
            <p>None.</p>
        </section>
            <section id="parameters" deliveryTarget="details">
            <title>Parameters</title>
            <parml>
            <plentry conkeyref="VideoCanvas/sourcetype">
                <pt />
                <pd />
            </plentry>
            </parml> </section>
        <section id="return_values">
            <title><ph keyref="return-section-title"/></title>
            <p props="flutter">When the method call succeeds, there is no return value; when fails, the <xref keyref="AgoraRtcException"/> exception is thrown. You need to catch the exception and handle it accordingly. <ph props="cn">See <xref keyref="error-code-link"/> for details and resolution suggestions.</ph></p>
            <ul>
                <li props="native unreal bp rn electron unity cs">0: Success.</li>
                <li>&lt; 0: Failure. <ph props="cn">See <xref keyref="error-code-link"/> for details and resolution suggestions.</ph></li>
                </ul>
        </section>
    </refbody>
</reference>
