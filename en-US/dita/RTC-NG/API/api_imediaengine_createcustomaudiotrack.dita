<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE reference PUBLIC "-//OASIS//DTD DITA Reference//EN" "reference.dtd">
<reference id="api_imediaengine_createcustomaudiotrack">
    <title><ph keyref="createCustomAudioTrack" /></title>
    <shortdesc id="short"><ph id="shortdesc">Creates a custom audio track.</ph></shortdesc>
    <prolog>
        <metadata>
            <keywords>
                <indexterm keyref="createCustomAudioTrack" />
            </keywords>
        </metadata>
    </prolog>
    <refbody>
        <section id="prototype">
            <p outputclass="codeblock">
            <codeblock props="android" outputclass="language-java">public abstract int createCustomAudioTrack(
      Constants.AudioTrackType trackType, AudioTrackConfig config);</codeblock>
            <codeblock props="ios mac" outputclass="language-objectivec">- (int)createCustomAudioTrack:(AgoraAudioTrackType)trackType
                       config:(AgoraAudioTrackConfig* _Nonnull)config;</codeblock>
            <codeblock props="cpp unreal" outputclass="language-cpp">virtual rtc::track_id_t createCustomAudioTrack(rtc::AUDIO_TRACK_TYPE trackType, const rtc::AudioTrackConfig&amp; config) = 0;</codeblock>
            <codeblock props="electron" outputclass="language-typescript">abstract createCustomAudioTrack(
    trackType: AudioTrackType,
    config: AudioTrackConfig
  ): number;</codeblock>
            <codeblock props="unity cs" outputclass="language-csharp">public abstract uint CreateCustomAudioTrack(AUDIO_TRACK_TYPE trackType, AudioTrackConfig config);</codeblock>
            <codeblock props="rn" outputclass="language-typescript">abstract createCustomAudioTrack(
    trackType: AudioTrackType,
    config: AudioTrackConfig
  ): number;</codeblock>
            <codeblock props="flutter" outputclass="language-dart">Future&lt;int> createCustomAudioTrack(
      {required AudioTrackType trackType, required AudioTrackConfig config});</codeblock>
            <codeblock props="reserve" outputclass="language-cpp"></codeblock></p>
        </section>
        <section id="detailed_desc">
            <title>Details</title>
            <dl outputclass="since">
            <dlentry props="native">
                <dt>Since</dt>
                <dd>v4.2.0</dd>
            </dlentry>
            </dl>
            <p>To publish a custom audio source to multiple channels, see the following steps:<ol>
            <li>Call this method to create a custom audio track and get the audio track ID.</li>
            <li>In <xref keyref="ChannelMediaOptions" /> of each channel, set <parmname>publishCustomAduioTrackId</parmname> to the audio track ID that you want to publish, and set <parmname>publishCustomAudioTrack</parmname> to <codeph><ph keyref="true" /></codeph>.</li>
            <li>If you call <xref keyref="pushAudioFrame" props="cpp framework" /><xref keyref="pushAudioFrame2" props="android apple" />, and specify <parmname>trackId</parmname> as the audio track ID set in step 2, you can publish the corresponding custom audio source in multiple channels.</li>
            </ol></p>
        </section>
        <section id="parameters">
            <title>Parameters</title>
            <parml>
            <plentry>
                <pt>trackType</pt>
                <pd>The type of the custom audio track. See <xref keyref="AUDIO_TRACK_TYPE" />.<note type="attention">If <apiname keyref="AUDIO_TRACK_DIRECT" /> is specified for this parameter, you must set <codeph>publishMicrophoneTrack</codeph> to <codeph><ph keyref="false" /></codeph> in <xref keyref="ChannelMediaOptions" /> when calling <xref keyref="joinChannel2" /> to join the channel; otherwise, joining the channel fails and returns the error code -2.</note></pd>
            </plentry>
            <plentry>
                <pt>config</pt>
                <pd>The configuration of the custom audio track. See <xref keyref="AudioTrackConfig" />.</pd>
            </plentry>
            </parml> </section>
        <section id="return_values">
            <title>Returns</title>
            <ul>
            <li>If the method call is successful, the audio track ID is returned as the unique identifier of the audio track.</li>
            <li>If the method call fails, a negative value is returned.</li>
            </ul> </section>
    </refbody>
</reference>