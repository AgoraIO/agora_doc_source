<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE reference PUBLIC "-//OASIS//DTD DITA Reference//EN" "reference.dtd">
<reference id="class_lastmileprobeonewayresult">
    <title><ph keyref="LastmileProbeOneWayResult" /></title>
    <shortdesc id="short"><ph id="shortdesc">Results of the uplink or downlink last-mile network test.</ph></shortdesc>
    <refbody>
        <section id="prototype">
            <p outputclass="codeblock">
            <codeblock props="cpp" outputclass="language-cpp">struct LastmileProbeOneWayResult {
                    unsigned int packetLossRate;
                    unsigned int jitter;
                    unsigned int availableBandwidth;

                    LastmileProbeOneWayResult() : packetLossRate(0),
                    jitter(0),
                    availableBandwidth(0) {}
                    };</codeblock>
            <codeblock props="android" outputclass="language-java">public static class LastmileProbeOneWayResult {
      public int packetLossRate;
      public int jitter;
      public int availableBandwidth;
    }</codeblock>
            <codeblock props="ios mac" outputclass="language-objectivec">__attribute__((visibility("default"))) @interface AgoraLastmileProbeOneWayResult : NSObject
@property (assign, nonatomic) NSUInteger packetLossRate;
@property (assign, nonatomic) NSUInteger jitter;
@property (assign, nonatomic) NSUInteger availableBandwidth;
@end</codeblock>
            <codeblock props="electron" outputclass="language-typescript">export class LastmileProbeOneWayResult {
  
  packetLossRate?: number;
  
  jitter?: number;
  
  availableBandwidth?: number;
}</codeblock>
            <codeblock props="unity" outputclass="language-csharp">public class LastmileProbeOneWayResult
    {
        public LastmileProbeOneWayResult()
        {
        }

        public LastmileProbeOneWayResult(uint packetLossRate, uint jitter, uint availableBandwidth)
        {
            this.packetLossRate = packetLossRate;
            this.jitter = jitter;
            this.availableBandwidth = availableBandwidth;
        }

        public uint packetLossRate { set; get; }
        public uint jitter { set; get; }
        public uint availableBandwidth { set; get; }
    }        </codeblock>
            <codeblock props="rn" outputclass="language-typescript">export class LastmileProbeOneWayResult {
  
  packetLossRate?: number;
  
  jitter?: number;
  
  availableBandwidth?: number;
}</codeblock>
            <codeblock props="flutter" outputclass="language-dart">class LastmileProbeOneWayResult {
  const LastmileProbeOneWayResult(
      {this.packetLossRate, this.jitter, this.availableBandwidth});

  @JsonKey(name: 'packetLossRate')
  final int? packetLossRate;
  @JsonKey(name: 'jitter')
  final int? jitter;
  @JsonKey(name: 'availableBandwidth')
  final int? availableBandwidth;
  factory LastmileProbeOneWayResult.fromJson(Map&lt;String, dynamic&gt; json) =&gt;
      _$LastmileProbeOneWayResultFromJson(json);
  Map&lt;String, dynamic&gt; toJson() =&gt; _$LastmileProbeOneWayResultToJson(this);
}
</codeblock>
            </p>
        </section>
        <section id="parameters">
            <title><text conref="../conref/conref_api_metadata.dita#conref_api_metadata/property" /></title>
            <parml>
            <plentry>
                <pt>packetLossRate</pt>
                <pd>The packet loss rate (%).</pd>
            </plentry>
            <plentry>
                <pt>jitter</pt>
                <pd>The network jitter (ms).</pd>
            </plentry>
            <plentry>
                <pt>availableBandwidth</pt>
                <pd>The estimated available bandwidth (bps).</pd>
            </plentry>
            </parml> </section>
    </refbody>
</reference>