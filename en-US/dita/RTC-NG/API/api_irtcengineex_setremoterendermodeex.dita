<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE reference PUBLIC "-//OASIS//DTD DITA Reference//EN" "reference.dtd">
<reference id="api_irtcengineex_setremoterendermodeex">
    <title><ph keyref="setRemoteRenderModeEx" /></title>
    <shortdesc id="short"><ph id="shortdesc">Sets the video display mode of a specified remote user.</ph></shortdesc>
    <prolog>
        <metadata>
            <keywords>
                <indexterm keyref="setRemoteRenderModeEx" />
            </keywords>
        </metadata>
    </prolog>
    <refbody>
        <section id="prototype">
            <p outputclass="codeblock">
            <codeblock props="android" outputclass="language-java">public abstract int setRemoteRenderModeEx(
      int uid, int renderMode, int mirrorMode, RtcConnection connection);</codeblock>
            <codeblock props="ios mac" outputclass="language-objectivec">- (int)setRemoteRenderModeEx:(NSUInteger)uid
                        mode:(AgoraVideoRenderMode)mode
                      mirror:(AgoraVideoMirrorMode)mirror
                  connection:(AgoraRtcConnection * _Nonnull)connection;</codeblock>
            <codeblock props="cpp unreal" outputclass="language-cpp">virtual int setRemoteRenderModeEx(uid_t uid, media::base::RENDER_MODE_TYPE renderMode,
       VIDEO_MIRROR_MODE_TYPE mirrorMode, const RtcConnection&amp; connection) = 0;</codeblock>
         <codeblock props="bp" outputclass="language-cpp">UFUNCTION(BlueprintCallable, Category = &quot;Agora|RtcEngineProxy&quot;)
	int SetRemoteRenderModeEx(int64 uid, ERENDER_MODE_TYPE renderMode, EVIDEO_MIRROR_MODE_TYPE mirrorMode, const FRtcConnection&amp; connection);</codeblock>
            <codeblock props="electron" outputclass="language-typescript">abstract setRemoteRenderModeEx(
    uid: number,
    renderMode: RenderModeType,
    mirrorMode: VideoMirrorModeType,
    connection: RtcConnection
  ): number;</codeblock>
            <codeblock props="unity cs" outputclass="language-csharp">public abstract int SetRemoteRenderModeEx(uint uid, RENDER_MODE_TYPE renderMode, VIDEO_MIRROR_MODE_TYPE mirrorMode, RtcConnection connection);</codeblock>
            <codeblock props="rn" outputclass="language-typescript">abstract setRemoteRenderModeEx(
    uid: number,
    renderMode: RenderModeType,
    mirrorMode: VideoMirrorModeType,
    connection: RtcConnection
  ): number;</codeblock>
            <codeblock props="flutter" outputclass="language-dart">Future&lt;void> setRemoteRenderModeEx(
      {required int uid,
      required RenderModeType renderMode,
      required VideoMirrorModeType mirrorMode,
      required RtcConnection connection});</codeblock> </p>
        </section>
        <section id="detailed_desc">
            <title>Details</title>
            <p>After initializing the video view of a remote user, you can call this method to update its rendering and mirror modes. This method affects only the video view that the local user sees.<note id="note_dpq_mtr_mqb" type="attention">
            <ul id="ul_ft3_ntr_mqb">
            <li props="native unreal bp flutter electron">Call this method after initializing the remote view by calling the <xref keyref="setupRemoteVideo" /> method.</li>
            <li props="rn">Call this method after rendering the <xref keyref="RtcSurfaceView"/> or <xref keyref="RtcTextureView"/> component corresponding to the remote user ID.</li>
            <li>During a call, you can call this method as many times as necessary to update the display mode of the video view of a remote user.</li>
            </ul> </note></p>
        </section>
        <section id="parameters">
            <title>Parameters</title>
            <parml>
            <plentry>
                <pt>uid</pt>
                <pd>The user ID of the remote user.</pd>
            </plentry>
            <plentry>
                <pt>renderMode</pt>
                <pd>
                    <p props="ios mac cpp unreal bp unity electron rn flutter cs">The video display mode of the remote user. See <xref keyref="RENDER_MODE_TYPE" />.</p>
                    <p props="android">The video display mode of the remote user:<ul conkeyref="setLocalRenderMode2/rendermodetype">
                    <li />
                    </ul> </p>
                </pd>
            </plentry>
            <plentry>
                <pt>mirrorMode</pt>
                <pd>
                    <p props="ios mac cpp unreal bp unity electron rn flutter cs">The mirror mode of the remote user view. See <xref keyref="VIDEO_MIRROR_MODE_TYPE" />.</p>
                    <p props="android">The mirror mode of the remote user view:<ul conkeyref="setLocalRenderMode2/videomirrormodetype">
                    <li />
                    </ul> </p>
                </pd>
            </plentry>
            <plentry conkeyref="joinChannelEx/connection">
                <pt />
                <pd />
            </plentry>
            </parml> </section>
        <section id="return_values">
            <title><ph keyref="return-section-title"/></title>
            <p props="flutter">When the method call succeeds, there is no return value; when fails, the <xref keyref="AgoraRtcException"/> exception is thrown; and you need to catch the exception and handle it accordingly. <ph props="cn">See <xref keyref="error-code-link"/> for details and resolution suggestions.</ph></p>
            <ul>
            <li props="mac cpp unreal bp unity electron rn">0: Success.</li>
            <li>&lt; 0: Failure. <ph props="cn">See <xref keyref="error-code-link"/> for details and resolution suggestions.</ph></li>
            </ul> </section>
    </refbody>
</reference>