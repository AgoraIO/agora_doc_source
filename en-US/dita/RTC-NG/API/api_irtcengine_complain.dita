<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE reference PUBLIC "-//OASIS//DTD DITA Reference//EN" "reference.dtd">
<reference id="api_irtcengine_complain">
    <title><ph keyref="complain" /></title>
    <shortdesc id="short"><ph id="shortdesc">Allows a user to complain about the call quality after a call ends.</ph></shortdesc>
    <prolog>
        <metadata>
            <keywords>
                <indexterm keyref="complain" />
            </keywords>
        </metadata>
    </prolog>
    <refbody>
        <section id="prototype">
            <p outputclass="codeblock">
            <codeblock props="android" outputclass="language-java">public abstract int complain(String callId, String description);</codeblock>
            <codeblock props="ios mac" outputclass="language-objectivec">- (int)complain:(NSString * _Nonnull)callId
    description:(NSString * _Nullable)description;</codeblock>
            <codeblock props="cpp" outputclass="language-cpp">virtual int complain(const char* callId, const char* description) = 0;</codeblock>
            <codeblock props="electron" outputclass="language-typescript">abstract complain(callId: string, description: string): number;</codeblock>
            <codeblock props="unity" outputclass="language-csharp">public abstract int Complain(string callId, string description);</codeblock>
            <codeblock props="rn" outputclass="language-typescript">abstract complain(callId: string, description: string): number;</codeblock>
            <codeblock props="flutter" outputclass="language-dart">Future&lt;void&gt; complain({required String callId, required String description});</codeblock>
            <codeblock props="unreal" outputclass="language-cpp" /></p>
        </section>
        <section id="detailed_desc">
            <p>This method allows users to complain about the quality of the call. Call this method after the user leaves the channel.</p>
        </section>
        <section id="parameters">
            <title>Parameters</title>
            <parml>
            <plentry>
                <pt>callId</pt>
                <pd>The current call ID. You can get the call ID by calling <xref keyref="getCallId" />.</pd>
            </plentry>
            <plentry>
                <pt>description</pt>
                <pd><ph props="native unity">(Optional) </ph><ph>A description of the call. The string length should be less than 800 bytes.</ph></pd>
            </plentry>
            </parml> </section>
        <section id="return_values" props="native electron unity rn">
            <title>Returns</title>
            <ul>
            <li>0: Success.</li>
            <li>&lt; 0: Failure.<ul>
                <li>-2: The parameter is invalid.</li>
                <li>3: The SDK is not ready. Possible reasons include the following:<ul>
                            <li>The initialization of <xref keyref="IRtcEngine" /> fails. Reinitialize the <apiname keyref="IRtcEngine" />.</li>
                            <li>No user has joined the channel when the method is called. Please check your code logic.</li>
                            <li>The user has not left the channel when the <xref keyref="rate" /> or <xref keyref="complain" /> method is called. Please check your code logic.</li>
                            <li>The audio module is disabled. The program is not complete.</li>
                            </ul></li>
                </ul></li>
            </ul> </section>
    </refbody>
</reference>