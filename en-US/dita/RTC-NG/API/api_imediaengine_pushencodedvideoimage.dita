<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE reference PUBLIC "-//OASIS//DTD DITA Reference//EN" "reference.dtd">
<reference id="api_imediaengine_pushencodedvideoimage">
    <title><ph keyref="pushEncodedVideoImage" /></title>
    <shortdesc id="short"><ph id="shortdesc">Pushes the external encoded video frames to the SDK.</ph></shortdesc>
    <prolog>
        <metadata>
            <keywords>
                <indexterm keyref="pushEncodedVideoImage" />
            </keywords>
        </metadata>
    </prolog>
    <refbody>
        <section id="prototype">
            <p outputclass="codeblock">
            <codeblock props="android" outputclass="language-java">public abstract int pushExternalEncodedVideoFrame(
    ByteBuffer data, EncodedVideoFrameInfo frameInfo);
                            videoTrackId:(NSUInteger)videoTrackId;</codeblock>
            <codeblock props="ios mac" outputclass="language-objectivec" />
            <codeblock props="cpp" outputclass="language-cpp">virtual int pushEncodedVideoImage(const uint8_t* imageBuffer, size_t length,
                                    const agora::rtc::EncodedVideoFrameInfo&amp; videoEncodedFrameInfo) = 0;</codeblock>
            <codeblock props="electron" outputclass="language-typescript">abstract pushEncodedVideoImage(
    imageBuffer: Uint8Array,
    length: number,
    videoEncodedFrameInfo: EncodedVideoFrameInfo,
    videoTrackId?: number
  ): number;</codeblock>
            <codeblock props="unity" outputclass="language-csharp">public abstract int PushEncodedVideoImage(byte[] imageBuffer, uint length, EncodedVideoFrameInfo videoEncodedFrameInfo, uint videoTrackId = 0);</codeblock>
            <codeblock props="rn" outputclass="language-typescript">abstract pushEncodedVideoImage(
    imageBuffer: Uint8Array,
    length: number,
    videoEncodedFrameInfo: EncodedVideoFrameInfo,
    videoTrackId?: number
  ): number;</codeblock>
            <codeblock props="flutter" outputclass="language-dart">Future&lt;void&gt; pushEncodedVideoImage(
      {required Uint8List imageBuffer,
      required int length,
      required EncodedVideoFrameInfo videoEncodedFrameInfo,
      int videoTrackId = 0});</codeblock>
            <codeblock props="reserve" outputclass="language-cpp" /></p>
        </section>
        <section id="detailed_desc">
            <p id="desc1">After calling <xref keyref="setExternalVideoSource" /> to enable external video source and set the <parmname>sourceType</parmname> parameter to <apiname keyref="ENCODED_VIDEO_FRAME" />, you can call this method to push the encoded external video frame to the SDK.</p>
        </section>
        <section id="parameters">
            <title>Parameters</title>
            <parml>
            <plentry id="data">
                <pt props="android">data</pt>
                <pt props="cpp electron unity rn flutter">imageBuffer</pt>
                <pd>The buffer of the external encoded video frame.</pd>
            </plentry>
            <plentry props="cpp electron unity rn flutter" id="length">
                <pt>length</pt>
                <pd>Length of the externally encoded video frames.</pd>
            </plentry>
            <plentry id="frameinfo">
                <pt props="android">frameInfo</pt>
                <pt props="cpp electron unity rn flutter">videoEncodedFrameInfo</pt>
                <pd>Information about externally encoded video frames. See <xref keyref="EncodedVideoFrameInfo" />.</pd>
            </plentry>
            <plentry conkeyref="pushVideoFrameEx/videotrackid" props="android electron rn flutter">
                <pt />
                <pd />
            </plentry>
            </parml> </section>
        <section id="return_values">
            <title>Returns</title>
            <ul id="ul_uns_l2y_hqb">
            <li>0: Pushes the external encoded video frames to the SDK successfully.</li>
            <li>&lt; 0: Fails to push external encoded video frames to the SDK.</li>
            </ul> </section>
    </refbody>
</reference>