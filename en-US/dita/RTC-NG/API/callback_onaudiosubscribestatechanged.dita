<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE reference PUBLIC "-//OASIS//DTD DITA Reference//EN" "reference.dtd">
<reference id="callback_onaudiosubscribestatechanged">
    <title><ph keyref="onAudioSubscribeStateChanged"/></title>
    <shortdesc id="short"><ph id="shortdesc"
        >Occurs when the audio subscribing state changes.</ph></shortdesc>
    <prolog>
        <metadata>
            <keywords>
                <indexterm keyref="onAudioSubscribeStateChanged"/>
            </keywords>
        </metadata>
    </prolog>
    <refbody>
        <section id="prototype">
            <p outputclass="codeblock">
            <codeblock props="android" outputclass="language-java">public void onAudioSubscribeStateChanged(String channel, int uid, STREAM_SUBSCRIBE_STATE oldState,
      STREAM_SUBSCRIBE_STATE newState, int elapseSinceLastState) {}</codeblock>
            <codeblock props="ios mac" outputclass="language-objectivec">- (void)rtcEngine:(AgoraRtcEngineKit *_Nonnull)engine
                didAudioSubscribeStateChange:(NSString * _Nonnull)channelId
                uid:(unsigned int)uid
           oldState:(AgoraStreamSubscribeState)oldState
           newState:(AgoraStreamSubscribeState)newState
elapseSinceLastState:(int)elapseSinceLastState;</codeblock>
            <codeblock props="cpp" outputclass="language-cpp">virtual void onAudioSubscribeStateChanged(const char* channel,
     uid_t uid,
     STREAM_SUBSCRIBE_STATE oldState,
     STREAM_SUBSCRIBE_STATE newState,
     int elapseSinceLastState) {
     (void)channel;
     (void)uid;
     (void)oldState;
     (void)newState;
     (void)elapseSinceLastState;
     }</codeblock>
            <codeblock props="electron" outputclass="language-typescript">on(evt: EngineEvents.AUDIO_SUBSCRIBE_STATE_CHANGED, cb: (
     channel: string,
     uid: number,
     oldState: STREAM_SUBSCRIBE_STATE,
     newState: STREAM_SUBSCRIBE_STATE,
     elapseSinceLastState: number
     ) =&gt; void): this;</codeblock>
            <codeblock props="unity" outputclass="language-csharp">public virtual void OnAudioSubscribeStateChanged(string channel, uint uid, STREAM_SUBSCRIBE_STATE oldState,
            STREAM_SUBSCRIBE_STATE newState, int elapseSinceLastState)</codeblock>
            <codeblock props="rn" outputclass="language-typescript"/>
            <codeblock props="flutter" outputclass="language-dart">StreamSubscribeStateCallback? audioSubscribeStateChanged;</codeblock>
            </p>
        </section>
        <section id="detailed_desc">
            <dl outputclass="since" props="rtc">
            <dlentry props="native">
                <dt>Since</dt>
                <dd>v3.1.0</dd>
            </dlentry>
            </dl>
        </section>
        <section id="parameters">
            <title><ph keyref="callback-section-title"/></title>
            <p conkeyref="onJoinChannelSuccess/callback-desc" props="flutter rn"
            />
            <parml>
            <plentry conkeyref="onJoinChannelSuccess/engine" props="ios mac">
                <pt/>
                <pd/>
            </plentry>
            <plentry>
                <pt props="android cpp unity flutter">channel</pt>
                <pt props="ios mac">channelId</pt>
                <pd>The name of the channel.</pd>
            </plentry>
            <plentry props="android cpp unity electron ios mac flutter" id="uid">
                <pt>uid</pt>
                <pd>The ID of the remote user.</pd>
            </plentry>
            <plentry id="oldState">
                <pt>oldState</pt>
                <pd>The previous subscribing status, see <xref
                    keyref="STREAM_SUBSCRIBE_STATE"
                    />
                        for details.</pd>
            </plentry>
            <plentry id="newState">
                <pt>newState</pt>
                <pd>The current subscribing status, see <apiname
                    keyref="STREAM_SUBSCRIBE_STATE"/> for details.</pd>
            </plentry>
            <plentry id="elapseSinceLastState">
                <pt>elapseSinceLastState</pt>
                <pd>The time elapsed (ms) from the previous state to the current state.</pd>
            </plentry>
            </parml> </section>
    </refbody>
</reference>
