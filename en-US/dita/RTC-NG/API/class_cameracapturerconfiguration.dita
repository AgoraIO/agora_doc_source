<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE reference PUBLIC "-//OASIS//DTD DITA Reference//EN" "reference.dtd">
<reference id="class_cameracapturerconfiguration">
    <title> <ph keyref="CameraCapturerConfiguration"/> </title>
    <shortdesc id="short"><ph id="shortdesc">The camera capturer preference.</ph></shortdesc>
    <refbody>
        <section id="prototype">
            <p outputclass="codeblock">
            <codeblock props="android" outputclass="language-java">public class CameraCapturerConfiguration {
  public enum CAMERA_DIRECTION {
    CAMERA_REAR(0),
    CAMERA_FRONT(1);
  }
  public CAMERA_DIRECTION cameraDirection;
  static public class CaptureFormat {
    public int width;
    public int height;
    public int fps;
  }
  public CaptureFormat captureFormat;
}</codeblock>
            <codeblock props="ios mac" outputclass="language-objectivec">__attribute__((visibility("default"))) @interface AgoraCameraCapturerConfiguration: NSObject
    @property (assign, nonatomic) AgoraCameraDirection cameraDirection;
    @end</codeblock>
            <codeblock props="cpp" outputclass="language-cpp">struct CameraCapturerConfiguration {
  CAMERA_DIRECTION cameraDirection;
  char deviceId[MAX_DEVICE_ID_LENGTH];
  VideoFormat format;
};</codeblock>
            <codeblock props="electron" outputclass="language-typescript">export class CameraCapturerConfiguration {
  cameraDirection?: CameraDirection
  deviceId?: string
  format?: VideoFormat
}</codeblock>
            <codeblock props="unity" outputclass="language-csharp">public class CameraCapturerConfiguration
    {
        public CameraCapturerConfiguration()
        {
            deviceId = "";
            cameraDirection = CAMERA_DIRECTION.CAMERA_FRONT;
            format = new VideoFormat();
        }

        public CameraCapturerConfiguration(string deviceId, VideoFormat format,
            CAMERA_DIRECTION cameraDirection)
        {
            this.deviceId = deviceId;
            this.format = format;
            this.cameraDirection = cameraDirection;
        }

        public string deviceId { set; get; }
        public VideoFormat format { set; get; }
        public CAMERA_DIRECTION cameraDirection { set; get; }
    }</codeblock>
            <codeblock props="rn" outputclass="language-typescript">export class CameraCapturerConfiguration {
  cameraDirection?: CameraDirection;
  deviceId?: string;
  format?: VideoFormat;
}</codeblock>
            <codeblock props="flutter" outputclass="language-dart">class CameraCapturerConfiguration {
  const CameraCapturerConfiguration(
      {this.cameraDirection, this.deviceId, this.format});

  @JsonKey(name: 'cameraDirection')
  final CameraDirection? cameraDirection;
  @JsonKey(name: 'deviceId')
  final String? deviceId;
  @JsonKey(name: 'format')
  final VideoFormat? format;
  factory CameraCapturerConfiguration.fromJson(Map&lt;String, dynamic> json) =>
      _$CameraCapturerConfigurationFromJson(json);
  Map&lt;String, dynamic> toJson() => _$CameraCapturerConfigurationToJson(this);
}</codeblock>
            </p>
        </section>
        <section id="parameters">
            <title> <text
            conref="../conref/conref_api_metadata.dita#conref_api_metadata/property"
            /> </title>
            <parml>
            <plentry>
                <pt>cameraDirection</pt>
                <pd>
                    <note type="attention" props="cpp unity electron rn flutter">This parameter applies to Android and iOS only.</note><ph>The camera direction. </ph><ph props="ios cpp unity android rn flutter">See <xref keyref="CAMERA_DIRECTION" />.</ph></pd>
            </plentry>
            <plentry props="cpp android unity electron rn flutter">
                <pt props="cpp unity electron rn flutter">format</pt>
                <pt props="android">captureFormat</pt>
                <pd>See <xref keyref="VideoFormat"/>.</pd>
            </plentry>
            <plentry props="cpp unity electron rn flutter">
                <pt>deviceId</pt>
                <pd>
                    <note type="attention" props="cpp unity electron">This method applies to Windows only.</note><ph>The device ID of the playback device. </ph><ph props="cpp electron rn flutter">The maximum length is <xref keyref="MAX_DEVICE_ID_LENGTH_TYPE"/>.</ph></pd>
            </plentry>
            </parml> </section>
    </refbody>
</reference>
