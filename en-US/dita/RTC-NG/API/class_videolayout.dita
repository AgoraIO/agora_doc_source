<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE reference PUBLIC "-//OASIS//DTD DITA Reference//EN" "reference.dtd">
<reference id="class_videolayout">
    <title><ph keyref="VideoLayout"/></title>
    <shortdesc id="short"><ph id="shortdesc">Layout information of a specific sub-video stream within the mixed stream.</ph></shortdesc>
    <refbody>
        <section id="prototype">
            <p outputclass="codeblock">
            <codeblock props="android" outputclass="language-java">public static class VideoLayout {
    public String channelId;
    public int uid;
    public String strUid;
    public int videoState;
    public int x;
    public int y;
    public int width;
    public int height;
    @Override
    public String toString() {
      return "VideoLayout{"
          + "channelId='" + channelId + '\'' + ", uid=" + uid + ", strUid='" + strUid + '\''
          + ", videoState=" + videoState + ", x=" + x + ", y=" + y + ", width=" + width
          + ", height=" + height + '}';
    }
  }</codeblock>
            <codeblock props="ios mac" outputclass="language-objectivec">__attribute__((visibility("default"))) @interface AgoraVideoLayout: NSObject
@property(copy, nonatomic) NSString* _Nonnull channelId NS_SWIFT_NAME(channelId);
@property (assign, nonatomic) NSUInteger uid NS_SWIFT_NAME(uid);
@property(copy, nonatomic) NSString* _Nullable strUid NS_SWIFT_NAME(strUid);
@property (assign, nonatomic) NSUInteger videoState NS_SWIFT_NAME(videoState);
@property (assign, nonatomic) NSUInteger x NS_SWIFT_NAME(x);
@property (assign, nonatomic) NSUInteger y NS_SWIFT_NAME(y);
@property (assign, nonatomic) NSUInteger width NS_SWIFT_NAME(width);
@property (assign, nonatomic) NSUInteger height NS_SWIFT_NAME(height);
@end</codeblock>
            <codeblock props="cpp unreal" outputclass="language-cpp">struct VideoLayout
{
  const char* channelId;
  rtc::uid_t uid;
  user_id_t strUid;
  uint32_t x;
  uint32_t y;
  uint32_t width;
  uint32_t height;
  uint32_t videoState;
  VideoLayout() : channelId(OPTIONAL_NULLPTR), uid(0), strUid(OPTIONAL_NULLPTR), x(0), y(0), width(0), height(0), videoState(0) {}
};</codeblock>
            <codeblock props="bp" outputclass="language-cpp"/>
            <codeblock props="electron" outputclass="language-typescript"/>
            <codeblock props="unity cs" outputclass="language-csharp">public class VideoLayout
                {
                    public string channelId;
                    public uint uid;
                    public string strUid;
                    public uint x;
                    public uint y
                    public uint width;
                    public uint height;
                    public uint videoState;
                }</codeblock>
            <codeblock props="rn" outputclass="language-typescript">export class VideoLayout {
  channelId?: string;
  uid?: number;
  strUid?: string;
  x?: number;
  y?: number;
  width?: number;
  height?: number;
  videoState?: number;
}</codeblock>
            <codeblock props="flutter" outputclass="language-dart">@JsonSerializable(explicitToJson: true, includeIfNull: false)
class VideoLayout {
  const VideoLayout(
      {this.channelId,
      this.uid,
      this.strUid,
      this.x,
      this.y,
      this.width,
      this.height,
      this.videoState});
  @JsonKey(name: &#x27;channelId&#x27;)
  final String? channelId;
  @JsonKey(name: &#x27;uid&#x27;)
  final int? uid;
  @JsonKey(name: &#x27;strUid&#x27;)
  final String? strUid;
  @JsonKey(name: &#x27;x&#x27;)
  final int? x;
  @JsonKey(name: &#x27;y&#x27;)
  final int? y;
  @JsonKey(name: &#x27;width&#x27;)
  final int? width;
  @JsonKey(name: &#x27;height&#x27;)
  final int? height;
  @JsonKey(name: &#x27;videoState&#x27;)
  final int? videoState;
  factory VideoLayout.fromJson(Map&lt;String, dynamic&gt; json) =&gt;
      _$VideoLayoutFromJson(json);
  Map&lt;String, dynamic&gt; toJson() =&gt; _$VideoLayoutToJson(this);
}</codeblock> </p>
        </section>
        <section id="detailed_desc">
            <dl outputclass="since">
            <dlentry props="native">
                <dt>Since</dt>
                <dd>v4.3.0</dd>
            </dlentry>
            </dl>
            <p/>
        </section>
        <section id="parameters">
            <title><text conref="../conref/conref_api_metadata.dita#conref_api_metadata/property"/></title>
            <parml>
            <plentry>
                <pt>channelId</pt>
                <pd>The channel name to which the sub-video stream belongs.</pd>
            </plentry>
                <plentry>
                    <pt>uid</pt>
                    <pd>User ID who published this sub-video stream.</pd>
                </plentry>
                <plentry>
                    <pt>strUid</pt>
                    <pd>Reserved for future use.</pd>
                </plentry>
                <plentry>
                    <pt>x</pt>
                    <pd>X-coordinate (px) of the sub-video stream on the mixing canvas. The relative lateral displacement of the top left corner of the video for video mixing to the origin (the top left corner of the canvas).</pd>
                </plentry>
                <plentry>
                    <pt>y</pt>
                    <pd>Y-coordinate (px) of the sub-video stream on the mixing canvas. The relative longitudinal displacement of the top left corner of the captured video to the origin (the top left corner of the canvas).</pd>
                </plentry>
                <plentry>
                    <pt>width</pt>
                    <pd>Width (px) of the sub-video stream.</pd>
                </plentry>
                <plentry>
                    <pt>height</pt>
                    <pd>Heitht (px) of the sub-video stream.</pd>
                </plentry>
                <plentry>
                    <pt>videoState</pt>
                    <pd>Status of the sub-video stream on the video mixing canvas.<ul>
                        <li>0: Normal. The sub-video stream has been rendered onto the mixing canvas.</li>
                        <li>1: Placeholder image. The sub-video stream has no video frames and is displayed as a placeholder on the mixing canvas.</li>
                        <li>2: Black image. The sub-video stream is replaced by a black image.</li>
                        </ul></pd>
                </plentry>
            </parml> </section>
                </refbody>
</reference>
