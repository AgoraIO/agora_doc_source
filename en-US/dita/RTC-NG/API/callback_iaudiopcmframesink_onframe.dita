<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE reference PUBLIC "-//OASIS//DTD DITA Reference//EN" "reference.dtd">
<reference id="callback_iaudiopcmframesink_onframe">
    <title><ph keyref="onFrame_IAudioPcmFrameSink"/></title>
    <shortdesc id="short"><ph id="shortdesc">Occurs each time the player receives an audio frame.</ph></shortdesc>
    <prolog>
        <metadata>
            <keywords>
                <indexterm keyref="onFrame_IAudioPcmFrameSink"/>
            </keywords>
        </metadata>
    </prolog>
    <refbody>
        <section id="prototype">
            <p outputclass="codeblock">
            <codeblock props="android" outputclass="language-java">AudioFrame onFrame(AudioFrame frame);</codeblock>
            <codeblock props="ios mac" outputclass="language-objectivec">- (void)AgoraRtcMediaPlayer:(id&lt;AgoraRtcMediaPlayerProtocol> _Nonnull)playerKit
       didReceiveAudioFrame:(AgoraAudioFrame* _Nonnull)audioFrame NS_SWIFT_NAME(AgoraRtcMediaPlayer(_:didReceiveAudioFrame:));</codeblock>
            <codeblock props="cpp unreal" outputclass="language-cpp">virtual void onFrame(agora::media::base::AudioPcmFrame* frame) = 0;</codeblock>
         <codeblock props="bp" outputclass="language-cpp">DECLARE_DYNAMIC_MULTICAST_DELEGATE_OneParam(FOnFrame, const FAudioPcmFrame&amp;, pcmFrame);</codeblock>
            <codeblock props="electron" outputclass="language-typescript">onFrame?(frame: AudioPcmFrame): void;</codeblock>
            <codeblock props="unity cs" outputclass="language-csharp">public virtual bool OnFrame(AudioPcmFrame frame)
        {
            return true;
        }</codeblock>
            <codeblock props="rn" outputclass="language-typescript">onFrame?(frame: AudioPcmFrame): void;</codeblock>
            <codeblock props="flutter" outputclass="language-dart">final void Function(AudioPcmFrame frame)? onFrame;</codeblock>
            <codeblock props="reserve" outputclass="language-cpp"/></p>
        </section>
        <section id="detailed_desc">
            <p>After registering the audio frame observer, the callback occurs every time the player receives an audio frame, reporting the detailed information of the audio frame.</p>
        </section>
        <section id="parameters">
            <title><ph keyref="callback-section-title"/></title>
            <parml>
            <plentry>
                <pt props="android cpp unreal bp electron unity cs rn flutter">frame</pt>
                <pt props="apple">audioFrame</pt>
                <pd><ph>The audio frame information. </ph><ph props="android apple">See <ph keyref="AudioFrame"/>. </ph><ph props="cpp unreal bp unity cs electron rn flutter">See <ph keyref="AudioPcmFrame"/>.</ph></pd>
            </plentry>
            <plentry props="ios mac">
                <pt>playerKit</pt>
                <pd>See <xref keyref="IMediaPlayer"/>.</pd>
            </plentry>
            </parml> </section>
        <section id="return_values" props="android unity cs">
            <title>Returns</title>

            <p props="android">Passes in the audio data after setting the <parmname>mode</parmname> parameter in <xref keyref="registerAudioFrameObserver2_IMediaPlayer"/> for handling audio data.</p>
            <p props="unity cs">Without practical meaning.</p>
        </section>
    </refbody>
</reference>
