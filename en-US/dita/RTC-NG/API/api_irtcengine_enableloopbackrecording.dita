<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE reference PUBLIC "-//OASIS//DTD DITA Reference//EN" "reference.dtd">
<reference id="api_enableloopbackrecording">
    <title><ph keyref="enableLoopbackRecording" /></title>
    <shortdesc id="short"><ph id="shortdesc">Enables loopback audio capture.</ph></shortdesc>
    <prolog>
        <metadata>
            <keywords>
                <indexterm keyref="enableLoopbackRecording" />
            </keywords>
        </metadata>
    </prolog>
    <refbody>
        <section id="prototype">
            <p outputclass="codeblock">
            <codeblock props="android" outputclass="language-java" />
            <codeblock props="ios mac" outputclass="language-objectivec" />
            <codeblock props="cpp" outputclass="language-cpp">virtual int enableLoopbackRecording(bool enabled) = 0;</codeblock>
            <codeblock props="electron" outputclass="language-typescript">abstract enableLoopbackRecording(
    enabled: boolean,
    deviceName?: string
  ): number;</codeblock>
            <codeblock props="unity" outputclass="language-csharp">public abstract int EnableLoopbackRecording(bool enabled, string deviceName = "");</codeblock>
            <codeblock props="rn" outputclass="language-typescript">abstract enableLoopbackRecording(
    enabled: boolean,
    deviceName?: string
  ): number;</codeblock>
            <codeblock props="flutter" outputclass="language-dart">Future&lt;void&gt; enableLoopbackRecording(
    {required bool enabled, String? deviceName});</codeblock> </p>
        </section>
        <section id="detailed_desc">
            <p>If you enable loopback audio capture, the output of the sound card is mixed into the audio stream sent to the other end.</p>
            <note id="note_v4j_tbx_jqb" type="attention">
            <ul>
            <li props="cpp unity electron flutter">Applies to the macOS and Windows platforms only.</li>
            <li>macOS does not support loopback audio capture of the default sound card. If you need to use this method, use a virtual sound card and pass its name to the <parmname>deviceName</parmname> parameter. Agora recommends that you use Soundflower for loopback audio capture.</li>
            <li>You can call this method either before or after joining a channel.</li>
            </ul> </note> </section>
        <section id="parameters">
            <title>Parameters</title>
            <parml>
            <plentry>
                <pt>enabled</pt>
                <pd>Whether to enable loopback audio capture.<ul id="ul_qjq_swq_t4b">
                    <li><codeph><ph keyref="true" /></codeph>: Enable loopback audio capture.</li>
                    <li><codeph><ph keyref="false" /></codeph>: (Default) Disable loopback audio capture.</li>
                    </ul></pd>
            </plentry>
            <plentry id="device_name">
                <pt>deviceName</pt>
                <pd props="mac">The device name of the virtual sound card. The default is set to null, which means the SDK uses Soundflower for loopback audio capture.</pd>
                <pd props="electron cpp unity flutter">
                    <ul>
                    <li>macOS: The device name of the virtual sound card. The default is set to null, which means the SDK uses Soundflower for loopback audio capture.</li>
                    <li>Windows: The device name of the sound card. The default is set to null, which means the SDK uses the sound card of your device for loopback audio capture.</li>
                    </ul> </pd>
            </plentry>
            </parml> </section>
        <section id="return_values" props="native unity">
            <title>Returns</title>
            <ul>
            <li>0: Success.</li>
            <li>&lt; 0: Failure.</li>
            </ul> </section>
    </refbody>
</reference>