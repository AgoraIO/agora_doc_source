<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE reference PUBLIC "-//OASIS//DTD DITA Reference//EN" "reference.dtd">
<reference id="callback_irtcengineeventhandler_onrequesttoken">
    <title> <ph keyref="onRequestToken" /> </title>
    <shortdesc id="short"><ph id="shortdesc">Occurs when the token expires.</ph></shortdesc>
    <prolog>
        <metadata>
            <keywords>
                <indexterm keyref="onRequestToken" />
            </keywords>
        </metadata>
    </prolog>
    <refbody>
        <section id="prototype">
            <p outputclass="codeblock">
            <codeblock props="android" outputclass="language-java">public void onRequestToken() {}</codeblock>
            <codeblock props="ios mac" outputclass="language-objectivec">- (void)rtcEngineRequestToken:(AgoraRtcEngineKit * _Nonnull)engine;</codeblock>
            <codeblock props="cpp unreal" outputclass="language-cpp">virtual void onRequestToken()</codeblock>
         <codeblock props="bp" outputclass="language-cpp">DECLARE_DYNAMIC_MULTICAST_DELEGATE(FOnRequestToken);</codeblock>
            <codeblock props="electron" outputclass="language-typescript">  onRequestToken?(connection: RtcConnection): void;</codeblock>
            <codeblock props="unity cs" outputclass="language-csharp">public virtual void OnRequestToken(RtcConnection connection) {}</codeblock>
            <codeblock props="rn" outputclass="language-typescript">  onRequestToken?(connection: RtcConnection): void;</codeblock>
            <codeblock props="flutter" outputclass="language-dart">final void Function(RtcConnection connection)? onRequestToken;</codeblock>
            <codeblock props="reserve" outputclass="language-cpp"></codeblock></p>
        </section>
        <section id="detailed_desc" deliveryTarget="details" otherprops="no-title">
            <p id="desc1">在音视频互动过程中，如果 Token 失效，SDK 会触发该回调报告 Token 已过期。</p>
            <p id="renew">When receiving this callback, you need to generate a new token on your token server and you can renew your token through one of the following ways:<ul>
                   <li>单频道场景：<ul>
                            <li>Call <xref keyref="renewToken"/> to pass in the new token.</li>
                            <li>Call <xref keyref="leaveChannel2"/> to leave the current channel and then pass in the new token when you call <xref keyref="joinChannel2" /> to join a channel.</li>
                        </ul></li>
                   <li>多频道场景：调用 <xref keyref="updateChannelMediaOptionsEx"/> 传入新的 Token。</li>
                   </ul></p>
        </section>
        <section id="restriction" deliveryTarget="details">
            <title>Restrictions</title>
            <p>None.</p>
        </section>
        <section id="parameters" deliveryTarget="details" props="apple unity electron rn flutter cs">
            <title> <ph keyref="callback-section-title" /> </title>
            <parml>
            <plentry conkeyref="onJoinChannelSuccess/engine" props="ios mac">
                <pt />
                <pd />
            </plentry>
            <plentry props="unity electron rn flutter cs" conkeyref="joinChannelEx/connection">
                <pt />
                <pd />
            </plentry>
            </parml> </section>
    </refbody>
</reference>
