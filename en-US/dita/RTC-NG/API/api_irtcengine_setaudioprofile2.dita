<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE reference PUBLIC "-//OASIS//DTD DITA Reference//EN" "reference.dtd">
<reference id="api_irtcengine_setaudioprofile2">
    <title><ph keyref="setAudioProfile2" /></title>
    <shortdesc id="short"><ph id="shortdesc">Sets the audio parameters and application scenarios.</ph></shortdesc>
    <prolog>
        <metadata>
            <keywords>
                <indexterm keyref="setAudioProfile2" />
            </keywords>
        </metadata>
    </prolog>
    <refbody>
        <section id="prototype">
            <p outputclass="codeblock">
            <codeblock props="android" outputclass="language-java">public synchronized int setAudioProfile(int profile)</codeblock>
            <codeblock props="ios mac" outputclass="language-objectivec">- (int)setAudioProfile:(AgoraAudioProfile)profile;</codeblock>
            <codeblock props="cpp unreal" outputclass="language-cpp">virtual int setAudioProfile(AUDIO_PROFILE_TYPE profile) = 0;</codeblock>
            <codeblock props="electron" outputclass="language-typescript">abstract setAudioProfile(profile: AudioProfileType, scenario?: AudioScenarioType): number;</codeblock>
            <codeblock props="unity cs" outputclass="language-csharp">public abstract int SetAudioProfile(AUDIO_PROFILE_TYPE profile);</codeblock>
            <codeblock props="rn" outputclass="language-typescript" />
            <codeblock props="flutter" outputclass="language-dart" /> </p>
        </section>
        <section id="detailed_desc">
            <title>Details</title>
            <note type="attention">
            <ul>
            <li>You can call this method either before or after joining a channel.</li>
            <li>In scenarios requiring high-quality audio, such as online music tutoring, Agora recommends you set <codeph>profile</codeph> as <codeph><ph keyref="AUDIO_PROFILE_MUSIC_HIGH_QUALITY" />(4)</codeph>.</li>
            <li>If you need to set the audio scenario, you can either call <xref keyref="setAudioScenario"/>, or <xref keyref="initialize" /> and set the <parmname props="android">mAudioScenario</parmname><parmname props="ios mac cpp unreal bp unity cs flutter">audioScenario</parmname> in <xref keyref="RtcEngineConfig" />.</li>
            </ul> </note> </section>
        <section id="parameters">
            <title>Parameters</title>
            <parml>
            <plentry>
                <pt>profile</pt>
                <pd>
                    <p conkeyref="setAudioProfile/profile" />
                </pd>
            </plentry>
            </parml> </section>
        <section id="return_values" props="native unreal bp electron unity rn cs">
            <title>Returns</title>
            <ul>
            <li>0: Success.</li>
            <li> &lt; 0: Failure. <ph props="cn">See <xref keyref="error-code-link"/> for details and resolution suggestions.</ph></li>
            </ul> </section>
    </refbody>
</reference>
