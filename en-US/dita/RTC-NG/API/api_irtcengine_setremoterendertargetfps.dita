<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE reference PUBLIC "-//OASIS//DTD DITA Reference//EN" "reference.dtd">
<reference id="api_irtcengine_setremoterendertargetfps">
    <title><ph keyref="setRemoteRenderTargetFps"/></title>
    <shortdesc id="short"><ph id="shortdesc">Sets the maximum frame rate for rendering remote video.</ph></shortdesc>
    <prolog>
        <metadata>
            <keywords>
                <indexterm keyref="setRemoteRenderTargetFps"/>
            </keywords>
        </metadata>
    </prolog>
    <refbody>
        <section id="prototype">
            <p outputclass="codeblock">
            <codeblock props="android" outputclass="language-java">public abstract int setRemoteRenderTargetFps(int targetFps);</codeblock>
            <codeblock props="hmos" outputclass="language-arkts"/>
            <codeblock props="ios mac" outputclass="language-objectivec">- (int)setRemoteRenderTargetFps:(int)targetFps;</codeblock>
            <codeblock props="cpp unreal" outputclass="language-cpp">virtual int setRemoteRenderTargetFps(int targetFps) = 0;</codeblock>
            <codeblock props="bp" outputclass="language-cpp">UFUNCTION(BlueprintCallable, Category = "Agora|IRtcEngine")
	int SetRemoteRenderTargetFps(int targetFps);</codeblock>
            <codeblock props="electron" outputclass="language-typescript">abstract setRemoteRenderTargetFps(targetFps: number): number;</codeblock>
            <codeblock props="unity cs" outputclass="language-csharp">public abstract int SetRemoteRenderTargetFps(int targetFps);</codeblock>
            <codeblock props="rn" outputclass="language-typescript">abstract setRemoteRenderTargetFps(targetFps: number): number;</codeblock>
            <codeblock props="flutter" outputclass="language-dart">Future&lt;void> setRemoteRenderTargetFps(int targetFps);</codeblock> </p>
        </section>
        <section id="detailed_desc" deliveryTarget="details" otherprops="no-title">
            <dl outputclass="since">
            <dlentry props="native">
                <dt>Since</dt>
                <dd>v4.5.0</dd>
            </dlentry>
            </dl>
            <p/>
        </section>
        <section id="scenario" deliveryTarget="details">
            <title>Applicable scenarios</title>
            <p>In scenarios where the video rendering frame rate is not critical (e.g., screen sharing, online education) or when the remote users are using mid-to-low-end devices, you can call this method to set the maximum frame rate for video rendering on the remote client. The SDK will attempt to render the actual frame rate as close as possible to this value, which helps to reduce CPU consumption and improve system performance.</p>
        </section>
        <section id="timing" deliveryTarget="details">
            <title>Call timing</title>
            <p>You can call this method either before or after joining a channel.</p>
        </section>        
        <section id="restriction" deliveryTarget="details">
            <title>Restrictions</title>
            <p>None.</p>
        </section>
        <section id="parameters" deliveryTarget="details">
            <title>Parameters</title>
            <parml>
            <plentry conkeyref="setLocalRenderTargetFps/targetfps">
                    <pt/>
                    <pd/>
                </plentry>
            </parml> </section>
        <section id="return_values">
            <title><ph keyref="return-section-title"/></title>
            <p props="flutter">When the method call succeeds, there is no return value; when fails, the <xref keyref="AgoraRtcException"/> exception is thrown. You need to catch the exception and handle it accordingly. <ph props="cn">See <xref keyref="error-code-link"/> for details and resolution suggestions.</ph></p>
            <ul props="native unreal bp electron unity rn cs">
                <li>0: Success.</li>
                <li>&lt; 0: Failure. <ph props="cn">See <xref keyref="error-code-link"/> for details and resolution suggestions.</ph></li>
                </ul> </section>
        </refbody>
</reference>
