<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE reference PUBLIC "-//OASIS//DTD DITA Reference//EN" "reference.dtd">
<reference id="callback_ivideoframeobserver_getrotationapplied">
    <title><ph keyref="getRotationApplied" /></title>
    <shortdesc id="short"><ph id="shortdesc">Occurs each time the SDK receives a video frame, and prompts you whether to rotate the captured video.</ph></shortdesc>
    <prolog>
        <metadata>
            <keywords>
                <indexterm keyref="getRotationApplied" />
            </keywords>
        </metadata>
    </prolog>
    <refbody>
        <section id="prototype">
            <p outputclass="codeblock">
            <codeblock props="android" outputclass="language-java">boolean getRotationApplied();</codeblock>
            <codeblock props="hmos" outputclass="language-arkts">getRotationApplied?: () =&gt; boolean;</codeblock>
            <codeblock props="ios mac">- (BOOL)getRotationApplied;</codeblock>
            <codeblock props="cpp unreal" outputclass="language-cpp">virtual bool getRotationApplied() { return false; }</codeblock>
         <codeblock props="bp" outputclass="language-cpp">DECLARE_DYNAMIC_MULTICAST_DELEGATE(FGetRotationApplied);</codeblock>
            <codeblock props="electron" outputclass="language-typescript" />
            <codeblock props="unity cs" outputclass="language-csharp" />
            <codeblock props="rn" outputclass="language-typescript" />
            <codeblock props="flutter" outputclass="language-dart" /> </p>
        </section>
        <section id="detailed_desc">
            <p props="cpp unreal bp android">If you want to rotate the captured video according to the <parmname>rotation</parmname> member in the <ph><apiname keyref="VideoFrame"/></ph> class, ensure that you register this callback when calling <xref keyref="registerVideoFrameObserver" />. After you successfully register the video frame observer, the SDK triggers this callback each time it receives a video frame. You need to set whether to rotate the video frame in the return value of this callback.</p>
            <p props="ios mac">If the video has been rotated according to <parmname>rotation</parmname> in <xref keyref="VideoFrame" /> on the capture device, you do not need to call this method to set the video rotation.</p>
            <note type="attention" id="note1">
                <ul>
                    <li props="android cpp unreal bp">On the Android platform, the supported video data formats for this callback are: I420, RGBA, and Texture.</li>
                    <li props="cpp unreal bp">On the Windows platform, the supported video data formats for this callback are: I420, RGBA, and TextureBuffer.</li>
                    <li props="ios cpp unreal bp">On the iOS platform, the supported video data formats for this callback are: I420, RGBA, and CVPixelBuffer.</li>
                    <li props="mac cpp unreal bp">On the macOS platform, the supported video data formats for this callback are: I420 and RGBA.</li>
                </ul>
            </note> </section>
        <section id="return_values">
            <title>Returns</title>
            <p>Sets whether to rotate the captured video:<ul>
            <li><codeph><ph keyref="true" /></codeph>: Rotate the captured video.</li>
            <li><codeph><ph keyref="false" /></codeph>: (Default) Do not rotate the captured video.</li>
            </ul></p>
        </section>
    </refbody>
</reference>
