<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE reference PUBLIC "-//OASIS//DTD DITA Reference//EN" "reference.dtd">
<reference id="api_irtcengine_setmaxmetadatasize">
    <title><ph keyref="setMaxMetadataSize" /></title>
    <shortdesc id="short"><ph id="shortdesc">Sets the maximum size of the media metadata.</ph></shortdesc>
    <prolog>
        <metadata>
            <keywords>
                <indexterm keyref="setMaxMetadataSize" />
            </keywords>
        </metadata>
    </prolog>
    <refbody>
        <section id="prototype">
            <p outputclass="codeblock">
            <codeblock props="android" outputclass="language-java" />
            <codeblock props="ios mac" outputclass="language-objectivec" />
            <codeblock props="cpp unreal bp" outputclass="language-cpp" />
            <codeblock props="electron" outputclass="language-typescript">abstract setMaxMetadataSize(size: number): number;</codeblock>
            <codeblock props="unity cs" outputclass="language-csharp">public abstract int SetMaxMetadataSize(int size);</codeblock>
            <codeblock props="rn" outputclass="language-typescript">abstract setMaxMetadataSize(size: number): number;</codeblock>
            <codeblock props="flutter" outputclass="language-dart">Future&lt;void&gt; setMaxMetadataSize(int size);</codeblock>
            <codeblock props="reserve" outputclass="language-cpp" /></p>
        </section>
        <section id="detailed_desc">
            <title>Details</title>
            <p>After calling <xref keyref="registerMediaMetadataObserver" />, you can call this method to set the maximum size of the media metadata.</p>
        </section>
        <section id="parameters">
            <title>Parameters</title>
            <parml>
            <plentry>
                <pt>size</pt>
                <pd>The maximum size of media metadata.</pd>
            </plentry>
            </parml> </section>
        <section id="return_values">
            <title><ph keyref="return-section-title" /></title>
            <p props="flutter">When the method call succeeds, there is no return value; when fails, the <xref keyref="AgoraRtcException" /> exception is thrown; and you need to catch the exception and handle it accordingly.</p>
            <ul>
            <li props="native unreal bp unity electron rn cs">0: Success.</li>
            <li>&lt; 0: Failure.</li>
            </ul> </section>
    </refbody>
</reference>