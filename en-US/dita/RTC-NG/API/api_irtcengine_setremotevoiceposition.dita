<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE reference PUBLIC "-//OASIS//DTD DITA Reference//EN" "reference.dtd">
<reference id="api_irtcengine_setremotevoiceposition">
    <title><ph keyref="setRemoteVoicePosition" /></title>
    <shortdesc id="short"><ph id="shortdesc">Sets the 2D position (the position on the horizontal plane) of the remote user's voice.</ph></shortdesc>
    <prolog>
        <metadata>
            <keywords>
                <indexterm keyref="setRemoteVoicePosition" />
            </keywords>
        </metadata>
    </prolog>
    <refbody>
        <section id="prototype">
            <p outputclass="codeblock">
            <codeblock props="android" outputclass="language-java">public abstract int setRemoteVoicePosition(int uid, double pan, double gain);</codeblock>
            <codeblock props="ios mac" outputclass="language-objectivec">- (int)setRemoteVoicePosition:(NSUInteger)uid pan:(double)pan gain:(double)gain;</codeblock>
            <codeblock props="cpp unreal bp" outputclass="language-cpp">virtual int setRemoteVoicePosition(uid_t uid, double pan, double gain) = 0;</codeblock>
            <codeblock props="electron" outputclass="language-typescript">abstract setRemoteVoicePosition(
    uid: number,
    pan: number,
    gain: number
  ): number;</codeblock>
            <codeblock props="unity cs" outputclass="language-csharp">public abstract int SetRemoteVoicePosition(uint uid, double pan, double gain);</codeblock>
            <codeblock props="rn" outputclass="language-typescript">abstract setRemoteVoicePosition(
    uid: number,
    pan: number,
    gain: number
  ): number;</codeblock>
            <codeblock props="flutter" outputclass="language-dart">Future&lt;void&gt; setRemoteVoicePosition(
    {required int uid, required double pan, required double gain});</codeblock>
            <codeblock props="reserve" outputclass="language-cpp" /></p>
        </section>
        <section id="detailed_desc">
            <title>Details</title>
            <p>This method sets the 2D position and volume of a remote user, so that the local user can easily hear and identify the remote user's position.</p>
            <p>When the local user calls this method to set the voice position of a remote user, the voice difference between the left and right channels allows the local user to track the real-time position of the remote user, creating a sense of space. This method applies to massive multiplayer online games, such as Battle Royale games.</p>
            <note type="attention">
            <ul>
            <li>For this method to work, enable stereo panning for remote users by calling the <xref keyref="enableSoundPositionIndication" /> method before joining a channel.</li>
            <li>For the best voice positioning, Agora recommends using a wired headset.</li>
            <li>Call this method after joining a channel.</li>
            </ul> </note> </section>
        <section id="parameters">
            <title>Parameters</title>
            <parml>
            <plentry>
                <pt>uid</pt>
                <pd>The user ID of the remote user.</pd>
            </plentry>
            <plentry>
                <pt>pan</pt>
                <pd>The voice position of the remote user. The value ranges from -1.0 to 1.0:<ul>
                    <li>0.0: (Default) The remote voice comes from the front.</li>
                    <li>-1.0: The remote voice comes from the left.</li>
                    <li>1.0: The remote voice comes from the right.</li>
                    </ul> </pd>
            </plentry>
            <plentry>
                <pt>gain</pt>
                <pd>The volume of the remote user. The value ranges from 0.0 to 100.0. The default value is 100.0 (the original volume of the remote user). The smaller the value, the lower the volume.</pd>
            </plentry>
            </parml> </section>
        <section id="return_values">
            <title><ph keyref="return-section-title" /></title>
            <p props="flutter">When the method call succeeds, there is no return value; when fails, the <xref keyref="AgoraRtcException" /> exception is thrown; and you need to catch the exception and handle it accordingly.</p>
            <ul>
            <li props="native unreal bp unity electron rn cs">0: Success.</li>
            <li>&lt; 0: Failure.</li>
            </ul> </section>
    </refbody>
</reference>