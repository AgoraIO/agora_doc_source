<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE reference PUBLIC "-//OASIS//DTD DITA Reference//EN" "reference.dtd">
<reference id="api_imediarecorder_release">
    <title><ph keyref="releaseRecorder" /></title>
    <shortdesc id="short"><ph id="shortdesc">Release the <xref keyref="IMediaRecorder" /> object.</ph></shortdesc>
    <prolog>
        <metadata>
            <keywords>
                <indexterm keyref="releaseRecorder" />
            </keywords>
        </metadata>
    </prolog>
    <refbody>
        <section id="prototype">
            <p outputclass="codeblock">
            <codeblock props="android" outputclass="language-java">public void release()</codeblock>
            <codeblock props="ios mac" outputclass="language-objectivec">+ (void)destroy;</codeblock>
            <codeblock props="cpp unreal" outputclass="language-cpp">virtual void release() = 0;</codeblock>
            <codeblock props="electron" outputclass="language-typescript">abstract release(): void;</codeblock>
            <codeblock props="unity cs" outputclass="language-csharp"/>
            <codeblock props="rn" outputclass="language-typescript">abstract release(): void;</codeblock>
            <codeblock props="flutter" outputclass="language-dart">Future&lt;void> release();</codeblock>
            <codeblock props="reserve" outputclass="language-cpp"></codeblock></p>
        </section>
        <section id="detailed_desc">
            <title>Details</title>
            <p><ph>This method releases the <xref keyref="IMediaRecorder" /> object and all resources used by the <xref keyref="IRtcEngine" /> object. </ph><ph props="android apple rn electron flutter">After calling this method, if you need to start recording again, you need to call <xref keyref="createMediaRecorder" /> again to get the <xref keyref="IMediaRecorder" /> object.</ph></p>
        </section>
    </refbody>
</reference>