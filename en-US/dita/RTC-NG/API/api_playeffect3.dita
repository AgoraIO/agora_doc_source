<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE reference PUBLIC "-//OASIS//DTD DITA Reference//EN" "reference.dtd">
<reference id="api_playeffect3">
    <title><ph keyref="playEffect3" /></title>
    <shortdesc id="short"><ph id="shortdesc">Plays the specified local or online audio effect file.</ph></shortdesc>
    <prolog>
        <metadata>
            <keywords>
                <indexterm keyref="playEffect3" />
            </keywords>
        </metadata>
    </prolog>
    <refbody>
        <section id="prototype">
         <p outputclass="codeblock" props="rtc-ng">
         <codeblock props="unity" outputclass="language-csharp">public abstract int PlayEffect(int soundId, string filePath, int loopCount, double pitch, double pan, int gain, bool publish = false, int startPos = 0);</codeblock></p>
          <p outputclass="codeblock" props="rtc">
         <codeblock props="unity" outputclass="language-csharp">public abstract int PlayEffect(int soundId, string filePath, int loopCount, int startPos,
    double pitch = 1.0, double pan = 0.0, int gain = 100, bool publish = false);</codeblock></p>
            <p outputclass="codeblock">
            <codeblock props="android" outputclass="language-java">public int playEffect(int soundId, String filePath, int loopCount, double pitch,
                        double pan, double gain, boolean publish, int startPos);
</codeblock>
            <codeblock props="ios mac" outputclass="language-objectivec">- (int)playEffect:(int)soundId
         filePath:(NSString* _Nonnull)filePath
        loopCount:(NSInteger)loopCount
            pitch:(double)pitch
              pan:(double)pan
             gain:(NSInteger)gain
          publish:(BOOL)publish
         startPos:(int)startPos;
</codeblock>
            <codeblock props="cpp" outputclass="language-cpp">virtual int playEffect(int soundId,
    const char* filePath,
    int loopCount,
    double pitch,
    double pan,
    int gain,
    bool publish,
    int startPos) = 0;</codeblock>
            <codeblock props="electron" outputclass="language-typescript">playEffect(soundId: number,
    filePath: string,
    loopCount: number,
    pitch: number,
    pan: number,
    gain: number,
    publish: number,
    startPos?: number
    ): number</codeblock>
            <codeblock props="rn" outputclass="language-typescript" />
            <codeblock props="flutter" outputclass="language-dart">Future&lt;void&gt; playEffect(int soundId, String filePath, int loopCount,
      double pitch, double pan, int gain, bool publish,
      [int? startPos]);</codeblock> </p>
        </section>
        <section id="detailed_desc">
            <dl outputclass="since" props="rtc">
                <dlentry props="native">
                    <dt>Since</dt>
                    <dd>v3.4.0</dd>
                </dlentry>
            </dl>
            <p id="playEffect-desc">To play multiple audio effect files at the same time, call this method multiple times with different <parmname>soundId</parmname> and <parmname>filePath</parmname>. For the best user experience, Agora recommends playing no more than three audio effect files at the same time. After the playback of an audio effect file completes, the SDK triggers the <apiname keyref="onAudioEffectFinished" /> callback.<note type="attention">Call this method after joining a channel.</note></p>
        </section>
        <section id="parameters"><title>Parameters</title>
            <parml>
                <plentry id="soundid">
                    <pt>soundId</pt>
                    <pd>The audio effect ID. The ID of each audio effect file is unique.<note type="attention">If you have preloaded an audio effect into memory by calling <xref keyref="preloadEffect" />, ensure that this parameter is set to the same value as <parmname>soundId</parmname> in <apiname keyref="preloadEffect" />.</note>
                    </pd>
                </plentry>
                <plentry>
                    <pt>filePath</pt>
                    <pd><p id="filepath">The absolute path or URL address (including the suffixes of the filename) of the audio effect file. For example: <codeph><ph keyref="filePath-example" /></codeph>. Supported audio formats include MP3, AAC, M4A, MP4, WAV, and 3GP. See <xref keyref="filePath-link">supported audio formats</xref>.</p>
                        <note type="attention">If you have preloaded an audio effect into memory by calling <xref keyref="preloadEffect" />, ensure that this parameter is set to the same value as <parmname>filePath</parmname> in <apiname keyref="preloadEffect" />.</note>
                    </pd>
                </plentry>
                <plentry id="loopcount">
                    <pt>loopCount</pt>
                    <pd><p>The number of times the audio effect loops:<ul>
                        <li>â‰¥ 0: The number of playback times. For example, 1 means loop one time, which means play the audio effect two times in total.</li>
                        <li>-1: Play the music effect in an infinite loop.</li>
                    </ul></p>
                    </pd>
                </plentry>
                <plentry id="pitch">
                    <pt>pitch</pt>
                    <pd>The pitch of the audio effect. The value range is 0.5 to 2.0. The default value is 1.0, which means the original pitch. The lower the value, the lower the pitch.</pd>
                </plentry>
                <plentry id="pan">
                    <pt>pan</pt>
                    <pd><p>The spatial position of the audio effect. The value range is 1 to10000.<ul>
                        <li>-1.0: The audio effect displays to the left.</li>
                        <li>0.0: The audio effect displays ahead.</li>
                        <li>1.0: The audio effect displays to the right.</li>
                    </ul></p>
                    </pd>
                </plentry>
                <plentry id="gain">
                    <pt>gain</pt>
                    <pd>The volume of the audio effect. The value range is 1 to10000. The default value is 100.0, which means the original volume. The smaller the value, the lower the volume.</pd>
                </plentry>
                <plentry id="publish">
                    <pt>publish</pt>
                    <pd><p>Whether to publish the audio effect to the remote users.<ul>
                        <li><codeph><ph keyref="true" /></codeph>: Publish the audio effect to the remote users. Both the local user and remote users can hear the audio effect.</li>
                        <li><codeph><ph keyref="false" /></codeph>: Do not publish the audio effect to the remote users. Only the local user can hear the audio effect.</li>
                    </ul></p>
                    </pd>
                </plentry>
                <plentry>
                    <pt>startPos</pt>
                    <pd>
                        <p>The playback position (ms) of the audio effect file.</p>
                    </pd>
                </plentry>
            </parml>
        </section>
        <section id="return_values" props="native electron unity">
            <title>Returns</title>
            <ul>
                <li>0: Success.</li>
                <li>&lt; 0: Failure.</li>
            </ul>
        </section>
    </refbody>
</reference>