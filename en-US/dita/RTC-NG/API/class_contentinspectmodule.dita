<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE reference PUBLIC "-//OASIS//DTD DITA Reference//EN" "reference.dtd">
<reference id="class_contentinspectmodule">
    <title><ph keyref="ContentInspectModule"/></title>
    <shortdesc id="short"><ph id="shortdesc">A <apiname keyref="ContentInspectModule"/> structure used to configure the frequency of video screenshot and upload.</ph></shortdesc>
    <refbody>
        <section id="prototype">
            <p outputclass="codeblock">
            <codeblock props="android" outputclass="language-java">public static class ContentInspectModule {
  public int type;
  public int interval;
  public ContentInspectModule() {
    type = CONTENT_INSPECT_TYPE_INVALID;
    interval = 0;
  }</codeblock>
            <codeblock props="ios mac" outputclass="language-objectivec">__attribute__((visibility("default"))) @interface AgoraContentInspectModule: NSObject
@property (assign, nonatomic) AgoraContentInspectType type;

@property (assign, nonatomic) NSInteger interval;
@end</codeblock>
            <codeblock props="cpp unreal" outputclass="language-cpp">struct ContentInspectModule {
  CONTENT_INSPECT_TYPE type;
  unsigned int interval;
  ContentInspectModule() {
    type = CONTENT_INSPECT_INVALID;
    interval = 0;
  }
};</codeblock>
         <codeblock props="bp" outputclass="language-cpp">USTRUCT(BlueprintType)
struct FContentInspectModule {

	GENERATED_BODY()

	ECONTENT_INSPECT_TYPE type = ECONTENT_INSPECT_TYPE::CONTENT_INSPECT_INVALID;

	int64 interval = 0;
};</codeblock>
            <codeblock props="electron" outputclass="language-typescript">export class ContentInspectModule {

  type?: ContentInspectType;

  interval?: number;
}</codeblock>
            <codeblock props="unity cs" outputclass="language-csharp">public class ContentInspectModule
    {
        public CONTENT_INSPECT_TYPE type;
        public uint interval;

        public ContentInspectModule()
        {
            type = CONTENT_INSPECT_TYPE.CONTENT_INSPECT_INVALID;
            interval = 0;
        }
    };</codeblock>
            <codeblock props="rn" outputclass="language-typescript">export class ContentInspectModule {

  type?: ContentInspectType;

  interval?: number;
}</codeblock>
            <codeblock props="flutter" outputclass="language-dart">class ContentInspectModule {

  const ContentInspectModule({this.type, this.interval});
  @JsonKey(name: 'type')
  final ContentInspectType? type;
  @JsonKey(name: 'interval')
  final int? interval;
  factory ContentInspectModule.fromJson(Map&lt;String, dynamic> json) =>
      _$ContentInspectModuleFromJson(json);

  Map&lt;String, dynamic> toJson() => _$ContentInspectModuleToJson(this);
}</codeblock>
            <codeblock props="reserve" outputclass="language-cpp"></codeblock></p>
        </section>
        <section id="parameters">
            <title><text conref="../conref/conref_api_metadata.dita#conref_api_metadata/property"/></title>
            <parml>
            <plentry>
                <pt>type</pt>
                <pd props="apple cpp unreal bp flutter unity electron rn cs">Types of functional module. See <xref keyref="CONTENT_INSPECT_TYPE"/>.</pd>
                <pd props="android">
                    <p>Types of functional modules:<ul>
                    <li><ph keyref="CONTENT_INSPECT_INVALID"/>(0): (Default) This module has no actual function. Do not set to this value.</li>
                    <li props="hide"><ph keyref="CONTENT_INSPECT_MODERATION"/>(1): Video content moderation. SDK takes screenshots, inspects video content of the video stream in the channel, and uploads the screenshots and moderation results.</li>
                    <li><ph keyref="CONTENT_INSPECT_SUPERVISION"/>(2): Video screenshot and upload via Agora self-developed extension. SDK takes screenshots of the video stream in the channel and uploads them.</li>
                    <li><ph keyref="CONTENT_INSPECT_IMAGE_MODERATION"/>(3): Video screenshot and upload via extensions from Agora Extensions Marketplace. SDK uses video moderation extensions from Agora Extensions Marketplace to take screenshots of the video stream in the channel and uploads them.</li>
                    </ul></p>
                </pd>
            </plentry>
            <plentry>
                <pt>interval</pt>
                <pd><ph>The frequency (s) of video screenshot and upload. The value should be set as larger than 0. The default value is 0, the SDK does not take screenshots. </ph><ph props="hide">The frequency (s) of video content moderation. The value should be set as larger than 0. If set as 0 (default), the video content is not inspected. </ph><ph>Agora recommends that you set the value as 10; you can also adjust it according to your business needs.</ph></pd>
            </plentry>
            </parml> </section>
    </refbody>
</reference>
