<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE reference PUBLIC "-//OASIS//DTD DITA Reference//EN" "reference.dtd">
<reference id="api_setcameracapturerconfiguration">
    <title><ph keyref="setCameraCapturerConfiguration" /></title>
    <shortdesc id="short"><ph id="shortdesc">Sets the camera capture configuration.</ph></shortdesc>
    <prolog>
        <metadata>
   <keywords>
       <indexterm keyref="setCameraCapturerConfiguration" />
   </keywords>
        </metadata>
    </prolog>
    <refbody><section id="prototype">
            <p outputclass="codeblock">
            <codeblock props="android" outputclass="language-java">public abstract int setCameraCapturerConfiguration(CameraCapturerConfiguration config);</codeblock>
            <codeblock props="ios mac" outputclass="language-objectivec">- (int)setCameraCapturerConfiguration:(AgoraCameraCapturerConfiguration * _Nullable)config;</codeblock>
            <codeblock props="cpp" outputclass="language-cpp">virtual int setCameraCapturerConfiguration(const CameraCapturerConfiguration&amp; config) = 0;</codeblock>
            <codeblock props="electron" outputclass="language-typescript">setCameraCapturerConfiguration(config: CameraCapturerConfiguration): number</codeblock>
            <codeblock props="unity" outputclass="language-csharp">public abstract int SetCameraCapturerConfiguration(CameraCapturerConfiguration config);</codeblock>
            <codeblock props="rn" outputclass="language-typescript" />
            <codeblock props="flutter" outputclass="language-dart">Future&lt;void&gt; setCameraCapturerConfiguration(
      CameraCapturerConfiguration config);</codeblock> </p>
        </section>
        <section id="detailed_desc">

   <p props="rtc">For a video call or the interactive live video streaming, generally the SDK controls the camera output parameters. When the default camera capturer settings do not meet special requirements or cause performance problems, we recommend using this method to set the camera capturer configuration:<ul>
                    <li>If the resolution or frame rate of the captured raw video data are higher than those set by <xref keyref="setVideoEncoderConfiguration" />, processing video frames requires extra CPU and RAM usage and degrades performance. Agora recommends setting the camera capture configuration to <ph keyref="CAPTURER_OUTPUT_PREFERENCE_PERFORMANCE" />(1) to avoid such problems.</li>
                    <li>If you do not need a local video preview or are willing to sacrifice preview quality, we recommend setting the preference as <ph keyref="CAPTURER_OUTPUT_PREFERENCE_PERFORMANCE" />(1) to optimize CPU and RAM usage.</li>
                    <li>If you want better quality for the local video preview, we recommend setting config as <ph keyref="CAPTURER_OUTPUT_PREFERENCE_PREVIEW" />(2).</li>
                    <li>To customize the width and height of the video image captured by the local camera, set the camera capture configuration as <ph keyref="CAPTURER_OUTPUT_PREFERENCE_MANUAL" />(3).</li>
                </ul>
            </p>
   <note type="attention"><ul>
       <li props="cpp">This method is for Android and iOS only.</li>
       <li>Call this method before calling <xref keyref="joinChannel2" />, <xref keyref="enableVideo" />, or <xref keyref="enableLocalVideo" />, depending on which method you use to turn on your local camera.</li>
   </ul></note>
        </section>
        <section id="parameters"><title>Parameters</title>
   <parml>
       <plentry>
  <pt>config</pt>
  <pd>The camera capturer configuration. See <xref keyref="CameraCapturerConfiguration" />.</pd>
       </plentry>
   </parml>
        </section>
        <section id="return_values" props="native electron unity">
   <title>Returns</title>
   <ul>
       <li>0: Success.</li>
       <li>&lt; 0: Failure.</li>
   </ul>
        </section></refbody>
</reference>