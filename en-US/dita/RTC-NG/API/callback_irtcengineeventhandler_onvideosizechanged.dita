<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE reference PUBLIC "-//OASIS//DTD DITA Reference//EN" "reference.dtd">
<reference id="callback_irtcengineeventhandler_onvideosizechanged">
    <title> <ph keyref="onVideoSizeChanged" /> </title>
    <shortdesc id="short"><ph id="shortdesc">Occurs when the video size or rotation of a specified user changes.</ph></shortdesc>
    <prolog>
        <metadata>
            <keywords>
                <indexterm keyref="onVideoSizeChanged" />
            </keywords>
        </metadata>
    </prolog>
    <refbody>
        <section id="prototype">
            <p outputclass="codeblock">
            <codeblock props="android" outputclass="language-java">public void onVideoSizeChanged(
      Constants.VideoSourceType source, int uid, int width, int height, int rotation) {}</codeblock>
            <codeblock props="ios mac" outputclass="language-objectivec">- (void)rtcEngine:(AgoraRtcEngineKit * _Nonnull)engine videoSizeChangedOfSourceType:(AgoraVideoSourceType)sourceType uid:(NSString * _Nonnull)uid size:(CGSize)size rotation:(NSInteger)rotation NS_SWIFT_NAME(rtcEngine(_:videoSizeChangedOf:uid:size:rotation:));</codeblock>
            <codeblock props="cpp unreal bp" outputclass="language-cpp">virtual void onVideoSizeChanged(VIDEO_SOURCE_TYPE sourceType, uid_t uid, int width, int height, int rotation) {
    (void)uid;
    (void)width;
    (void)height;
    (void)rotation;
  }</codeblock>
            <codeblock props="electron" outputclass="language-typescript">onVideoSizeChanged?(
    connection: RtcConnection,
    sourceType: VideoSourceType,
    uid: number,
    width: number,
    height: number,
    rotation: number
  ): void;</codeblock>
            <codeblock props="unity cs" outputclass="language-csharp">public virtual void OnVideoSizeChanged(RtcConnection connection, VIDEO_SOURCE_TYPE sourceType, uint uid, int width, int height, int rotation) { }</codeblock>
            <codeblock props="rn" outputclass="language-typescript"> onVideoSizeChanged?(
    connection: RtcConnection,
    sourceType: VideoSourceType,
    uid: number,
    width: number,
    height: number,
    rotation: number
  ): void;</codeblock>
            <codeblock props="flutter" outputclass="language-dart">final void Function(RtcConnection connection, VideoSourceType sourceType,
      int uid, int width, int height, int rotation)? onVideoSizeChanged;</codeblock>
            <codeblock props="reserve" outputclass="language-cpp"></codeblock></p>
        </section>
        <section id="parameters">
            <title> <ph keyref="callback-section-title" /> </title>
            <parml>
            <plentry conkeyref="onJoinChannelSuccess/engine" props="ios mac">
                <pt />
                <pd />
            </plentry>
            <plentry props="unity flutter rn electron cs">
                <pt>connection</pt>
                <pd>The connection information. See <xref keyref="RtcConnection" />.</pd>
            </plentry>
            <plentry>
                <pt props="apple cpp unreal bp electron unity rn flutter cs">sourceType</pt>
                <pt props="android">source</pt>
                <pd>The type of the video source. See <xref keyref="VIDEO_SOURCE_TYPE"/>.</pd>
                </plentry>
            <plentry id="uid">
                <pt>uid</pt>
                <pd>The ID of the user whose video size or rotation changes. (The <parmname>uid</parmname> for the local user is 0. The video is the local user's video preview).</pd>
            </plentry>
            <plentry props="ios mac">
                <pt>size</pt>
                <pd>Video dimensions.</pd>
            </plentry>
            <plentry id="width" props="android cpp unreal bp unity flutter electron rn cs">
                <pt>width</pt>
                <pd>The width (pixels) of the video stream.</pd>
            </plentry>
            <plentry id="height" props="android cpp unreal bp unity flutter electron rn cs">
                <pt>height</pt>
                <pd>The height (pixels) of the video stream.</pd>
            </plentry>
            <plentry id="rotation">
                <pt>rotation</pt>
                <pd>The rotation information. The value range is [0,360).</pd>
            </plentry>
            </parml> </section>
    </refbody>
</reference>