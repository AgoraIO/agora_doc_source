<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE reference PUBLIC "-//OASIS//DTD DITA Reference//EN" "reference.dtd">
<reference id="callback_irtcengineeventhandler_onremotesubscribefallbacktoaudioonly">
    <title><ph keyref="onRemoteSubscribeFallbackToAudioOnly"/></title>
    <shortdesc id="short"><ph id="shortdesc">Occurs when the remote media stream falls back to the audio-only stream due to poor network conditions or switches back to the video stream after the network conditions improve.</ph></shortdesc>
    <prolog>
        <metadata>
   <keywords>
       <indexterm keyref="onRemoteSubscribeFallbackToAudioOnly"/>
   </keywords>
        </metadata>
    </prolog>
    <refbody><section id="prototype">
        <p outputclass="codeblock">
                <codeblock props="android" outputclass="language-java">public void onRemoteSubscribeFallbackToAudioOnly(int uid, boolean isFallbackOrRecover) {}</codeblock>
                <codeblock props="ios mac" outputclass="language-objectivec">- (void)rtcEngine:(AgoraRtcEngineKit * _Nonnull)engine
    didRemoteSubscribeFallbackToAudioOnly:(BOOL)isFallbackOrRecover byUid:(NSUInteger)uid;</codeblock>
                <codeblock props="cpp" outputclass="language-cpp">virtual void onRemoteSubscribeFallbackToAudioOnly(uid_t uid, bool isFallbackOrRecover) {
    (void)uid;
    (void)isFallbackOrRecover;
    }</codeblock>
                <codeblock props="electron" outputclass="language-typescript">on(
  evt: EngineEvents.REMOTE_SUBSCRIBE_FALLBACK_TO_AUDIO_ONLY,
  cb: (uid: number, isFallbackOrRecover: boolean) =&gt; void
): this;</codeblock>
                <codeblock props="unity" outputclass="language-csharp">public virtual void OnRemoteSubscribeFallbackToAudioOnly(uint uid, bool isFallbackOrRecover)</codeblock>
                <codeblock props="rn" outputclass="language-typescript"/>
                <codeblock props="flutter" outputclass="language-dart">FallbackWithUidCallback? remoteSubscribeFallbackToAudioOnly;</codeblock>
        </p>
        </section>
        <section id="detailed_desc">
   <p>If you call <xref keyref="setRemoteSubscribeFallbackOption"/> and set <parmname>option</parmname> as <apiname keyref="STREAM_FALLBACK_OPTION_AUDIO_ONLY"/>, the SDK triggers this callback when the remote media stream falls back to audio-only mode due to poor uplink conditions, or when the remote media stream switches back to the video after the downlink network condition improves.</p>
   <note type="attention">Once the remote media stream switches to the low-quality stream due to poor network conditions, you can monitor the stream switch between a high-quality and low-quality stream in the <xref keyref="onRemoteVideoStats"/> callback.</note>
        </section>
        <section id="parameters"><title><ph keyref="callback-section-title"/></title>             
   <parml>
                <plentry conkeyref="onJoinChannelSuccess/engine" props="ios mac">
                    <pt/>
                    <pd/>
                </plentry>
                <plentry id="uid">
                    <pt>uid</pt>
                    <pd>The user ID of the remote user.</pd>
                </plentry>
                <plentry id="isFallbackOrRecover">
                    <pt>isFallbackOrRecover</pt>
                    <pd>
                        <ul>
                            <li><codeph><ph keyref="true"/></codeph>: The remotely subscribed media stream falls back to audio-only due to poor network conditions.</li>
                            <li><codeph><ph keyref="false"/></codeph>: The remotely subscribed media stream switches back to the video stream after the network conditions improved.</li>
                        </ul>
                    </pd>
                </plentry>
            </parml>
        </section>
    </refbody>
</reference>
