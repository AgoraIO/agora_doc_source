<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE reference PUBLIC "-//OASIS//DTD DITA Reference//EN" "reference.dtd">
<reference id="callback_ivideoframeobserver_getvideoformatpreference">
    <title><ph keyref="getVideoFormatPreference"/></title>
    <shortdesc id="short"><ph id="shortdesc">Sets the format of the raw video data output by the SDK.</ph></shortdesc>
    <prolog>
        <metadata>
            <keywords>
                <indexterm keyref="getVideoFormatPreference"/>
            </keywords>
        </metadata>
    </prolog>
    <refbody>
        <section id="prototype">
            <p outputclass="codeblock">
            <codeblock props="android" outputclass="language-java">int getVideoFormatPreference();
</codeblock>
            <codeblock props="ios mac" outputclass="language-objectivec">- (AgoraVideoFormat)getVideoPixelFormatPreference;</codeblock>
            <codeblock props="cpp" outputclass="language-cpp">virtual VIDEO_PIXEL_FORMAT getVideoFormatPreference() { return VIDEO_PIXEL_DEFAULT; }</codeblock>
            <codeblock props="electron" outputclass="language-typescript"/>
            <codeblock props="unity" outputclass="language-csharp">public virtual VIDEO_FRAME_TYPE GetVideoFormatPreference()
        {
            return VIDEO_FRAME_TYPE.FRAME_TYPE_RGBA;
        }</codeblock>
            <codeblock props="rn" outputclass="language-typescript"/>
            <codeblock props="flutter" outputclass="language-dart"/> </p>
        </section>
        <section id="detailed_desc">
            <p>If you want to get raw video data in a color encoding format other than YUV 420, register this callback when calling <xref keyref="registerVideoFrameObserver"/>. After you successfully register the video frame observer, the SDK triggers this callback each time it receives a video frame. You need to set your preferred video data in the return value of this callback.</p>
            <note type="note">If you want the video captured by the sender to be the original format, set the original video data format to <apiname keyref="VIDEO_PIXEL_DEFAULT"/> in the return value. On different platforms, the original video pixel format is also different, for the actual video pixel format, see <xref keyref="VideoFrame"/>.</note> </section>
        <section id="return_values">
            <title>Returns</title>
            <p>Sets the video format. <ph props="cpp ios mac">See <xref keyref="VIDEO_PIXEL_FORMAT"/>.</ph></p>
        </section>
    </refbody>
</reference>
