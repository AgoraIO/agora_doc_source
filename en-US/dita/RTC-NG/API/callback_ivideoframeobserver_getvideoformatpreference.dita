<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE reference PUBLIC "-//OASIS//DTD DITA Reference//EN" "reference.dtd">
<reference id="callback_ivideoframeobserver_getvideoformatpreference">
    <title><ph keyref="getVideoFormatPreference"/></title>
    <shortdesc id="short"><ph id="shortdesc">Sets the format of the raw video data output by the SDK.</ph></shortdesc>
    <prolog>
        <metadata>
            <keywords>
                <indexterm keyref="getVideoFormatPreference"/>
            </keywords>
        </metadata>
    </prolog>
    <refbody>
        <section id="prototype">
            <p outputclass="codeblock">
            <codeblock props="android" outputclass="language-java">int getVideoFormatPreference();
</codeblock>
            <codeblock props="ios mac" outputclass="language-objectivec">- (AgoraVideoFormat)getVideoFormatPreference;
</codeblock>
            <codeblock props="cpp unreal" outputclass="language-cpp">virtual VIDEO_PIXEL_FORMAT getVideoFormatPreference() { return VIDEO_PIXEL_DEFAULT; }</codeblock>
         <codeblock props="bp" outputclass="language-cpp">DECLARE_DYNAMIC_MULTICAST_DELEGATE(FGetVideoFormatPreference);</codeblock>
            <codeblock props="electron" outputclass="language-typescript"/>
            <codeblock props="unity cs" outputclass="language-csharp">public virtual VIDEO_OBSERVER_FRAME_TYPE GetVideoFormatPreference()
        {
            return VIDEO_OBSERVER_FRAME_TYPE.FRAME_TYPE_RGBA;
        }</codeblock>
            <codeblock props="rn" outputclass="language-typescript"/>
           <codeblock props="flutter" outputclass="language-dart"/> 
            <codeblock props="reserve" outputclass="language-cpp"></codeblock></p>
        </section>
        <section id="detailed_desc">
            <p>You need to register the callback when calling the <xref keyref="registerVideoFrameObserver"/> method. After you successfully register the video frame observer, the SDK triggers this callback each time it receives a video frame. You need to set your preferred video data in the return value of this callback.</p>
        </section>
        <section id="return_values">
            <title>Returns</title>
            <p><ph>Sets the raw data format of the SDK output. </ph><ph props="cpp bp unreal apple">See <xref keyref="VIDEO_PIXEL_FORMAT"/>.</ph></p>
            <p>The default types of pixel format (<ph keyref="VIDEO_PIXEL_DEFAULT"/>) for the raw video are as follows:<ul><li props="cpp bp unreal">On the Android platform, the default video frame type may be I420Buffer or TextureBuffer. As of v4.2.3, the texture formats of TextureBuffer type no longer include OES format, only RGB format is available. You need to add support for I420 and RGB texture formats when processing video data.</li>
                <li props="android">The default video frame type may be I420Buffer or TextureBuffer. As of v4.2.3, the texture formats of TextureBuffer type no longer include OES format, only RGB format is available. You need to add support for I420 and RGB texture formats when processing video data.</li>
                <li props="cpp unreal bp">On iOS and macOS platforms, the default video frame type may be I420 or CVPixelBufferRef.</li>
                <li props="apple">The default video frame type may be I420 or CVPixelBufferRef.</li>
                <li props="cpp unreal bp">On Windows platforms, the default video frame type is YUV420.</li></ul></p>
            <p props="android">
            <ul>
            <li><ph keyref="VIDEO_PIXEL_DEFAULT"/>(0): Raw video.</li>
            <li><ph keyref="VIDEO_PIXEL_I420"/>(1): I420.</li>
            <li props="hide"><ph keyref="VIDEO_PIXEL_BGRA"/>(2): BGRA.</li>
            <li props="hide"><ph keyref="VIDEO_PIXEL_NV21"/>(3): NV21.</li>
            <li><ph keyref="VIDEO_PIXEL_RGBA"/>(4): RGBA.</li>
            <li props="hide"><ph keyref="VIDEO_PIXEL_NV12"/>(8): NV12.</li>
            <li props="hide"><ph keyref="VIDEO_TEXTURE_2D"/>(10): TEXTURE_2D.</li>
            <li><ph keyref="VIDEO_PIXEL_I422"/>(16): I422.</li>
            </ul></p>
        </section>
    </refbody>
</reference>
