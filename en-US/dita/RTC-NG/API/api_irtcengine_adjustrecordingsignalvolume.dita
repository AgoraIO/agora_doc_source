<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE reference PUBLIC "-//OASIS//DTD DITA Reference//EN" "reference.dtd">
<reference id="api_irtcengine_adjustrecordingsignalvolume">
    <title><ph keyref="adjustRecordingSignalVolume" /></title>
    <shortdesc id="short"><ph id="shortdesc">Adjusts the capturing signal volume.</ph></shortdesc>
    <prolog>
        <metadata>
            <keywords>
                <indexterm keyref="adjustRecordingSignalVolume" />
            </keywords>
        </metadata>
    </prolog>
    <refbody>
        <section id="prototype">
            <p outputclass="codeblock">
            <codeblock props="android" outputclass="language-java">public abstract int adjustRecordingSignalVolume(int volume);</codeblock>
            <codeblock props="ios mac" outputclass="language-objectivec">- (int)adjustRecordingSignalVolume:(NSInteger)volume;</codeblock>
            <codeblock props="cpp" outputclass="language-cpp">virtual int adjustRecordingSignalVolume(int volume) = 0;</codeblock>
            <codeblock props="electron" outputclass="language-typescript">abstract adjustRecordingSignalVolume(volume: number): number;</codeblock>
            <codeblock props="unity" outputclass="language-csharp">public abstract int AdjustRecordingSignalVolume(int volume);</codeblock>
            <codeblock props="rn" outputclass="language-typescript">abstract adjustRecordingSignalVolume(volume: number): number;</codeblock>
            <codeblock props="flutter" outputclass="language-dart">Future&lt;void&gt; adjustRecordingSignalVolume(int volume);</codeblock>
            <codeblock props="reserve" outputclass="language-cpp" /></p>
        </section>
        <section id="detailed_desc">
            <title>Details</title>
            <note type="attention">
            <p>You can call this method either before or after joining a channel.</p>
            </note> </section>
        <section id="parameters">
            <title>Parameters</title>
            <parml>
            <plentry id="volume">
                <pt>volume</pt>
                <pd>
                    <p>The volume of the user. The value range is [0,400].<ul>
                    <li>0: Mute.</li>
                    <li>100: (Default) The original volume.</li>
                    <li>400: Four times the original volume (amplifying the audio signals by four times).</li>
                    </ul></p>
                </pd>
            </plentry>
            </parml> </section>
        <section id="return_values">
            <title><ph keyref="return-section-title" /></title>
            <p props="flutter">When the method call succeeds, there is no return value; when fails, the <xref keyref="AgoraRtcException" /> exception is thrown; you need to catch the exception and handle it accordingly.</p>
            <ul>
            <li props="native electron unity rn">0: Success.</li>
            <li>&lt; 0: Failure.</li>
            </ul> </section>
    </refbody>
</reference>