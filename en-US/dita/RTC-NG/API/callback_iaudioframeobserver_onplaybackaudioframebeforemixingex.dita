<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE reference PUBLIC "-//OASIS//DTD DITA Reference//EN" "reference.dtd">
<reference id="callback_iaudioframeobserver_onplaybackaudioframebeforemixingex">
    <title><ph keyref="onPlaybackAudioFrameBeforeMixingEx"/></title>
    <shortdesc id="short"><ph id="shortdesc">Gets the playback audio frame before mixing from multiple channels.</ph></shortdesc>
    <prolog>
        <metadata>
   <keywords>
       <indexterm keyref="onPlaybackAudioFrameBeforeMixingEx"/>
   </keywords>
        </metadata>
    </prolog>
    <refbody><section id="prototype">
        <p outputclass="codeblock">
                <codeblock props="android" outputclass="language-java"/>
                <codeblock props="ios mac" outputclass="language-objectivec"/>
                <codeblock props="cpp" outputclass="language-cpp">virtual bool onPlaybackAudioFrameBeforeMixingEx(const char *channelId,
    unsigned int uid,
    AudioFrame&amp; audioFrame) { return true; }</codeblock>
                <codeblock props="electron" outputclass="language-typescript"/>
                <codeblock props="unity" outputclass="language-csharp">public virtual bool OnPlaybackAudioFrameBeforeMixingEx(string channelId, uint uid, AudioFrame audioFrame)
        {
            return true;
        }</codeblock>
                <codeblock props="rn" outputclass="language-typescript"/>
                <codeblock props="flutter" outputclass="language-dart"/>
        </p>
        </section>
        <section id="detailed_desc">
   <p>After you successfully register the audio frame observer, if you set the return value of <xref keyref="isMultipleChannelFrameWanted_IAudioFrameObserver"/> as <ph keyref="true"/>, the SDK triggers this callback each time it receives an audio frame from any of the channels.</p>
        </section>
        <section id="parameters"><title>Parameters</title>
   <parml>
       <plentry>
  <pt>channelId</pt>
  <pd>The channel name of this audio frame.</pd>
       </plentry>
       <plentry>
  <pt>uid</pt>
  <pd>The ID of the user sending the audio frame.</pd>
       </plentry>
       <plentry>
  <pt>audioFrame</pt>
  <pd>The audio frame. See <xref keyref="AudioFrame"/>.</pd>
       </plentry>
   </parml>
        </section>
        <section id="return_values">
   <title>Returns</title>
   <p>Reserved for future use.</p>
        </section></refbody>
</reference>
