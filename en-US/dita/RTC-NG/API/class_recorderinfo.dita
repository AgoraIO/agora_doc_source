<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE reference PUBLIC "-//OASIS//DTD DITA Reference//EN" "reference.dtd">
<reference id="class_recorderinfo">
    <title><ph keyref="RecorderInfo" /></title>
    <shortdesc id="short"><ph id="shortdesc">The information about the file that is recorded.</ph></shortdesc>
    <refbody>
        <section id="prototype">
            <p outputclass="codeblock">
            <codeblock props="android" outputclass="language-java">public class RecorderInfo {
  public String fileName;
  public int durationMs;
  public int fileSize;

  @CalledByNative
  public RecorderInfo(String fileName, int durationMs, int fileSize) {
    this.fileName = fileName;
    this.durationMs = durationMs;
    this.fileSize = fileSize;
  }
}</codeblock>
            <codeblock props="ios mac" outputclass="language-objectivec">__attribute__((visibility("default"))) @interface AgoraMediaRecorderInfo : NSObject
@property(copy, nonatomic) NSString* _Nonnull recorderFileName;
@property(assign, nonatomic) NSUInteger durationMs;
@property(assign, nonatomic) NSUInteger fileSize;</codeblock>
            <codeblock props="cpp unreal" outputclass="language-cpp">struct RecorderInfo {
  const char* fileName;
  unsigned int durationMs;
  unsigned int fileSize;

  RecorderInfo() : fileName(NULL), durationMs(0), fileSize(0) {}
  RecorderInfo(const char* name, unsigned int dur, unsigned int size) : fileName(name), durationMs(dur), fileSize(size) {}
};</codeblock>
         <codeblock props="bp" outputclass="language-cpp">USTRUCT(BlueprintType)
struct FRecorderInfo {

	GENERATED_BODY()
	UPROPERTY(VisibleAnywhere, BlueprintReadWrite, Category = &quot;Agora|RecorderInfo&quot;)
	FString fileName;
	UPROPERTY(VisibleAnywhere, BlueprintReadWrite, Category = &quot;Agora|RecorderInfo&quot;)
	int64 durationMs;
	UPROPERTY(VisibleAnywhere, BlueprintReadWrite, Category = &quot;Agora|RecorderInfo&quot;)
	int64 fileSize;
};</codeblock>
            <codeblock props="electron" outputclass="language-typescript">export class RecorderInfo {
  
  fileName?: string;
  
  durationMs?: number;
  
  fileSize?: number;
}</codeblock>
            <codeblock props="unity cs" outputclass="language-csharp">public class RecorderInfo
    {
        public string fileName { set; get; }
        public uint durationMs { set; get; }
        public uint fileSize { set; get; }

        public RecorderInfo()
        {
            fileName = "";
            durationMs = 0;
            fileSize = 0;
        }

        public RecorderInfo(string name, uint dur, uint size)
        {
            fileName = name;
            durationMs = dur;
            fileSize = size;
        }
    };</codeblock>
            <codeblock props="rn" outputclass="language-typescript">export class RecorderInfo {
  
  fileName?: string;
  
  durationMs?: number;
  
  fileSize?: number;
}</codeblock>
            <codeblock props="flutter" outputclass="language-dart" /> </p>
        </section>
        <section id="parameters">
            <title><text conref="../conref/conref_api_metadata.dita#conref_api_metadata/property" /></title>
            <parml>
            <plentry>
                <pt props="android cpp unreal bp flutter electron rn unity cs">filename</pt>
                <pt props="ios mac">recorderFileName</pt>
                <pd>The absolute path of the recording file.</pd>
            </plentry>
            <plentry>
                <pt>durationMs</pt>
                <pd>The recording duration (ms).</pd>
            </plentry>
            <plentry>
                <pt>fileSize</pt>
                <pd>The size (byte) of the recording file.</pd>
            </plentry>
            </parml> </section>
    </refbody>
</reference>