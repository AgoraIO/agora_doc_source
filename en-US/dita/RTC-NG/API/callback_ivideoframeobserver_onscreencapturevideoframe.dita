<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE reference PUBLIC "-//OASIS//DTD DITA Reference//EN" "reference.dtd">
<reference id="callback_ivideoframeobserver_onscreencapturevideoframe">
    <title><ph keyref="onScreenCaptureVideoFrame"/></title>
    <shortdesc id="short"><ph id="shortdesc">Occurs each time the SDK receives a video frame captured by the screen.</ph></shortdesc>
    <prolog>
        <metadata>
            <keywords>
                <indexterm keyref="onScreenCaptureVideoFrame"/>
            </keywords>
        </metadata>
    </prolog>
    <refbody>
        <section id="prototype">
            <p outputclass="codeblock">
            <codeblock props="android" outputclass="language-java">boolean onScreenCaptureVideoFrame(VideoFrame videoFrame);</codeblock>
            <codeblock props="ios mac" outputclass="language-objectivec">- (BOOL)onScreenCaptureVideoFrame:(AgoraOutputVideoFrame * _Nonnull)videoFrame;</codeblock>
            <codeblock props="cpp unreal" outputclass="language-cpp">virtual bool onScreenCaptureVideoFrame(VideoFrame&amp; videoFrame) = 0;</codeblock>
            <codeblock props="electron" outputclass="language-typescript">  onScreenCaptureVideoFrame?(videoFrame: VideoFrame): void;</codeblock>
            <codeblock props="unity cs" outputclass="language-csharp"/>
            <codeblock props="rn" outputclass="language-typescript">  onScreenCaptureVideoFrame?(videoFrame: VideoFrame): void;</codeblock>
            <codeblock props="flutter" outputclass="language-dart">final void Function(VideoFrame videoFrame)? onScreenCaptureVideoFrame;</codeblock>
            <codeblock props="reserve" outputclass="language-cpp"></codeblock></p>
        </section>
        <section id="detailed_desc">
            <p>After you successfully register the video frame observer, the SDK triggers this callback each time it receives a video frame. In this callback, you can get the video data for screen sharing. You can then pre-process the data according to your scenarios.</p>
            <p props="native unreal bp unity electron rn cs">After pre-processing, you can send the processed video data back to the SDK through this callback.</p>
            <note type="attention" props="native unreal bp unity electron rn cs">
            <ul>
            <li>This callback does not support sending processed RGBA video data back to the SDK.</li>
            <li>The video data that this callback gets has not been pre-processed, and is not watermarked, cropped, rotated or beautified.</li>
            </ul> </note>
            <note type="attention" props="flutter rn electron">Due to framework limitations, this callback does not support sending processed video data back to the SDK.</note>
        </section>
        <section id="parameters" conkeyref="onCaptureVideoFrame/parameters"/>
        <section id="return_values" props="native unreal bp">
            <title>Returns</title>
            <p conkeyref="onCaptureVideoFrame/return"/>
        </section>
    </refbody>
</reference>
