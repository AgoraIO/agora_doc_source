<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE reference PUBLIC "-//OASIS//DTD DITA Reference//EN" "reference.dtd">
<reference id="api_irtcengine_startlastmileprobetest">
    <title> <ph keyref="startLastmileProbeTest" /> </title>
    <shortdesc id="short"><ph id="shortdesc">Starts the last mile network probe test.</ph></shortdesc>
    <prolog>
        <metadata>
            <keywords>
                <indexterm keyref="startLastmileProbeTest" />
            </keywords>
        </metadata>
    </prolog>
    <refbody>
        <section id="prototype">
            <p outputclass="codeblock">
            <codeblock props="android" outputclass="language-java">public abstract int startLastmileProbeTest(LastmileProbeConfig config);</codeblock>
            <codeblock props="hmos" outputclass="language-arkts">public abstract startLastmileProbeTest(config: LastmileProbeConfig): number;</codeblock>
            <codeblock props="ios mac" outputclass="language-objectivec">- (int)startLastmileProbeTest:(AgoraLastmileProbeConfig *_Nullable)config;</codeblock>
            <codeblock props="cpp unreal" outputclass="language-cpp">virtual int startLastmileProbeTest(const LastmileProbeConfig&amp; config) = 0;</codeblock>
         <codeblock props="bp" outputclass="language-cpp">UFUNCTION(BlueprintCallable, Category = &quot;Agora|IRtcEngine&quot;)
	int StartLastmileProbeTest(const FLastmileProbeConfig&amp; config);</codeblock>
            <codeblock props="electron" outputclass="language-typescript">abstract startLastmileProbeTest(config: LastmileProbeConfig): number;</codeblock>
            <codeblock props="unity cs" outputclass="language-csharp">public abstract int StartLastmileProbeTest(LastmileProbeConfig config);</codeblock>
            <codeblock props="rn" outputclass="language-typescript">abstract startLastmileProbeTest(config: LastmileProbeConfig): number;</codeblock>
            <codeblock props="flutter" outputclass="language-dart">Future&lt;void&gt; startLastmileProbeTest(LastmileProbeConfig config);</codeblock>
            <codeblock props="reserve" outputclass="language-cpp"></codeblock></p>
        </section>
        <section id="detailed_desc" deliveryTarget="details" otherprops="no-title">
            <p>This method starts the last-mile network probe test before joining a channel to get the uplink and downlink last mile network statistics, including the bandwidth, packet loss, jitter, and round-trip time (RTT).</p>
        </section>
        <section id="timing" deliveryTarget="details">
            <title>Call timing</title>
            <p>Do not call other methods before receiving the <apiname keyref="onLastmileQuality" /> and <apiname keyref="onLastmileProbeResult" /> callbacks.Â Otherwise, the callbacks may be interrupted.</p>
        </section>        
        <section id="restriction" deliveryTarget="details">
            <title>Restrictions</title>
            <p>None.</p>
        </section>
        <section id="related" deliveryTarget="details">
            <title>Related callbacks</title>
            <p>After successfully calling this method, the SDK sequentially triggers the following 2 callbacks:<ul>
                    <li><xref keyref="onLastmileQuality" />: The SDK triggers this callback within two seconds depending on the network conditions. This callback rates the network conditions and is more closely linked to the user experience.</li>
                    <li><xref keyref="onLastmileProbeResult" />: The SDK triggers this callback within 30 seconds depending on the network conditions. This callback returns the real-time statistics of the network conditions and is more objective.</li>
                </ul>
            </p>
        </section>
        <section id="parameters" deliveryTarget="details">
            <title>Parameters</title>
            <parml>
            <plentry>
                <pt>config</pt>
                <pd>The configurations of the last-mile network probe test. See <xref keyref="LastmileProbeConfig" />.</pd>
            </plentry>
            </parml> </section>
        <section id="return_values">
            <title><ph keyref="return-section-title"/></title>
            <p props="flutter">When the method call succeeds, there is no return value; when fails, the <xref keyref="AgoraRtcException"/> exception is thrown. You need to catch the exception and handle it accordingly. <ph props="cn">See <xref keyref="error-code-link"/> for details and resolution suggestions.</ph></p>
            <ul props="native unreal bp electron unity rn cs">
            <li>0: Success.</li>
            <li>&lt; 0: Failure. <ph props="cn">See <xref keyref="error-code-link"/> for details and resolution suggestions.</ph></li>
            </ul> </section>
    </refbody>
</reference>