<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE reference PUBLIC "-//OASIS//DTD DITA Reference//EN" "reference.dtd">
<reference id="api_irtcengine_setencryptionsecret">
    <title><ph keyref="setEncryptionSecret" /></title>
    <shortdesc id="short"><ph id="shortdesc">Enables built-in encryption with an encryption password before users join a channel.</ph></shortdesc>
    <prolog>
        <metadata>
            <keywords>
                <indexterm keyref="setEncryptionSecret" />
            </keywords>
        </metadata>
    </prolog>
    <refbody>
        <section id="prototype">
            <p outputclass="codeblock">
            <codeblock props="android" outputclass="language-java">public abstract int setEncryptionSecret(String secret);</codeblock>
            <codeblock props="ios mac" outputclass="language-objectivec">- (int)setEncryptionSecret:(NSString * _Nullable)secret;</codeblock>
            <codeblock props="cpp unreal" outputclass="language-cpp">virtual int setEncryptionSecret(const char* secret) = 0;</codeblock>
         <codeblock props="bp" outputclass="language-cpp">UFUNCTION(BlueprintCallable, Category = &quot;Agora|RtcEngineProxy&quot;)
	int SetEncryptionSecret(FString secret);</codeblock>
            <codeblock props="electron" outputclass="language-typescript">abstract setEncryptionSecret(secret: string): number;</codeblock>
            <codeblock props="unity cs" outputclass="language-csharp">public abstract int SetEncryptionSecret(string secret);</codeblock>
            <codeblock props="rn" outputclass="language-typescript">abstract setEncryptionSecret(secret: string): number;</codeblock>
            <codeblock props="flutter" outputclass="language-dart">Future&lt;void&gt; setEncryptionSecret(String secret);</codeblock>
            <codeblock props="reserve" outputclass="language-cpp"></codeblock></p>
        </section>
        <section id="detailed_desc">
            <title>Details</title>
            <dl outputclass="deprecated">
            <dlentry>
                <dt>Deprecated:</dt>
                <dd>Use <xref keyref="enableEncryption" /> instead.</dd>
            </dlentry>
            </dl>
            <p id="desc">Before joining the channel, you need to call this method to set the <parmname>secret</parmname> parameter to enable the built-in encryption. All users in the same channel should use the same <parmname>secret</parmname>. The <parmname>secret</parmname> is automatically cleared once a user leaves the channel. If you do not specify the <parmname>secret</parmname> or <parmname>secret</parmname> is set as null, the built-in encryption is disabled.</p>
            <note type="attention" id="note">
            <ul>
            <li>Do not use this method for Media Push.</li>
            <li>For optimal transmission, ensure that the encrypted data size does not exceed the original data size + 16 bytes. 16 bytes is the maximum padding size for AES encryption.</li>
            </ul> </note> </section>
        <section id="parameters">
            <title>Parameters</title>
            <parml>
            <plentry>
                <pt>secret</pt>
                <pd>The encryption password.</pd>
            </plentry>
            </parml> </section>
        <section id="return_values">
            <title><ph keyref="return-section-title"/></title>
            <p props="flutter">When the method call succeeds, there is no return value; when fails, the <xref keyref="AgoraRtcException"/> exception is thrown; and you need to catch the exception and handle it accordingly. <ph props="cn">See <xref keyref="error-code-link"/> for details and resolution suggestions.</ph></p>
            <ul>
            <li props="native unreal bp electron unity rn cs">0: Success.</li>
            <li>&lt; 0: Failure. <ph props="cn">See <xref keyref="error-code-link"/> for details and resolution suggestions.</ph></li>
            </ul> </section>
    </refbody>
</reference>