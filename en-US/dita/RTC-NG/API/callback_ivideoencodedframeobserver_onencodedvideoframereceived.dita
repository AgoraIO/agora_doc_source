<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE reference PUBLIC "-//OASIS//DTD DITA Reference//EN" "reference.dtd">
<reference id="callback_ivideoencodedframeobserver_onencodedvideoframereceived">
    <title><ph keyref="onEncodedVideoFrameReceived"/></title>
    <shortdesc id="short"><ph id="shortdesc">Reports that the receiver has received the to-be-decoded video frame sent by the remote end.</ph></shortdesc>
    <prolog>
        <metadata>
            <keywords>
                <indexterm keyref="onEncodedVideoFrameReceived"/>
            </keywords>
        </metadata>
    </prolog>
    <refbody>
        <section id="prototype">
            <p outputclass="codeblock">
            <codeblock props="android" outputclass="language-java">boolean onEncodedVideoFrameReceived(ByteBuffer buffer, EncodedVideoFrameInfo info);</codeblock>
            <codeblock props="ios mac" outputclass="language-objectivec">- (BOOL)onEncodedVideoFrameReceived:(NSData * _Nonnull )videoData length:(size_t)length info:(AgoraEncodedVideoFrameInfo * _Nonnull)videoFrameInfo NS_SWIFT_NAME(onEncodedVideoFrameReceived(_:length:info:));</codeblock>
            <codeblock props="cpp unreal bp" outputclass="language-cpp">virtual bool onEncodedVideoFrameReceived(rtc::uid_t uid, const uint8_t* imageBuffer, size_t length,
                                           const rtc::EncodedVideoFrameInfo&amp; videoEncodedFrameInfo) = 0;</codeblock>
            <codeblock props="electron" outputclass="language-typescript">onEncodedVideoFrameReceived?(
    uid: number,
    imageBuffer: Uint8Array,
    length: number,
    videoEncodedFrameInfo: EncodedVideoFrameInfo
  ): boolean;</codeblock>
            <codeblock props="unity cs" outputclass="language-csharp">public virtual bool OnEncodedVideoFrameReceived(uint uid, IntPtr imageBufferPtr, UInt64 length, EncodedVideoFrameInfo videoEncodedFrameInfo)
        {
            return true;
        }</codeblock>
            <codeblock props="rn" outputclass="language-typescript">onEncodedVideoFrameReceived?(
    uid: number,
    imageBuffer: Uint8Array,
    length: number,
    videoEncodedFrameInfo: EncodedVideoFrameInfo
  ): boolean;</codeblock>
            <codeblock props="flutter" outputclass="language-dart">final void Function(int uid, Uint8List imageBuffer, int length,
      EncodedVideoFrameInfo videoEncodedFrameInfo)? onEncodedVideoFrameReceived;</codeblock>
            <codeblock props="reserve" outputclass="language-cpp"></codeblock></p>
        </section>
        <section id="detailed_desc">
            <p>If you call the <xref keyref="setRemoteVideoSubscriptionOptions"/> method and set <parmname>encodedFrameOnly</parmname> to <codeph><ph keyref="true"/></codeph>, the SDK triggers this callback locally to report the received encoded video frame information.</p>
        </section>
        <section id="parameters">
            <title>Parameters</title>
            <parml>
            <plentry props="cpp unreal bp electron unity rn flutter cs">
                <pt>uid</pt>
                <pd>The user ID of the remote user.</pd>
            </plentry>
            <plentry>
                <pt props="ios mac">videoData</pt>
                <pt props="cpp unreal bp electron rn flutter">imageBuffer</pt>
                <pt props="unity cs">imageBufferPtr</pt>
                <pt props="android">buffer</pt>
                <pd props="cpp unreal bp unity android electron rn flutter cs">The encoded video image buffer.</pd>
                <pd props="ios mac">The encoded video image data.</pd>
            </plentry>
            <plentry props="cpp unreal bp unity ios mac electron rn flutter cs">
                <pt>length</pt>
                <pd>The data length of the video image.</pd>
            </plentry>
            <plentry>
                <pt props="android">info</pt>
                <pt props="ios mac">videoFrameInfo</pt>
                <pt props="cpp unreal bp unity electron rn flutter cs">videoEncodedFrameInfo</pt>
                <pd>For the information of the encoded video frame, see <xref keyref="EncodedVideoFrameInfo"/>.</pd>
            </plentry>
            </parml> </section>
        <section id="return_values">
            <title>Returns</title>
            <p id="return">Without practical meaning.</p>
        </section>
    </refbody>
</reference>
