<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE reference PUBLIC "-//OASIS//DTD DITA Reference//EN" "reference.dtd">
<reference id="callback_ivideoencodedframeobserver_onencodedvideoframereceived">
    <title><ph keyref="OnEncodedVideoFrameReceived"/></title>
    <shortdesc id="short"><ph id="shortdesc">Occurs each time the SDK receives an encoded video frame.</ph></shortdesc>
    <prolog>
        <metadata>
            <keywords>
                <indexterm keyref="OnEncodedVideoFrameReceived"/>
            </keywords>
        </metadata>
    </prolog>
    <refbody>
        <section id="prototype">
            <p outputclass="codeblock">
            <codeblock props="android" outputclass="language-java">boolean OnEncodedVideoFrameReceived(ByteBuffer buffer, EncodedVideoFrameInfo info);</codeblock>
            <codeblock props="ios mac" outputclass="language-objectivec">- (BOOL)OnEncodedVideoFrameReceived:(NSData * _Nonnull )videoData
                length:(size_t)length
                info:(AgoraEncodedVideoFrameInfo * _Nonnull)videoFrameInfo;
</codeblock>
            <codeblock props="cpp" outputclass="language-cpp">virtual bool OnEncodedVideoFrameReceived(rtc::uid_t uid, const uint8_t* imageBuffer, size_t length,
                                           const rtc::EncodedVideoFrameInfo&amp; videoEncodedFrameInfo) = 0;</codeblock>
            <codeblock props="electron" outputclass="language-typescript"/>
            <codeblock props="unity" outputclass="language-csharp">public virtual bool OnEncodedVideoImageReceived(IntPtr imageBufferPtr, UInt64 length, EncodedVideoFrameInfo videoEncodedFrameInfo)
                {
                    return true;
                }</codeblock>
            <codeblock props="rn" outputclass="language-typescript"/>
            <codeblock props="flutter" outputclass="language-dart"/> </p>
        </section>
        <section id="parameters">
            <title>Parameters</title>
            <parml>
            <plentry props="cpp">
                <pt>uid</pt>
                <pd>The user ID of the remote user.</pd>
            </plentry>
            <plentry>
                <pt props="ios mac">videoData</pt>
                <pt props="cpp">imageBuffer</pt>
                <pt props="unity">imageBufferPtr</pt>
                <pt props="android">buffer</pt>
                <pd props="cpp unity android">The encoded video image buffer.</pd>
                <pd props="ios mac">The encoded video image data.</pd>
            </plentry>
            <plentry props="cpp unity ios mac">
                <pt>length</pt>
                <pd>The data length of the video image.</pd>
            </plentry>
            <plentry>
                <pt props="android">info</pt>
                <pt props="ios mac">videoFrameInfo</pt>
                <pt props="cpp unity">videoEncodedFrameInfo</pt>
                <pd>The information of the encoded video frame, see <xref keyref="EncodedVideoFrameInfo"/>.</pd>
            </plentry>
            </parml> </section>
        <section id="return_values">
            <title>Returns</title>
            <p id="return">Reserved for future use.</p>
        </section>
    </refbody>
</reference>
