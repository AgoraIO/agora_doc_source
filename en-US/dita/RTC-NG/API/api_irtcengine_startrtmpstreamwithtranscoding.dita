<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE reference PUBLIC "-//OASIS//DTD DITA Reference//EN" "reference.dtd">
<reference id="api_irtcengine_startrtmpstreamwithtranscoding">
    <title> <ph keyref="startRtmpStreamWithTranscoding" /> </title>
    <shortdesc id="short"><ph id="shortdesc">Starts Media Push and sets the transcoding configuration.</ph></shortdesc>
    <prolog>
        <metadata>
            <keywords>
                <indexterm keyref="startRtmpStreamWithTranscoding" />
            </keywords>
        </metadata>
    </prolog>
    <refbody>
        <section id="prototype">
            <p outputclass="codeblock">
            <codeblock props="android" outputclass="language-java">public abstract int startRtmpStreamWithTranscoding(String url, LiveTranscoding transcoding);</codeblock>
            <codeblock props="ios mac" outputclass="language-objectivec">- (int)startRtmpStreamWithTranscoding:(NSString* _Nonnull)url transcoding:(AgoraLiveTranscoding* _Nullable)transcoding;</codeblock>
            <codeblock props="cpp" outputclass="language-cpp">virtual int startRtmpStreamWithTranscoding(const char* url, const LiveTranscoding&amp; transcoding) = 0;</codeblock>
            <codeblock props="electron" outputclass="language-typescript">abstract startRtmpStreamWithTranscoding(
    url: string,
    transcoding: LiveTranscoding
  ): number;</codeblock>
            <codeblock props="unity" outputclass="language-csharp">public abstract int StartRtmpStreamWithTranscoding(string url, LiveTranscoding transcoding);</codeblock>
            <codeblock props="rn" outputclass="language-typescript">abstract startRtmpStreamWithTranscoding(
    url: string,
    transcoding: LiveTranscoding
  ): number;</codeblock>
            <codeblock props="flutter" outputclass="language-dart">Future&lt;void&gt; startRtmpStreamWithTranscoding(
    {required String url, required LiveTranscoding transcoding});</codeblock>
            <codeblock props="reserve" outputclass="language-cpp" /></p>
        </section>
        <section id="detailed_desc">
            <p>You can call this method to push an audio or video stream to the specified CDN address and set the transcoding configuration. This method can push media streams to only one CDN address at a time, so if you need to push streams to multiple addresses, call this method multiple times.</p>
            <p>After you call this method, the SDK triggers the <xref keyref="onRtmpStreamingStateChanged" /> callback on the local client to report the state of the Media Push.</p>
            <note type="attention" id="note">
            <ul>
            <li>Ensure that you enable the media push service before using this function.</li>
            <li props="hide">Ensure that you enable the media push service before using this function. See Prerequisites in <xref keyref="guide-cdn-streaming">Media Push</xref>.</li>
            <li>Call this method after joining a channel.</li>
            <li>Only hosts in the LIVE_BROADCASTING profile can call this method.</li>
            <li>If you want to retry pushing streams after a failed push, make sure to call <xref keyref="stopRtmpStream" /> first, then call this method to retry pushing streams; otherwise, the SDK returns the same error code as the last failed push.</li>
            </ul> </note> </section>
        <section id="parameters">
            <title>Parameters</title>
            <parml>
            <plentry id="url">
                <pt>url</pt>
                <pd>The address of media push. The format is RTMP or RTMPS. The character length cannot exceed 1024 bytes. Special characters such as Chinese characters are not supported.</pd>
            </plentry>
            <plentry id="transcoding">
                <pt>transcoding</pt>
                <pd>
                    <p>The transcoding configuration for media push. See <xref keyref="LiveTranscoding" />.</p>
                </pd>
            </plentry>
            </parml> </section>
        <section id="return_values" props="native unity electron rn">
            <title>Returns</title>
            <ul>
            <li>0: Success.</li>
            <li>&lt; 0: Failure.<ul props="android ios mac rn electron">
                <li>-2: url is null or the string length is 0.</li>
                <li>-7: The SDK is not initialized before calling this method.</li>
                </ul> </li>
            </ul> </section>
    </refbody>
</reference>