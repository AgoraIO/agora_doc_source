<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE reference PUBLIC "-//OASIS//DTD DITA Reference//EN" "reference.dtd">
<reference id="enum_localvideostreamreason">
    <title><ph keyref="LOCAL_VIDEO_STREAM_REASON"/></title>
    <shortdesc id="short"><ph id="shortdesc">Reasons for local video state changes.</ph></shortdesc>
    <refbody>
        <section id="parameters">
            <title>Enumerator</title>
            <parml>
            <plentry>
                <pt><ph keyref="LOCAL_VIDEO_STREAM_REASON_OK"/></pt>
                <pd>0: The local video is normal.</pd>
            </plentry>
            <plentry>
                <pt><ph keyref="LOCAL_VIDEO_STREAM_REASON_FAILURE"/></pt>
                <pd>1: No specified reason for the local video failure.</pd>
            </plentry>
            <plentry>
                <pt><ph keyref="LOCAL_VIDEO_STREAM_REASON_DEVICE_NO_PERMISSION"/></pt>
                <pd>2: No permission to use the local video capturing device. Prompt the user to grant permissions and rejoin the channel.<dl outputclass="deprecated">
                        <dlentry>
                            <dt>Deprecated:</dt>
                            <dd>This enumerator is deprecated. Please use <apiname keyref="CAMERA"/> in the <xref keyref="onPermissionError"/> callback instead.</dd>
                        </dlentry>
                        </dl></pd>
            </plentry>
            <plentry>
                <pt><ph keyref="LOCAL_VIDEO_STREAM_REASON_DEVICE_BUSY"/></pt>
                <pd>3: The local video capturing device is in use. Prompt the user to check if the camera is being used by another app, or try to rejoin the channel.</pd>
            </plentry>
            <plentry>
                <pt><ph keyref="LOCAL_VIDEO_STREAM_REASON_CAPTURE_FAILURE"/></pt>
                <pd>4: The local video capture fails. Prompt the user to check whether the video capture device is working properly, whether the camera is used by another app, or try to rejoin the channel.</pd>
            </plentry>
            <plentry>
                <pt><ph keyref="LOCAL_VIDEO_STREAM_REASON_CODEC_NOT_SUPPORT"/></pt>
                <pd>5: The local video encoding fails.</pd>
            </plentry>
            <plentry props="ios cpp unreal bp rn unity flutter cs">
                    <pt><ph keyref="LOCAL_VIDEO_STREAM_REASON_CAPTURE_INBACKGROUND"/></pt>
                    <pd props="ios cpp unreal bp rn unity flutter"><ph>6:</ph><ph props="cpp unreal bp rn flutter unity"> (iOS only)</ph><ph> The app is in the background. Prompt the user that video capture cannot be performed normally when the app is in the background.</ph></pd>
                    <pd props="cs">6: Reserved.</pd>
                </plentry>
            <plentry props="ios cpp unreal bp rn unity flutter cs">
                    <pt><ph keyref="LOCAL_VIDEO_STREAM_REASON_CAPTURE_MULTIPLE_FOREGROUND_APPS"/></pt>
                    <pd props="ios cpp unreal bp rn unity flutter"><ph>7:</ph><ph props="cpp unreal bp rn flutter unity"> (iOS only) </ph><ph>The current app window is running in Slide Over, Split View, or Picture in Picture mode, and another app is occupying the camera. Prompt the user that the app cannot capture video properly when it is running in Slide Over, Split View, or Picture in Picture mode and another app is occupying the camera.</ph></pd>
                    <pd props="cs">7: Reserved.</pd>
                </plentry>
            <plentry props="android cpp unreal bp unity electron flutter rn cs">
                <pt><ph keyref="LOCAL_VIDEO_STREAM_REASON_DEVICE_NOT_FOUND"/></pt>
                <pd>8: Fails to find a local video capture device. Remind the user to check whether the camera is connected to the device properly or the camera is working properly, and then to rejoin the channel.</pd>
            </plentry>
            <plentry props="cpp unreal bp mac unity electron flutter cs">
                <pt><ph keyref="LOCAL_VIDEO_STREAM_REASON_DEVICE_DISCONNECTED"/></pt>
                <pd props="mac cpp unreal bp electron unity flutter"><ph>9:</ph><ph props="cpp unreal bp unity electron flutter"> (macOS only)</ph><ph> The video capture device currently in use is disconnected (such as being unplugged).</ph></pd>
                <pd props="cs">9: Reserved.</pd>
            </plentry>
            <plentry props="mac cpp unreal bp unity electron flutter cs">
                <pt><ph keyref="LOCAL_VIDEO_STREAM_REASON_DEVICE_INVALID_ID"/></pt>
                <pd><ph>10:</ph><ph props="cpp unreal bp flutter unity electron"> (macOS and Windows only)</ph><ph> The SDK cannot find the video device in the video device list. Check whether the ID of the video device is valid.</ph></pd>
            </plentry>
            <plentry props="cpp unreal bp mac flutter unity electron cs">
                <pt><ph keyref="LOCAL_VIDEO_STREAM_REASON_SCREEN_CAPTURE_WINDOW_MINIMIZED"/></pt>
                <pd props="cpp unreal bp mac flutter unity electron"><ph>11:</ph><ph props="cpp unreal bp flutter unity electron"> (macOS and Windows only)</ph><ph> The shared window is minimized when you call the <xref keyref="startScreenCaptureByWindowId"/> method to share a window. The SDK cannot share a minimized window. Please prompt the user to unminimize the shared window.</ph></pd>
                <pd props="cs">11: Reserved.</pd>
            </plentry>
            <plentry props="cpp unreal bp mac flutter unity electron cs">
                <pt><ph keyref="LOCAL_VIDEO_STREAM_REASON_SCREEN_CAPTURE_WINDOW_CLOSED"/></pt>
                <pd>
                    <p><ph>12:</ph><ph props="cpp unreal bp flutter unity electron"> (macOS and Windows only)</ph><ph> The error code indicates that a window shared by the window ID has been closed or a full-screen window shared by the window ID has exited full-screen mode. After exiting full-screen mode, remote users cannot see the shared window. To prevent remote users from seeing a black screen, Agora recommends that you immediately stop screen sharing.</ph></p>
                    <p>Common scenarios reporting this error code:<ul>
                    <li>The local user closes the shared window.</li>
                    <li>The local user shows some slides in full-screen mode first, and then shares the windows of the slides. After the user exits full-screen mode, the SDK reports this error code.</li>
                    <li>The local user watches a web video or reads a web document in full-screen mode first, and then shares the window of the web video or document. After the user exits full-screen mode, the SDK reports this error code.</li>
                    </ul></p>
                </pd>
            </plentry>
            <plentry props="cpp unreal bp unity electron flutter cs">
                <pt><ph keyref="LOCAL_VIDEO_STREAM_REASON_SCREEN_CAPTURE_WINDOW_OCCLUDED"/></pt>
                <pd>13: (Windows only) The window being shared is overlapped by another window, so the overlapped area is blacked out by the SDK during window sharing.</pd>
            </plentry>
            <plentry props="android cpp">
                <pt><ph keyref="LOCAL_VIDEO_STREAM_REASON_DEVICE_INTERRUPT"/></pt>
                <pd>14: <ph props="cpp">(Android only) </ph>Video capture is interrupted. Possible reasons include the following:<ul>
                    <li>The camera is being used by another app. Prompt the user to check if the camera is being used by another app.</li>
                    <li>The current app has been switched to the background. You can use foreground services to notify the operating system and ensure that the app can still collect video when it switches to the background. <ph props="cn">See <xref keyref="android-background"/>.</ph></li>
                </ul></pd>
            </plentry>
            <plentry props="android cpp">
                <pt><ph keyref="LOCAL_VIDEO_STREAM_REASON_DEVICE_FATAL_ERROR"/></pt>
                <pd>15:<ph props="cpp"> (Android only) </ph>The video capture device encounters an error. Prompt the user to close and restart the camera to restore functionality. If this operation does not solve the problem, check if the camera has a hardware failure.</pd>
            </plentry>
            <plentry props="hide">
                <pt><ph keyref="LOCAL_VIDEO_STREAM_REASON_SCREEN_CAPTURE_WINDOW_NOT_SUPPORTED"/></pt>
                <pd>20: (Windows only) The SDK does not support sharing this type of window. Prompt the user that this type of window sharing is not supported. Try sharing the entire screen instead.</pd>
            </plentry>
            <plentry props="cpp unreal bp">
                <pt><ph keyref="LOCAL_VIDEO_STREAM_REASON_SCREEN_CAPTURE_FAILURE"/></pt>
                <pd>21: (Windows only) The screen has not captured any data available for window sharing.</pd>
            </plentry>
                <plentry props="cpp flutter unity">
                    <pt><ph keyref="LOCAL_VIDEO_STREAM_REASON_SCREEN_CAPTURE_NO_PERMISSION"/></pt>
                    <pd>22: (Windows and macOS only) No permission for screen capture.</pd>
                </plentry>
                <plentry props="cpp flutter unity">
                    <pt><ph keyref="LOCAL_VIDEO_STREAM_REASON_SCREEN_CAPTURE_AUTO_FALLBACK"/></pt>
                    <pd>24: (Windows only) An unexpected error occurred during screen sharing (possibly due to window blocking failure), resulting in decreased performance, but the screen sharing process itself was not affected.</pd>
                </plentry>
                <plentry props="cpp flutter unity">
                    <pt><ph keyref="LOCAL_VIDEO_STREAM_REASON_SCREEN_CAPTURE_WINDOW_HIDDEN"/></pt>
                    <pd>25: (Windows only) The window for the current screen capture is hidden and not visible on the current screen.</pd>
                </plentry>
                <plentry props="cpp flutter unity">
                    <pt><ph keyref="LOCAL_VIDEO_STREAM_REASON_SCREEN_CAPTURE_WINDOW_RECOVER_FROM_HIDDEN"/></pt>
                    <pd>26: (Windows only) The window for screen capture has been restored from hidden state.</pd>
                </plentry>
                <plentry props="cpp mac flutter unity">
                    <pt><ph keyref="LOCAL_VIDEO_STREAM_REASON_SCREEN_CAPTURE_WINDOW_RECOVER_FROM_MINIMIZED"/></pt>
                    <pd><ph>27:</ph><ph props="cpp flutter unity"> (macOS and Windows only) </ph>The window for screen capture has been restored from the minimized state.</pd>
                </plentry>
                <plentry props="cpp flutter unity">
                    <pt><ph keyref="LOCAL_VIDEO_STREAM_REASON_SCREEN_CAPTURE_PAUSED"/></pt>
                    <pd>28: (Windows only) Screen capture has been paused. Common scenarios reporting this error code: The current screen may have been switched to a secure desktop, such as a UAC dialog box or Winlogon desktop.</pd>
                </plentry>
                <plentry props="cpp flutter unity">
                    <pt><ph keyref="LOCAL_VIDEO_STREAM_REASON_SCREEN_CAPTURE_RESUMED"/></pt>
                    <pd>29: (Windows only) Screen capture has resumed from paused state.</pd>
                </plentry>
                <plentry props="cpp unreal bp unity electron flutter cs">
                    <pt><ph keyref="LOCAL_VIDEO_STREAM_REASON_DEVICE_SYSTEM_PRESSURE"/></pt>
                    <pd>101: The current video capture device is unavailable due to excessive system pressure.</pd>
                </plentry>
            </parml> </section>
    </refbody>
</reference>
