<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE reference PUBLIC "-//OASIS//DTD DITA Reference//EN" "reference.dtd">
<reference id="api_irtcengine_stopcameracapture">
    <title><ph keyref="stopCameraCapture" /></title>
    <shortdesc id="short"><ph id="shortdesc">Stops camera capture.</ph></shortdesc>
    <prolog>
        <metadata>
            <keywords>
                <indexterm keyref="stopCameraCapture" />
            </keywords>
        </metadata>
    </prolog>
    <refbody>
        <section id="prototype">
            <p outputclass="codeblock">
            <codeblock props="android" outputclass="language-java">public abstract int stopCameraCapture(Constants.VideoSourceType sourceType);</codeblock>
            <codeblock props="ios mac" outputclass="language-objectivec">- (int)stopCameraCapture:(AgoraVideoSourceType)sourceType NS_SWIFT_NAME(stopCameraCapture(_:));</codeblock>
            <codeblock props="cpp unreal bp" outputclass="language-cpp">virtual int stopCameraCapture(VIDEO_SOURCE_TYPE sourceType) = 0;</codeblock>
            <codeblock props="electron" outputclass="language-typescript">abstract stopCameraCapture(sourceType: VideoSourceType): number;</codeblock>
            <codeblock props="unity cs" outputclass="language-csharp">public abstract int StopCameraCapture(VIDEO_SOURCE_TYPE sourceType);</codeblock>
            <codeblock props="rn" outputclass="language-typescript">abstract stopCameraCapture(sourceType: VideoSourceType): number;</codeblock>
            <codeblock props="flutter" outputclass="language-dart">Future&lt;void&gt; stopCameraCapture(VideoSourceType sourceType);</codeblock>
            <codeblock props="reserve" outputclass="language-cpp" /></p>
        </section>
        <section id="detailed_desc">
            <title>Details</title>
            <dl outputclass="since">
            <dlentry props="native">
                <dt>Since</dt>
                <dd>v4.2.0</dd>
            </dlentry>
            </dl>
            <p>After calling <xref keyref="startCameraCapture" /> to start capturing video through one or more cameras, you can call this method and set the <parmname>sourceType</parmname> parameter to stop the capture from the specified cameras.</p>
            <note props="ios cpp unreal bp unity rn flutter">On the iOS platform, if you want to disable multi-camera capture, you need to call <xref keyref="enableMultiCamera" /> after calling this method and set <parmname>enabled</parmname> to <codeph><ph keyref="false" /></codeph>.</note>
            <note type="attention">If you are using the local video mixing function, calling this method can cause the local video mixing to be interrupted.</note>
        </section>
        <section id="parameters">
            <title>Parameters</title>
            <parml>
            <plentry>
                <pt>sourceType</pt>
                <pd>The type of the video source. See <xref keyref="VIDEO_SOURCE_TYPE" />.</pd>
            </plentry>
            </parml>
        </section>
        <section id="return_values">
            <title><ph keyref="return-section-title" /></title>
            <p props="flutter">When the method call succeeds, there is no return value; when fails, the <xref keyref="AgoraRtcException" /> exception is thrown; and you need to catch the exception and handle it accordingly.</p>
            <ul>
            <li props="native unreal bp electron unity cs rn">0: Success.</li>
            <li>&lt; 0: Failure.</li>
            </ul></section>
    </refbody>
</reference>