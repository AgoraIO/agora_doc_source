<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE reference PUBLIC "-//OASIS//DTD DITA Reference//EN" "reference.dtd">
<reference id="api_irtcengine_setmixedaudioframeparameters">
    <title><ph keyref="setMixedAudioFrameParameters" /></title>
    <shortdesc id="short"><ph id="shortdesc">设置采集和播放音频混音后的原始音频数据格式。</ph></shortdesc>
    <prolog>
        <metadata>
            <keywords>
                <indexterm keyref="setMixedAudioFrameParameters" />
            </keywords>
        </metadata>
    </prolog>
    <refbody>
        <section id="prototype">
            <p outputclass="codeblock">
            <codeblock props="android" outputclass="language-java">public abstract int setMixedAudioFrameParameters(int sampleRate, int channel, int samplesPerCall);</codeblock>
            <codeblock props="hmos" outputclass="language-arkts">public abstract setMixedAudioFrameParameters(sampleRate: number, channel: number, samplesPerCall: number): number;</codeblock>
            <codeblock props="ios mac" outputclass="language-objectivec">- (int)setMixedAudioFrameParametersWithSampleRate:(NSInteger)sampleRate
                                          channel:(NSInteger)channel
                                   samplesPerCall:(NSInteger)samplesPerCall;</codeblock>
            <codeblock props="cpp unreal" outputclass="language-cpp">virtual int setMixedAudioFrameParameters(int sampleRate, int channel, int samplesPerCall) = 0;</codeblock>
            <codeblock props="bp" outputclass="language-cpp">UFUNCTION(BlueprintCallable, Category = &quot;Agora|RtcEngineProxy&quot;)
        int SetMixedAudioFrameParameters(int sampleRate, int channel, int samplesPerCall);</codeblock>
            <codeblock props="electron" outputclass="language-typescript">abstract setMixedAudioFrameParameters(
    sampleRate: number,
    channel: number,
    samplesPerCall: number
  ): number;</codeblock>
            <codeblock props="unity cs" outputclass="language-csharp">public abstract int SetMixedAudioFrameParameters(int sampleRate, int channel, int samplesPerCall);</codeblock>
            <codeblock props="rn" outputclass="language-typescript">abstract setMixedAudioFrameParameters(
    sampleRate: number,
    channel: number,
    samplesPerCall: number
  ): number;</codeblock>
            <codeblock props="flutter" outputclass="language-dart">Future&lt;void&gt; setMixedAudioFrameParameters(
    {required int sampleRate,
    required int channel,
    required int samplesPerCall});</codeblock>
            <codeblock props="reserve" outputclass="language-cpp"></codeblock></p>
        </section>
        <section id="detailed_desc" deliveryTarget="details" otherprops="no-title">
            <p><ph conkeyref="setRecordingAudioFrameParameters/function"/><ph>The SDK triggers the <xref keyref="onMixedAudioFrame" /> callback according to the sampling interval.</ph></p>
        </section>
        <section id="timing" deliveryTarget="details">
            <title>Call timing</title>
            <p>Ensure that you call this method before joining a channel.</p>
        </section>        
        <section id="restriction" deliveryTarget="details">
            <title>Restrictions</title>
            <p>No</p>
        </section>
        <section id="related" deliveryTarget="details">
            <title>Related callbacks</title>
            <p>Sets the<apiname keyref="onMixedAudioFrame" /> data format for the  callback.</p>
        </section>
        <section id="parameters" deliveryTarget="details">
            <title>Parameters</title>
            <parml>
            <plentry conkeyref="setRecordingAudioFrameParameters/sampleRate">
                <pt/>
                <pd/>
            </plentry>
            <plentry conkeyref="setRecordingAudioFrameParameters/channel">
                <pt/>
                <pd/>
            </plentry>
            <plentry conkeyref="setRecordingAudioFrameParameters/samplesPerCall">
                <pt/>
                <pd/>
            </plentry>
            </parml> </section>
        <section id="return_values">
            <title><ph keyref="return-section-title"/></title>
            <p props="flutter">When the method call succeeds, there is no return value; when fails, the <xref keyref="AgoraRtcException"/> exception is thrown. You need to catch the exception and handle it accordingly. <ph props="cn">See <xref keyref="error-code-link"/> for details and resolution suggestions.</ph></p>
            <ul props="native unreal bp unity electron rn cs">
            <li>0: Success.</li>
            <li>&lt; 0: Failure. <ph props="cn">See <xref keyref="error-code-link"/> for details and resolution suggestions.</ph></li>
            </ul> </section>
        </refbody>
</reference>