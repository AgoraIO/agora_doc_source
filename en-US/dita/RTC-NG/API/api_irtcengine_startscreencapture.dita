<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE reference PUBLIC "-//OASIS//DTD DITA Reference//EN" "reference.dtd">
<reference id="api_irtcengine_startscreencapture">
    <title><ph keyref="startScreenCapture"/></title>
    <shortdesc id="short"><ph id="shortdesc">Starts screen sharing.</ph></shortdesc>
    <prolog>
        <metadata>
            <keywords>
                <indexterm keyref="startScreenCapture"/>
            </keywords>
        </metadata>
    </prolog>
    <refbody>
        <section id="prototype">
            <p outputclass="codeblock">
            <codeblock props="android" outputclass="language-java">public abstract int startScreenCapture(ScreenCaptureParameters screenCaptureParameters);
</codeblock>
            <codeblock props="ios" outputclass="language-objectivec">- (int)startScreenCapture:(AgoraScreenCaptureParameters2* _Nullable)parameters NS_SWIFT_NAME(startScreenCapture(_:));</codeblock>
            <codeblock props="cpp" outputclass="language-cpp">#if defined(__ANDROID__) || (defined(__APPLE__) &amp;&amp; TARGET_OS_IOS)
                virtual int startScreenCapture(const ScreenCaptureParameters2&amp; captureParams) = 0;
              #endif</codeblock>
            <codeblock props="electron" outputclass="language-typescript">abstract startScreenCapture(captureParams: ScreenCaptureParameters2): number;</codeblock>
            <codeblock props="unity" outputclass="language-csharp">public abstract int StartScreenCapture(ScreenCaptureParameters2 captureParams);</codeblock>
            <codeblock props="rn" outputclass="language-typescript">abstract startScreenCapture(captureParams: ScreenCaptureParameters2): number;</codeblock>
            <codeblock props="flutter" outputclass="language-dart">Future&lt;void&gt; startScreenCapture(ScreenCaptureParameters2 captureParams);</codeblock> </p>
        </section>
        <section id="detailed_desc">
            <p id="apisequence" props="android ios cpp unity flutter">There are two ways to start screen sharing, you can choose one according to the actual needs:<ul>
            <li>Call this method before joining a channel, then call <xref keyref="joinChannel2"/> to join channel and set <parmname>publishScreenCaptureVideo</parmname> to <codeph><ph keyref="true"/></codeph> to start screen sharing.</li>
            <li>Call this method after joining a channel, then call <xref keyref="updateChannelMediaOptions"/> and set <parmname>publishScreenCaptureVideo</parmname> to <codeph><ph keyref="true"/></codeph> to start screen sharing.</li>
            </ul></p>
            <p props="ios">When the state of the screen sharing extension process changes, the SDK triggers the <xref keyref="onLocalVideoStateChanged"/> callback accordingly. When the type of <parmname>sourceType</parmname> is <apiname keyref="VIDEO_SOURCE_SCREEN"/>, the <parmname>state</parmname> parameter indicates the state of the screen sharing.</p>
            <note type="attention">
            <ul>
            <li props="cpp rn unity flutter">This method applies to Android and iOS only.</li>
            <li props="cpp rn unity flutter ios">On the iOS platform, screen sharing is only available on iOS 12.0 and later.</li>
            <li props="cpp ios unity">The billing for the screen sharing stream is based on the <parmname>dimensions</parmname> in <apiname keyref="ScreenVideoParameters"/>. When you do not pass in a value, Agora bills you at 1280 × 720; when you pass a value in, Agora bills you at that value. See <xref keyref="guide-bill"/>.</li>
            <li props="cpp ios">If you are using the custom audio source instead of the SDK to capture audio, Agora recommends you add the keep-alive processing logic to your application to avoid screen sharing stopping when the application goes to the background.</li>
            <li props="cpp ios">This feature requires high-performance device , and Agora recommends that you use it on iPhone X and later models.</li>
            <li props="cpp ios">This method relies on the iOS screen sharing dynamic library <codeph>AgoraReplayKitExtension.xcframework</codeph>. If the dynamic library is deleted, screen sharing cannot be enabled normally.</li>
            <li props="cpp android">在 Android 平台上，请确保用户已授予 app 屏幕采集权限。</li>
            <li props="cpp android">请确保 Android API 级别不低于 21，否则 SDK 会报告错误码 <codeph><apiname keyref="ERR_SCREEN_CAPTURE_PERMISSION_DENIED"/>(16)</codeph> 和 <codeph><apiname keyref="ERR_SCREEN_CAPTURE_SYSTEM_NOT_SUPPORTED"/>(2)</codeph>。 </li>
            <li props="cpp android">如需在屏幕共享时采集系统音频，你还需确保 Android API 级别不低于 29，否则 SDK 会报告错误码 <codeph><apiname keyref="ERR_SCREEN_CAPTURE_SYSTEM_AUDIO_NOT_SUPPORTED"/>(3)</codeph>。</li>
            <li props="cpp android">在 Android 9 及之后版本上，为避免应用退后台后被系统杀死，Agora 建议你在 <codeph>/app/Manifests/AndroidManifest.xml</codeph> 文件中添加前台服务权限：<codeph>android.permission.FOREGROUND_SERVICE</codeph>。</li>
            <li props="cpp android">因 Android 性能限制，屏幕共享不支持 Android TV。</li>
            <li props="cpp android">因 Android 系统限制，使用华为手机进行屏幕共享时，为避免崩溃，请不要在共享过程中调节屏幕共享流的视频编码分辨率。</li>
            <li props="cpp android">因 Android 系统限制，部分小米手机不支持屏幕共享时采集系统音频。</li>
            <li props="cpp android">为提高屏幕共享时采集系统音频的成功率，Agora 推荐你在加入频道前通过 <xref keyref="setAudioScenario"/> 方法设置音频场景为 <apiname keyref="AUDIO_SCENARIO_GAME_STREAMING"/>。</li>
            </ul></note> </section>
        <section id="parameters">
            <title>Parameters</title>
            <parml>
            <plentry id="params">
                <pt props="ios">parameters</pt>
                <pt props="android">ScreenCaptureParameters</pt>
                <pt props="cpp rn unity electron flutter">captureParams</pt>
                <pd>The screen sharing encoding parameters. The default video dimension is 1920 x 1080, that is, 2,073,600 pixels. Agora uses the value of this parameter to calculate the charges. See <xref keyref="ScreenCaptureParameters2" props="android ios cpp rn unity electron flutter"/>.</pd>
            </plentry>
            </parml> </section>
        <section id="return_values" props="cpp android ios electron unity rn">
            <title>Returns</title>
            <ul>
            <li>0: Success.</li>
            <li>&lt; 0: Failure.<ul>
                <li>-2: The parameter is null.</li>
                </ul></li>
            </ul> </section>
    </refbody>
</reference>
