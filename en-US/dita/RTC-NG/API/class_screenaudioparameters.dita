<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE reference PUBLIC "-//OASIS//DTD DITA Reference//EN" "reference.dtd">
<reference id="class_screenaudioparameters">
    <title><ph keyref="ScreenAudioParameters" /></title>
    <shortdesc id="short"><ph id="shortdesc">The audio configuration for the shared screen stream.</ph></shortdesc>
    <refbody>
        <section id="prototype">
            <p outputclass="codeblock">
            <codeblock props="android" outputclass="language-java">public static class AudioCaptureParameters {
    public int sampleRate = 16000;
    public int channels = 2;
    public int captureSignalVolume = 100;
    public boolean allowCaptureCurrentApp = true;
    @CalledByNative("AudioCaptureParameters")
    public int getSampleRate() {
      return sampleRate;
    }
    @CalledByNative("AudioCaptureParameters")
    public int getChannels() {
      return channels;
    }
    @CalledByNative("AudioCaptureParameters")
    public int getCaptureSignalVolume() {
      return captureSignalVolume;
    }
    @Override
    public String toString() {
      return "AudioCaptureParameters{"
          + "sampleRate=" + sampleRate + ", channels=" + channels + ", captureSignalVolume="
          + captureSignalVolume + ", allowCaptureCurrentApp=" + allowCaptureCurrentApp + '}';
    }
  }</codeblock>
            <codeblock props="ios" outputclass="language-objectivec">__attribute__((visibility("default"))) @interface AgoraScreenAudioParameters : NSObject
@property(assign, nonatomic) NSInteger captureSignalVolume;
@end
</codeblock>
            <codeblock props="cpp unreal" outputclass="language-cpp">struct ScreenAudioParameters {
    int sampleRate = 16000;
    int channels = 2;
    int captureSignalVolume = 100;
};
</codeblock>
         <codeblock props="bp" outputclass="language-cpp">USTRUCT(BlueprintType)
struct FScreenAudioParameters {

	GENERATED_BODY()

	UPROPERTY(VisibleAnywhere, BlueprintReadWrite, Category = &quot;Agora|FScreenAudioParameters&quot;)
	int sampleRate = 16000;

	UPROPERTY(VisibleAnywhere, BlueprintReadWrite, Category = &quot;Agora|FScreenAudioParameters&quot;)
	int channels = 2;

	UPROPERTY(VisibleAnywhere, BlueprintReadWrite, Category = &quot;Agora|FScreenAudioParameters&quot;)
	int captureSignalVolume = 100;

};</codeblock>
            <codeblock props="electron" outputclass="language-typescript">export class ScreenAudioParameters {
  
  sampleRate?: number;
  
  channels?: number;
  
  captureSignalVolume?: number;
}</codeblock>
            <codeblock props="unity cs" outputclass="language-csharp">public class ScreenAudioParameters
    {
        public int sampleRate { set; get; }
        public int channels { set; get; }
        public int captureSignalVolume { set; get; }

        public ScreenAudioParameters()
        {
            sampleRate = 16000;
            channels = 2;
            captureSignalVolume = 100;
        }
    };</codeblock>
            <codeblock props="rn" outputclass="language-typescript">export class ScreenAudioParameters {
  
  sampleRate?: number;
  
  channels?: number;
  
  captureSignalVolume?: number;
}</codeblock>
            <codeblock props="flutter" outputclass="language-dart">class ScreenAudioParameters {
  const ScreenAudioParameters(
      {this.sampleRate, this.channels, this.captureSignalVolume});

  @JsonKey(name: 'sampleRate')
  final int? sampleRate;

  @JsonKey(name: 'channels')
  final int? channels;

  @JsonKey(name: 'captureSignalVolume')
  final int? captureSignalVolume;

  factory ScreenAudioParameters.fromJson(Map&lt;String, dynamic> json) =>
      _$ScreenAudioParametersFromJson(json);

  Map&lt;String, dynamic> toJson() => _$ScreenAudioParametersToJson(this);
}</codeblock>            
            <codeblock props="reserve" outputclass="language-cpp"></codeblock></p>
        </section>
        <section id="detailed_desc">
            <p>Only available where <parmname>captureAudio</parmname> is <codeph><ph keyref="true" /></codeph>.</p>
        </section>
        <section id="parameters">
            <title><text conref="../conref/conref_api_metadata.dita#conref_api_metadata/property" /></title>
            <parml>
                <plentry props="android cpp unreal bp rn electron unity flutter cs">
                    <pt>sampleRate</pt>
                    <pd>Audio sample rate (Hz). The default value is 16000.</pd>
                </plentry>
                <plentry props="android cpp unreal bp rn electron unity flutter cs">
                    <pt>channels</pt>
                    <pd>The number of audio channels. The default value is 2, which means stereo.</pd>
                </plentry>
            <plentry>
                <pt>captureSignalVolume</pt>
                <pd>The volume of the captured system audio. The value range is [0, 100]. The default value is 100.</pd>
            </plentry>
                <plentry props="android">
                    <pt>allowCaptureCurrentApp</pt>
                    <pd>Whether to capture audio from the current app:<ul>
                        <li><codeph><ph keyref="true"/></codeph>: (Default) Caputre audio from the current app.</li>
                        <li><codeph><ph keyref="false"/></codeph>Do not capture the audio from the current app:</li>
                        </ul>
                        <note>This parameter can only set whether to capture audio from the current app and cannot control whether the captured app audio is published to the channel. You need to set it through the <parmname>options</parmname> parameter when calling <xref keyref="joinChannel2"/> or <xref keyref="updateChannelMediaOptions"/>.</note></pd>
                </plentry>
            </parml> </section>
    </refbody>
</reference>
