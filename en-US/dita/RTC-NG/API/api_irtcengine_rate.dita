<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE reference PUBLIC "-//OASIS//DTD DITA Reference//EN" "reference.dtd">
<reference id="api_irtcengine_rate">
    <title><ph keyref="rate" /></title>
    <shortdesc id="short"><ph id="shortdesc">Allows a user to rate a call after the call ends.</ph></shortdesc>
    <prolog>
        <metadata>
            <keywords>
                <indexterm keyref="rate" />
            </keywords>
        </metadata>
    </prolog>
    <refbody>
        <section id="prototype">
            <p outputclass="codeblock">
            <codeblock props="android" outputclass="language-java">public abstract int rate(String callId, int rating, String description);</codeblock>
            <codeblock props="ios mac" outputclass="language-objectivec">- (int)rate:(NSString * _Nonnull)callId
     rating:(NSInteger)rating
description:(NSString * _Nullable)description;</codeblock>
            <codeblock props="cpp unreal" outputclass="language-cpp">virtual int rate(const char* callId,
     int rating,
     const char* description) = 0;</codeblock>
         <codeblock props="bp" outputclass="language-cpp">UFUNCTION(BlueprintCallable, Category = &quot;Agora|RtcEngineProxy&quot;)
	int Rate(FString callId, int rating, FString description);</codeblock>
            <codeblock props="electron" outputclass="language-typescript">abstract rate(callId: string, rating: number, description: string): number;</codeblock>
            <codeblock props="unity cs" outputclass="language-csharp">public abstract int Rate(string callId, int rating, string description);</codeblock>
            <codeblock props="rn" outputclass="language-typescript">abstract rate(callId: string, rating: number, description: string): number;</codeblock>
            <codeblock props="flutter" outputclass="language-dart">Future&lt;void&gt; rate(
    {required String callId,
    required int rating,
    required String description});</codeblock>
            <codeblock props="reserve" outputclass="language-cpp"></codeblock></p>
        </section>
        <section id="detailed_desc">
            <title>Details</title>
            <note type="attention">Ensure that you call this method after leaving a channel.</note> </section>
        <section id="parameters">
            <title>Parameters</title>
            <parml>
            <plentry>
                <pt>callId</pt>
                <pd>The current call ID. You can get the call ID by calling <xref keyref="getCallId" />.</pd>
            </plentry>
            <plentry>
                <pt>rating</pt>
                <pd>The rating of the call. The value is between 1 (the lowest score) and 5 (the highest score). If you set a value out of this range, the SDK returns the -2 (<codeph>ERR_INVALID_ARGUMENT</codeph>) error.</pd>
            </plentry>
            <plentry>
                <pt>description</pt>
                <pd><ph props="native unreal bp unity cs">(Optional) </ph><ph>A description of the call. The string length should be less than 800 bytes.</ph></pd>
            </plentry>
            </parml> </section>
        <section id="return_values">
            <title><ph keyref="return-section-title"/></title>
            <p props="flutter">When the method call succeeds, there is no return value; when fails, the <xref keyref="AgoraRtcException"/> exception is thrown; and you need to catch the exception and handle it accordingly. <ph props="cn">See <xref keyref="error-code-link"/> for details and resolution suggestions.</ph></p>
            <ul props="native unreal bp electron unity rn cs">
            <li>0: Success.</li>
            <li>&lt; 0: Failure. <ph props="cn">See <xref keyref="error-code-link"/> for details and resolution suggestions.</ph><ul>
                <li>-2 (<codeph>ERR_INVALID_ARGUMENT</codeph>).</li>
                <li>-3 (<codeph>ERR_NOT_READY</codeph>).</li>
                </ul></li>
            </ul> </section>
    </refbody>
</reference>