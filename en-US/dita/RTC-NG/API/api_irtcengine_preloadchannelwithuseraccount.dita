<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE reference PUBLIC "-//OASIS//DTD DITA Reference//EN" "reference.dtd">
<reference id="api_irtcengine_preloadchannelwithuseraccount">
    <title><ph keyref="preloadChannelWithUserAccount"/></title>
    <shortdesc id="short"><ph id="shortdesc">Preload the channel using <parmname>token</parmname>, <parmname props="apple cpp framework">channelId</parmname><parmname props="android hmos">channelName</parmname>, and <parmname>userAccount</parmname>.</ph></shortdesc>
    <prolog>
        <metadata>
            <keywords>
                <indexterm keyref="preloadChannelWithUserAccount"/>
            </keywords>
        </metadata>
    </prolog>
    <refbody>
        <section id="prototype">
            <p outputclass="codeblock">
            <codeblock props="android" outputclass="language-java">public abstract int preloadChannelWithUserAccount(
      String token, String channelName, String userAccount);</codeblock>
            <codeblock props="hmos" outputclass="language-arkts"></codeblock>
            <codeblock props="ios mac" outputclass="language-objectivec">- (int)preloadChannelByTokenWithUserAccount:(NSString * _Nullable)token
                   channelId:(NSString * _Nonnull)channelId
                 userAccount:(NSString * _Nonnull)userAccount NS_SWIFT_NAME(preloadChannelWithUserAccount(byToken:channelId:userAccount:));</codeblock>
            <codeblock props="cpp unreal" outputclass="language-cpp">virtual int preloadChannelWithUserAccount(const char* token, const char* channelId, const char* userAccount) = 0;</codeblock>
            <codeblock props="electron" outputclass="language-typescript">abstract preloadChannelWithUserAccount(
    token: string,
    channelId: string,
    userAccount: string
  ): number;</codeblock>
            <codeblock props="unity cs" outputclass="language-csharp">public abstract int PreloadChannel(string token, string channelId, string userAccount);</codeblock>
            <codeblock props="rn" outputclass="language-typescript">abstract preloadChannelWithUserAccount(
    token: string,
    channelId: string,
    userAccount: string
  ): number;</codeblock>
            <codeblock props="flutter" outputclass="language-dart">Future&lt;void> preloadChannelWithUserAccount(
      {required String token,
      required String channelId,
      required String userAccount});</codeblock> </p>
        </section>
        <section id="detailed_desc" deliveryTarget="details" otherprops="no-title" conkeyref="preloadChannel/detailed_desc">
        </section>
        <section id="timing" deliveryTarget="details" conkeyref="preloadChannel/timing">
            <title/>
            <p/>
        </section>
        <section id="restriction" deliveryTarget="details">
            <title>Call Restrictions</title>
            <p><ul><li conkeyref="preloadChannel/note1"/>
        <li>Ensure that the channel name, user account, token, and the values passed when subsequently joining the channel are the same when preloading the channel, otherwise preloading will not be effective.</li>
        <li conkeyref="preloadChannel/note2"/>
       </ul></p>
        </section>
        <section id="parameters" deliveryTarget="details">
            <title>Parameters</title>
            <parml>
            <plentry conkeyref="preloadChannel/token">
                <pt/>
                <pd/>
            </plentry>
            <plentry conkeyref="preloadChannel/channel">
                <pt></pt>
                <pd></pd>
            </plentry>
            <plentry conkeyref="joinChannelWithUserAccount2/userAccount">
                <pt></pt>
                <pd></pd>
            </plentry>
            </parml> </section>
        <section id="return_values">
            <title><ph keyref="return-section-title"/></title>
            <p props="flutter">When the method call is successful, there is no return value; if the method call fails, an <xref keyref="AgoraRtcException"/> exception is thrown, which you need to catch and handle. <ph props="cn">See <xref keyref="error-code-link"/> for details and suggested solutions.</ph></p>
            <ul>
            <li props="native unreal bp unity rn electron cs">0: Method call succeeded.</li>
            <li>&lt; 0: Method call failed. <ph props="cn">See <xref keyref="error-code-link"/> for details and suggested solutions.</ph>
                <ul>
                <li>-2: Invalid parameter. For example, the user account is empty. You need to provide a valid parameter and rejoin the channel.</li>
                <li>-7: The <apiname keyref="IRtcEngine" /> object has not been initialized. You need to successfully initialize the <apiname keyref="IRtcEngine" /> object before calling this method.</li>
                <li>-102: Invalid channel name. You need to provide a valid channel name and rejoin the channel.</li>
                </ul></li>
            </ul> </section>
        </refbody>
</reference>
