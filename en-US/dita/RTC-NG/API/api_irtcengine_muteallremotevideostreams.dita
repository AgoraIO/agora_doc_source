<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE reference PUBLIC "-//OASIS//DTD DITA Reference//EN" "reference.dtd">
<reference id="api_irtcengine_muteallremotevideostreams">
    <title><ph keyref="muteAllRemoteVideoStreams" /></title>
    <shortdesc id="short"><ph id="shortdesc">Stops or resumes subscribing to the video streams of all remote users.</ph></shortdesc>
    <prolog>
        <metadata>
            <keywords>
                <indexterm keyref="muteAllRemoteVideoStreams" />
            </keywords>
        </metadata>
    </prolog>
    <refbody>
        <section id="prototype">
            <p outputclass="codeblock">
            <codeblock props="android" outputclass="language-java">public abstract int muteAllRemoteVideoStreams(boolean muted);</codeblock>
            <codeblock props="ios mac" outputclass="language-objectivec">- (int)muteAllRemoteVideoStreams:(BOOL)mute;</codeblock>
            <codeblock props="cpp unreal" outputclass="language-cpp">virtual int muteAllRemoteVideoStreams(bool mute) = 0;</codeblock>
         <codeblock props="bp" outputclass="language-cpp">UFUNCTION(BlueprintCallable, Category = &quot;Agora|RtcEngineProxy&quot;)
	int MuteAllRemoteVideoStreams(bool mute);</codeblock>
            <codeblock props="electron" outputclass="language-typescript">abstract muteAllRemoteVideoStreams(mute: boolean): number;</codeblock>
            <codeblock props="unity cs" outputclass="language-csharp">public abstract int MuteAllRemoteVideoStreams(bool mute);</codeblock>
            <codeblock props="rn" outputclass="language-typescript">abstract muteAllRemoteVideoStreams(mute: boolean): number;</codeblock>
            <codeblock props="flutter" outputclass="language-dart">Future&lt;void&gt; muteAllRemoteVideoStreams(bool mute);</codeblock>
            <codeblock props="reserve" outputclass="language-cpp"></codeblock></p>
        </section>
        <section id="detailed_desc" deliveryTarget="details" otherprops="no-title">
            <p id="desc">After successfully calling this method, the local user stops or resumes subscribing to the audio streams of all remote users, including all subsequent users.</p>
            <note type="attention" id="note">
                <p>By default, the SDK subscribes to the video streams of all remote users when joining a channel. To modify this behavior, you can set <parmname>autoSubscribeVideo</parmname> to<codeph><ph keyref="false"/></codeph> when calling <xref keyref="joinChannel2"/> to join the channel, which will cancel the subscription to the video streams of all users upon joining the channel.</p>
            </note>
        </section>
        <section id="timing" deliveryTarget="details">
            <title>Call timing</title>
            <p>Call this method after joining a channel.</p>
            <note type="attention">If you call <apiname keyref="muteAllRemoteVideoStreams"/>(<codeph><ph keyref="true"/></codeph>) after leaving the channel, you will not subscribe to any user's video stream the next time you join the channel.</note>
        </section>        
        <section id="restriction" deliveryTarget="details">
            <title>Restrictions</title>
            <p>If you call this method and then call <xref keyref="enableVideo"/> or <xref keyref="disableVideo"/>, the latest call will prevail.</p>
        </section>
        <section id="parameters">
            <title>Parameters</title>
            <parml>
            <plentry id="mute">
                <pt props="android">muted</pt>
                <pt props="ios mac cpp unreal bp unity flutter rn electron cs">mute</pt>
                <pd>
                    <p>Whether to stop subscribing to the video streams of all remote users.<ul>
                    <li><codeph><ph keyref="true" /></codeph>: Stop subscribing to the video streams of all remote users.</li>
                    <li><codeph><ph keyref="false" /></codeph>: (Default) Subscribe to the audio streams of all remote users by default.</li>
                    </ul> </p>
                </pd>
            </plentry>
            </parml> </section>
        <section id="return_values">
            <title><ph keyref="return-section-title"/></title>
            <p props="flutter">When the method call succeeds, there is no return value; when fails, the <xref keyref="AgoraRtcException"/> exception is thrown. You need to catch the exception and handle it accordingly. <ph props="cn">See <xref keyref="error-code-link"/> for details and resolution suggestions.</ph></p>
            <ul props="native unreal bp electron unity rn cs">
            <li>0: Success.</li>
            <li> &lt; 0: Failure. <ph props="cn">See <xref keyref="error-code-link"/> for details and resolution suggestions.</ph></li>
            </ul> </section>
    </refbody>
</reference>