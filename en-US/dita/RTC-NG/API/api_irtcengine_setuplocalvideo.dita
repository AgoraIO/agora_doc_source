<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE reference PUBLIC "-//OASIS//DTD DITA Reference//EN" "reference.dtd">
<reference id="api_irtcengine_setuplocalvideo">
    <title><ph keyref="setupLocalVideo" /></title>
    <shortdesc id="short"><ph id="shortdesc">Initializes the local video view.</ph></shortdesc>
    <prolog>
        <metadata>
            <keywords>
                <indexterm keyref="setupLocalVideo" />
            </keywords>
        </metadata>
    </prolog>
    <refbody>
        <section id="prototype">
            <p outputclass="codeblock">
            <codeblock props="android" outputclass="language-java">public abstract int setupLocalVideo(VideoCanvas local);</codeblock>
            <codeblock props="hmos" outputclass="language-arkts">public abstract setupLocalVideo(canvas: VideoCanvas): number;</codeblock>
            <codeblock props="ios mac" outputclass="language-objectivec">- (int)setupLocalVideo:(AgoraRtcVideoCanvas * _Nullable)local;</codeblock>
            <codeblock props="cpp unreal" outputclass="language-cpp">virtual int setupLocalVideo(const VideoCanvas&amp; canvas) = 0;</codeblock>
            <codeblock props="bp" outputclass="language-cpp">UFUNCTION(BlueprintCallable, Category = &quot;Agora|IRtcEngine&quot;)
	int SetupLocalVideo(const FVideoCanvas&amp; canvas);</codeblock>
            <codeblock props="electron" outputclass="language-typescript">abstract setupLocalVideo(canvas: VideoCanvas): number;</codeblock>
            <codeblock props="unity cs" outputclass="language-csharp">public abstract int SetupLocalVideo(VideoCanvas canvas);</codeblock>
            <codeblock props="rn" outputclass="language-typescript">abstract setupLocalVideo(canvas: VideoCanvas): number;</codeblock>
            <codeblock props="flutter" outputclass="language-dart">Future&lt;void&gt; setupLocalVideo(VideoCanvas canvas);</codeblock>
            <codeblock props="reserve" outputclass="language-cpp"></codeblock></p>
        </section>
        <section id="detailed_desc" deliveryTarget="details" otherprops="no-title">
            <p>This method initializes the video view of a local stream on the local device. It only affects the video seen by the local user and does not impact the publishing of the local video. Call this method to bind the local video stream to a video view (<parmname>view</parmname>) and to set the rendering and mirror modes of the video view.</p>
            <p>The binding remains valid after leaving the channel. To stop rendering or unbind the local video from the view, set <parmname>view</parmname> as <ph keyref="NULL" />.</p>
            <note type="attention">
            <ul>
            <li conkeyref="setupRemoteVideo/render" props="flutter"/>
            <li props="unity cs">If you need to implement native window rendering, use this method; if you only need to render video images in your Unity project, use the methods in the <xref keyref="VideoSurface"/> class instead.</li>
            <li props="native unreal bp unity rn flutter cs">To update only the rendering or mirror mode of the local video view during a call, call <xref keyref="setLocalRenderMode2" /> instead.</li>
            </ul> </note> </section>
            <section id="scenario" deliveryTarget="details">
                <title>Applicable scenarios</title>
                <p>After initialization, call this method to set the local video and then join the channel.</p>
                <p>In real-time interactive scenarios, if you need to simultaneously view multiple preview frames in the local video preview, and each frame is at a different observation position along the video link, you can repeatedly call this method to set different <parmname>view</parmname>s and set different observation positions for each <parmname>view. </parmname>For example, by setting the video source to the camera and then configuring two <parmname>view</parmname>s with <parmname>position</parmname> setting to <ph keyref="POSITION_POST_CAPTURER_ORIGIN"/> and <ph keyref="POSITION_POST_CAPTURER"/>, you can simultaneously preview the raw, unprocessed video frame and the video frame that has undergone preprocessing (image enhancement effects, virtual background, watermark) in the local video preview.</p>
            </section>
            <section id="timing" deliveryTarget="details">
                <title>Call timing</title>
                <p>You can call this method either before or after joining a channel.</p>
            </section>        
            <section id="restriction" deliveryTarget="details">
                <title>Restrictions</title>
                <p>None.</p>
            </section>
            <section id="parameters" deliveryTarget="details">
                <title>Parameters</title>
            <parml>
            <plentry>
                <pt props="cpp hmos unreal bp unity rn electron flutter cs">canvas</pt>
                <pt props="android ios mac">local</pt>
                <pd>The local video view and settings. See <xref keyref="VideoCanvas"/>.</pd>
            </plentry>
            </parml> </section>
        <section id="return_values">
            <title><ph keyref="return-section-title"/></title>
            <p props="flutter">When the method call succeeds, there is no return value; when fails, the <xref keyref="AgoraRtcException"/> exception is thrown. You need to catch the exception and handle it accordingly. <ph props="cn">See <xref keyref="error-code-link"/> for details and resolution suggestions.</ph></p>
            <ul>
            <li props="native unreal bp electron unity rn cs">0: Success.</li>
            <li>&lt; 0: Failure. <ph props="cn">See <xref keyref="error-code-link"/> for details and resolution suggestions.</ph></li>
            </ul> </section>
    </refbody>
</reference>
