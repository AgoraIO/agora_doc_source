<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE reference PUBLIC "-//OASIS//DTD DITA Reference//EN" "reference.dtd">
<reference id="callback_ivideoframeobserver_oncapturevideoframe">
    <title><ph keyref="onCaptureVideoFrame"/></title>
    <shortdesc id="short"><ph id="shortdesc">Occurs each time the SDK receives a video frame captured by the local camera.</ph></shortdesc>
    <prolog>
        <metadata>
            <keywords>
                <indexterm keyref="onCaptureVideoFrame"/>
            </keywords>
        </metadata>
    </prolog>
    <refbody>
        <section id="prototype">
            <p outputclass="codeblock">
            <codeblock props="android" outputclass="language-java">boolean onCaptureVideoFrame(VideoFrame videoFrame);</codeblock>
            <codeblock props="ios mac" outputclass="language-objectivec">- (BOOL)onCaptureVideoFrame:(AgoraOutputVideoFrame * _Nonnull)videoFrame;</codeblock>
            <codeblock props="cpp" outputclass="language-cpp">virtual bool onCaptureVideoFrame(VideoFrame&amp; videoFrame) = 0;</codeblock>
            <codeblock props="electron" outputclass="language-typescript"/>
            <codeblock props="unity" outputclass="language-csharp">public virtual bool OnCaptureVideoFrame(VideoFrame videoFrame)
        {
            return true;
        }</codeblock>
            <codeblock props="rn" outputclass="language-typescript"/>
            <codeblock props="flutter" outputclass="language-dart"/> </p>
        </section>
        <section id="detailed_desc">
   <p>After you successfully register the video frame observer, the SDK triggers this callback each time it receives a video frame. In this callback, you can get the video data captured by the local camera. You can then pre-process the data according to your scenarios.</p>
   <p>After pre-processing, you can send the processed video data back to the SDK by this callback.</p>
   <note type="attention" id="note">
       <ul>
  <li>If you get the video data in RGBA color encoding format, Agora does not support using this callback to send the processed data in RGBA color encoding format back to the SDK.</li>
  <li>The video data obtained through this callback has not undergone preprocessing, such as watermarking, cropping content, rotating, or image enhancement.</li>
       </ul>
   </note>
        </section>
        <section id="parameters"><title>Parameters</title>
   <parml>
       <plentry id="videoframe">
           <pt>videoFrame</pt>
  <pd><ph>The video frame. </ph><ph props="cpp ios mac unity">See <xref keyref="VideoFrame"/>.</ph></pd>
       </plentry>
   </parml>
        </section>
        <section id="return_values">
            <title>Returns</title>
            <p id="return">
            <ul>
            <li><codeph><ph keyref="true"/></codeph>: Sets the SDK to receive the video frame.</li>
            <li><codeph><ph keyref="false"/></codeph>: Sets the SDK to discard the video frame.</li>
            </ul></p>
        </section>
    </refbody>
</reference>
