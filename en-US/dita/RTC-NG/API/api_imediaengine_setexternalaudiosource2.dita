<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE reference PUBLIC "-//OASIS//DTD DITA Reference//EN" "reference.dtd">
<reference id="api_imediaengine_setexternalaudiosource2">
    <title><ph keyref="setExternalAudioSource2"/></title>
    <shortdesc id="short"><ph id="shortdesc">Sets the external audio source parameters.</ph></shortdesc>
    <prolog>
        <metadata>
            <keywords>
                <indexterm keyref="setExternalAudioSource2"/>
            </keywords>
        </metadata>
    </prolog>
    <refbody>
        <section id="prototype">
            <p outputclass="codeblock">
            <codeblock props="android" outputclass="language-java">public abstract int setExternalAudioSource(boolean enabled, int sampleRate, int channels, boolean localPlayback, boolean publish);</codeblock>
            <codeblock props="ios mac" outputclass="language-objectivec">- (int)setExternalAudioSource:(BOOL)enabled
                   sampleRate:(NSInteger)sampleRate
                     channels:(NSInteger)channels
                localPlayback:(BOOL)localPlayback
                      publish:(BOOL)publish;</codeblock>
            <codeblock props="cpp unreal" outputclass="language-cpp">virtual int setExternalAudioSource(bool enabled,
                                   int sampleRate,
                                   int channels,
                                   bool localPlayback = false,
                                   bool publish = true) = 0;</codeblock>
            <codeblock props="electron" outputclass="language-typescript">abstract setExternalAudioSource(
    enabled: boolean,
    sampleRate: number,
    channels: number,
    localPlayback?: boolean,
    publish?: boolean
  ): number;</codeblock>
            <codeblock props="unity cs" outputclass="language-csharp">public abstract int SetExternalAudioSource(bool enabled, int sampleRate, int channels, bool localPlayback = false, bool publish = true);</codeblock>
            <codeblock props="rn" outputclass="language-typescript">abstract setExternalAudioSource(
    enabled: boolean,
    sampleRate: number,
    channels: number,
    localPlayback?: boolean,
    publish?: boolean
  ): number;</codeblock>
            <codeblock props="flutter" outputclass="language-dart">Future&lt;void> setExternalAudioSource(
    {required bool enabled,
    required int sampleRate,
    required int channels,
    bool localPlayback = false,
    bool publish = true});</codeblock>
            <codeblock props="reserve" outputclass="language-cpp"/></p>
        </section>
        <section id="detailed_desc">
            <title>Details</title>
            <dl outputclass="deprecated">
            <dlentry>
                <dt>Deprecated:</dt>
                <dd>This method is deprecated, use <xref keyref="createCustomAudioTrack" /> instead.</dd>
            </dlentry>
            </dl>
            <note type="attention">Call this method before joining a channel.</note> </section>
        <section id="parameters">
            <title>Parameters</title>
            <parml>
            <plentry>
                <pt>enabled</pt>
                <pd>
                    <p>Whether to enable the external audio source:<ul>
                    <li><codeph><ph keyref="true"/></codeph>: Enable the external audio source.</li>
                    <li><codeph><ph keyref="false"/></codeph>: (Default) Disable the external audio source.</li>
                    </ul></p>
                </pd>
            </plentry>
            <plentry>
                <pt>sampleRate</pt>
                <pd>The sample rate (Hz) of the external audio source which can be set as <codeph>8000</codeph>, <codeph>16000</codeph>, <codeph>32000</codeph>, <codeph>44100</codeph>, or <codeph>48000</codeph>.</pd>
            </plentry>
            <plentry>
                <pt>channels</pt>
                <pd>The number of channels of the external audio source, which can be set as <codeph>1</codeph> (Mono) or <codeph>2</codeph> (Stereo).</pd>
            </plentry>
            <plentry>
                <pt>localPlayback</pt>
                <pd id="localplayback">
                    <p>Whether to play the external audio source:<ul>
                    <li><codeph><ph keyref="true"/></codeph>: Play the external audio source.</li>
                    <li><codeph><ph keyref="false"/></codeph>: (Default) Do not play the external source.</li>
                    </ul></p>
                </pd>
            </plentry>
            <plentry>
                <pt>publish</pt>
                <pd>
                    <p>Whether to publish audio to the remote users:<ul id="ul_agk_dnf_3qb">
                    <li><codeph><ph keyref="true"/></codeph>: (Default) Publish audio to the remote users.</li>
                    <li><codeph><ph keyref="false"/></codeph>: Do not publish audio to the remote users.</li>
                    </ul></p>
                </pd>
            </plentry>
            </parml> </section>
        <section id="return_values">
            <title><ph keyref="return-section-title"/></title>
            <p props="flutter">When the method call succeeds, there is no return value; when fails, the <xref keyref="AgoraRtcException"/> exception is thrown. You need to catch the exception and handle it accordingly. <ph props="cn">See <xref keyref="error-code-link"/> for details and resolution suggestions.</ph></p>
            <ul id="ul_cff_fnf_3qb">
            <li props="native unreal bp electron unity rn cs">0: Success.</li>
            <li>&lt; 0: Failure. <ph props="cn">See <xref keyref="error-code-link"/> for details and resolution suggestions.</ph></li>
            </ul> </section>
    </refbody>
</reference>
