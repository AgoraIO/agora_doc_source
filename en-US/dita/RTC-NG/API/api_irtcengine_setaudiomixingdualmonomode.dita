<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE reference PUBLIC "-//OASIS//DTD DITA Reference//EN" "reference.dtd">
<reference id="api_irtcengine_setaudiomixingdualmonomode">
    <title><ph keyref="setAudioMixingDualMonoMode" /></title>
    <shortdesc id="short"><ph id="shortdesc">Sets the channel mode of the current audio file.</ph></shortdesc>
    <prolog>
        <metadata>
            <keywords>
                <indexterm keyref="setAudioMixingDualMonoMode" />
            </keywords>
        </metadata>
    </prolog>
    <refbody>
        <section id="prototype">
            <p outputclass="codeblock">
            <codeblock props="android" outputclass="language-java">public abstract int setAudioMixingDualMonoMode(Constants.AudioMixingDualMonoMode mode);</codeblock>
            <codeblock props="hmos" outputclass="language-arkts"></codeblock>
            <codeblock props="ios mac" outputclass="language-objectivec">- (int)setAudioMixingDualMonoMode:(AgoraAudioMixingDualMonoMode)mode;</codeblock>
            <codeblock props="cpp unreal" outputclass="language-cpp">virtual int setAudioMixingDualMonoMode(media::AUDIO_MIXING_DUAL_MONO_MODE mode) = 0;</codeblock>
         <codeblock props="bp" outputclass="language-cpp">UFUNCTION(BlueprintCallable, Category = &quot;Agora|RtcEngineProxy&quot;)
	int SetAudioMixingDualMonoMode(EAUDIO_MIXING_DUAL_MONO_MODE mode);</codeblock>
            <codeblock props="electron" outputclass="language-typescript">abstract setAudioMixingDualMonoMode(mode: AudioMixingDualMonoMode): number;</codeblock>
            <codeblock props="unity cs" outputclass="language-csharp">public abstract int SetAudioMixingDualMonoMode(AUDIO_MIXING_DUAL_MONO_MODE mode);</codeblock>
            <codeblock props="rn" outputclass="language-typescript">abstract setAudioMixingDualMonoMode(mode: AudioMixingDualMonoMode): number;</codeblock>
            <codeblock props="flutter" outputclass="language-dart">Future&lt;void&gt; setAudioMixingDualMonoMode(AudioMixingDualMonoMode mode);</codeblock>
            <codeblock props="reserve" outputclass="language-cpp"></codeblock></p>
        </section>
        <section id="detailed_desc" deliveryTarget="details" otherprops="no-title">
            <p>In a stereo music file, the left and right channels can store different audio data. According to your needs, you can set the channel mode to original mode, left channel mode, right channel mode, or mixed channel mode.</p>
        </section>
            <section id="scenario" deliveryTarget="details">
                <title>Applicable scenarios</title>
                <p>For example, in the KTV scenario, the left channel of the music file stores the musical accompaniment, and the right channel stores the singing voice. 你可以根据实际需求进行设置：<ul>
                    <li>如果你只需听伴奏，则用该方法设置音频文件的声道模式为左声道模式。</li>
                    <li>如果你需要同时听伴奏和原唱，则调用该方法设置声道模式为混合模式。</li></ul></p>
            </section>
            <section id="timing" deliveryTarget="details">
                <title>Call timing</title>
                <p>该方法需要在 <xref keyref="startAudioMixing2" /> 之后，并收到 <xref keyref="onAudioMixingStateChanged" /><codeph>(<ph keyref="AUDIO_MIXING_STATE_PLAYING" />)</codeph> 回调后调用。</p>
            </section>        
            <section id="restriction" deliveryTarget="details">
                <title>Restrictions</title>
                <p>This method only applies to stereo audio files.</p>
            </section>
            <section id="parameters" deliveryTarget="details">
                <title>Parameters</title>
            <parml>
            <plentry>
                <pt>mode</pt>
                <pd>The channel mode. See <xref keyref="AUDIO_MIXING_DUAL_MONO_MODE" />.</pd>
            </plentry>
            </parml> </section>
        <section id="return_values">
            <title><ph keyref="return-section-title"/></title>
            <p props="flutter">When the method call succeeds, there is no return value; when fails, the <xref keyref="AgoraRtcException"/> exception is thrown. You need to catch the exception and handle it accordingly. <ph props="cn">See <xref keyref="error-code-link"/> for details and resolution suggestions.</ph></p>
            <ul props="native unreal bp unity rn electron cs">
            <li>0: Success.</li>
            <li>&lt; 0: Failure. <ph props="cn">See <xref keyref="error-code-link"/> for details and resolution suggestions.</ph></li>
            </ul> </section>
    </refbody>
</reference>
