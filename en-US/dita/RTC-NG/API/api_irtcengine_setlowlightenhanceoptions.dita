<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE reference PUBLIC "-//OASIS//DTD DITA Reference//EN" "reference.dtd">
<reference id="api_irtcengine_setlowlightenhanceoptions">
    <title> <ph keyref="setLowlightEnhanceOptions" /> </title>
    <shortdesc id="short"><ph id="shortdesc">Sets low-light enhancement.</ph></shortdesc>
    <prolog>
        <metadata>
            <keywords>
                <indexterm keyref="setLowlightEnhanceOptions" />
            </keywords>
        </metadata>
    </prolog>
    <refbody>
        <section id="prototype">
            <p outputclass="codeblock">
            <codeblock props="android" outputclass="language-java">public abstract int setLowlightEnhanceOptions(boolean enabled, LowLightEnhanceOptions options);
</codeblock>
            <codeblock props="ios mac" outputclass="language-objectivec">- (int)setLowlightEnhanceOptions:(BOOL)enable options:(AgoraLowlightEnhanceOptions* _Nullable)options NS_SWIFT_NAME(setLowlightEnhanceOptions(_:options:));
</codeblock>
            <codeblock props="cpp unreal" outputclass="language-cpp">virtual int setLowlightEnhanceOptions(bool enabled, const LowlightEnhanceOptions&amp; options, agora::media::MEDIA_SOURCE_TYPE type = agora::media::PRIMARY_CAMERA_SOURCE) = 0;</codeblock>
         <codeblock props="bp" outputclass="language-cpp">UFUNCTION(BlueprintCallable, Category = &quot;Agora|RtcEngineProxy&quot;)
	int SetLowlightEnhanceOptions(bool enabled, const FLowlightEnhanceOptions&amp; options, EMEDIA_SOURCE_TYPE type);</codeblock>
            <codeblock props="electron" outputclass="language-typescript">abstract setLowlightEnhanceOptions(
    enabled: boolean,
    options: LowlightEnhanceOptions,
    type?: MediaSourceType
  ): number;</codeblock>
            <codeblock props="unity cs" outputclass="language-csharp">public abstract int SetLowlightEnhanceOptions(bool enabled, LowlightEnhanceOptions options, MEDIA_SOURCE_TYPE type = MEDIA_SOURCE_TYPE.PRIMARY_CAMERA_SOURCE);</codeblock>
            <codeblock props="rn" outputclass="language-typescript">abstract setLowlightEnhanceOptions(
    enabled: boolean,
    options: LowlightEnhanceOptions,
    type?: MediaSourceType
  ): number;</codeblock>
            <codeblock props="flutter" outputclass="language-dart">Future&lt;void> setLowlightEnhanceOptions(
      {required bool enabled,
      required LowlightEnhanceOptions options,
      MediaSourceType type = MediaSourceType.primaryCameraSource});</codeblock>
            <codeblock props="reserve" outputclass="language-cpp"></codeblock></p>
        </section>
        <section id="detailed_desc">
            <title>Details</title>
            <p>The low-light enhancement feature can adaptively adjust the brightness value of the video captured in situations with low or uneven lighting, such as backlit, cloudy, or dark scenes. It restores or highlights the image details and improves the overall visual effect of the video.</p>
            <p>You can call this method to enable the color enhancement feature and set the options of the color enhancement effect.</p>
            <note type="attention" id="req">
            <ul>
            <li>Call this method after calling <xref keyref="enableVideo" />.</li>
            <li>Dark light enhancement has certain requirements for equipment performance. The low-light enhancement feature has certain performance requirements on devices. If your device overheats after you enable low-light enhancement, Agora recommends modifying the low-light enhancement options to a less performance-consuming level or disabling low-light enhancement entirely.</li>
            <li>Both this method and <xref keyref="setExtensionProperty" /> can turn on low-light enhancement:<ul>
                <li>When you use the SDK to capture video, Agora recommends this method (this method only works for video captured by the SDK).</li>
                <li>When you use an external video source to implement custom video capture, or send an external video source to the SDK, Agora recommends using <apiname keyref="setExtensionProperty" />.</li>
                </ul></li>
            <li>This method relies on the image enhancement dynamic library <codeph><ph keyref="clearvision"/></codeph>. If the dynamic library is deleted, the function cannot be enabled normally.</li>
            </ul> </note> </section>
        <section id="parameters">
            <title>Parameters</title>
            <parml>
            <plentry id="enable">
                <pt props="android cpp unreal bp electron unity rn flutter cs">enabled</pt>
                <pt props="ios mac">enable</pt>
                <pd>Whether to enable low-light enhancement:<ul>
                    <li><codeph><ph keyref="true" /></codeph>: Enable low-light enhancement.</li>
                    <li><codeph><ph keyref="false" /></codeph>: (Default) Disable low-light enhancement.</li>
                    </ul></pd>
            </plentry>
            <plentry id="options">
                <pt>options</pt>
                <pd>The low-light enhancement options. See <xref keyref="LowlightEnhanceOptions" />.</pd>
            </plentry>
                <plentry props="cpp unreal bp rn unity electron flutter cs" id="type">
                    <pt>type</pt>
                    <pd>The type of the video source. See <xref keyref="MEDIA_SOURCE_TYPE"/>.</pd>
                </plentry>
            </parml> </section>
        <section id="return_values">
            <title><ph keyref="return-section-title"/></title>
            <p props="flutter">When the method call succeeds, there is no return value; when fails, the <xref keyref="AgoraRtcException"/> exception is thrown; and you need to catch the exception and handle it accordingly. <ph props="cn">See <xref keyref="error-code-link"/> for details and resolution suggestions.</ph></p>
            <ul props="native unreal bp electron unity rn cs">
            <li>0: Success.</li>
            <li>&lt; 0: Failure. <ph props="cn">See <xref keyref="error-code-link"/> for details and resolution suggestions.</ph></li>
            </ul> </section>
    </refbody>
</reference>
