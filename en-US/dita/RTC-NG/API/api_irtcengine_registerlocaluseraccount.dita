<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE reference PUBLIC "-//OASIS//DTD DITA Reference//EN" "reference.dtd">
<reference id="api_irtcengine_registerlocaluseraccount">
    <title><ph keyref="registerLocalUserAccount" /></title>
    <shortdesc id="short"><ph id="shortdesc">Registers a user account.</ph></shortdesc>
    <prolog>
        <metadata>
            <keywords>
                <indexterm keyref="registerLocalUserAccount" />
            </keywords>
        </metadata>
    </prolog>
    <refbody>
        <section id="prototype">
            <p outputclass="codeblock">
            <codeblock props="android" outputclass="language-java">public abstract int registerLocalUserAccount(String appId, String userAccount);</codeblock>
            <codeblock props="ios mac" outputclass="language-objectivec">- (int)registerLocalUserAccountWithAppID:(NSString * _Nonnull)appID userAccount:(NSString * _Nonnull)userAccount;</codeblock>
            <codeblock props="cpp unreal" outputclass="language-cpp">virtual int registerLocalUserAccount(const char* appId, const char* userAccount) = 0;</codeblock>
         <codeblock props="bp" outputclass="language-cpp">UFUNCTION(BlueprintCallable, Category = &quot;Agora|RtcEngineProxy&quot;)
	int RegisterLocalUserAccount(FString appId, FString userAccount);</codeblock>
            <codeblock props="electron" outputclass="language-typescript">abstract registerLocalUserAccount(appId: string, userAccount: string): number;</codeblock>
            <codeblock props="unity cs" outputclass="language-csharp">public abstract int RegisterLocalUserAccount(string appId, string userAccount);</codeblock>
            <codeblock props="rn" outputclass="language-typescript">abstract registerLocalUserAccount(appId: string, userAccount: string): number;</codeblock>
            <codeblock props="flutter" outputclass="language-dart">Future&lt;void&gt; registerLocalUserAccount(
    {required String appId, required String userAccount});</codeblock>
            <codeblock props="reserve" outputclass="language-cpp"></codeblock></p>
        </section>
            <section id="detailed_desc" deliveryTarget="details" otherprops="no-title">
            <p>Once registered, the user account can be used to identify the local user when the user joins the channel. After the registration is successful, the user account can identify the identity of the local user, and the user can use it to join the channel.</p>
            <p>This method is optional. 如果你希望用户使用 User Account 加入频道，可参考下列任意一种方式实现：<ul props="electron flutter rn">
            <li>先调用 <apiname keyref="registerLocalUserAccount" /> 方法注册 Account，再调用 <xref keyref="joinChannelWithUserAccount2"/> 方法加入频道，可以缩短进入频道的时间。</li>
            <li>Call the <apiname keyref="joinChannelWithUserAccount2" /> method to join the channel.</li>
            </ul>
            <ul props="native unity cs">
                <li>先调用 <apiname keyref="registerLocalUserAccount" /> 方法注册 Account，再调用 <xref keyref="joinChannelWithUserAccount1"/> 或 <xref keyref="joinChannelWithUserAccount2"/> 方法加入频道，可以缩短进入频道的时间。</li>
                <li>Call<xref keyref="joinChannelWithUserAccount1"/><apiname keyref="joinChannelWithUserAccount2" /> the  method to join the channel.</li>
            </ul>
        </p>
            <note type="attention">
                <ul>
                <li>Ensure that the <parmname>userAccount</parmname> is unique in the channel.</li>
                <li>To ensure smooth communication, use the same parameter type to identify the user. For example, if a user joins the channel with a user ID, then ensure all the other users use the user ID too. The same applies to the user account. If a user joins the channel with the Agora Web SDK, ensure that the ID of the user is set to the same parameter type.</li>
                </ul> </note>
            </section>
            <section id="restriction" deliveryTarget="details">
                <title>Restrictions</title>
                <p>None.</p>
            </section>
            <section id="related" deliveryTarget="details">
                <title>Related callbacks</title>
                <p>成功调用该方法后，本地会触发 <xref keyref="onLocalUserRegistered" /> 回调，告知本地用户的 UID 和 User Account。</p>
            </section>
            <section id="parameters" deliveryTarget="details">
            <title>Parameters</title>
            <parml>
            <plentry>
                <pt props="android cpp unreal bp unity flutter electron rn cs">appId</pt>
                <pt props="ios mac">appID</pt>
                <pd>The App ID of your project on Agora Console.</pd>
            </plentry>
            <plentry>
                <pt>userAccount</pt>
                <pd>
                    <p>The user account. This parameter is used to identify the user in the channel for real-time audio and video engagement. You need to set and manage user accounts yourself and ensure that each user account in the same channel is unique. The maximum length of this parameter is 255 bytes. Ensure that you set this parameter and do not set it as <ph keyref="NULL" />. Supported characters are as follow(89 in total):<ul>
                    <li>The 26 lowercase English letters: a to z.</li>
                    <li>The 26 uppercase English letters: A to Z.</li>
                    <li>All numeric characters: 0 to 9.</li>
                    <li>Space</li>
                    <li>"!", "#", "$", "%", "&amp;", "(", ")", "+", "-", ":", ";", "&lt;", "=", ".", ">", "?", "@", "[", "]", "^", "_", "{", "}", "|", "~", ","</li>
                    </ul></p>
                </pd>
            </plentry>
            </parml> </section>
        <section id="return_values">
            <title><ph keyref="return-section-title"/></title>
            <p props="flutter">When the method call succeeds, there is no return value; when fails, the <xref keyref="AgoraRtcException"/> exception is thrown. You need to catch the exception and handle it accordingly. <ph props="cn">See <xref keyref="error-code-link"/> for details and resolution suggestions.</ph></p>
            <ul props="native unreal bp electron unity rn cs">
            <li>0: Success.</li>
            <li>&lt; 0: Failure. <ph props="cn">See <xref keyref="error-code-link"/> for details and resolution suggestions.</ph></li>
            </ul> </section>
    </refbody>
</reference>
