<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE reference PUBLIC "-//OASIS//DTD DITA Reference//EN" "reference.dtd">
<reference id="api_irtcengine_registeraudioencodedframeobserver">
    <title><ph keyref="registerAudioEncodedFrameObserver" /></title>
    <shortdesc id="short"><ph id="shortdesc">Registers an encoded audio observer.</ph></shortdesc>
    <prolog>
        <metadata>
            <keywords>
                <indexterm keyref="registerAudioEncodedFrameObserver" />
            </keywords>
        </metadata>
    </prolog>
    <refbody>
        <section id="prototype">
            <p outputclass="codeblock">
            <codeblock props="android" outputclass="language-java">public abstract int registerAudioEncodedFrameObserver(
      AudioEncodedFrameObserverConfig config, IAudioEncodedFrameObserver observer);</codeblock>
            <codeblock props="ios mac" outputclass="language-objectivec">- (int)setAudioEncodedFrameDelegate:(id&lt;AgoraAudioEncodedFrameDelegate&gt; _Nonnull)delegate
                    config:(AgoraAudioEncodedFrameDelegateConfig * _Nonnull) config;</codeblock>
            <codeblock props="cpp unreal" outputclass="language-cpp">virtual int registerAudioEncodedFrameObserver(const AudioEncodedFrameObserverConfig&amp; config,  IAudioEncodedFrameObserver *observer) = 0;</codeblock>
         <codeblock props="bp" outputclass="language-cpp">UFUNCTION(BlueprintCallable, Category = &quot;Agora|RtcEngineProxy&quot;)
	int RegisterAudioEncodedFrameObserver(const FAudioEncodedFrameObserverConfig&amp; config, UIAudioEncodedFrameObserver* observer);</codeblock>
            <codeblock props="electron" outputclass="language-typescript">abstract registerAudioEncodedFrameObserver(
    config: AudioEncodedFrameObserverConfig,
    observer: IAudioEncodedFrameObserver
  ): number;</codeblock>
            <codeblock props="unity cs" outputclass="language-csharp">public abstract int RegisterAudioEncodedFrameObserver(AudioEncodedFrameObserverConfig config, IAudioEncodedFrameObserver observer);</codeblock>
            <codeblock props="rn" outputclass="language-typescript">abstract registerAudioEncodedFrameObserver(
    config: AudioEncodedFrameObserverConfig,
    observer: IAudioEncodedFrameObserver
  ): number;</codeblock>
            <codeblock props="flutter" outputclass="language-dart">void registerAudioEncodedFrameObserver(
      {required AudioEncodedFrameObserverConfig config,
      required AudioEncodedFrameObserver observer});</codeblock>
            <codeblock props="reserve" outputclass="language-cpp"></codeblock></p>
        </section>
        <section id="detailed_desc">
            <title>Details</title>
            <p>
            <note id="note_igp_ygf_3qb" type="attention">
            <ul id="ul_mvp_zgf_3qb">
            <li>Call this method after joining a channel.</li>
            <li>You can call this method or <xref keyref="startAudioRecording3" /> to set the recording type and quality of audio files, but Agora does not recommend using this method and <apiname keyref="startAudioRecording3" /> at the same time. Only the method called later will take effect.</li>
            </ul> </note> </p>
        </section>
        <section id="parameters">
            <title>Parameters</title>
            <parml>
            <plentry>
                <pt>config</pt>
                <pd>Observer settings for the encoded audio. See <xref keyref="AudioEncodedFrameObserverConfig" />.</pd>
            </plentry>
            </parml>
            <parml id="parml_l3m_shf_3qb">
            <plentry>
                <pt props="android cpp unreal bp unity flutter cs">observer</pt>
                <pt props="ios mac">delegate</pt>
                <pd>The encoded audio observer. See <xref keyref="IAudioEncodedFrameObserver" />.</pd>
            </plentry>
            </parml> </section>
        <section id="return_values">
            <title><ph keyref="return-section-title"/></title>
            <p props="flutter">When the method call succeeds, there is no return value; when fails, the <xref keyref="AgoraRtcException"/> exception is thrown; and you need to catch the exception and handle it accordingly. <ph props="cn">See <xref keyref="error-code-link"/> for details and resolution suggestions.</ph></p>
            <ul id="ul_ahk_23f_3qb" props="native unreal bp unity cs">
            <li>0: Success.</li>
            <li>&lt; 0: Failure. <ph props="cn">See <xref keyref="error-code-link"/> for details and resolution suggestions.</ph></li>
            </ul>
        <p props="rn electron">One <xref keyref="IAudioEncodedFrameObserver"/> object.</p></section>
    </refbody>
</reference>
