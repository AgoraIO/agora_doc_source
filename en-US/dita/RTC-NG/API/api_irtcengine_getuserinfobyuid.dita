<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE reference PUBLIC "-//OASIS//DTD DITA Reference//EN" "reference.dtd">
<reference id="api_getuserinfobyuid">
    <title><ph keyref="getUserInfoByUid" /></title>
    <shortdesc id="short"><ph id="shortdesc">Gets the user information by passing in the user ID.</ph></shortdesc>
    <prolog>
        <metadata>
            <keywords>
                <indexterm keyref="getUserInfoByUid" />
            </keywords>
        </metadata>
    </prolog>
    <refbody>
        <section id="prototype">
            <p outputclass="codeblock">
            <codeblock props="android" outputclass="language-java">public abstract int getUserInfoByUid(int uid, UserInfo userInfo);</codeblock>
            <codeblock props="ios mac" outputclass="language-objectivec">- (AgoraUserInfo* _Nullable)getUserInfoByUid:(NSUInteger)uid withError:(AgoraErrorCode* _Nullable)error;</codeblock>
            <codeblock props="cpp" outputclass="language-cpp">virtual int getUserInfoByUid(uid_t uid, rtc::UserInfo* userInfo, const char* channelId = NULL, const char* localUserAccount = NULL) = 0;</codeblock>
            <codeblock props="electron" outputclass="language-typescript">abstract getUserInfoByUid(uid: number): UserInfo;</codeblock>
            <codeblock props="unity" outputclass="language-csharp">public abstract int GetUserInfoByUid(uint uid, ref UserInfo userInfo);</codeblock>
            <codeblock props="rn" outputclass="language-typescript">abstract getUserInfoByUid(uid: number): UserInfo;</codeblock>
            <codeblock props="flutter" outputclass="language-dart">Future&lt;UserInfo&gt; getUserInfoByUid(int uid);</codeblock> </p>
        </section>
        <section id="detailed_desc">
            <p id="getUserInfo_desc">After a remote user joins the channel, the SDK gets the UID and user account of the remote user, caches them in a mapping table object, and triggers the <xref keyref="onUserInfoUpdated" /> callback on the local client. After receiving the callback, you can call this method to get the user account of the remote user from the <xref keyref="UserInfo" /> object by passing in the user ID.</p>
        </section>
        <section id="parameters">
            <title>Parameters</title>
            <parml>
            <plentry>
                <pt>uid</pt>
                <pd>The user ID.</pd>
            </plentry>
            <plentry props="cpp unity android" id="userInfo">
                <pt>userInfo</pt>
                <pd>Input and output parameter. The <xref keyref="UserInfo" /> object that identifies the user information.<ul>
                    <li>Input: A <apiname keyref="UserInfo" /> object.</li>
                    <li>Output: A <apiname keyref="UserInfo" /> object that contains the user account and user ID of the user.</li>
                    </ul> </pd>
            </plentry>
            <plentry id="channelId">
                <pt props="cpp">channelId</pt>
                <pd props="cpp">
                    <p conkeyref="joinChannel2/channelID_desc" />
                </pd>
            </plentry>
            <plentry id="localUserAccount">
                <pt props="cpp">localUserAccount</pt>
                <pd props="cpp">The user account of the local user.</pd>
            </plentry>
            <plentry props="ios mac" id="error">
                <pt>error</pt>
                <pd>The error code.</pd>
            </plentry>
            </parml> </section>
        <section id="return_values">
            <title>Returns</title>
            <p props="android flutter">The <apiname keyref="UserInfo" /> object that identifies the user information.</p>
            <ul props="android flutter">
            <li>Not null: Success.</li>
            <li>Null: Failure.</li>
            </ul>
            <ul props="ios mac electron rn">
            <li>A <xref keyref="UserInfo" /> object, if the method call succeeds.</li>
            <li props="ios mac electron rn"><ph keyref="NULL" />, if the method call fails.</li>
            </ul>
            <ul props="cpp unity android">
            <li>0: Success.</li>
            <li>&lt; 0: Failure.</li>
            </ul> </section>
    </refbody>
</reference>