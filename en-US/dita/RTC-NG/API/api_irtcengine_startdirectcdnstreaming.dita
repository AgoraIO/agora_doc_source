<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE reference PUBLIC "-//OASIS//DTD DITA Reference//EN" "reference.dtd">
<reference id="api_irtcengine_startdirectcdnstreaming">
    <title><ph keyref="startDirectCdnStreaming" /></title>
    <shortdesc id="short"><ph id="shortdesc">Starts pushing media streams to the CDN directly.</ph></shortdesc>
    <prolog>
        <metadata>
            <keywords>
                <indexterm keyref="startDirectCdnStreaming" />
            </keywords>
        </metadata>
    </prolog>
    <refbody><section id="prototype">
    <p outputclass="codeblock">
        <codeblock props="android" outputclass="language-java">public abstract int startDirectCdnStreaming(IDirectCdnStreamingEventHandler eventHandler,
            String publishUrl, DirectCdnStreamingMediaOptions options);</codeblock>
            <codeblock props="ios mac" outputclass="language-objectivec">- (int)startDirectCdnStreaming:(id&lt;AgoraDirectCdnStreamingEventDelegate&gt; _Nonnull)delegate publishUrl:(NSString * _Nonnull)publishUrl mediaOptions:(AgoraDirectCdnStreamingMediaOptions * _Nonnull)options;</codeblock>
            <codeblock props="cpp unreal bp" outputclass="language-cpp">virtual int startDirectCdnStreaming(IDirectCdnStreamingEventHandler* eventHandler,
            const char* publishUrl, const DirectCdnStreamingMediaOptions&amp; options) = 0;</codeblock>
            <codeblock props="electron" outputclass="language-typescript">abstract startDirectCdnStreaming(
    eventHandler: IDirectCdnStreamingEventHandler,
    publishUrl: string,
    options: DirectCdnStreamingMediaOptions
  ): number;</codeblock>
            <codeblock props="unity cs" outputclass="language-csharp">public abstract int StartDirectCdnStreaming(string publishUrl, DirectCdnStreamingMediaOptions options);</codeblock>
            <codeblock props="rn" outputclass="language-typescript">abstract startDirectCdnStreaming(
    eventHandler: IDirectCdnStreamingEventHandler,
    publishUrl: string,
    options: DirectCdnStreamingMediaOptions
  ): number;</codeblock>
            <codeblock props="flutter" outputclass="language-dart">Future&lt;void&gt; startDirectCdnStreaming(
      {required DirectCdnStreamingEventHandler eventHandler,
      required String publishUrl,
      required DirectCdnStreamingMediaOptions options});</codeblock>
            <codeblock props="reserve" outputclass="language-cpp" /></p></section>
        <section id="detailed_desc">
            <title>Details</title>
            <p>Aogra does not support pushing media streams to one URL repeatedly.</p>
            <p><b>Media options</b></p>
            <p>Agora does not support setting the value of <parmname>publishCameraTrack</parmname> and <parmname>publishCustomVideoTrack</parmname> as <codeph><ph keyref="true" /></codeph>, or the value of <parmname>publishMicrophoneTrack</parmname> and <parmname>publishCustomAudioTrack</parmname> as <codeph><ph keyref="true" /></codeph> at the same time. When choosing media setting options (<xref keyref="DirectCdnStreamingMediaOptions" />), you can refer to the following examples:</p>
            <p>If you want to push audio and video streams published by the host to the CDN, the media setting options should be set as follows:</p>
            <ul>
                <li props="android cpp unreal bp electron unity cs rn flutter"><parmname>publishCustomAudioTrack</parmname> is set as <codeph><ph keyref="true" /></codeph> and call the <xref props="android" keyref="pushAudioFrame2" /><xref props="cpp unreal bp unity cs rn flutter electron" keyref="pushAudioFrame" /> method</li>
                <li props="ios mac"><parmname>publishCustomAudioTrack</parmname> is set as <codeph><ph keyref="true" /></codeph> and call the <xref keyref="pushExternalAudioFrameSampleBuffer1" /> or <xref keyref="pushAudioFrame2" /> method</li>
                <li><parmname>publishCustomVideoTrack</parmname> is set as <codeph><ph keyref="true" /></codeph> and call the <xref keyref="pushVideoFrame" /> method</li>
                <li><parmname>publishCameraTrack</parmname> is set as <codeph><ph keyref="false" /></codeph> (the default value)</li>
                <li><parmname>publishMicrophoneTrack</parmname> is set as <codeph><ph keyref="false" /></codeph> (the default value)</li>
            </ul>
            <p><ph props="android cpp unreal bp electron unity cs rn flutter">As of v4.2.0, Agora SDK supports audio-only live streaming. You can set <parmname>publishCustomAudioTrack</parmname> or <parmname>publishMicrophoneTrack</parmname> in <xref keyref="DirectCdnStreamingMediaOptions" /> as <codeph><ph keyref="true" /></codeph> and call <xref props="android" keyref="pushAudioFrame2" /><xref props="cpp unreal bp unity cs rn flutter electron" keyref="pushAudioFrame" /> to push audio streams. </ph><ph props="apple">As of v4.2.0, Agora SDK supports audio-only live streaming. You can set <parmname>publishCustomAudioTrack</parmname> or <parmname>publishMicrophoneTrack</parmname> in <xref keyref="DirectCdnStreamingMediaOptions" /> as <codeph><ph keyref="true" /></codeph> and call <xref keyref="pushExternalAudioFrameSampleBuffer1" /> or <xref keyref="pushAudioFrame2" /> to push audio streams.</ph><note>Agora only supports pushing one audio and video streams or one audio streams to CDN.</note></p>
        </section>
        <section id="parameters"><title>Parameters</title>
            <parml>
            <plentry props="android apple cpp unreal bp flutter rn electron">
                <pt props="android cpp unreal bp flutter rn electron">eventHandler</pt>
                <pt props="ios mac">delegate</pt>
                <pd>See <xref keyref="onDirectCdnStreamingStateChanged" /> and <xref keyref="onDirectCdnStreamingStats" />.</pd>
            </plentry>
            <plentry>
                <pt>publishUrl</pt>
                <pd>The CDN live streaming URL.</pd>
            </plentry>
            <plentry>
                <pt>options</pt>
                <pd>The media setting options for the host. See <xref keyref="DirectCdnStreamingMediaOptions" />.</pd>
            </plentry>
            </parml> </section>
        <section id="return_values">
            <title><ph keyref="return-section-title" /></title>
            <p props="flutter">When the method call succeeds, there is no return value; when fails, the <xref keyref="AgoraRtcException" /> exception is thrown; and you need to catch the exception and handle it accordingly.</p>
            <ul>
            <li props="native unreal bp unity cs electron rn">0: Success.</li>
            <li>&lt; 0: Failure.</li>
            </ul> </section>
    </refbody>
</reference>