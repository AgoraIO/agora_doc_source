<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE reference PUBLIC "-//OASIS//DTD DITA Reference//EN" "reference.dtd">
<reference id="class_codeccaplevels">
    <title><ph keyref="CodecCapLevels"/></title>
    <shortdesc id="short"><ph id="shortdesc">The level of the codec capability.</ph></shortdesc>
    <refbody>
        <section id="prototype">
            <p outputclass="codeblock">
            <codeblock props="android" outputclass="language-java">public class CodecCapLevels {
  public int hwDecodingLevel;
  public int swDecodingLevel;

  public CodecCapLevels() {
    this.hwDecodingLevel = Constants.CODEC_CAPABILITY_LEVEL_UNSPECIFIED;
    this.swDecodingLevel = Constants.CODEC_CAPABILITY_LEVEL_UNSPECIFIED;
  };

  @CalledByNative
  public CodecCapLevels(int hwDecLevel, int swDecLevel) {
    this.hwDecodingLevel = hwDecLevel;
    this.swDecodingLevel = swDecLevel;
  };
};</codeblock>
            <codeblock props="ios mac" outputclass="language-objectivec">__attribute__((visibility("default"))) @interface AgoraVideoCodecCapLevels : NSObject
@property(assign, nonatomic) AgoraVideoCodecCapabilityLevel hwDecodingLevel;
@property(assign, nonatomic) AgoraVideoCodecCapabilityLevel swDecodingLevel;
@end</codeblock>
            <codeblock props="cpp unreal" outputclass="language-cpp">struct CodecCapLevels {
  VIDEO_CODEC_CAPABILITY_LEVEL hwDecodingLevel;
  VIDEO_CODEC_CAPABILITY_LEVEL swDecodingLevel;

  CodecCapLevels(): hwDecodingLevel(CODEC_CAPABILITY_LEVEL_UNSPECIFIED), swDecodingLevel(CODEC_CAPABILITY_LEVEL_UNSPECIFIED) {}
};</codeblock>
            <codeblock props="electron" outputclass="language-typescript">export class CodecCapLevels {
  hwDecodingLevel?: VideoCodecCapabilityLevel;
  swDecodingLevel?: VideoCodecCapabilityLevel;
}</codeblock>
            <codeblock props="unity cs" outputclass="language-csharp">public class CodecCapLevels
    {
        public VIDEO_CODEC_CAPABILITY_LEVEL hwDecodingLevel;
        public VIDEO_CODEC_CAPABILITY_LEVEL swDecodingLevel;

        public CodecCapLevels()
        {
            hwDecodingLevel = VIDEO_CODEC_CAPABILITY_LEVEL.CODEC_CAPABILITY_LEVEL_UNSPECIFIED;
            swDecodingLevel = VIDEO_CODEC_CAPABILITY_LEVEL.CODEC_CAPABILITY_LEVEL_UNSPECIFIED;
        }
    };</codeblock>
            <codeblock props="rn" outputclass="language-typescript">export class CodecCapLevels {
  hwDecodingLevel?: VideoCodecCapabilityLevel;
  swDecodingLevel?: VideoCodecCapabilityLevel;
}</codeblock>
            <codeblock props="flutter" outputclass="language-dart">@JsonSerializable(explicitToJson: true, includeIfNull: false)
class CodecCapLevels {
  const CodecCapLevels({this.hwDecodingLevel, this.swDecodingLevel});

  @JsonKey(name: 'hwDecodingLevel')
  final VideoCodecCapabilityLevel? hwDecodingLevel;

  @JsonKey(name: 'swDecodingLevel')
  final VideoCodecCapabilityLevel? swDecodingLevel;

  factory CodecCapLevels.fromJson(Map&lt;String, dynamic> json) =>
      _$CodecCapLevelsFromJson(json);

  Map&lt;String, dynamic> toJson() => _$CodecCapLevelsToJson(this);
}</codeblock></p>
        </section>
        <section id="detailed_desc">
            <dl outputclass="since">
            <dlentry props="native">
                <dt>Since</dt>
                <dd>v4.2.2</dd>
            </dlentry>
            </dl>
            <p/>
        </section>
        <section id="parameters">
            <title><text conref="../conref/conref_api_metadata.dita#conref_api_metadata/property"/></title>
            <parml>
            <plentry>
                <pt>hwDecodingLevel</pt>
                <pd>Hardware decoding capability level, which represents the device's ability to perform hardware decoding on videos of different quality. <ph props="cpp apple framework">See <xref keyref="VIDEO_CODEC_CAPABILITY_LEVEL"/>.</ph></pd>
                <pd props="android" id="codec"><ul>
                    <li><ph keyref="CODEC_CAPABILITY_LEVEL_UNSPECIFIED"/>(-1): Unsupported video type. Currently, only H.264 and H.265 formats are supported. If the video is in another format, this value will be returned.</li>
                    <li><ph keyref="CODEC_CAPABILITY_LEVEL_BASIC_SUPPORT"/>(5): Supports encoding and decoding videos up to 1080p and 30 fps.</li>
                    <li><ph keyref="CODEC_CAPABILITY_LEVEL_1080P30FPS"/>(10): Supports encoding and decoding videos up to1080p and 30 fps.</li>
                    <li><ph keyref="CODEC_CAPABILITY_LEVEL_1080P60FPS"/>(20): Support encoding and decoding videos up to 1080p and 60 fps.</li>
                    <li><ph keyref="CODEC_CAPABILITY_LEVEL_4K60FPS"/>(30): Support encoding and decoding videos up to 4K and 30 fps.</li></ul></pd>
            </plentry>
                <plentry>
                    <pt>swDecodingLevel</pt>
                    <pd>Software decoding capability level, which represents the device's ability to perform software decoding on videos of different quality. <ph props="cpp apple framework">See <xref keyref="VIDEO_CODEC_CAPABILITY_LEVEL"/>.</ph></pd>
                    <pd conkeyref="CodecCapLevels/codec" props="android"/>
                </plentry>
            </parml> </section>
    </refbody>
</reference>
