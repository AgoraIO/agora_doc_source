<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE reference PUBLIC "-//OASIS//DTD DITA Reference//EN" "reference.dtd">
<reference id="api_irtcengine_updatescreencaptureregion">
    <title><ph keyref="updateScreenCaptureRegion1" /></title>
    <shortdesc id="short"><ph id="shortdesc">Updates the screen sharing region.</ph></shortdesc>
    <prolog>
        <metadata>
            <keywords>
                <indexterm keyref="updateScreenCaptureRegion1" />
            </keywords>
        </metadata>
    </prolog>
    <refbody>
        <section id="prototype">
            <p outputclass="codeblock">
            <codeblock props="android" outputclass="language-java" />
            <codeblock props="ios mac" outputclass="language-objectivec" />
            <codeblock props="cpp" outputclass="language-cpp">virtual int updateScreenCaptureRegion(const Rectangle&amp; regionRect) = 0;</codeblock>
            <codeblock props="electron" outputclass="language-typescript">abstract updateScreenCaptureRegion(regionRect: Rectangle): number;</codeblock>
            <codeblock props="unity" outputclass="language-csharp">public abstract int UpdateScreenCaptureRegion(Rectangle regionRect);</codeblock>
            <codeblock props="rn" outputclass="language-typescript">abstract updateScreenCaptureRegion(regionRect: Rectangle): number;</codeblock>
            <codeblock props="flutter" outputclass="language-dart">Future&lt;void&gt; updateScreenCaptureRegion(Rectangle regionRect);</codeblock>
            <codeblock props="reserve" outputclass="language-cpp" /></p>
        </section>
        <section id="detailed_desc">
            <title>Details</title>
            <note type="attention">Call this method after starting screen sharing or window sharing.</note>
        </section>
        <section id="parameters">
            <title>Parameters</title>
            <parml>
            <plentry props="cpp electron unity flutter">
                <pt>regionRect</pt>
                <pd>The relative location of the screen-share area to the screen or window. If you do not set this parameter, the SDK shares the whole screen or window. See <xref keyref="Rectangle" />. If the specified region overruns the screen or window, the SDK shares only the region within it; if you set width or height as 0, the SDK shares the whole screen or window.</pd>
            </plentry>
            <plentry props="mac">
                <pt>rect</pt>
                <pd>
                    <p>(Optional) The relative location of the region to the window. If you do not set this parameter, the SDK shares the whole window. It consists of the following parameters:<ul>
                    <li>x: The horizontal offset from the top-left corner.</li>
                    <li>y: The vertical offset from the top-left corner.</li>
                    <li>width: The width of the region.</li>
                    <li>height: The height of the region.</li>
                    </ul></p>
                    <p>If the specified region overruns the window, the SDK shares only the region within it; if you set width or height as 0, the SDK shares the whole window.</p>
                </pd>
            </plentry>
            </parml> </section>
        <section id="return_values">
            <title><ph keyref="return-section-title" /></title>
            <p props="flutter">When the method call succeeds, there is no return value; when fails, the <xref keyref="AgoraRtcException" /> exception is thrown; you need to catch the exception and handle it accordingly.</p>
            <ul>
            <li props="native electron unity rn">0: Success.</li>
            <li>&lt; 0: Failure.<ul conkeyref="startScreenCaptureByDisplayId/err"><li /></ul>
            </li>
            </ul> </section>
    </refbody>
</reference>