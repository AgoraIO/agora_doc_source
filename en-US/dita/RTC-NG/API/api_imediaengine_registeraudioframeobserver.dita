<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE reference PUBLIC "-//OASIS//DTD DITA Reference//EN" "reference.dtd">
<reference id="api_imediaengine_registeraudioframeobserver">
    <title><ph keyref="registerAudioFrameObserver"/></title>
    <shortdesc id="short"><ph id="shortdesc">Registers an audio frame observer object.</ph></shortdesc>
    <prolog>
        <metadata>
            <keywords>
                <indexterm keyref="registerAudioFrameObserver"/>
            </keywords>
        </metadata>
    </prolog>
    <refbody>
        <section id="prototype">
            <p outputclass="codeblock">
            <codeblock props="android" outputclass="language-java">public abstract int registerAudioFrameObserver(IAudioFrameObserver observer);</codeblock>
            <codeblock props="ios mac" outputclass="language-objectivec">- (BOOL)setAudioFrameDelegate:(id&lt;AgoraAudioFrameDelegate&gt; _Nullable)delegate;</codeblock>
            <codeblock props="cpp" outputclass="language-cpp">virtual int registerAudioFrameObserver(IAudioFrameObserver* observer) = 0;</codeblock>
            <codeblock props="electron" outputclass="language-typescript">abstract registerAudioFrameObserver(observer: IAudioFrameObserver): number;</codeblock>
            <codeblock props="unity" outputclass="language-csharp">public abstract int RegisterAudioFrameObserver(IAudioFrameObserver audioFrameObserver, OBSERVER_MODE mode = OBSERVER_MODE.INTPTR);</codeblock>
            <codeblock props="rn" outputclass="language-typescript">abstract registerAudioFrameObserver(observer: IAudioFrameObserver): number;</codeblock>
            <codeblock props="flutter" outputclass="language-dart">void registerAudioFrameObserver(AudioFrameObserver observer);</codeblock>
            <codeblock props="unreal" outputclass="language-cpp"></codeblock></p>
        </section>
        <section id="detailed_desc">
            <p>Call this method to register an audio frame observer object (register a callback). When you need the SDK to trigger the <xref keyref="onMixedAudioFrame"/>, <xref keyref="onRecordAudioFrame"/>, <xref keyref="onPlaybackAudioFrame"/> or <xref keyref="onEarMonitoringAudioFrame"/> callback, you need to use this method to register the callbacks.</p>
            <note type="attention">Ensure that you call this method before joining a channel.</note> </section>
        <section id="parameters">
            <title>Parameters</title>
            <parml>
            <plentry>
                <pt props="android cpp electron rn flutter">observer</pt>
                <pt props="ios mac">delegate</pt>
                <pt props="unity">audioFrameObserver</pt>
                <pd>
                    <p><ph>The observer object instance. See <xref keyref="IAudioFrameObserver"/>. </ph><ph props="android mac ios unity cpp">Set the value as <ph keyref="NULL"/> to release the instance. </ph><ph>Agora recommends calling after receiving <xref keyref="onLeaveChannel"/> to release the audio observer object.</ph></p>
                </pd>
            </plentry>
            <plentry props="unity">
                <pt>mode</pt>
                <pd>The video data callback mode. See <xref keyref="OBSERVER_MODE"/>.</pd>
            </plentry>
            </parml> </section>
        <section id="return_values" props="native rn electron">
            <title>Returns</title>
            <ul props="android cpp rn unity electron">
                <li>0: Success.</li>
                <li>&lt; 0: Failure.</li>
            </ul>
            <ul props="ios mac">
            <li><codeph><ph keyref="true"/></codeph>: Success.</li>
            <li><codeph><ph keyref="false"/></codeph>: Failure.</li>
            </ul></section>
    </refbody>
</reference>
