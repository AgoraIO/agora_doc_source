<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE reference PUBLIC "-//OASIS//DTD DITA Reference//EN" "reference.dtd">
<reference id="callback_imediaplayersourceobserver_onplaybufferupdated">
    <title> <ph keyref="onPlayBufferUpdated"/> </title>
    <shortdesc id="short"><ph id="shortdesc">Reports the playback duration that the buffered data can support.</ph></shortdesc>
    <prolog>
        <metadata>
            <keywords>
                <indexterm keyref="onPlayBufferUpdated"/>
            </keywords>
        </metadata>
    </prolog>
    <refbody>
        <section id="prototype">
            <p outputclass="codeblock">
            <codeblock props="android" outputclass="language-java">void onPlayBufferUpdated(long playCachedBuffer);
</codeblock>
            <codeblock props="ios mac" outputclass="language-objectivec">- (void)AgoraRtcMediaPlayer:(id&lt;AgoraRtcMediaPlayerProtocol> _Nonnull)playerKit
             didPlayBufferUpdated:(NSInteger)playCachedBuffer NS_SWIFT_NAME(AgoraRtcMediaPlayer(_:didPlayBufferUpdated:));</codeblock>
            <codeblock props="cpp unreal" outputclass="language-cpp">virtual void onPlayBufferUpdated(int64_t playCachedBuffer) = 0;
</codeblock>
         <codeblock props="bp" outputclass="language-cpp">DECLARE_DYNAMIC_MULTICAST_DELEGATE_OneParam(FOnPlayBufferUpdated, int64, playCachedBuffer);</codeblock>
            <codeblock props="electron" outputclass="language-typescript">  onPlayBufferUpdated?(playCachedBuffer: number): void;</codeblock>
            <codeblock props="unity cs" outputclass="language-csharp">public virtual void OnPlayBufferUpdated(Int64 playCachedBuffer) { }</codeblock>
            <codeblock props="rn" outputclass="language-typescript">  onPlayBufferUpdated?(playCachedBuffer: number): void;</codeblock>
            <codeblock props="flutter" outputclass="language-dart">final void Function(int playCachedBuffer)? onPlayBufferUpdated;</codeblock>
            <codeblock props="reserve" outputclass="language-cpp"></codeblock></p>
        </section>
        <section id="detailed_desc">
            <p>When playing online media resources, the SDK triggers this callback every two seconds to report the playback duration that the currently buffered data can support.<ul>
            <li>When the playback duration supported by the buffered data is less than the threshold (0 by default), the SDK returns <apiname keyref="PLAYER_EVENT_BUFFER_LOW"/>.</li>
            <li>When the playback duration supported by the buffered data is greater than the threshold (0 by default), the SDK returns <apiname keyref="PLAYER_EVENT_BUFFER_RECOVER"/>.</li>
            </ul> </p>
        </section>
        <section id="parameters">
            <title>Parameters</title>
            <parml>
            <plentry conkeyref="onPlayerEvent/playerkit" props="ios mac">
                <pt/>
                <pd/>
            </plentry>
            <plentry>
                <pt>playCachedBuffer</pt>
                <pd>The playback duration (ms) that the buffered data can support.</pd>
            </plentry>
            </parml> </section>
    </refbody>
</reference>
