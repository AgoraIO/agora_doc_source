<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE reference PUBLIC "-//OASIS//DTD DITA Reference//EN" "reference.dtd">
<reference id="callback_imediarecorderobserver_onrecorderstatechanged">
    <title><ph keyref="onRecorderStateChanged"/></title>
    <shortdesc id="short"><ph id="shortdesc">Occurs when the recording state changes.</ph></shortdesc>
    <prolog>
        <metadata>
            <keywords>
                <indexterm keyref="onRecorderStateChanged"/>
            </keywords>
        </metadata>
    </prolog>
    <refbody>
        <section id="prototype">
            <p outputclass="codeblock">
            <codeblock props="android" outputclass="language-java">void onRecorderStateChanged(String channelId, int uid, int state, int error);</codeblock>
            <codeblock props="ios mac" outputclass="language-objectivec">- (void)mediaRecorder:(AgoraMediaRecorder* _Nonnull)recorder stateDidChanged:(NSString * _Nonnull)channelId uid:(NSUInteger)uid state:(AgoraMediaRecorderState)state error:(AgoraMediaRecorderErrorCode)error;</codeblock>
            <codeblock props="cpp unreal bp" outputclass="language-cpp">virtual void onRecorderStateChanged(const char* channelId, rtc::uid_t uid, RecorderState state, RecorderErrorCode error) = 0;</codeblock>
            <codeblock props="electron" outputclass="language-typescript">onRecorderStateChanged?(
    channelId: string,
    uid: number,
    state: RecorderState,
    error: RecorderErrorCode
  ): void;</codeblock>
            <codeblock props="unity cs" outputclass="language-csharp">public virtual void OnRecorderStateChanged(string channelId, uint uid, RecorderState state, RecorderErrorCode error) {}</codeblock>
            <codeblock props="rn" outputclass="language-typescript">onRecorderStateChanged?(
    channelId: string,
    uid: number,
    state: RecorderState,
    error: RecorderErrorCode
  ): void;</codeblock>
            <codeblock props="flutter" outputclass="language-dart">final void Function(String channelId, int uid, RecorderState state,
      RecorderErrorCode error)? onRecorderStateChanged;</codeblock>
            <codeblock props="reserve" outputclass="language-cpp"/></p>
        </section>
        <section id="detailed_desc">
            <p>When the recording state changes, the SDK triggers this callback to report the current recording state and the reason for the change.</p>
        </section>
        <section id="parameters">
            <title><ph keyref="callback-section-title"/></title>
            <parml>
            <plentry props="apple">
                <pt>recorder</pt>
                <pd>One <xref keyref="IMediaRecorder"/> object.</pd>
            </plentry>
            <plentry id="id">
                <pt>channelId</pt>
                <pd>The channel name.</pd>
            </plentry>
            <plentry id="uid">
                <pt>uid</pt>
                <pd>The user ID.</pd>
            </plentry>
            <plentry>
                <pt>state</pt>
                <pd props="apple cpp unreal bp rn unity electron flutter cs">The current recording state. See <xref keyref="RecorderState"/>.</pd>
                <pd props="android">The current recording state:<ul>
                    <li><ph keyref="RECORDER_STATE_ERROR"/>(-1): An error occurs during the recording.</li>
                    <li><ph keyref="RECORDER_STATE_START"/>(2): The audio and video recording starts.</li>
                    <li><ph keyref="RECORDER_STATE_STOP"/>(3): The audio and video recording stops.</li>
                    </ul> </pd>
            </plentry>
            <plentry>
                <pt>error</pt>
                <pd props="apple cpp unreal bp rn unity electron flutter cs">The reason for the state change. See <xref keyref="RecorderErrorCode"/>.</pd>
                <pd props="android">The reason for the state change.<ul>
                    <li><ph keyref="RECORDER_ERROR_NONE"/>(0): No error.</li>
                    <li><ph keyref="RECORDER_ERROR_WRITE_FAILED"/>(1): The SDK fails to write the recorded data to a file.</li>
                    <li><ph keyref="RECORDER_ERROR_NO_STREAM"/>(2): The SDK does not detect any audio and video streams, or audio and video streams are interrupted for more than five seconds during recording.</li>
                    <li><ph keyref="RECORDER_ERROR_OVER_MAX_DURATION"/>(3): The recording duration exceeds the upper limit.</li>
                    <li><ph keyref="RECORDER_ERROR_CONFIG_CHANGED"/>(4): The configurations of recording change.</li>
                    </ul> </pd>
            </plentry>
            </parml> </section>
    </refbody>
</reference>
