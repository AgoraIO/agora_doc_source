<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE reference PUBLIC "-//OASIS//DTD DITA Reference//EN" "reference.dtd">
<reference id="api_irtcengine_setloglevel">
    <title><ph keyref="setLogLevel" /></title>
    <shortdesc id="short"><ph id="shortdesc">Sets the output log level of the SDK.</ph></shortdesc>
    <prolog>
        <metadata>
            <keywords>
                <indexterm keyref="setLogLevel" />
            </keywords>
        </metadata>
    </prolog>
    <refbody>
        <section id="prototype">
            <p outputclass="codeblock">
            <codeblock props="android" outputclass="language-java">public abstract int setLogLevel(int level);</codeblock>
            <codeblock props="ios mac" outputclass="language-objectivec">- (int)setLogLevel:(AgoraLogLevel)level;</codeblock>
            <codeblock props="cpp unreal bp" outputclass="language-cpp">virtual int setLogLevel(commons::LOG_LEVEL level) = 0;
</codeblock>
            <codeblock props="electron" outputclass="language-typescript">abstract setLogLevel(level: LogLevel): number;</codeblock>
            <codeblock props="unity cs" outputclass="language-csharp">public abstract int SetLogLevel(LOG_LEVEL level);</codeblock>
            <codeblock props="rn" outputclass="language-typescript">abstract setLogLevel(level: LogLevel): number;</codeblock>
            <codeblock props="flutter" outputclass="language-dart">Future&lt;void&gt; setLogLevel(LogLevel level);</codeblock>
            <codeblock props="reserve" outputclass="language-cpp" /></p>
        </section>
        <section id="detailed_desc">
            <title>Details</title>
            <dl outputclass="deprecated">
            <dlentry>
                <dt>Deprecated:</dt>
                <dd>This method is deprecated. Use <xref keyref="RtcEngineConfig" /> instead to set the log output level.</dd>
            </dlentry>
            </dl>
            <p>Choose a level to see the logs preceding that level.</p>
        </section>
        <section id="parameters">
            <title>Parameters</title>
            <parml>
            <plentry>
                <pt>level</pt>
                <pd>The log level: <xref keyref="LOG_LEVEL" />.</pd>
            </plentry>
            </parml> </section>
        <section id="return_values">
            <title><ph keyref="return-section-title" /></title>
            <p props="flutter">When the method call succeeds, there is no return value; when fails, the <xref keyref="AgoraRtcException" /> exception is thrown; and you need to catch the exception and handle it accordingly.</p>
            <ul id="ul_uns_l2y_hqb">
            <li props="native unreal bp electron unity rn cs">0: Success.</li>
            <li>&lt; 0: Failure.</li>
            </ul> </section>
    </refbody>
</reference>