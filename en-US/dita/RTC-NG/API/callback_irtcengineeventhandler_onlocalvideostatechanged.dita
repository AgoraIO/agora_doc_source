<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE reference PUBLIC "-//OASIS//DTD DITA Reference//EN" "reference.dtd">
<reference id="callback_irtcengineeventhandler_onlocalvideostatechanged">
    <title> <ph keyref="onLocalVideoStateChanged"/> </title>
    <shortdesc id="short"><ph id="shortdesc">Occurs when the local video stream state changes.</ph></shortdesc>
    <prolog>
        <metadata>
            <keywords>
                <indexterm keyref="onLocalVideoStateChanged"/>
            </keywords>
        </metadata>
    </prolog>
    <refbody>
        <section id="prototype">
            <p outputclass="codeblock">
            <codeblock props="android" outputclass="language-java">public void onLocalVideoStateChanged(Constants.VideoSourceType source, int state, int error) {
    super.onLocalVideoStateChanged(source, state, error);
    mCallbackObj = new Object[] {source, state, error};
  }
</codeblock>
            <codeblock props="ios mac" outputclass="language-objectivec">- (void)rtcEngine:(AgoraRtcEngineKit * _Nonnull)engine localVideoStateChangedOfState:(AgoraVideoLocalState)state
 error:(AgoraLocalVideoStreamError)error
 sourceType:(AgoraVideoSourceType)sourceType;
</codeblock>
            <codeblock props="cpp" outputclass="language-cpp">virtual void onLocalVideoStateChanged(VIDEO_SOURCE_TYPE source, LOCAL_VIDEO_STREAM_STATE state, LOCAL_VIDEO_STREAM_ERROR error) {
    (void)source;
    (void)state;
    (void)error;
  }
</codeblock>
            <codeblock props="electron" outputclass="language-typescript">onLocalVideoStateChanged?(
    source: VideoSourceType,
    state: LocalVideoStreamState,
    error: LocalVideoStreamError
  ): void;</codeblock>
            <codeblock props="unity" outputclass="language-csharp">public virtual void OnLocalVideoStateChanged(VIDEO_SOURCE_TYPE source, LOCAL_VIDEO_STREAM_STATE state, LOCAL_VIDEO_STREAM_ERROR errorCode) { }</codeblock>
            <codeblock props="rn" outputclass="language-typescript">onLocalVideoStateChanged?(
    source: VideoSourceType,
    state: LocalVideoStreamState,
    error: LocalVideoStreamError
  ): void;</codeblock>
            <codeblock props="flutter" outputclass="language-dart">final void Function(VideoSourceType source, LocalVideoStreamState state,
      LocalVideoStreamError error)? onLocalVideoStateChanged;</codeblock>
            <codeblock props="reserve" outputclass="language-cpp"></codeblock></p>
        </section>
        <section id="detailed_desc">
            <p id="desc1">When the state of the local video stream changes (including the state of the video capture and encoding), the SDK triggers this callback to report the current state. This callback indicates the state of the local video stream, including camera capturing and video encoding, and allows you to troubleshoot issues when exceptions occur.</p>
            <p>The SDK triggers the <apiname keyref="onLocalVideoStateChanged"/> callback with the state code of <codeph><ph keyref="LOCAL_VIDEO_STREAM_STATE_FAILED"/></codeph> and error code of <codeph><ph keyref="LOCAL_VIDEO_STREAM_ERROR_CAPTURE_FAILURE"/></codeph> in the following situations:<ul>
            <li props="cpp apple framework">The app switches to the background, and the system gets the camera resource.</li>
            <li props="android">If your app runs in the background on a device running Android 9 or later, you cannot access the camera.</li>
            <li props="android">If your app runs in the background on a device running Android 6 or later, the camera is occupied by a third-party app. Once the camera is released, the SDK triggers the <codeph><apiname keyref="onLocalVideoStateChanged"/>(<ph keyref="LOCAL_VIDEO_STREAM_STATE_CAPTURING"/>,<ph keyref="LOCAL_VIDEO_STREAM_ERROR_OK"/>)</codeph> callback.</li>
            <li>The camera starts normally, but does not output video frames for four consecutive seconds.</li>
            </ul></p>
            <p>When the camera outputs the captured video frames, if the video frames are the same for 15 consecutive frames, the SDK triggers the <apiname keyref="onLocalVideoStateChanged"/> callback with the state code of <apiname keyref="LOCAL_VIDEO_STREAM_STATE_CAPTURING"/> and error code of <apiname keyref="LOCAL_VIDEO_STREAM_ERROR_CAPTURE_FAILURE"/>. Note that the video frame duplication detection is only available for video frames with a resolution greater than 200 Ã— 200, a frame rate greater than or equal to 10 fps, and a bitrate less than 20 Kbps.</p>
            <note id="note" type="attention">For some device models, the SDK does not trigger this callback when the state of the local video changes while the local video capturing device is in use, so you have to make your own timeout judgment.</note> </section>
        <section id="parameters">
            <title><ph keyref="callback-section-title"/></title>
            <parml>
            <plentry conkeyref="onJoinChannelSuccess/engine" props="ios mac">
                <pt/>
                <pd/>
            </plentry>
            <plentry id="source" props="native rn flutter electron">
                <pt props="apple">sourceType</pt>
                <pt props="android cpp rn electron flutter unity">source</pt>
                <pd>The capture type of the custom video source. See <xref keyref="VIDEO_SOURCE_TYPE"/>.</pd>
            </plentry>
            <plentry>
                <pt>state</pt>
                <pd>
                    <p props="ios mac cpp unity electron rn flutter">The state of the local video, see <xref keyref="LOCAL_VIDEO_STREAM_STATE"/>.</p>
                    <p props="android">
                    <ul>
                    <li><ph keyref="LOCAL_VIDEO_STREAM_STATE_STOPPED"/>(0): The local video is in the initial state.</li>
                    <li><ph keyref="LOCAL_VIDEO_STREAM_STATE_CAPTURING"/>(1): The local video capturing device starts successfully.</li>
                    <li><ph keyref="LOCAL_VIDEO_STREAM_STATE_ENCODING"/>(2): The first video frame is successfully encoded.</li>
                    <li><ph keyref="LOCAL_VIDEO_STREAM_STATE_FAILED"/>(3): Fails to start the local video.</li>
                    </ul> </p>
                </pd>
            </plentry>
            <plentry>
                <pt props="native rn electron flutter">error</pt>
                <pt props="unity">errorCode</pt>
                <pd>
                    <p props="ios mac cpp electron rn flutter unity">The detailed error information, see <xref keyref="LOCAL_VIDEO_STREAM_ERROR"/>.</p>
                    <p props="android">
                    <ul>
                    <li><ph keyref="LOCAL_VIDEO_STREAM_ERROR_OK"/>(0): The local video is normal.</li>
                    <li><ph keyref="LOCAL_VIDEO_STREAM_ERROR_FAILURE"/>(1): No specified reason for the local video failure.</li>
                    <li><ph keyref="LOCAL_VIDEO_STREAM_ERROR_DEVICE_BUSY"/>(3): The local video capturing device is in use. Remind the user to check whether another application occupies the camera.</li>
                    <li><ph keyref="LOCAL_VIDEO_STREAM_ERROR_CAPTURE_FAILURE"/>(4): The local video capture failed. Remind the user to check whether the video capture device is working properly, or the camera is occupied by another application, and then try to rejoin the channel.<ul>
                        <li>If your app runs in the background on a device running Android 9 or later, you cannot access the camera.</li>
                        <li>If your app runs on a device running Android 6 or later, this error is reported if the camera is occupied by a third-party app and not property released. Once the camera is released, the SDK triggers this callback again, reporting <codeph>state</codeph> <codeph>CAPTURING</codeph>, and <codeph>error</codeph> <codeph>ERROR_OK</codeph>.</li>
                        </ul></li>
                    <li><ph keyref="LOCAL_VIDEO_STREAM_ERROR_ENCODE_FAILURE"/>(5): The local video encoding fails.</li>
                    <li><ph keyref="LOCAL_VIDEO_STREAM_ERROR_DEVICE_NOT_FOUND"/>(8): Fails to find a local video capture device. Remind the user to check whether the camera is connected to the device properly or the camera is working properly, and then to rejoin the channel.</li>
                    </ul> </p>
                </pd>
            </plentry>
            </parml> </section>
    </refbody>
</reference>
