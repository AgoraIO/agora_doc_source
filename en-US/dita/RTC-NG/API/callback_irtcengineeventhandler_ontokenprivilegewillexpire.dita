<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE reference PUBLIC "-//OASIS//DTD DITA Reference//EN" "reference.dtd">
<reference id="callback_irtcengineeventhandler_ontokenprivilegewillexpire">
    <title> <ph keyref="onTokenPrivilegeWillExpire" /> </title>
    <shortdesc id="short"><ph id="shortdesc">Occurs when the token expires in 30 seconds.</ph></shortdesc>
    <prolog>
        <metadata>
            <keywords>
                <indexterm keyref="onTokenPrivilegeWillExpire" />
            </keywords>
        </metadata>
    </prolog>
    <refbody>
        <section id="prototype">
            <p outputclass="codeblock">
            <codeblock props="android" outputclass="language-java">public void onTokenPrivilegeWillExpire(String token) {}</codeblock>
            <codeblock props="ios mac" outputclass="language-objectivec">- (void)rtcEngine:(AgoraRtcEngineKit * _Nonnull)engine
     tokenPrivilegeWillExpire:(NSString *_Nonnull)token;</codeblock>
            <codeblock props="cpp unreal" outputclass="language-cpp">virtual void onTokenPrivilegeWillExpire(const char* token) {
    (void)token;
    }</codeblock>
         <codeblock props="bp" outputclass="language-cpp">DECLARE_DYNAMIC_MULTICAST_DELEGATE_OneParam(FOnTokenPrivilegeWillExpire, FString, token);</codeblock>
            <codeblock props="electron" outputclass="language-typescript">onTokenPrivilegeWillExpire?(connection: RtcConnection, token: string): void;</codeblock>
            <codeblock props="unity cs" outputclass="language-csharp">public virtual void OnTokenPrivilegeWillExpire(RtcConnection connection, string token) {}</codeblock>
            <codeblock props="rn" outputclass="language-typescript">onTokenPrivilegeWillExpire?(connection: RtcConnection, token: string): void;</codeblock>
            <codeblock props="flutter" outputclass="language-dart">final void Function(RtcConnection connection, String token)?
      onTokenPrivilegeWillExpire;</codeblock>
            <codeblock props="reserve" outputclass="language-cpp"></codeblock></p>
        </section>
        <section id="detailed_desc" deliveryTarget="details" otherprops="no-title">
            <p conkeyref="onRequestToken/renew"/>
        </section>
        <section id="timing" deliveryTarget="details">
            <title>Trigger timing</title>
            <p id="desc1">The SDK will trigger this callback 30 seconds before the token expires, reminding the app to update the Token.</p>
        </section>
        <section id="restriction" deliveryTarget="details">
            <title>Restrictions</title>
            <p>None.</p>
        </section>
        <section id="parameters" deliveryTarget="details">
            <title> <ph keyref="callback-section-title" /> </title>
            <parml>
            <plentry conkeyref="onJoinChannelSuccess/engine" props="ios mac">
                <pt />
                <pd />
            </plentry>
            <plentry props="unity electron rn cs" conkeyref="joinChannelEx/connection">
                <pt />
                <pd />
            </plentry>
            <plentry id="token">
                <pt>token</pt>
                <pd>The token that is about to expire.</pd>
            </plentry>
            </parml> </section>
    </refbody>
</reference>
