<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE reference PUBLIC "-//OASIS//DTD DITA Reference//EN" "reference.dtd">
<reference id="callback_irtcengineeventhandler_onconnectioninterrupted">
    <title><ph keyref="onConnectionInterrupted" /></title>
    <shortdesc id="short"><ph id="shortdesc">Occurs when the connection between the SDK and the server is interrupted.</ph></shortdesc>
    <prolog>
        <metadata>
            <keywords>
                <indexterm keyref="onConnectionInterrupted" />
            </keywords>
        </metadata>
    </prolog>
    <refbody>
        <section id="prototype">
            <p outputclass="codeblock">
            <codeblock props="android" outputclass="language-java">public void onConnectionInterrupted() {}</codeblock>
            <codeblock props="ios mac" outputclass="language-objectivec">- (void)rtcEngineConnectionDidInterrupted:(AgoraRtcEngineKit * _Nonnull)engine;</codeblock>
            <codeblock props="cpp unreal" outputclass="language-cpp">virtual void onConnectionInterrupted() {}</codeblock>
         <codeblock props="bp" outputclass="language-cpp">DECLARE_DYNAMIC_MULTICAST_DELEGATE(FOnConnectionInterrupted);</codeblock>
            <codeblock props="electron" outputclass="language-typescript">  onConnectionInterrupted?(connection: RtcConnection): void;</codeblock>
            <codeblock props="unity cs" outputclass="language-csharp">public virtual void OnConnectionInterrupted(RtcConnection connection) {}</codeblock>
            <codeblock props="rn" outputclass="language-typescript">  onConnectionInterrupted?(connection: RtcConnection): void;</codeblock>
            <codeblock props="flutter" outputclass="language-dart">final void Function(RtcConnection connection)? onConnectionInterrupted;</codeblock>
            <codeblock props="reserve" outputclass="language-cpp"></codeblock></p>
        </section>
        <section id="detailed_desc">
            <dl outputclass="deprecated">
            <dlentry>
                <dt>Deprecated:</dt>
                <dd>Use <xref keyref="onConnectionStateChanged" /> instead.</dd>
            </dlentry>
            </dl>
            <p>The SDK triggers this callback when it loses connection with the server for more than four seconds after the connection is established. After triggering this callback, the SDK tries to reconnect to the server. You can use this callback to implement pop-up reminders. The differences between this callback and <xref keyref="onConnectionLost" /> are as follow:<ul>
            <li>The SDK triggers the <apiname keyref="onConnectionInterrupted" /> callback when it loses connection with the server for more than four seconds after it successfully joins the channel.</li>
            <li>The SDK triggers the <apiname keyref="onConnectionLost" /> callback when it loses connection with the server for more than 10 seconds, whether or not it joins the channel.</li>
            </ul>If the SDK fails to rejoin the channel 20 minutes after being disconnected from Agora's edge server, the SDK stops rejoining the channel.</p>
        </section>
        <section id="parameters" props="ios mac unity flutter rn electron cs">
            <title><ph keyref="callback-section-title" /></title>
            <parml>
            <plentry conkeyref="onJoinChannelSuccess/engine" props="ios mac">
                <pt />
                <pd />
            </plentry>
            <plentry props="unity electron rn flutter cs">
                <pt>connection</pt>
                <pd>The connection information. See <xref keyref="RtcConnection" />.</pd>
            </plentry>
            </parml> </section>
    </refbody>
</reference>