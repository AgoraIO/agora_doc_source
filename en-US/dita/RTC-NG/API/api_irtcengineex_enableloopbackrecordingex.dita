<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE reference PUBLIC "-//OASIS//DTD DITA Reference//EN" "reference.dtd">
<reference id="api_irtcengineex_enableloopbackrecordingex">
    <title><ph keyref="enableLoopbackRecordingEx" /></title>
    <shortdesc id="short"><ph id="shortdesc">Enables loopback audio capturing.</ph></shortdesc>
    <prolog>
        <metadata>
            <keywords>
                <indexterm keyref="enableLoopbackRecordingEx" />
            </keywords>
        </metadata>
    </prolog>
    <refbody>
        <section id="prototype">
            <p outputclass="codeblock">
            <codeblock props="android" outputclass="language-java" />
            <codeblock props="mac" outputclass="language-objectivec">- (int)enableLoopbackRecordingEx:(BOOL)enabled
                      deviceName:(NSString* _Nullable)deviceName
                      connection:(AgoraRtcConnection * _Nonnull)connection NS_SWIFT_NAME(enableLoopbackRecordingEx(_:deviceName:connection:));</codeblock>
            <codeblock props="cpp" outputclass="language-cpp">virtual int enableLoopbackRecordingEx(const RtcConnection&amp; connection, bool enabled, const char* deviceName = NULL) = 0;</codeblock>
            <codeblock props="electron" outputclass="language-typescript">abstract enableLoopbackRecordingEx(
    connection: RtcConnection,
    enabled: boolean,
    deviceName?: string
  ): number;</codeblock>
            <codeblock props="unity" outputclass="language-csharp">public abstract int EnableLoopbackRecordingEx(RtcConnection connection, bool enabled, string deviceName);</codeblock>
            <codeblock props="rn" outputclass="language-typescript">abstract enableLoopbackRecordingEx(
    connection: RtcConnection,
    enabled: boolean,
    deviceName?: string
  ): number;</codeblock>
            <codeblock props="flutter" outputclass="language-dart">Future&lt;void&gt; enableLoopbackRecordingEx(
      {required RtcConnection connection,
      required bool enabled,
      String? deviceName});</codeblock>
            <codeblock props="unreal" outputclass="language-cpp" /></p>
        </section>
        <section id="detailed_desc">
            <p>If you enable loopback audio capturing, the output of the sound card is mixed into the audio stream sent to the other end.</p>
            <note id="note_v4j_tbx_jqb" type="attention">
            <ul>
            <li props="cpp unity electron flutter">This method applies to the macOS and Windows platforms only.</li>
            <li>macOS does not support loopback audio capture of the default sound card. If you need to use this function, use a virtual sound card and pass its name to the <parmname>deviceName</parmname> parameter. Agora recommends using AgoraALD as the virtual sound card for audio capturing.</li>
        </ul></note></section>
        <section id="parameters">
            <title>Parameters</title>
            <parml>
            <plentry conkeyref="joinChannelEx/connection">
                <pt />
                <pd />
            </plentry>
            <plentry>
                <pt>enabled</pt>
                <pd>Sets whether to enable loopback audio capture:<ul id="ul_kgm_wbx_jqb">
                    <li><codeph><ph keyref="true" /></codeph>: Enable loopback audio capturing.</li>
                    <li><codeph><ph keyref="false" /></codeph>: (Default) Disable loopback audio capturing.</li>
                    </ul></pd>
            </plentry>
            <plentry conkeyref="enableLoopbackRecording/device_name">
                <pt />
                <pd />
            </plentry>
            </parml> </section>
        <section id="return_values" props="mac cpp unity rn electron">
            <title>Returns</title>
            <ul id="ul_uvd_2cx_jqb">
            <li>0: Success.</li>
            <li>&lt; 0: Failure.</li>
            </ul> </section>
    </refbody>
</reference>