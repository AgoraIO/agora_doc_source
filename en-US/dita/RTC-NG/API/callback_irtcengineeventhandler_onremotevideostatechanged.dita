<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE reference PUBLIC "-//OASIS//DTD DITA Reference//EN" "reference.dtd">
<reference id="callback_irtcengineeventhandler_onremotevideostatechanged">
     <title> <ph keyref="onRemoteVideoStateChanged" /> </title>
     <shortdesc id="short"><ph id="shortdesc">Occurs when the remote video stream state changes.</ph></shortdesc>
     <prolog>
          <metadata>
               <keywords>
                    <indexterm keyref="onRemoteVideoStateChanged" />
               </keywords>
          </metadata>
     </prolog>
     <refbody>
          <section id="prototype">
               <p outputclass="codeblock">
               <codeblock props="android" outputclass="language-java">public void onRemoteVideoStateChanged(int uid, int state, int reason, int elapsed) {}</codeblock>
               <codeblock props="ios mac" outputclass="language-objectivec">- (void)rtcEngine:(AgoraRtcEngineKit * _Nonnull)engine
     remoteVideoStateChangedOfUid:(NSUInteger)uid state:(AgoraVideoRemoteState)state reason:(AgoraVideoRemoteReason)reason elapsed:(NSInteger)elapsed;</codeblock>
               <codeblock props="cpp unreal" outputclass="language-cpp">virtual void onRemoteVideoStateChanged(uid_t uid,
     REMOTE_VIDEO_STATE state,
     REMOTE_VIDEO_STATE_REASON reason,
     int elapsed) {
     (void)uid;
     (void)state;
     (void)reason;
     (void)elapsed;
     }</codeblock>
         <codeblock props="bp" outputclass="language-cpp">DECLARE_DYNAMIC_MULTICAST_DELEGATE_FourParams(FOnRemoteVideoStateChanged, int64, uid, EREMOTE_VIDEO_STATE, state, EREMOTE_VIDEO_STATE_REASON, reason, int, elapsed);</codeblock>
               <codeblock props="electron" outputclass="language-typescript">  onRemoteVideoStateChanged?(
    connection: RtcConnection,
    remoteUid: number,
    state: RemoteVideoState,
    reason: RemoteVideoStateReason,
    elapsed: number
  ): void;</codeblock>
               <codeblock props="unity cs" outputclass="language-csharp">public virtual void OnRemoteVideoStateChanged(RtcConnection connection, uint remoteUid, REMOTE_VIDEO_STATE state, REMOTE_VIDEO_STATE_REASON reason, int elapsed) {}</codeblock>
               <codeblock props="rn" outputclass="language-typescript">  onRemoteVideoStateChanged?(
    connection: RtcConnection,
    remoteUid: number,
    state: RemoteVideoState,
    reason: RemoteVideoStateReason,
    elapsed: number
  ): void;</codeblock>
               <codeblock props="flutter" outputclass="language-dart">final void Function(
      RtcConnection connection,
      int remoteUid,
      RemoteVideoState state,
      RemoteVideoStateReason reason,
      int elapsed)? onRemoteVideoStateChanged;</codeblock>
            <codeblock props="reserve" outputclass="language-cpp"></codeblock></p>
          </section>
          <section id="detailed_desc">
               <note id="note" type="attention">This callback does not work properly when the number of users (in the communication profile) or hosts (in the live streaming channel) in a channel exceeds 17.</note> </section>
          <section id="parameters">
               <title> <ph keyref="callback-section-title" /> </title>
               <parml>
               <plentry conkeyref="onJoinChannelSuccess/engine" props="ios mac">
                    <pt />
                    <pd />
               </plentry>
               <plentry props="rn unity electron flutter cs">
                         <pt>connection</pt>
                         <pd>The connection information. See <xref keyref="RtcConnection"/>.</pd>
                    </plentry>
               <plentry id="uid">
                    <pt props="native unreal bp">uid</pt>
                    <pt props="rn unity electron flutter cs">remoteUid</pt>
                    <pd>The ID of the remote user whose video state changes.</pd>
               </plentry>
               <plentry id="state">
                    <pt>state</pt>
                    <pd>
                         <p props="ios mac cpp unreal bp unity flutter electron rn cs">The state of the remote video. See <xref keyref="REMOTE_VIDEO_STATE" />.</p>
                         <p props="android">The state of the remote video:<ul>
                         <li><ph keyref="REMOTE_VIDEO_STATE_STOPPED"/>(0): The remote video is in the initial state. This status is reported in the case of <codeph>REMOTE_VIDEO_STATE_REASON_LOCAL_MUTED(3)</codeph>, <codeph>REMOTE_VIDEO_STATE_REASON_REMOTE_MUTED(5)</codeph>, <codeph>REMOTE_VIDEO_STATE_REASON_REMOTE_OFFLINE(7)</codeph> or <codeph>REMOTE_VIDEO_STATE_REASON_AUDIO_FALLBACK(8)</codeph>.</li>
                         <li><ph keyref="REMOTE_VIDEO_STATE_STARTING"/>(1): The first remote video packet is received.</li>
                         <li><ph keyref="REMOTE_VIDEO_STATE_DECODING"/>(2): The remote audio stream is decoded and plays normally. This status is reported in the case of <codeph>REMOTE_VIDEO_STATE_REASON_NETWORK_RECOVERY(2)</codeph>, <codeph>REMOTE_VIDEO_STATE_REASON_LOCAL_UNMUTED(4)</codeph>, <codeph>REMOTE_VIDEO_STATE_REASON_REMOTE_UNMUTED(6)</codeph> or <codeph>REMOTE_VIDEO_STATE_REASON_AUDIO_FALLBACK_RECOVERY(9)</codeph>.</li>
                         <li><ph keyref="REMOTE_VIDEO_STATE_FROZEN"/>(3): The remote video is frozen. This state is reported in the case of <codeph>REMOTE_VIDEO_STATE_REASON_NETWORK_CONGESTION(1)</codeph>.</li>
                         <li><ph keyref="REMOTE_VIDEO_STATE_FAILED"/>(4): The remote video fails to start. The remote video fails to start, probably due to <codeph>REMOTE_VIDEO_STATE_REASON_INTERNAL(0)</codeph>.</li>
                         </ul> </p>
                    </pd>
               </plentry>
               <plentry id="reason">
                    <pt>reason</pt>
                    <pd>
                         <p props="ios mac cpp unreal bp unity flutter electron rn cs">The reason for the remote video state change. See <xref keyref="REMOTE_VIDEO_STATE_REASON" />.</p>
                         <p props="android">Remote audio state reasons:<ul>
                         <li><ph keyref="REMOTE_VIDEO_STATE_REASON_INTERNAL" />(0): Internal reasons.</li>
                         <li><ph keyref="REMOTE_VIDEO_STATE_REASON_NETWORK_CONGESTION" />(1): Network congestion.</li>
                         <li><ph keyref="REMOTE_VIDEO_STATE_REASON_NETWORK_RECOVERY" />(2): Network recovery.</li>
                         <li><ph keyref="REMOTE_VIDEO_STATE_REASON_LOCAL_MUTED" />(3): The local user stops receiving the remote video stream or disables the video module.</li>
                         <li><ph keyref="REMOTE_VIDEO_STATE_REASON_LOCAL_UNMUTED" />(4): The local user resumes receiving the remote video stream or enables the video module.</li>
                         <li><ph keyref="REMOTE_VIDEO_STATE_REASON_REMOTE_MUTED" />(5): The remote user stops sending the video stream or disables the video module.</li>
                         <li><ph keyref="REMOTE_VIDEO_STATE_REASON_REMOTE_UNMUTED" />(6): The remote user resumes sending the video stream or enables the video module.</li>
                         <li><ph keyref="REMOTE_VIDEO_STATE_REASON_REMOTE_OFFLINE" />(7): The remote user leaves the channel.</li>
                         <li><ph keyref="REMOTE_VIDEO_STATE_REASON_AUDIO_FALLBACK" />(8): The remote media stream falls back to the audio-only stream due to poor network conditions.</li>
                         <li><ph keyref="REMOTE_VIDEO_STATE_REASON_AUDIO_FALLBACK_RECOVERY" />(9): The remote media stream switches back to the video stream after the network conditions improve.</li>
                         <li><ph keyref="REMOTE_VIDEO_STATE_REASON_CODEC_NOT_SUPPORT" />(13): The local video decoder does not support decoding the remote video stream.</li>
                         </ul> </p>
                    </pd>
               </plentry>
               <plentry>
                    <pt>elapsed</pt>
                    <pd>Time elapsed (ms) from the local user calling the <apiname keyref="joinChannel2" /> method until the SDK triggers this callback.</pd>
               </plentry>
               </parml> </section>
     </refbody>
</reference>
