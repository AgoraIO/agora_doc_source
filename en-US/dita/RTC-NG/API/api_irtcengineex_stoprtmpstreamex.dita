<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE reference PUBLIC "-//OASIS//DTD DITA Reference//EN" "reference.dtd">
<reference id="api_irtcengineex_stoprtmpstreamex">
    <title> <ph keyref="stopRtmpStreamEx" /> </title>
    <shortdesc id="short"><ph id="shortdesc">Stops pushing media streams to a CDN.</ph></shortdesc>
    <prolog>
        <metadata>
            <keywords>
                <indexterm keyref="stopRtmpStreamEx" />
            </keywords>
        </metadata>
    </prolog>
    <refbody>
        <section id="prototype">
            <p outputclass="codeblock">
            <codeblock props="android" outputclass="language-java">public abstract int stopRtmpStreamEx(String url, RtcConnection connection);</codeblock>
            <codeblock props="ios mac" outputclass="language-objectivec">- (int)stopRtmpStreamEx:(NSString* _Nonnull)url
             connection:(AgoraRtcConnection * _Nonnull)connection NS_SWIFT_NAME(stopRtmpStreamEx(_:connection:));</codeblock>
            <codeblock props="cpp" outputclass="language-cpp">virtual int stopRtmpStreamEx(const char* url, const RtcConnection&amp; connection) = 0;</codeblock>
            <codeblock props="electron" outputclass="language-typescript">abstract stopRtmpStreamEx(url: string, connection: RtcConnection): number;</codeblock>
            <codeblock props="unity" outputclass="language-csharp">public abstract int StopRtmpStreamEx(string url, RtcConnection connection);</codeblock>
            <codeblock props="rn" outputclass="language-typescript">abstract stopRtmpStreamEx(url: string, connection: RtcConnection): number;</codeblock>
            <codeblock props="flutter" outputclass="language-dart">Future&lt;void&gt; stopRtmpStreamEx(
      {required String url, required RtcConnection connection});</codeblock>
            <codeblock props="reserve" outputclass="language-cpp" /></p>
        </section>
        <section id="detailed_desc">
            <title>Details</title>
            <p>Agora recommends that you use the server-side Media Push function. For details, see <xref keyref="cdn-streaming-restful">Use RESTful API</xref>.</p>
            <p>You can call this method to stop the live stream on the specified CDN address. This method can stop pushing media streams to only one CDN address at a time, so if you need to stop pushing streams to multiple addresses, call this method multiple times.</p>
            <p>After you call this method, the SDK triggers the <xref keyref="onRtmpStreamingStateChanged" /> callback on the local client to report the state of the streaming.</p>
        </section>
        <section id="parameters">
            <title>Parameters</title>
            <parml>
            <plentry conkeyref="startRtmpStreamWithTranscoding/url">
                <pt />
                <pd />
            </plentry>
            </parml> </section>
        <section id="return_values">
            <title><ph keyref="return-section-title" /></title>
            <p props="flutter">When the method call succeeds, there is no return value; when fails, the <xref keyref="AgoraRtcException" /> exception is thrown; you need to catch the exception and handle it accordingly.</p>
            <ul>
            <li props="native electron unity rn">0: Success.</li>
            <li>&lt; 0: Failure.</li>
            </ul> </section>
    </refbody>
</reference>