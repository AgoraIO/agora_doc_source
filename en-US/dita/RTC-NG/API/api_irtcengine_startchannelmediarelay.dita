<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE reference PUBLIC "-//OASIS//DTD DITA Reference//EN" "reference.dtd">
<reference id="api_irtcengine_startchannelmediarelay">
    <title><ph keyref="startChannelMediaRelay"/></title>
    <shortdesc id="short"><ph id="shortdesc">Starts relaying media streams across channels. This method can be used to implement scenarios such as co-host across channels.</ph></shortdesc>
    <prolog>
        <metadata>
            <keywords>
                <indexterm keyref="startChannelMediaRelay"/>
            </keywords>
        </metadata>
    </prolog>
    <refbody>
        <section id="prototype">
            <p outputclass="codeblock">
            <codeblock props="android" outputclass="language-java">public abstract int startChannelMediaRelay(
      ChannelMediaRelayConfiguration channelMediaRelayConfiguration);</codeblock>
            <codeblock props="ios mac" outputclass="language-objectivec">- (int)startChannelMediaRelay:(AgoraChannelMediaRelayConfiguration * _Nonnull)config;</codeblock>
            <codeblock props="cpp unreal" outputclass="language-cpp">virtual int startChannelMediaRelay(const ChannelMediaRelayConfiguration &amp;configuration) = 0;</codeblock>
         <codeblock props="bp" outputclass="language-cpp">UFUNCTION(BlueprintCallable, Category = &quot;Agora|RtcEngineProxy&quot;)
	int StartChannelMediaRelay(const FChannelMediaRelayConfiguration&amp; configuration) __deprecated;</codeblock>
            <codeblock props="electron" outputclass="language-typescript">abstract startChannelMediaRelay(
    configuration: ChannelMediaRelayConfiguration
  ): number;</codeblock>
            <codeblock props="unity cs" outputclass="language-csharp">public abstract int StartChannelMediaRelay(ChannelMediaRelayConfiguration configuration);</codeblock>
            <codeblock props="rn" outputclass="language-typescript">abstract startChannelMediaRelay(
    configuration: ChannelMediaRelayConfiguration
  ): number;</codeblock>
            <codeblock props="flutter" outputclass="language-dart">Future&lt;void&gt; startChannelMediaRelay(
      ChannelMediaRelayConfiguration configuration);</codeblock>
            <codeblock props="reserve" outputclass="language-cpp"></codeblock></p>
        </section>
        <section id="detailed_desc">
            <title>Details</title>
            <dl outputclass="deprecated">
            <dlentry>
                <dt>Deprecated:</dt>
                <dd>This method is deprecated. Use <xref keyref="startOrUpdateChannelMediaRelay" /> instead.</dd>
            </dlentry>
            </dl>
            <p>After a successful method call, the SDK triggers the <xref keyref="onChannelMediaRelayStateChanged"/> and <xref keyref="onChannelMediaRelayEvent"/> callbacks, and these callbacks return the state and events of the media stream relay.<ul>
            <li>If the <apiname keyref="onChannelMediaRelayStateChanged"/> callback returns <apiname keyref="RELAY_STATE_RUNNING"/> (2) and <apiname keyref="RELAY_OK"/> (0), and the <apiname keyref="onChannelMediaRelayEvent"/> callback returns <apiname keyref="RELAY_EVENT_PACKET_SENT_TO_DEST_CHANNEL"/> (4), it means that the SDK starts relaying media streams between the source channel and the target channel.</li>
            <li>If the <apiname keyref="onChannelMediaRelayStateChanged"/> callback returns <apiname keyref="RELAY_STATE_FAILURE"/> (3), an exception occurs during the media stream relay.</li>
            </ul> </p>
            <note type="attention">
            <ul>
            <li>Call this method after joining the channel.</li>
            <li>This method takes effect only when you are a host in a live streaming channel.</li>
            <li>After a successful method call, if you want to call this method again, ensure that you call the <xref keyref="stopChannelMediaRelay"/> method to quit the current relay.</li>
            <li>The relaying media streams across channels function needs to be enabled by contacting <xref keyref="ticket-link"/>.</li>
            <li>Agora does not support string user accounts in this API.</li>
            </ul> </note> </section>
        <section id="parameters">
            <title>Parameters</title>
            <parml>
            <plentry>
                <pt props="android">channelMediaRelayConfiguration</pt>
                <pt props="ios mac">config</pt>
                <pt props="cpp unreal bp unity flutter rn electron cs">configuration</pt>
                <pd>The configuration of the media stream relay. See <xref keyref="ChannelMediaRelayConfiguration"/>.</pd>
            </plentry>
            </parml> </section>
        <section id="return_values">
            <title><ph keyref="return-section-title"/></title>
            <p props="flutter">When the method call succeeds, there is no return value; when fails, the <xref keyref="AgoraRtcException"/> exception is thrown; and you need to catch the exception and handle it accordingly. <ph props="cn">See <xref keyref="error-code-link"/> for details and resolution suggestions.</ph></p>
            <ul>
            <li props="native unreal bp electron unity rn cs">0: Success.</li>
            <li>&lt; 0: Failure.<ul>
                <li>-1: A general error occurs (no specified reason).</li>
                <li>-2: The parameter is invalid.</li>
                <li>-7: The method call was rejected. It may be because the SDK has not been initialized successfully, or the user role is not a host.</li>
                <li>-8: Internal state error. Probably because the user is not a broadcaster.</li>
                </ul></li>
            </ul> </section>
    </refbody>
</reference>
