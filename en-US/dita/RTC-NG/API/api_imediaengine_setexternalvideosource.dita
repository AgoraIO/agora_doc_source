<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE reference PUBLIC "-//OASIS//DTD DITA Reference//EN" "reference.dtd">
<reference id="api_imediaengine_setexternalvideosource">
    <title><ph keyref="setExternalVideoSource" /></title>
    <shortdesc id="short"><ph id="shortdesc">Configures the external video source.</ph></shortdesc>
    <prolog>
        <metadata>
            <keywords>
                <indexterm keyref="setExternalVideoSource" />
            </keywords>
        </metadata>
    </prolog>
    <refbody>
        <section id="prototype">
            <p outputclass="codeblock">
            <codeblock props="android" outputclass="language-java">public abstract int setExternalVideoSource(
    boolean enable, boolean useTexture, Constants.ExternalVideoSourceType sourceType);</codeblock>
            <codeblock props="ios mac" outputclass="language-objectivec">- (void)setExternalVideoSource:(BOOL)enable useTexture:(BOOL)useTexture sourceType:(AgoraExternalVideoSourceType)sourceType;</codeblock>
            <codeblock props="cpp unreal" outputclass="language-cpp">virtual int setExternalVideoSource(
    bool enabled, bool useTexture, EXTERNAL_VIDEO_SOURCE_TYPE sourceType = VIDEO_FRAME,
    rtc::SenderOptions encodedVideoOption = rtc::SenderOptions()) = 0;</codeblock>
            <codeblock props="electron" outputclass="language-typescript">abstract setExternalVideoSource(
    enabled: boolean,
    useTexture: boolean,
    sourceType?: ExternalVideoSourceType,
    encodedVideoOption?: SenderOptions
  ): number;</codeblock>
            <codeblock props="unity cs" outputclass="language-csharp">public abstract int SetExternalVideoSource(bool enabled, bool useTexture, EXTERNAL_VIDEO_SOURCE_TYPE sourceType, SenderOptions encodedVideoOption);</codeblock>
            <codeblock props="rn" outputclass="language-typescript">abstract setExternalVideoSource(
    enabled: boolean,
    useTexture: boolean,
    sourceType?: ExternalVideoSourceType,
    encodedVideoOption?: SenderOptions
  ): number;</codeblock>
            <codeblock props="flutter" outputclass="language-dart">Future&lt;void> setExternalVideoSource(
    {required bool enabled,
    required bool useTexture,
    ExternalVideoSourceType sourceType = ExternalVideoSourceType.videoFrame,
    SenderOptions encodedVideoOption = const SenderOptions()});</codeblock>
            <codeblock props="reserve" outputclass="language-cpp"></codeblock></p>
        </section>
        <section id="detailed_desc">
            <title>Details</title>
            <note type="attention">Call this method before joining a channel.</note> </section>
        <section id="parameters">
            <title>Parameters</title>
            <parml>
            <plentry>
                <pt props="ios mac android">enable</pt>
                <pt props="cpp unreal bp unity electron rn flutter cs">enabled</pt>
                <pd>Whether to use the external video source:<ul>
                    <li><codeph><ph keyref="true" /></codeph>: Use the external video source. The SDK prepares to accept the external video frame.</li>
                    <li><codeph><ph keyref="false" /></codeph>: (Default) Do not use the external video source.</li>
                    </ul></pd>
            </plentry>
            <plentry>
                <pt>useTexture</pt>
                <pd>Whether to use the external video frame in the Texture format.<ul>
                    <li><codeph><ph keyref="true" /></codeph>: Use the external video frame in the Texture format.</li>
                    <li><codeph><ph keyref="false" /></codeph>: (Default) Do not use the external video frame in the Texture format.</li>
                    </ul></pd>
            </plentry>
            <plentry>
                <pt>sourceType</pt>
                <pd>Whether the external video frame is encoded. See <xref keyref="EXTERNAL_VIDEO_SOURCE_TYPE" />.</pd>
            </plentry>
            <plentry props="unity cpp unreal bp electron rn flutter cs">
                <pt>encodedVideoOption</pt>
                <pd>Video encoding options. This parameter needs to be set if <parmname>sourceType</parmname> is <apiname keyref="ENCODED_VIDEO_FRAME" />. To set this parameter, contact <xref keyref="ticket-link" />.</pd>
            </plentry>
            </parml> </section>
        <section id="return_values" props="android cpp unreal bp electron unity rn flutter cs">
            <title><ph keyref="return-section-title"/></title>
            <p props="flutter">When the method call succeeds, there is no return value; when fails, the <xref keyref="AgoraRtcException"/> exception is thrown; and you need to catch the exception and handle it accordingly. <ph props="cn">See <xref keyref="error-code-link"/> for details and resolution suggestions.</ph></p>
            <ul>
            <li props="android cpp unreal bp electron unity rn cs">0: Success.</li>
            <li>&lt; 0: Failure. <ph props="cn">See <xref keyref="error-code-link"/> for details and resolution suggestions.</ph></li>
            </ul>
        </section>
    </refbody>
</reference>