<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE reference PUBLIC "-//OASIS//DTD DITA Reference//EN" "reference.dtd">
<reference id="api_irtcengine_enablefacedetection">
    <title><ph keyref="enableFaceDetection" /></title>
    <shortdesc id="short"><ph id="shortdesc">Enables/Disables face detection for the local user.</ph></shortdesc>
    <prolog>
        <metadata>
            <keywords>
                <indexterm keyref="enableFaceDetection" />
            </keywords>
        </metadata>
    </prolog>
    <refbody>
        <section id="prototype">
            <p outputclass="codeblock">
            <codeblock props="android" outputclass="language-java">public abstract int enableFaceDetection(boolean enabled);</codeblock>
            <codeblock props="ios mac" outputclass="language-cpp">- (int)enableFaceDetection:(bool)enable NS_SWIFT_NAME(enableFaceDetection(_:));</codeblock>
            <codeblock props="cpp" outputclass="language-cpp">virtual int enableFaceDetection(bool enabled) = 0;</codeblock>
            <codeblock props="unity" outputclass="language-csharp">public abstract int EnableFaceDetection(bool enabled);</codeblock>
            <codeblock props="electron" outputclass="language-typescript">abstract enableFaceDetection(enabled: boolean): number;</codeblock>
            <codeblock props="rn" outputclass="language-typescript">abstract enableFaceDetection(enabled: boolean): number;</codeblock>
            <codeblock props="flutter" outputclass="language-dart">Future&lt;void&gt; enableFaceDetection(bool enabled);</codeblock>
            <codeblock props="unreal" outputclass="language-cpp" /></p>
        </section>
        <section id="detailed_desc">
            <p>You can call this method either before or after joining a channel.</p>
            <note type="attention" props="cpp unity flutter">This method is for Android and iOS only.</note>
            <p>Once face detection is enabled, the SDK triggers the <xref keyref="onFacePositionChanged" /> callback to report the face information of the local user, which includes the following:<ul>
            <li>The width and height of the local video.</li>
            <li>The position of the human face in the local view.</li>
            <li>The distance between the human face and the screen.</li>
            </ul> </p>
            <p>This method needs to be called after the camera is started (for example, by calling <apiname keyref="startPreview" props="native flutter unity" /> <apiname keyref="startPreview2" props="rn electron" /> or <apiname keyref="joinChannel2" />).</p>
        </section>
        <section id="parameters">
            <title>Parameters</title>
            <parml>
            <plentry>
                <pt props="android ios mac ">enable</pt>
                <pt props="cpp unity flutter electron rn">enabled</pt>
                <pd>Whether to enable face detection for the local user:<ul>
                    <li><codeph><ph keyref="true" /></codeph>: Enable face detection.</li>
                    <li><codeph><ph keyref="false" /></codeph>: (Default) Disable face detection.</li>
                    </ul> </pd>
            </plentry>
            </parml> </section>
        <section id="return_values" props="native unity rn electron">
            <title>Returns</title>
            <ul>
            <li>0: Success.</li>
            <li>&lt; 0: Failure.</li>
            </ul> </section>
    </refbody>
</reference>