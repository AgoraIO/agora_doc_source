<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE reference PUBLIC "-//OASIS//DTD DITA Reference//EN" "reference.dtd">
<reference id="api_imediaplayer_removelistener">
    <title><ph keyref="removeListener_IMediaPlayer" /></title>
    <shortdesc id="short"><ph id="shortdesc">Removes the specified <xref keyref="IMediaPlayerEvent" /> listener.</ph></shortdesc>
    <prolog>
        <metadata>
            <keywords>
                <indexterm keyref="removeListener_IMediaPlayer" />
            </keywords>
        </metadata>
    </prolog>
    <refbody>
        <section id="prototype">
            <p outputclass="codeblock">
            <codeblock props="android" outputclass="language-java" />
            <codeblock props="ios mac" outputclass="language-objectivec" />
            <codeblock props="cpp unreal bp" outputclass="language-cpp" />
            <codeblock props="electron" outputclass="language-typescript">removeListener?&lt;EventType extends keyof IMediaPlayerEvent&gt;(
      eventType: EventType,
      listener: IMediaPlayerEvent[EventType]
    ): void;</codeblock>
            <codeblock props="unity cs" outputclass="language-csharp" />
            <codeblock props="rn" outputclass="language-typescript">removeListener?&lt;EventType extends keyof IMediaPlayerEvent&gt;(
      eventType: EventType,
      listener: IMediaPlayerEvent[EventType]
    ): void;</codeblock>
            <codeblock props="reserve" outputclass="language-cpp" /></p>
        </section>
        <section conkeyref="removeListener/detailed_desc" />
        <section id="parameters">
            <title>Parameters</title>
            <parml>
            <plentry conkeyref="addListener_IMediaPlayer/eventType">
                <pt />
                <pd />
            </plentry>
            <plentry id="listener">
                <pt>listener</pt>
                <pd>The callback function for <parmname>eventType</parmname>. Must pass in the same function object in <xref keyref="addListener_IMediaPlayer" />. Take removing the listener for <xref keyref="onPlayerSourceStateChanged" /> as an example: <codeblock outputclass="language-typescript">// Create an onPlayerSourceStateChanged object
const onPlayerSourceStateChanged = (state: MediaPlayerState, ec: MediaPlayerError) =&gt; {};
// Add one onPlayerSourceStateChanged listener
engine.addListener('onPlayerSourceStateChanged', onPlayerSourceStateChanged);
// Remove the onPlayerSourceStateChanged listener
engine.removeListener('onPlayerSourceStateChanged', onPlayerSourceStateChanged);</codeblock></pd>
            </plentry>            
            </parml> </section>
    </refbody>
</reference>