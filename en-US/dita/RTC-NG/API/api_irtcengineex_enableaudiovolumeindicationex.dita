<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE reference PUBLIC "-//OASIS//DTD DITA Reference//EN" "reference.dtd">
<reference id="api_irtcengineex_enableaudiovolumeindicationex">
    <title><ph keyref="enableAudioVolumeIndicationEx" /></title>
    <shortdesc id="short"><ph id="shortdesc" conkeyref="enableAudioVolumeIndication/shortdesc" /></shortdesc>
    <prolog>
        <metadata>
            <keywords>
                <indexterm keyref="enableAudioVolumeIndicationEx" />
            </keywords>
        </metadata>
    </prolog>
    <refbody>
        <section id="prototype">
            <p outputclass="codeblock">
            <codeblock props="android" outputclass="language-java">public abstract int enableAudioVolumeIndicationEx(
      int interval, int smooth, boolean reportVad, RtcConnection connection);</codeblock>
            <codeblock props="ios mac" outputclass="language-objectivec">- (int)enableAudioVolumeIndicationEx:(NSInteger)interval
                              smooth:(NSInteger)smooth
                           reportVad:(BOOL)reportVad
                          connection:(AgoraRtcConnection* _Nonnull)connection NS_SWIFT_NAME(enableAudioVolumeIndicationEx(_:smooth:reportVad:connection:));</codeblock>
            <codeblock props="cpp" outputclass="language-cpp">virtual int enableAudioVolumeIndicationEx(int interval, int smooth, bool reportVad, const RtcConnection&amp; connection) = 0;</codeblock>
            <codeblock props="cs" outputclass="language-csharp" />
            <codeblock props="electron" outputclass="language-typescript">abstract enableAudioVolumeIndicationEx(
    interval: number,
    smooth: number,
    reportVad: boolean,
    connection: RtcConnection
  ): number;</codeblock>
            <codeblock props="unity" outputclass="language-csharp">public abstract int EnableAudioVolumeIndicationEx(int interval, int smooth, bool reportVad, RtcConnection connection);</codeblock>
            <codeblock props="rn" outputclass="language-typescript">abstract enableAudioVolumeIndicationEx(
    interval: number,
    smooth: number,
    reportVad: boolean,
    connection: RtcConnection
  ): number;</codeblock>
            <codeblock props="flutter" outputclass="language-dart">Future&lt;void&gt; enableAudioVolumeIndicationEx(
      {required int interval,
      required int smooth,
      required bool reportVad,
      required RtcConnection connection});</codeblock>
            <codeblock props="unreal" outputclass="language-cpp" /></p>
        </section>
        <section id="detailed_desc">
            <p>This method enables the SDK to regularly report the volume information to the app of the local user who sends a stream and remote users (three users at most) whose instantaneous volumes are the highest. Once you call this method and users send streams in the channel, the SDK triggers the <xref keyref="onAudioVolumeIndication" /> callback at the time interval set in this method.</p>
        </section>
        <section id="parameters">
            <title>Parameters</title>
            <parml>
            <plentry conkeyref="enableAudioVolumeIndication/interval">
                <pt />
                <pd />
            </plentry>
            <plentry conkeyref="enableAudioVolumeIndication/smooth">
                <pt />
                <pd />
            </plentry>
            <plentry conkeyref="enableAudioVolumeIndication/vad">
                <pt />
                <pd />
            </plentry>
            <plentry conkeyref="joinChannelEx/connection">
                <pt />
                <pd />
            </plentry>
            </parml> </section>
        <section id="return_values" props="native rn electron unity">
            <title>Returns</title>
            <ul>
            <li>0: Success.</li>
            <li>&lt; 0: Failure.</li>
            </ul> </section>
    </refbody>
</reference>