<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE reference PUBLIC "-//OASIS//DTD DITA Reference//EN" "reference.dtd">
<reference id="callback_irtcengineeventhandler_onextensionevent">
    <title><ph keyref="onExtensionEvent" /></title>
    <shortdesc id="short"><ph id="shortdesc">The event callback of the extension.</ph></shortdesc>
    <prolog>
        <metadata>
            <keywords>
                <indexterm keyref="onExtensionEvent" />
            </keywords>
        </metadata>
    </prolog>
    <refbody>
        <section id="prototype">
            <p outputclass="codeblock">
            <codeblock props="android" outputclass="language-java">void onEvent(String provider, String extension, String key, String value);</codeblock>
            <codeblock props="ios mac" outputclass="language-objectivec">- (void)onEvent:(NSString * __nullable)provider
      extension:(NSString * __nullable)extension
            key:(NSString * __nullable)key
          value:(NSString * __nullable)value;
@end
</codeblock>
            <codeblock props="cpp unreal bp" outputclass="language-cpp">virtual void onExtensionEvent(const char* provider, const char* extension, const char* key, const char* value) {
 (void)provider;
  (void)extension;
  (void)key;
  (void)value;
  }
</codeblock>
            <codeblock props="electron" outputclass="language-typescript">  onExtensionEvent?(
    provider: string,
    extension: string,
    key: string,
    value: string
  ): void;</codeblock>
            <codeblock props="unity cs" outputclass="language-csharp">public virtual void OnExtensionEvent(string provider, string extension, string key, string value) { }</codeblock>
            <codeblock props="rn" outputclass="language-typescript">  onExtensionEvent?(
    provider: string,
    extension: string,
    key: string,
    value: string
  ): void;</codeblock>
            <codeblock props="flutter" outputclass="language-dart">final void Function(
          String provider, String extName, String key, String value)?
      onExtensionEvent;</codeblock>
            <codeblock props="reserve" outputclass="language-cpp"></codeblock></p>
        </section>
        <section id="detailed_desc">
            <p>To listen for events while the extension is running, you need to register this callback.</p>
        </section>
        <section id="parameters">
            <title>Parameters</title>
            <parml>
            <plentry conkeyref="setExtensionProperty/vendor">
                <pt />
                <pd />
            </plentry>
            <plentry id="extension">
                <pt props="native unreal bp unity electron rn cs">extension</pt>
                <pt props="flutter">extName</pt>
                <pd>The name of the extension.</pd>
            </plentry>
            <plentry conkeyref="setExtensionProperty/key">
                <pt />
                <pd />
            </plentry>
            <plentry conkeyref="setExtensionProperty/value">
                <pt />
                <pd />
            </plentry>
            </parml> </section>
    </refbody>
</reference>
