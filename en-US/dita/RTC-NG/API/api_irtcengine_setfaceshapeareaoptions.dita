<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE reference PUBLIC "-//OASIS//DTD DITA Reference//EN" "reference.dtd">
<reference id="api_irtcengine_setfaceshapeareaoptions">
    <title><ph keyref="setFaceShapeAreaOptions" /></title>
    <shortdesc id="short"><ph id="shortdesc">Sets the image enhancement options for facial areas and specifies the media source.</ph></shortdesc>
    <prolog>
        <metadata>
            <keywords>
                <indexterm keyref="setFaceShapeAreaOptions"/>
            </keywords>
        </metadata>
    </prolog>
    <refbody>
        <section id="prototype">
            <p outputclass="codeblock">
            <codeblock props="android" outputclass="language-java">public abstract int setFaceShapeAreaOptions(
      FaceShapeAreaOptions options, Constants.MediaSourceType sourceType);</codeblock>
            <codeblock props="hmos" outputclass="language-arkts"/>
            <codeblock props="ios mac" outputclass="language-objectivec">- (int)setFaceShapeAreaOptions:(AgoraFaceShapeAreaOptions* _Nullable)options sourceType:(AgoraMediaSourceType)sourceType NS_SWIFT_NAME(setFaceShapeAreaOptions(_:sourceType:));</codeblock>
            <codeblock props="cpp unreal" outputclass="language-cpp">virtual int setFaceShapeAreaOptions(const FaceShapeAreaOptions&amp; options, agora::media::MEDIA_SOURCE_TYPE type = agora::media::PRIMARY_CAMERA_SOURCE) = 0;</codeblock>
            <codeblock props="bp" outputclass="language-cpp">UFUNCTION(BlueprintCallable, Category = "Agora|IRtcEngine")
	int SetFaceShapeAreaOptions(const FUABT_FaceShapeAreaOptions&amp; options, EUABT_MEDIA_SOURCE_TYPE type = EUABT_MEDIA_SOURCE_TYPE::PRIMARY_CAMERA_SOURCE);</codeblock>
            <codeblock props="electron" outputclass="language-typescript">abstract setFaceShapeAreaOptions(
    options: FaceShapeAreaOptions,
    type?: MediaSourceType
  ): number;</codeblock>
            <codeblock props="unity cs" outputclass="language-csharp">public abstract int SetFaceShapeAreaOptions(FaceShapeAreaOptions options, MEDIA_SOURCE_TYPE type = MEDIA_SOURCE_TYPE.PRIMARY_CAMERA_SOURCE);</codeblock>
            <codeblock props="rn" outputclass="language-typescript">abstract setFaceShapeAreaOptions(
    options: FaceShapeAreaOptions,
    type?: MediaSourceType
  ): number;</codeblock>
            <codeblock props="flutter" outputclass="language-dart">Future&lt;void> setFaceShapeAreaOptions(
      {required FaceShapeAreaOptions options,
      MediaSourceType type = MediaSourceType.primaryCameraSource});</codeblock> </p>
        </section>
        <section id="detailed_desc" deliveryTarget="details" otherprops="no-title">
            <dl outputclass="since">
            <dlentry props="native">
                <dt>Since</dt>
                <dd>v4.5.0</dd>
            </dlentry>
            </dl>
            <p>If the preset beauty effects implemented in the <xref keyref="setFaceShapeBeautyOptions"/> method do not meet expectations, you can use this method to set beauty area options, individually fine-tune each part of the face, and achieve a more refined beauty effect. <ph props="cpp apple android">See <xref keyref="advanced-beauty"/>.</ph></p>
            <p props="android apple">Both this methods and <xref keyref="setFaceShapeAreaOptions2"/> can be used to set beauty effects options, the difference is that this method supports specifying the media source to apply the beauty effects.</p>
            <note conkeyref="setFaceShapeBeautyOptions/billing"/>
        </section>
        <section id="timing" deliveryTarget="details">
            <title>Call timing</title>
            <p>Call this method after calling <xref keyref="setFaceShapeBeautyOptions"/><ph props="apple android"> or <xref keyref="setFaceShapeBeautyOptions2" /></ph>.</p>
        </section>
        <section id="restriction" deliveryTarget="details" conkeyref="setFaceShapeBeautyOptions/restriction">
        </section>
        <section id="parameters" deliveryTarget="details">
            <title>Parameters</title>
            <parml>
            <plentry id="options">
                <pt>options</pt>
                <pd>Facial enhancement areas, see <xref keyref="FaceShapeAreaOptions" />.</pd>
            </plentry>
            <plentry conkeyref="setFilterEffectOptions/type">
                <pt/>
                <pd/>
            </plentry>
            </parml> </section>
        <section id="return_values">
            <title><ph keyref="return-section-title"/></title>
            <p props="flutter">When the method call succeeds, there is no return value; when fails, the <xref keyref="AgoraRtcException"/> exception is thrown. You need to catch the exception and handle it accordingly. <ph props="cn">See <xref keyref="error-code-link"/> for details and resolution suggestions.</ph></p>
            <ul props="native unreal bp electron unity rn cs">
                <li>0: Success.</li>
                <li>&lt; 0: Failure. <ph props="cn">See <xref keyref="error-code-link"/> for details and resolution suggestions.</ph><ul>
                        <li>-4: The current device does not support this feature. Possible reasons include:<ul>
                                <li>The current device capabilities do not meet the requirements for image enhancement. Agora recommends you replace it with a high-performance device.</li>
                                <li props="android rn unity flutter cpp bp unreal">The current device version is lower than Android 4.4 and does not support this feature. Agora recommends you replace the device or upgrade the operating system.</li>
                            </ul>
                        </li>
                    </ul>
                </li>
                </ul> </section>
        </refbody>
</reference>
