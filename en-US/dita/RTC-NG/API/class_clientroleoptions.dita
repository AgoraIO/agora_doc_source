<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE reference PUBLIC "-//OASIS//DTD DITA Reference//EN" "reference.dtd">
<reference id="class_clientroleoptions">
    <title><ph keyref="ClientRoleOptions" /></title>
    <shortdesc id="short"><ph id="shortdesc">The detailed options of a user.</ph></shortdesc>
    <refbody>
        <section id="prototype">
            <p outputclass="codeblock" props="rtc-ng">
            <codeblock props="android" outputclass="language-java">public class ClientRoleOptions {
  public int audienceLatencyLevel;

  @CalledByNative
  public int getAudienceLatencyLevel() {
    return audienceLatencyLevel;
  }
}</codeblock>
            <codeblock props="unity" outputclass="language-csharp">public class ClientRoleOptions
    {
        public ClientRoleOptions()
        {
            audienceLatencyLevel = AUDIENCE_LATENCY_LEVEL_TYPE.AUDIENCE_LATENCY_LEVEL_LOW_LATENCY;
        }
        public ClientRoleOptions(AUDIENCE_LATENCY_LEVEL_TYPE audienceLatencyLevel)
        {
            this.audienceLatencyLevel = audienceLatencyLevel;
        }
        
        public AUDIENCE_LATENCY_LEVEL_TYPE audienceLatencyLevel;
    }
    </codeblock> </p>
            <p outputclass="codeblock" props="rtc">
            <codeblock props="android" outputclass="language-java">public class ClientRoleOptions {
  public int audienceLatencyLevel;
}</codeblock>
<codeblock props="unity" outputclass="language-csharp">struct ClientRoleOptions {
    AUDIENCE_LATENCY_LEVEL_TYPE audienceLatencyLevel;
    ClientRoleOptions()
        : audienceLatencyLevel(AUDIENCE_LATENCY_LEVEL_ULTRA_LOW_LATENCY) {}
    };</codeblock>
 </p>
            <p outputclass="codeblock">
            <codeblock props="ios mac" outputclass="language-objectivec">__attribute__((visibility("default"))) @interface AgoraClientRoleOptions: NSObject
@property (assign, nonatomic) AgoraAudienceLatencyLevelType audienceLatencyLevel;

@end</codeblock>
            <codeblock props="cpp" outputclass="language-cpp">struct ClientRoleOptions {
    AUDIENCE_LATENCY_LEVEL_TYPE audienceLatencyLevel;
    ClientRoleOptions()
        : audienceLatencyLevel(AUDIENCE_LATENCY_LEVEL_ULTRA_LOW_LATENCY) {}
    };</codeblock>
            <codeblock props="electron" outputclass="language-typescript">export interface ClientRoleOptions {
    audienceLatencyLevel: AUDIENCE_LATENCY_LEVEL_TYPE;
    }</codeblock>
            <codeblock props="rn" outputclass="language-typescript" />
            <codeblock props="flutter" outputclass="language-dart">class ClientRoleOptions {
  @JsonKey(includeIfNull: false)
  AudienceLatencyLevelType? audienceLatencyLevel;

  ClientRoleOptions({
    this.audienceLatencyLevel,
  });

  factory ClientRoleOptions.fromJson(Map&lt;String, dynamic&gt; json) =&gt;
      _$ClientRoleOptionsFromJson(json);

  Map&lt;String, dynamic&gt; toJson() =&gt; _$ClientRoleOptionsToJson(this);
}
</codeblock> </p>
        </section>
        <section id="parameters">
   <title><text conref="../conref/conref_api_metadata.dita#conref_api_metadata/property" /></title>
   <parml>
       <plentry>
  <pt>audienceLatencyLevel</pt>
           <pd><ph>The latency level of an audience member in interactive live streaming. </ph><ph props="ios mac cpp unity electron">See <xref keyref="AUDIENCE_LATENCY_LEVEL_TYPE" />.</ph>
               <ul props="android">
               <li><ph keyref="AUDIENCE_LATENCY_LEVEL_LOW_LATENCY" />(1): Low latency.</li>
               <li><ph keyref="AUDIENCE_LATENCY_LEVEL_ULTRA_LOW_LATENCY" />(2): (Default) Ultra low latency.</li>
           </ul></pd>
       </plentry>
   </parml>
        </section></refbody>
</reference>