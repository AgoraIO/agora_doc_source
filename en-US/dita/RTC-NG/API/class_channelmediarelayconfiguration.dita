<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE reference PUBLIC "-//OASIS//DTD DITA Reference//EN" "reference.dtd">
<reference id="class_channelmediarelayconfiguration">
    <title> <ph keyref="ChannelMediaRelayConfiguration" /> </title>
    <shortdesc>Configuration information of relaying media streams across channels.</shortdesc>
    <refbody>
        <section id="prototype">
            <p outputclass="codeblock">
            <codeblock props="android" outputclass="language-java">public class ChannelMediaRelayConfiguration {
  private ChannelMediaInfo srcInfo = null;
  private Map&lt;String, ChannelMediaInfo&gt; destInfos = null;

  public ChannelMediaRelayConfiguration() {
    destInfos = new HashMap&lt;String, ChannelMediaInfo&gt;();
    srcInfo = new ChannelMediaInfo(null, null, 0);
  }

  public void setSrcChannelInfo(ChannelMediaInfo srcInfo) {
    this.srcInfo = srcInfo;
  }

  public void setDestChannelInfo(String channelName, ChannelMediaInfo destInfo) {
    if (destInfos.size() &lt; Constants.MAX_CROSS_DEST_CHANNEL_SIZE) {
      destInfos.put(channelName, destInfo);
    }
  }

  public void removeDestChannelInfo(String channelName) {
    destInfos.remove(channelName);
  }

  public ChannelMediaInfo getSrcChannelMediaInfo() {
    return srcInfo;
  }

  public Map&lt;String, ChannelMediaInfo&gt; getDestChannelMediaInfos() {
    return destInfos;
  }
}
</codeblock>
            <codeblock props="ios mac" outputclass="language-objectivec">__attribute__((visibility("default"))) @interface AgoraChannelMediaRelayConfiguration: NSObject

@property (strong, nonatomic, readonly) NSDictionary&lt;NSString *, AgoraChannelMediaRelayInfo *&gt; *_Nullable destinationInfos;
@property (strong, nonatomic) AgoraChannelMediaRelayInfo *_Nonnull sourceInfo;

- (BOOL)setDestinationInfo:(AgoraChannelMediaRelayInfo *_Nonnull)destinationInfo forChannelName:(NSString *_Nonnull)channelName;
- (BOOL)removeDestinationInfoForChannelName:(NSString *_Nonnull)channelName;
@end</codeblock>
            <codeblock props="cpp" outputclass="language-cpp">struct ChannelMediaRelayConfiguration {
	ChannelMediaInfo *srcInfo;
	ChannelMediaInfo *destInfos;
	int destCount;

	ChannelMediaRelayConfiguration()
			: srcInfo(nullptr)
			, destInfos(nullptr)
			, destCount(0)
	{}
    };</codeblock>
            <codeblock props="electron" outputclass="language-typescript">export class ChannelMediaRelayConfiguration {
  
  srcInfo?: ChannelMediaInfo;
  
  destInfos?: ChannelMediaInfo[];
  
  destCount?: number;
}</codeblock>
            <codeblock props="unity" outputclass="language-csharp">public class ChannelMediaRelayConfiguration
    {
        public ChannelMediaRelayConfiguration()
        {
            srcInfo = null;
            destInfos = new ChannelMediaInfo[0];
            destCount = 0;
        }

        public ChannelMediaRelayConfiguration(ChannelMediaInfo srcInfo, ChannelMediaInfo[] destInfos, int destCount)
        {
            this.srcInfo = srcInfo;
            this.destInfos = destInfos ?? new ChannelMediaInfo[0];
            this.destCount = destCount;
        }
        public ChannelMediaInfo srcInfo { set; get; }
        public ChannelMediaInfo[] destInfos { set; get; }
        public int destCount { set; get; }
    }</codeblock>
            <codeblock props="rn" outputclass="language-typescript">export class ChannelMediaRelayConfiguration {
  
  srcInfo?: ChannelMediaInfo;
  
  destInfos?: ChannelMediaInfo[];
  
  destCount?: number;
}</codeblock>
            <codeblock props="flutter" outputclass="language-dart">class ChannelMediaRelayConfiguration {
    const ChannelMediaRelayConfiguration(
        {this.srcInfo, this.destInfos, this.destCount});

    @JsonKey(name: 'srcInfo')
    final ChannelMediaInfo? srcInfo;
    @JsonKey(name: 'destInfos')
    final List&lt;ChannelMediaInfo&gt;? destInfos;
    @JsonKey(name: 'destCount')
    final int? destCount;
    factory ChannelMediaRelayConfiguration.fromJson(Map&lt;String, dynamic&gt; json) =&gt;
        _$ChannelMediaRelayConfigurationFromJson(json);
    Map&lt;String, dynamic&gt; toJson() =&gt; _$ChannelMediaRelayConfigurationToJson(this);
  }</codeblock>            
            <codeblock props="unreal" outputclass="language-cpp" /></p>
        </section>
        <section id="parameters">
            <title> <text conref="../conref/conref_api_metadata.dita#conref_api_metadata/property" /> </title>
            <parml>
            <plentry>
                <pt props="cpp framework">srcInfo</pt>
                <pt props="ios mac">sourceInfo</pt>
                <pd props="cpp ios mac framework">
                    <p>The information of the source channel <xref keyref="ChannelMediaInfo" />. It contains the following members:<ul>
                    <li><parmname>channelName</parmname>: The name of the source channel. The default value is <codeph><ph keyref="NULL" /></codeph>, which means the SDK applies the name of the current channel.</li>
                    <li><parmname>uid</parmname>: The unique user ID to identify the relay stream in the source channel. The default value is 0, which means the SDK generates a random <codeph>uid</codeph>. You must set it as 0.</li>
                    <li><parmname>token</parmname>: The <parmname>token</parmname> for joining the source channel. This token is generated with the <parmname>channelName</parmname> and <parmname>uid</parmname> you set in <parmname>srcInfo</parmname>.<ul>
                        <li>If you have not enabled the App Certificate, set this parameter as the default value <codeph><ph keyref="NULL" /></codeph>, which means the SDK applies the App ID.</li>
                        <li>If you have enabled the App Certificate, you must use the <parmname>token</parmname> generated with the <parmname>channelName</parmname> and <parmname>uid</parmname>, and the <parmname>uid</parmname> must be set as 0.</li>
                        </ul> </li>
                    </ul> </p>
                </pd>
            </plentry>
            <plentry>
                <pt props="cpp framework">destInfos</pt>
                <pt props="ios mac">destinationInfos</pt>
                <pd props="cpp ios mac framework">
                    <p>The information of the destination channel <apiname keyref="ChannelMediaInfo" />. It contains the following members:<ul>
                    <li><parmname>channelName</parmname>: The name of the destination channel.</li>
                    <li><parmname>uid</parmname>: The unique user ID to identify the relay stream in the destination channel. The value ranges from 0 to (2 <sup>32</sup>-1). To avoid user ID conflicts, this user ID must be different from any other user ID in the destination channel. The default value is 0, which means the SDK generates a random user ID. Do not set this parameter as the user ID of the host in the destination channel, and ensure that this user ID is different from any other user ID in the channel.</li>
                    <li><parmname>token</parmname>: The <parmname>token</parmname> for joining the destination channel. It is generated with the <parmname>channelName</parmname> and <parmname>uid</parmname> you set in <parmname>destInfos</parmname>.<ul>
                        <li>If you have not enabled the App Certificate, set this parameter as the default value <codeph><ph keyref="NULL" /></codeph>, which means the SDK applies the App ID.</li>
                        <li>If you have enabled the App Certificate, you must use the <parmname>token</parmname> generated with the <parmname>channelName</parmname> and <parmname>uid</parmname>.</li>
                        </ul> </li>
                    </ul> </p>
                </pd>
            </plentry>
            <plentry props="cpp framework">
                <pt>destCount</pt>
                <pd>The number of destination channels. The default value is 0, and the value range is from 0 to 4. Ensure that the value of this parameter corresponds to the number of <apiname keyref="ChannelMediaInfo" /> structs you define in<parmname> destInfo</parmname>.</pd>
            </plentry>
            </parml> </section>
    </refbody>
</reference>