<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE reference PUBLIC "-//OASIS//DTD DITA Reference//EN" "reference.dtd">
<reference id="api_irtcengineex_enablecontentinspectex">
    <title><ph keyref="enableContentInspectEx"/></title>
    <shortdesc id="short"><ph id="shortdesc">Enables or disables video screenshot and upload.</ph></shortdesc>
    <prolog>
        <metadata>
            <keywords>
                <indexterm keyref="enableContentInspectEx"/>
            </keywords>
        </metadata>
    </prolog>
    <refbody>
        <section id="prototype">
            <p outputclass="codeblock">
            <codeblock props="android" outputclass="language-java">public abstract int enableContentInspectEx(
      boolean enabled, ContentInspectConfig config, RtcConnection connection);</codeblock>
            <codeblock props="ios mac" outputclass="language-objectivec">- (int)enableContentInspectEx:(BOOL)enabled config:(AgoraContentInspectConfig* _Nonnull)config connection:(AgoraRtcConnection * _Nonnull)connection NS_SWIFT_NAME(enableContentInspectEx(_:config:connection:));</codeblock>
            <codeblock props="cpp unreal bp" outputclass="language-cpp">virtual int enableContentInspectEx(bool enabled, const media::ContentInspectConfig &amp;config, const RtcConnection&amp; connection) = 0;</codeblock>
            <codeblock props="unity cs" outputclass="language-csharp">public abstract int EnableContentInspectEx(bool enabled, ContentInspectConfig config, RtcConnection connection);</codeblock>
            <codeblock props="electron rn" outputclass="language-typescript">abstract enableContentInspectEx(
    enabled: boolean,
    config: ContentInspectConfig,
    connection: RtcConnection
  ): number;</codeblock>
            <codeblock props="flutter" outputclass="language-dart">Future&lt;void&gt; enableContentInspectEx(
    {required bool enabled,
    required ContentInspectConfig config,
    required RtcConnection connection});</codeblock> </p>
        </section>
        <section id="detailed_desc">
            <title>Details</title>
            <dl outputclass="since">
            <dlentry props="native">
                <dt>Since</dt>
                <dd>v4.2.3</dd>
            </dlentry>
            </dl>
            <p>This method can take screenshots for multiple video streams and upload them. When video screenshot and upload function is enabled, the SDK takes screenshots and uploads videos sent by local users based on the type and frequency of the module you set in <xref keyref="ContentInspectConfig"/>. After video screenshot and upload, the Agora server sends the callback notification to your app server in HTTPS requests and sends all screenshots to the third-party cloud storage service.</p>
            <note>Before calling this method, ensure that you have contacted <xref keyref="ticket-link"/> to activate the video screenshot upload service.</note>
        </section>
        <section id="parameters">
            <title>Parameters</title>
            <parml>
            <plentry conkeyref="enableContentInspect/enabled">
                <pt/>
                <pd/>
            </plentry>
            <plentry conkeyref="enableContentInspect/config">
                <pt/>
                <pd/>
            </plentry>
            <plentry conkeyref="joinChannelEx/connection">
                <pt/>
                <pd/>
            </plentry>
            </parml> </section>
        <section id="return_values">
            <title><ph keyref="return-section-title"/></title>
            <p props="flutter">When the method call succeeds, there is no return value; when fails, the <xref keyref="AgoraRtcException"/> exception is thrown. You need to catch the exception and handle it accordingly. <ph props="cn">See <xref keyref="error-code-link"/> for details and resolution suggestions.</ph></p>
            <ul props="native unreal bp unity rn electron cs">
            <li>0: Success.</li>
            <li>&lt; 0: Failure. <ph props="cn">See <xref keyref="error-code-link"/> for details and resolution suggestions.</ph></li>
            </ul></section>
        </refbody>
</reference>
