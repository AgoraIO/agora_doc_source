<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE reference PUBLIC "-//OASIS//DTD DITA Reference//EN" "reference.dtd">
<reference id="callback_ivideoframeobserver_onrendervideoframeex">
    <title><ph keyref="onRenderVideoFrameEx"/></title>
    <shortdesc id="short"><ph id="shortdesc">Gets the video frame from multiple channels.</ph></shortdesc>
    <prolog>
        <metadata>
            <keywords>
                <indexterm keyref="onRenderVideoFrameEx"/>
            </keywords>
        </metadata>
    </prolog>
    <refbody>
        <section id="prototype">
            <p outputclass="codeblock">
            <codeblock props="android" outputclass="language-java"/>
            <codeblock props="ios mac" outputclass="language-objectivec"/>
            <codeblock props="cpp" outputclass="language-cpp">virtual bool onRenderVideoFrameEx(const char *channelId,
     unsigned int uid,
     VideoFrame&amp; videoFrame)
     { return true; }</codeblock>
            <codeblock props="electron" outputclass="language-typescript"/>
            <codeblock props="unity" outputclass="language-csharp">public virtual bool OnRenderVideoFrameEx(string channelId, uint uid, VideoFrame videoFrame)
        {
            return true;
        }</codeblock>
            <codeblock props="rn" outputclass="language-typescript"/>
            <codeblock props="flutter" outputclass="language-dart"/> </p>
        </section>
        <section id="detailed_desc">
            <p>After you successfully register the video frame observer, if you set the return value of <xref keyref="isMultipleChannelFrameWanted_IVideoFrameObserver"/> as <codeph><ph keyref="true"/></codeph>, the SDK triggers this callback each time it receives a video frame from any of the channel.</p>
            <p>You can process the video data retrieved from this callback according to your scenario, and send the processed data back to the SDK using the <parmname>videoFrame</parmname> parameter in this callback.</p>
            <note type="attention">This callback does not support sending RGBA video data back to the SDK.</note> </section>
        <section id="parameters">
            <title>Parameters</title>
            <parml>
            <plentry>
                <pt>channelId</pt>
  <pd>The channel ID of this video frame.</pd>
            </plentry>
            <plentry>
                <pt>uid</pt>
  <pd>The ID of the user sending this video frame.</pd>
            </plentry>
            <plentry conkeyref="onCaptureVideoFrame/videoframe">
                <pt/>
                <pd/>
            </plentry>
            </parml> </section>
        <section id="return_values">
            <title>Returns</title>
            <p>Whether to send this video frame to the SDK if post-processing fails:<ul id="ul_mg4_vsg_s4b">
  <li><codeph><ph keyref="true"/></codeph>: Send the video frame.</li>
  <li><codeph><ph keyref="false"/></codeph>: Do not send the video frame.</li>
            </ul></p>
        </section>
    </refbody>
</reference>
