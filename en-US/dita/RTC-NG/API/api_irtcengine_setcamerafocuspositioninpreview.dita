<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE reference PUBLIC "-//OASIS//DTD DITA Reference//EN" "reference.dtd">
<reference id="api_irtcengine_setcamerafocuspositioninpreview">
    <title><ph keyref="setCameraFocusPositionInPreview" /></title>
    <shortdesc id="short"><ph id="shortdesc">Sets the camera manual focus position.</ph></shortdesc>
    <prolog>
        <metadata>
            <keywords>
                <indexterm keyref="setCameraFocusPositionInPreview" />
            </keywords>
        </metadata>
    </prolog>
    <refbody>
        <section id="prototype">
            <p outputclass="codeblock">
            <codeblock props="android" outputclass="language-java">public abstract int setCameraFocusPositionInPreview(float positionX, float positionY);</codeblock>
            <codeblock props="ios mac" outputclass="language-objectivec">- (BOOL)setCameraFocusPositionInPreview:(CGPoint)position;</codeblock>
            <codeblock props="cpp unreal bp" outputclass="language-cpp">virtual int setCameraFocusPositionInPreview(float positionX, float positionY) = 0;
</codeblock>
            <codeblock props="electron" outputclass="language-typescript">abstract setCameraFocusPositionInPreview(
    positionX: number,
    positionY: number
  ): number;</codeblock>
            <codeblock props="unity cs" outputclass="language-csharp">public abstract int SetCameraFocusPositionInPreview(float positionX, float positionY);</codeblock>
            <codeblock props="rn" outputclass="language-typescript">abstract setCameraFocusPositionInPreview(
    positionX: number,
    positionY: number
  ): number;</codeblock>
            <codeblock props="flutter" outputclass="language-dart">Future&lt;void&gt; setCameraFocusPositionInPreview(
    {required double positionX, required double positionY});</codeblock>
            <codeblock props="reserve" outputclass="language-cpp" /></p>
        </section>
        <section id="detailed_desc">
            <title>Details</title>
            <p>This method must be called after the camera is turned on, such as calling after <xref keyref="startPreview" props="apple" /><xref keyref="startPreview2" props="android cpp framework" /> and <xref keyref="enableVideo" />. After a successful method call, the SDK triggers the <xref keyref="onCameraFocusAreaChanged" /> callback.</p>
            <note type="attention" props="cpp unreal bp unity flutter cs">This method is for Android and iOS only.</note> </section>
        <section id="parameters">
            <title>Parameters</title>
            <parml>
            <plentry props="cpp unreal bp android flutter unity rn cs">
                <pt>positionX</pt>
                <pd>The horizontal coordinate of the touchpoint in the view.</pd>
            </plentry>
            <plentry props="cpp unreal bp android flutter unity rn cs">
                <pt>positionY</pt>
                <pd>The vertical coordinate of the touchpoint in the view.</pd>
            </plentry>
            <plentry props="ios mac">
                <pt>position</pt>
                <pd>The coordinate of the touchpoint in the view.</pd>
            </plentry>
            </parml> </section>
        <section id="return_values">
            <title><ph keyref="return-section-title" /></title>
            <p props="flutter">When the method call succeeds, there is no return value; when fails, the <xref keyref="AgoraRtcException" /> exception is thrown; and you need to catch the exception and handle it accordingly.</p>
            <ul>
            <li props="native unreal bp unity rn cs">0: Success.</li>
            <li>&lt; 0: Failure.</li>
            </ul> </section>
    </refbody>
</reference>