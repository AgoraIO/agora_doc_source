<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE reference PUBLIC "-//OASIS//DTD DITA Reference//EN" "reference.dtd">
<reference id="api_irtcengineex_pauseallchannelmediarelayex">
    <title><ph keyref="pauseAllChannelMediaRelayEx" /></title>
    <shortdesc id="short"><ph id="shortdesc">Pauses the media stream relay to all destination channels.</ph></shortdesc>
    <prolog>
        <metadata>
            <keywords>
                <indexterm keyref="pauseAllChannelMediaRelayEx" />
            </keywords>
        </metadata>
    </prolog>
    <refbody>
        <section id="prototype">
            <p outputclass="codeblock">
            <codeblock props="android" outputclass="language-java">public abstract int pauseAllChannelMediaRelayEx(RtcConnection connection);</codeblock>
            <codeblock props="ios mac" outputclass="language-objectivec">- (int)pauseAllChannelMediaRelayEx:(AgoraRtcConnection * _Nonnull)connection NS_SWIFT_NAME(pauseAllChannelMediaRelayEx(_:));</codeblock>
            <codeblock props="cpp" outputclass="language-cpp">virtual int pauseAllChannelMediaRelayEx(const RtcConnection&amp; connection) = 0;</codeblock>
            <codeblock props="electron" outputclass="language-typescript">abstract pauseAllChannelMediaRelayEx(connection: RtcConnection): number;</codeblock>
            <codeblock props="unity" outputclass="language-csharp">public abstract int PauseAllChannelMediaRelayEx(RtcConnection connection);</codeblock>
            <codeblock props="rn" outputclass="language-typescript">abstract pauseAllChannelMediaRelayEx(connection: RtcConnection): number;</codeblock>
            <codeblock props="flutter" outputclass="language-dart">Future&lt;void&gt; pauseAllChannelMediaRelayEx(RtcConnection connection);</codeblock>
            <codeblock props="reserve" outputclass="language-cpp" /></p>
        </section>
        <section id="detailed_desc">
            <p>After the cross-channel media stream relay starts, you can call this method to pause relaying media streams to all destination channels; after the pause, if you want to resume the relay, call <xref keyref="resumeAllChannelMediaRelay" />.</p>
            <p>After a successful method call, the SDK triggers the <xref keyref="onChannelMediaRelayEvent" /> callback to report whether the media stream relay is successfully paused.</p>
            <note type="attention">Call this method after <xref keyref="startChannelMediaRelayEx" />.</note> </section>
        <section id="parameters">
            <title>Parameters</title>
            <parml>
            <plentry conkeyref="joinChannelEx/connection">
                <pt />
                <pd />
            </plentry>
            </parml> </section>
        <section id="return_values" props="native electron unity rn">
            <title>Returns</title>
            <ul>
            <li>0: Success.</li>
            <li>&lt; 0: Failure.</li>
            </ul> </section>
    </refbody>
</reference>