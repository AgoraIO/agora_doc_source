<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE reference PUBLIC "-//OASIS//DTD DITA Reference//EN" "reference.dtd">
<reference id="callback_iaudioframeobserverbase_getrecordaudioparams">
    <title><ph keyref="getRecordAudioParams"/></title>
    <shortdesc id="short"><ph id="shortdesc">Sets the audio format for the <xref keyref="onRecordAudioFrame"/> callback.</ph></shortdesc>
    <prolog>
        <metadata>
            <keywords>
                <indexterm keyref="getRecordAudioParams"/>
            </keywords>
        </metadata>
    </prolog>
    <refbody>
        <section id="prototype">
            <p outputclass="codeblock">
            <codeblock props="android" outputclass="language-java">public abstract AudioParams getRecordAudioParams();</codeblock>
            <codeblock props="ios mac" outputclass="language-objectivec">- (AgoraAudioParams* _Nonnull)getRecordAudioParams NS_SWIFT_NAME(getRecordAudioParams());</codeblock>
            <codeblock props="cpp unreal" outputclass="language-cpp">virtual AudioParams getRecordAudioParams() = 0;</codeblock>
         <codeblock props="bp" outputclass="language-cpp">DECLARE_DYNAMIC_MULTICAST_DELEGATE(FGetRecordAudioParams);</codeblock>
            <codeblock props="electron" outputclass="language-typescript"/>
            <codeblock props="unity cs" outputclass="language-csharp">public virtual AudioParams GetRecordAudioParams()
        {
            return new AudioParams();
        }</codeblock>
            <codeblock props="rn" outputclass="language-typescript"/>
           <codeblock props="flutter" outputclass="language-dart"/> 
            <codeblock props="reserve" outputclass="language-cpp"></codeblock></p>
        </section>
        <section id="detailed_desc">
            <p>You need to register the callback when calling the <xref keyref="registerAudioFrameObserver"/> method. After you successfully register the audio observer, the SDK triggers this callback, and you can set the audio format in the return value of this callback.</p>
            <note type="attention">
            <p>The SDK triggers the <apiname keyref="onRecordAudioFrame"/> callback with the <xref keyref="AudioParams"/> calculated sampling interval you set in the return value. The calculation formula is <equation-inline>Sample interval (sec) = <parmname>samplePerCall</parmname>/(<parmname>sampleRate</parmname> × <parmname>channel</parmname>)</equation-inline>.</p>
            <p>Ensure that the sample interval ≥ 0.01 (s).</p>
            </note> </section>
        <section id="return_values">
            <title>Returns</title>
            <p>The captured audio data, see <xref keyref="AudioParams"/>.</p>
        </section>
    </refbody>
</reference>
