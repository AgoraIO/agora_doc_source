<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE reference PUBLIC "-//OASIS//DTD DITA Reference//EN" "reference.dtd">
<reference id="api_imediaplayercachemanager_removeoldcache">
    <title><ph keyref="removeOldCache" /></title>
    <shortdesc id="short"><ph id="shortdesc">Deletes a cached media file that is the least recently used.</ph></shortdesc>
    <prolog>
        <metadata>
            <keywords>
                <indexterm keyref="removeOldCache" />
            </keywords>
        </metadata>
    </prolog>
    <refbody>
        <section id="prototype">
            <p outputclass="codeblock">
            <codeblock props="android" outputclass="language-java">int removeOldCache();</codeblock>
            <codeblock props="ios mac" outputclass="language-objectivec">- (int)removeOldCache;</codeblock>
            <codeblock props="cpp" outputclass="language-cpp">virtual int removeOldCache() = 0;</codeblock>
            <codeblock props="electron" outputclass="language-typescript">abstract removeOldCache(): number;</codeblock>
            <codeblock props="unity" outputclass="language-csharp">public abstract int RemoveOldCache();</codeblock>
            <codeblock props="rn" outputclass="language-typescript">abstract removeOldCache(): number;</codeblock>
            <codeblock props="flutter" outputclass="language-dart">Future&lt;void&gt; removeOldCache();</codeblock>
            <codeblock props="reserve" outputclass="language-cpp" /></p>
        </section>
        <section id="detailed_desc">
            <p>You can call this method to delete a cached media file when the storage space for the cached files is about to reach its limit. After you call this method, the SDK deletes the cached media file that is least used.</p>
            <note>
            <p>The cached media file currently being played will not be deleted.</p>
            </note> </section>
        <section conkeyref="removeAllCaches/return_values" props="native electron unity rn"> </section>
    </refbody>
</reference>