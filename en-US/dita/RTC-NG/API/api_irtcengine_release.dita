<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE reference PUBLIC "-//OASIS//DTD DITA Reference//EN" "reference.dtd">
<reference id="api_irtcengine_release">
    <title><ph keyref="release"/></title>
    <shortdesc id="short"><ph id="shortdesc">Releases the <apiname keyref="IRtcEngine"/> instance.</ph></shortdesc>
    <prolog>
        <metadata>
            <keywords>
                <indexterm keyref="release"/>
            </keywords>
        </metadata>
    </prolog>
    <refbody>
        <section id="prototype">
            <p outputclass="codeblock">
            <codeblock props="android" outputclass="language-java">public static synchronized void destroy() {
                if (mInstance == null)
                return;
                mInstance.doDestroy();
                mInstance = null;
                System.gc();
                }
            </codeblock>
            <codeblock props="ios mac" outputclass="language-objectivec">+ (void)destroy;</codeblock>
            <codeblock props="cpp unreal" outputclass="language-cpp">virtual void release(bool sync = false) = 0;</codeblock>
         <codeblock props="bp" outputclass="language-cpp">UFUNCTION(BlueprintCallable, Category = &quot;Agora|RtcEngineProxy&quot;)
	void Release(bool sync);</codeblock>
            <codeblock props="electron" outputclass="language-typescript">abstract release(sync?: boolean): void;</codeblock>
            <codeblock props="unity cs" outputclass="language-csharp">public abstract void Dispose(bool sync = false);</codeblock>
            <codeblock props="rn" outputclass="language-typescript">abstract release(sync?: boolean): void;</codeblock>
            <codeblock props="flutter" outputclass="language-dart">Future&lt;void> release({bool sync = false});</codeblock>
            <codeblock props="reserve" outputclass="language-cpp"></codeblock></p>
        </section>
        <section id="detailed_desc">
            <title>Details</title>
            <p>This method releases all resources used by the Agora SDK. Use this method for apps in which users occasionally make voice or video calls. When users do not make calls, you can free up resources for other operations.</p>
            <p props="cpp unreal unity flutter rn electron cs">After a successful method call, you can no longer use any method or callback in the SDK anymore. If you want to use the real-time communication functions again, you must call <xref keyref="createAgoraRtcEngine"/> and <xref keyref="initialize"/> to create a new <apiname keyref="IRtcEngine"/> instance.</p>
            <p props="android ios mac bp">After a successful method call, you can no longer use any method or callback in the SDK anymore. If you want to use the real-time communication functions again, you must call <xref keyref="initialize"/> to create a new <apiname keyref="IRtcEngine"/> instance.</p>
            <note type="attention"><ul>
            <li>This method can be called synchronously. You need to wait for the resource of <apiname keyref="IRtcEngine"/> to be released before performing other operations (for example, create a new <apiname keyref="IRtcEngine"/> object). Therefore, Agora recommends calling this method in the child thread to avoid blocking the main thread.</li>
            <li>Besides, Agora does not recommend you calling <apiname keyref="release"/> in any callback of the SDK. Otherwise, the SDK cannot release the resources until the callbacks return results, which may result in a deadlock.</li></ul></note> </section>
        <section id="parameters" props="cpp unreal bp unity electron flutter rn cs">
            <title>Parameters</title>
            <parml>
            <plentry>
                <pt>sync</pt>
                <pd>
                    <p>Whether the method is called synchronously:</p>
                    <ul>
                    <li><codeph><ph keyref="true"/></codeph>: Synchronous call.</li>
                    <li><codeph><ph keyref="false"/></codeph>: Asynchronous call. Currently this method only supports synchronous calls. Do not set this parameter to this value.</li>
                    </ul> </pd>
            </plentry>
            </parml> </section>
    </refbody>
</reference>
