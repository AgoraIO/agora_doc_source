<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE reference PUBLIC "-//OASIS//DTD DITA Reference//EN" "reference.dtd">
<reference id="api_irtcengine_startscreencapture2">
    <title><ph keyref="startScreenCapture2" /></title>
    <shortdesc id="short"><ph id="shortdesc">Starts screen capture from the specified video source.</ph></shortdesc>
    <prolog>
        <metadata>
            <keywords>
                <indexterm keyref="startScreenCapture2" />
            </keywords>
        </metadata>
    </prolog>
    <refbody>
        <section id="prototype">
            <p outputclass="codeblock">
            <codeblock props="android" outputclass="language-java" />
            <codeblock props="ios mac" outputclass="language-objectivec">
- (int)startScreenCapture:(AgoraVideoSourceType)sourceType config:(AgoraScreenCaptureConfiguration * _Nullable)config NS_SWIFT_NAME(startScreenCapture(_:config:));</codeblock>
            <codeblock props="cpp unreal" outputclass="language-cpp">virtual int startScreenCapture(VIDEO_SOURCE_TYPE sourceType, const ScreenCaptureConfiguration&amp; config) = 0;</codeblock>
         <codeblock props="bp" outputclass="language-cpp">UFUNCTION(BlueprintCallable, Category = &quot;Agora|RtcEngineProxy&quot;)
	int StartScreenCaptureBySourceType(EVIDEO_SOURCE_TYPE sourceType, const FScreenCaptureConfiguration&amp; config);</codeblock>
            <codeblock props="electron" outputclass="language-typescript">abstract startScreenCaptureBySourceType(
    sourceType: VideoSourceType,
    config: ScreenCaptureConfiguration
  ): number;</codeblock>
            <codeblock props="unity cs" outputclass="language-csharp">public abstract int StartScreenCapture(VIDEO_SOURCE_TYPE sourceType, ScreenCaptureConfiguration config);</codeblock>
            <codeblock props="rn" outputclass="language-typescript"/>
            <codeblock props="flutter" outputclass="language-dart">Future&lt;void> startScreenCaptureBySourceType(
      {required VideoSourceType sourceType,
      required ScreenCaptureConfiguration config});</codeblock>
            <codeblock props="reserve" outputclass="language-cpp"></codeblock></p>
        </section>
        <section id="detailed_desc" deliveryTarget="details" otherprops="no-title">
            <dl outputclass="since">
            <dlentry props="native">
                <dt>Since</dt>
                <dd>v4.2.0</dd>
            </dlentry>
            </dl>
            <note type="attention">This method applies to the macOS and Windows only.</note>
        </section>
        <section id="scenario" deliveryTarget="details">
            <title>Applicable scenarios</title>
            <p>In the screen sharing scenario, you need to call this method to start capturing the screen video stream.</p>
            <p>The SDK supports a series of methods for screen capturing, with the following distinctions between them. Please choose according to the actual scenario:<ul>
                <li><ph props="cpp unreal bp unity flutter"><xref keyref="startScreenCapture"/>/</ph><xref keyref="startScreenCaptureByDisplayId"/>/<xref keyref="startScreenCaptureByWindowId"/>: Only supports capturing a single screen or window, suitable for scenarios where only a single screen is shared.</li>
                <li><xref keyref="startScreenCapture2"/>: Supports specifying multiple video sources to capture multiple screen sharing streams, used for local video mixing or multi-channel scenarios.</li></ul></p>
        </section>
        <section id="timing" deliveryTarget="details" conkeyref="startScreenCapture/timing">
            <title/>
        </section>        
        <section id="restriction" deliveryTarget="details">
            <title>Restrictions</title>
            <ul>
                <li>If you start screen capture by calling this method, you need to call <xref keyref="stopScreenCapture2"/> to stop screen capture.</li>
                <li>On the Windows platform, it supports up to four screen capture video streams.</li>
                <li props="cpp unreal bp flutter unity electron">On the macOS platform, it supports only one screen capture video stream.</li></ul>
        </section>
        <section id="parameters" deliveryTarget="details">
            <title>Parameters</title>
            <parml>
            <plentry>
                <pt>sourceType</pt>
                <pd>The type of the video source. See <xref keyref="VIDEO_SOURCE_TYPE"/>.<note props="cpp unreal bp flutter unity electron" type="attention">On the macOS platform, this parameter can only be set to <ph keyref="VIDEO_SOURCE_SCREEN"/> (2).</note>
                </pd>
            </plentry>
            <plentry>
                <pt>config</pt>
                <pd>The configuration of the captured screen. See <xref keyref="ScreenCaptureConfiguration" />.</pd>
            </plentry>
            </parml> </section>
        <section id="return_values">
            <title><ph keyref="return-section-title"/></title>
            <p props="flutter">When the method call succeeds, there is no return value; when fails, the <xref keyref="AgoraRtcException"/> exception is thrown. You need to catch the exception and handle it accordingly. <ph props="cn">See <xref keyref="error-code-link"/> for details and resolution suggestions.</ph></p>
            <ul props="native unreal bp electron unity cs">
            <li>0: Success.</li>
            <li>&lt; 0: Failure. <ph props="cn">See <xref keyref="error-code-link"/> for details and resolution suggestions.</ph></li>
            </ul> </section>
    </refbody>
</reference>
