<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE reference PUBLIC "-//OASIS//DTD DITA Reference//EN" "reference.dtd">
<reference id="class_userinfo">
    <title><ph keyref="UserInfo" /></title>
    <shortdesc id="short"><ph id="shortdesc">The information of the user.</ph></shortdesc>
    <refbody>
        <section id="prototype">
            <p outputclass="codeblock">
            <codeblock props="android" outputclass="language-java">public class UserInfo {
                    public int uid;
                    public String userAccount;

                    @CalledByNative
                    public UserInfo(int uid, String userAccount) {
                    this.uid = uid;
                    this.userAccount = userAccount;
                    }
                    }</codeblock>
            <codeblock props="unity cs" outputclass="language-csharp">
            public struct UserInfo
    {
        public uint uid;
        public string userAccount;
    }</codeblock>
            <codeblock props="ios mac" outputclass="language-objectivec">__attribute__((visibility("default"))) @interface AgoraUserInfo: NSObject
 @property(assign, nonatomic) NSUInteger uid;
 @property (copy, nonatomic) NSString * _Nullable userAccount;
 @end</codeblock>
            <codeblock props="cpp unreal" outputclass="language-cpp">struct UserInfo {
                    uid_t uid;
                    char userAccount[MAX_USER_ACCOUNT_LENGTH];
                    UserInfo()
                    : uid(0) {
                    userAccount[0] = '&#x5C;0';
                    }
                    };</codeblock>
         <codeblock props="bp" outputclass="language-cpp">USTRUCT(BlueprintType)
struct FUserInfo
{
	GENERATED_BODY()

	UPROPERTY(VisibleAnywhere, BlueprintReadWrite, Category = &quot;Agora|UserInfo&quot;)
	int64 uid;
	UPROPERTY(VisibleAnywhere, BlueprintReadWrite, Category = &quot;Agora|UserInfo&quot;)
	FString userAccount;
};</codeblock>
            <codeblock props="electron" outputclass="language-typescript">export class UserInfo {
  
  uid?: number;
  
  userAccount?: string;
}</codeblock>
            <codeblock props="rn" outputclass="language-typescript">export class UserInfo {
  
  uid?: number;
  
  userAccount?: string;
}</codeblock>
            <codeblock props="flutter" outputclass="language-dart">class UserInfo {
  const UserInfo({this.uid, this.userAccount});

  @JsonKey(name: 'uid')
  final int? uid;
  @JsonKey(name: 'userAccount')
  final String? userAccount;
  factory UserInfo.fromJson(Map&lt;String, dynamic&gt; json) =&gt;
      _$UserInfoFromJson(json);
  Map&lt;String, dynamic&gt; toJson() =&gt; _$UserInfoToJson(this);
}</codeblock>
            <codeblock props="reserve" outputclass="language-cpp"></codeblock></p>
        </section>
        <section id="parameters">
            <title><text conref="../conref/conref_api_metadata.dita#conref_api_metadata/property" /></title>
            <parml>
            <plentry>
                <pt>uid</pt>
                <pd>The user ID.</pd>
            </plentry>
            <plentry>
                <pt>userAccount</pt>
                <pd>User account. <ph props="cpp unreal bp rn unity electron flutter cs">The maximum data length is <xref keyref="MAX_USER_ACCOUNT_LENGTH_TYPE" />.</ph></pd>
            </plentry>
            </parml> </section>
    </refbody>
</reference>