<?xml version='1.0' encoding='UTF-8'?>
<!DOCTYPE reference PUBLIC "-//OASIS//DTD DITA Reference//EN" "reference.dtd">
<reference id="api_irtcengine_setsimulcastconfig">
    <title><ph keyref="setSimulcastConfig"/></title>
    <shortdesc id="short"><ph id="shortdesc">设置多质量层级视频流配置。</ph></shortdesc>
    <prolog>
        <metadata>
            <keywords>
                <indexterm keyref="setSimulcastConfig"/>
            </keywords>
        </metadata>
    </prolog>
    <refbody>
        <section id="prototype">
            <p outputclass="codeblock">
            <codeblock props="android" outputclass="language-java">public abstract int setSimulcastConfig(SimulcastConfig simulcastConfig);</codeblock>
            <codeblock props="hmos" outputclass="language-arkts"/>
            <codeblock props="ios mac" outputclass="language-objectivec">- (int)setSimulcastConfig:(AgoraSimulcastConfig* _Nonnull)simulcastConfig NS_SWIFT_NAME(setSimulcastConfig(_:));</codeblock>
            <codeblock props="cpp unreal" outputclass="language-cpp">virtual int setSimulcastConfig(const SimulcastConfig&amp;amp; simulcastConfig) = 0;</codeblock>
            <codeblock props="bp" outputclass="language-cpp"/>
            <codeblock props="electron" outputclass="language-typescript"/>
            <codeblock props="unity cs" outputclass="language-csharp"/>
            <codeblock props="rn" outputclass="language-typescript"/>
            <codeblock props="flutter" outputclass="language-dart"/> </p>
        </section>
        <section id="detailed_desc" deliveryTarget="details" otherprops="no-title">
            <dl outputclass="since">
            <dlentry props="native">
                <dt>自从：</dt>
                <dd props="native">自 v4.6.0 版本新增。</dd>
                </dlentry>
            </dl>
            <p>你可以调用该方法针对同一个视频源设置多路不同分辨率的视频流。 配置多质量层级视频流后，订阅端可以调用 <xref keyref="setRemoteVideoStreamType"/> 选择接收对应层级的视频流。 该方法支持主播同时发送最多四个层级的视频流：一个主流（最高分辨率）和三个额外的不同质量层级的视频流。</p>
            </section>
        <section id="restriction" deliveryTarget="details">
            <title>Restrictions</title>
            <p>None.</p>
        </section>
        <section id="parameters" deliveryTarget="details">
            <title>Parameters</title>
            <parml>
            <plentry props="native">
                <pt props="android cpp">simulcastConfig</pt>
                <pt props="apple">simulcastConfig</pt>
                <pd props="android">不同质量层级的视频流配置。 See <xref keyref="SimulcastConfig"/>.</pd>
                <pd props="apple">多质量层级视频流的配置。 该配置包含七个层级，从 <ph keyref="STREAM_LAYER_1"/> 到 <ph keyref="STREAM_LOW"/>，最多可同时启用三个层级。 See .<xref keyref="SimulcastConfig"/></pd>
                <pd props="cpp">多质量层级视频流配置，包含从 <ph keyref="STREAM_LAYER_1"/> 到 <ph keyref="STREAM_LOW"/> 的七个层级，最多可同时启用三个层级。 See .<xref keyref="SimulcastConfig"/></pd>
            </plentry>
            </parml> </section>
        <section id="return_values" props="bp cs electron flutter native rn unity unreal">
            <title><ph keyref="return-section-title"/></title>
        <p props="flutter">When the method call succeeds, there is no return value; when fails, the <xref keyref="AgoraRtcException"/> exception is thrown. You need to catch the exception and handle it accordingly. <ph props="cn">See <xref keyref="error-code-link"/> for details and resolution suggestions.</ph></p>
        <ul props="bp cs electron rn unity unreal">
                <li>0: Success.</li>
                <li>&lt; 0: Failure. <ph props="cn">See <xref keyref="error-code-link"/> for details and resolution suggestions.</ph></li>
                </ul>
        <p props="native"><ul>
                        <li>0: Success.</li>
                        <li>&lt; 0: Failure.</li>
                        </ul>
                    </p>
    </section>
        </refbody>
</reference>
