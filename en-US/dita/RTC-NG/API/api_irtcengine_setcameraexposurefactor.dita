<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE reference PUBLIC "-//OASIS//DTD DITA Reference//EN" "reference.dtd">
<reference id="api_irtcengine_setcameraexposurefactor">
    <title><ph keyref="setCameraExposureFactor" /></title>
    <shortdesc id="short"><ph id="shortdesc">Sets the camera exposure value.</ph></shortdesc>
    <prolog>
        <metadata>
            <keywords>
                <indexterm keyref="setCameraExposureFactor" />
            </keywords>
        </metadata>
    </prolog>
    <refbody>
        <section id="prototype">
            <p outputclass="codeblock">
            <codeblock props="android" outputclass="language-java">public abstract int setCameraExposureFactor(int factor);</codeblock>
            <codeblock props="ios mac" outputclass="language-objectivec">
- (CGFloat)setCameraExposureFactor:(CGFloat)exposureFactor NS_SWIFT_NAME(setCameraExposureFactor(_:));</codeblock>
            <codeblock props="cpp unreal bp" outputclass="language-cpp">virtual int setCameraExposureFactor(float factor) = 0;</codeblock>
            <codeblock props="electron" outputclass="language-typescript" />
            <codeblock props="unity cs" outputclass="language-csharp">public abstract int SetCameraExposureFactor(float factor);</codeblock>
            <codeblock props="rn" outputclass="language-typescript">abstract setCameraExposureFactor(factor: number): number;</codeblock>
            <codeblock props="flutter" outputclass="language-dart">Future&lt;void&gt; setCameraExposureFactor(double factor);</codeblock>
            <codeblock props="reserve" outputclass="language-cpp" /></p>
        </section> 
        <section id="detailed_desc">
            <title>Details</title>
            <dl outputclass="since">
            <dlentry props="native">
                <dt>Since</dt>
                <dd>v4.2.2</dd>
            </dlentry>
            </dl>
            <p>Insufficient or excessive lighting in the shooting environment can affect the image quality of video capture. To achieve optimal video quality, you can use this method to adjust the camera's exposure value.</p>
            <note type="attention">
            <ul>
                <li props="cpp unreal bp flutter unity">This method is for Android and iOS only.</li>
                <li id="sequence">You must call this method after <xref keyref="enableVideo" />. The setting result will take effect after the camera is successfully turned on, that is, after the SDK triggers the <xref keyref="onLocalVideoStateChanged" /> callback and returns the local video state as <apiname keyref="LOCAL_VIDEO_STREAM_STATE_CAPTURING" /> (1).</li>
                <li>Before calling this method, Agora recommends calling <xref keyref="isCameraExposureSupported" /> to check whether the current camera supports adjusting the exposure value.</li>
                <li>By calling this method, you adjust the exposure value of the currently active camera, that is, the camera specified when calling <xref keyref="setCameraCapturerConfiguration" />.</li>
            </ul></note>
        </section>
        <section id="parameters">
            <title>Parameters</title>
            <parml>
            <plentry>
                <pt props="ios">exposureFactor</pt>
                <pt props="android cpp unreal bp flutter unity rn">factor</pt>
                <pd>
                    <p>The camera exposure value. The default value is 0, which means using the default exposure of the camera. The larger the value, the greater the exposure. When the video image is overexposed, you can reduce the exposure value; when the video image is underexposed and the dark details are lost, you can increase the exposure value. If the exposure value you specified is beyond the range supported by the device, the SDK will automatically adjust it to the actual supported range of the device.</p>
                    <p props="android">The value range is [-20, 20].</p>
                    <p props="ios">The value range is [-8.0, 8.0].</p>
                    <p props="cpp unreal bp flutter unity rn">On Android, the value range is [-20.0, 20.0]. On iOS, the value range is [-8.0, 8.0].</p>
                </pd>
            </plentry>
            </parml> </section>
        <section id="return_values">
            <title><ph keyref="return-section-title" /></title>
            <p props="flutter">When the method call succeeds, there is no return value; when fails, the <xref keyref="AgoraRtcException" /> exception is thrown; and you need to catch the exception and handle it accordingly.</p>
            <ul props="cpp framework">
            <li props="cpp unreal bp unity rn">0: Success.</li>
            <li>&lt; 0: Failure.</li>
            </ul>
            <p props="ios">Without practical meaning.</p></section>
    </refbody>
</reference>