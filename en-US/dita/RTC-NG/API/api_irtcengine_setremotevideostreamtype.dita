<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE reference PUBLIC "-//OASIS//DTD DITA Reference//EN" "reference.dtd">
<reference id="api_irtcengine_setremotevideostreamtype">
     <title> <ph keyref="setRemoteVideoStreamType" /> </title>
     <shortdesc id="short"><ph id="shortdesc">Sets the stream type of the remote video.</ph></shortdesc>
     <prolog>
          <metadata>
               <keywords>
                    <indexterm keyref="setRemoteVideoStreamType" />
               </keywords>
          </metadata>
     </prolog>
     <refbody>
          <section id="prototype">
               <p outputclass="codeblock">
               <codeblock props="android" outputclass="language-java">public abstract int setRemoteVideoStreamType(int uid, int streamType);</codeblock>
               <codeblock props="ios mac" outputclass="language-objectivec">- (int)setRemoteVideoStream:(NSUInteger)uid
                       type:(AgoraVideoStreamType)streamType;</codeblock>
               <codeblock props="cpp" outputclass="language-cpp">virtual int setRemoteVideoStreamType(uid_t uid, VIDEO_STREAM_TYPE streamType) = 0;</codeblock>
               <codeblock props="electron" outputclass="language-typescript">abstract setRemoteVideoStreamType(
    uid: number,
    streamType: VideoStreamType
  ): number;</codeblock>
               <codeblock props="unity" outputclass="language-csharp">public abstract int SetRemoteVideoStreamType(uint uid, VIDEO_STREAM_TYPE streamType);</codeblock>
               <codeblock props="rn" outputclass="language-typescript">abstract setRemoteVideoStreamType(
    uid: number,
    streamType: VideoStreamType
  ): number;</codeblock>
               <codeblock props="flutter" outputclass="language-dart">Future&lt;void&gt; setRemoteVideoStreamType(
    {required int uid, required VideoStreamType streamType});</codeblock>
            <codeblock props="reserve" outputclass="language-cpp" /></p>
          </section>
          <section id="detailed_desc">
               <p id="desc1">Under limited network conditions, if the publisher has not disabled the dual-stream mode using <codeph><xref keyref="enableDualStreamMode3" />(<ph keyref="false" />)</codeph>, the receiver can choose to receive either the high-quality video stream or the low-quality video stream. The high-quality video stream has a higher resolution and bitrate, and the low-quality video stream has a lower resolution and bitrate.</p>
               <p id="desc2">By default, users receive the high-quality video stream. Call this method if you want to switch to the low-quality video stream. This method allows the app to adjust the corresponding video stream type based on the size of the video window to reduce the bandwidth and resources. The aspect ratio of the low-quality video stream is the same as the high-quality video stream. Once the resolution of the high-quality video stream is set, the system automatically sets the resolution, frame rate, and bitrate of the low-quality video stream.</p>
               <p id="desc4">The SDK enables the low-quality video stream auto mode on the sender by default (not actively sending low-quality video streams). The host at the receiving end can call this method to initiate a low-quality video stream stream request on the receiving end, and the sender automatically switches to the low-quality video stream mode after receiving the request.</p>
               <p id="desc3">The result of this method returns in the <xref keyref="onApiCallExecuted" /> callback.</p>
               <note type="attention">You can call this method either before or after joining a channel. If you call both <apiname keyref="setRemoteVideoStreamType" /> and <xref keyref="setRemoteDefaultVideoStreamType" />, the setting of <apiname keyref="setRemoteVideoStreamType" /> takes effect.</note> </section>
          <section id="parameters">
               <title>Parameters</title>
               <parml>
               <plentry>
                    <pt>uid</pt>
                    <pd>The user ID.</pd>
               </plentry>
               <plentry>
                    <pt>streamType</pt>
                    <pd>
                         <p props="ios mac cpp electron unity flutter rn">The video stream type: <xref keyref="VIDEO_STREAM_TYPE" />.</p>
                         <p props="android">The video stream type:<ul>
                         <li>0: High-quality video stream.</li>
                         <li>1: Low-quality video stream.</li>
                         </ul> </p>
                    </pd>
               </plentry>
               </parml> </section>
          <section id="return_values" props="native unity electron rn">
               <title>Returns</title>
               <ul>
               <li>0: Success.</li>
               <li>&lt; 0: Failure.</li>
               </ul> </section>
     </refbody>
</reference>