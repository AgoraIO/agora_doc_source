<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE reference PUBLIC "-//OASIS//DTD DITA Reference//EN" "reference.dtd">
<reference id="api_irtcengine_setcameraexposureposition">
    <title><ph keyref="setCameraExposurePosition" /></title>
    <shortdesc id="short"><ph id="shortdesc">Sets the camera exposure position.</ph></shortdesc>
    <prolog>
        <metadata>
            <keywords>
                <indexterm keyref="setCameraExposurePosition" />
            </keywords>
        </metadata>
    </prolog>
    <refbody>
        <section id="prototype">
            <p outputclass="codeblock">
            <codeblock props="android" outputclass="language-java">public abstract int setCameraExposurePosition(float positionXinView, float positionYinView);</codeblock>
            <codeblock props="ios mac" outputclass="language-objectivec">- (BOOL)setCameraExposurePosition:(CGPoint)positionInView;</codeblock>
            <codeblock props="cpp unreal bp" outputclass="language-cpp">virtual int setCameraExposurePosition(float positionXinView, float positionYinView) = 0;
</codeblock>
            <codeblock props="electron" outputclass="language-typescript">abstract setCameraExposurePosition(
    positionXinView: number,
    positionYinView: number
  ): number;</codeblock>
            <codeblock props="unity cs" outputclass="language-csharp">public abstract int SetCameraExposurePosition(float positionXinView, float positionYinView);</codeblock>
            <codeblock props="rn" outputclass="language-typescript">abstract setCameraExposurePosition(
    positionXinView: number,
    positionYinView: number
  ): number;</codeblock>
            <codeblock props="flutter" outputclass="language-dart">Future&lt;void&gt; setCameraExposurePosition(
    {required double positionXinView, required double positionYinView});</codeblock>
            <codeblock props="reserve" outputclass="language-cpp"></codeblock></p>
        </section>
        <section id="detailed_desc">
            <title>Details</title>
            <note type="attention">
            <ul><li props="cpp unreal bp unity flutter cs">This method is for Android and iOS only.</li>
            <li conkeyref="setCameraExposureFactor/sequence" />
            <li>After a successful method call, the SDK triggers the <xref keyref="onCameraExposureAreaChanged" /> callback.</li></ul>
            </note>
       </section>
        <section id="parameters">
            <title>Parameters</title>
            <parml>
            <plentry props="cpp unreal bp android flutter unity rn cs">
                <pt>positionXinView</pt>
                <pd>The horizontal coordinate of the touchpoint in the view.</pd>
            </plentry>
            <plentry props="cpp unreal bp android flutter unity rn cs">
                <pt>positionYinView</pt>
                <pd>The vertical coordinate of the touchpoint in the view.</pd>
            </plentry>
            <plentry props="ios mac">
                <pt>positionInView</pt>
                <pd>The horizontal coordinate of the touchpoint in the view.</pd>
            </plentry>
            </parml> </section>
        <section id="return_values">
            <title><ph keyref="return-section-title"/></title>
            <p props="flutter">When the method call succeeds, there is no return value; when fails, the <xref keyref="AgoraRtcException"/> exception is thrown; and you need to catch the exception and handle it accordingly.</p>
            <ul>
            <li props="native unreal bp unity rn cs">0: Success.</li>
            <li>&lt; 0: Failure.</li>
            </ul> </section>
    </refbody>
</reference>