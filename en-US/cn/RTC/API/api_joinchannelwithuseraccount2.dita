<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE reference PUBLIC "-//OASIS//DTD DITA Reference//EN" "reference.dtd">
<reference id="api_joinchannelwithuseraccount2">
    <title><ph keyref="joinChannelWithUserAccount2"/>[2/2]</title>
    <shortdesc id="short"><ph id="shortdesc">Joins the channel with a user account, and configures whether to automatically subscribe to audio or video streams after joining the channel.</ph></shortdesc>
    <prolog>
        <metadata>
   <keywords>
       <indexterm keyref="joinChannelWithUserAccount2" />
   </keywords>
        </metadata>
    </prolog>
    <refbody><section id="prototype">

        <p conref="../conref/conref_rtc_api.dita#apidef/joinChannelWithUserAccount2"/>
        </section>
        <section id="detailed_desc">

   <dl outputclass="since">
       <dlentry>
  <dt>Since</dt>
  <dd>v3.3.0</dd>
       </dlentry>
   </dl>
   <p>This method allows a user to join the channel with the user account. After the user successfully joins the channel, the SDK triggers the following callbacks:<ul>
  <li>The local client: <xref keyref="onLocalUserRegistered"/>, <xref keyref="onJoinChannelSuccess"/> and the <xref keyref="onConnectionStateChanged"></xref>callbacks.</li>
  <li>The remote client: The <xref keyref="onUserJoined"/> callback if the user is in the COMMUNICATION profile, and the <xref keyref="onUserInfoUpdated"/> callback if the user is a host in the LIVE_BROADCASTING profile.</li>
       </ul></p>
   <p>Once the user joins the channel, the user subscribes to the audio and video streams of all the other users in the channel by default, giving rise to usage and billing calculation. If you do not want to subscribe to a specified stream or all remote streams, call the <apiname>mute</apiname> methods accordingly.</p>
   <note type="attention">
       <ul>
  <li>Compared to <xref keyref="joinChannelWithUserAccount1"/>[1/2], this method adds the <parmname>options</parmname> parameter to configure whether to automatically subscribe to all remote audio and video streams in the channel when the user joins the channel. By default, the user subscribes to the audio and video streams of all the other users in the channel, thus incurring all associated usage costs. To unsubscribe, set the <parmname>options</parmname> parameter or call the <apiname>mute</apiname> methods accordingly.</li>
  <li>To ensure smooth communication, use the same parameter type to identify the user. For example, if a user joins the channel with a user ID, then ensure all the other users use the user ID too. The same applies to the user account. If a user joins the channel with the Agora Web SDK, ensure that the uid of the user is set to the same parameter type.</li>
       </ul>
   </note>
        </section>
        <section id="parameters"><title>Parameter</title>
   <parml>
       <plentry conkeyref="joinChannel2/token">
  <pt/>
  <pd/>
       </plentry>
       <plentry conkeyref="joinChannel2/channelID">
  <pt/>
  <pd/>
       </plentry>
       <plentry id="userAccount">
  <pt>userAccount</pt>
      <pd><p>The user account. This parameter is used to identify the user in the channel for real-time audio and video interaction. You need to set and manage user accounts yourself and ensure that each user account in the same channel is unique. The maximum length of this parameter is 255 bytes. Ensure that you set this parameter and do not set it as null<ph keyref="NULL"/>. Supported characters are (89 in total):<ul>
     <li>The 26 lowercase English letters: a to z.</li>
     <li>The 26 uppercase English letters: A to Z.</li>
     <li>All numeric characters: 0 to 9.</li>
     <li>Space</li>
     <li>&quot;!&quot;、&quot;#&quot;、&quot;$&quot;、&quot;%&quot;、&quot;&amp;&quot;、&quot;(&quot;、&quot;)&quot;、&quot;+&quot;、&quot;-&quot;、&quot;:&quot;、&quot;;&quot;、&quot;&lt;&quot;、&quot;=&quot;、&quot;.&quot;、&quot;>&quot;、&quot;?&quot;、&quot;@&quot;、&quot;[&quot;、&quot;]&quot;、&quot;^&quot;、&quot;_&quot;、&quot;{&quot;、&quot;}&quot;、&quot;|&quot;、&quot;~&quot;、&quot;,&quot;</li>
 </ul></p></pd>
       </plentry>
       <plentry conkeyref="joinChannel2/options">
  <pt/>
  <pd/>
       </plentry>
   </parml>
        </section>
        <section conkeyref="joinChannel2/return_values"/>
   </refbody>
</reference>
