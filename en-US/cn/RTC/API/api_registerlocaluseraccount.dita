<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE reference PUBLIC "-//OASIS//DTD DITA Reference//EN" "reference.dtd">
<reference id="api_registerlocaluseraccount">
    <title><ph keyref="registerLocalUserAccount"/></title>
    <shortdesc id="short"><ph id="shortdesc">Registers a user account.</ph></shortdesc>
    <prolog>
        <metadata>
   <keywords>
       <indexterm keyref="registerLocalUserAccount" />
   </keywords>
        </metadata>
    </prolog>
    <refbody><section id="prototype">
        
        <p conref="../conref/conref_rtc_api.dita#apidef/registerLocalUserAccount"/>
        </section>
        <section id="detailed_desc">
   
   <dl outputclass="since">
       <dlentry>
  <dt>Since</dt>
  <dd>v2.8.0</dd>
       </dlentry>
   </dl>
   <p>Once registered, the user account can be used to identify the local user when the user joins the channel. After the registration is successful, the User Account can identify the identity of the local user, and the user can use it to join the channel.</p>
   <p>After successfully registering the User Account, the local will trigger a<xref keyref="onLocalUserRegistered"/> callback to inform the UID and User Account of the local user.</p>
   <p>This method is called synchronously. To join a channel with a user account, you can choose either of the following:<ul>
       <li>First call the<apiname keyref="registerLocalUserAccount"/> method to register the Account, and then call the<apiname keyref="joinChannelWithUserAccount1"/> method to join the channel.</li>
       <li>Call the method directly<apiname keyref="joinChannelWithUserAccount1"/> to join the channel.</li>
   </ul></p>
   <p>The difference between the two methods is that calling in advance<apiname keyref="registerLocalUserAccount"/> can shorten<apiname keyref="joinChannelWithUserAccount1"/> the time to enter the channel.</p>
   <note outputclass="note">
       <ul>
  <li>Ensure that you set the `<parmname>userAccount</parmname>` parameter. Otherwise, this method does not take effect.</li>
  <li>Ensure that the value of the `userAccount` parameter is unique in the channel.</li>
  <li>To ensure smooth communication, use the same parameter type to identify the user. That is, UID or User Account must be used uniformly in the same channel. If a user joins the channel with the Agora Web SDK, ensure that the uid of the user is set to the same parameter type.</li>
       </ul>
   </note>
        </section>
        <section id="parameters"><title>Parameter</title>
   <parml>
       <plentry>
  <pt>appId</pt>
  <pd>The App ID of your Agora project.</pd>
       </plentry>
       <plentry>
  <pt>userAccount</pt>
  <pd><p>The user account. This parameter is used to identify real-time audio and video interaction channels. You need to set up and manage the User Account of the user by yourself, and ensure that the User Account of each user in the same channel is unique. The maximum length of this parameter is 255 bytes. Ensure that you set this parameter and do not set it as null<ph keyref="NULL"/>. Supported character scopes are:<ul>
      <li>The 26 lowercase English letters: a to z.</li>
      <li>The 26 uppercase English letters: A to Z.</li>
      <li>All numeric characters: 0 to 9.</li>
      <li>Space</li>
      <li>&quot;!&quot;、&quot;#&quot;、&quot;$&quot;、&quot;%&quot;、&quot;&amp;&quot;、&quot;(&quot;、&quot;)&quot;、&quot;+&quot;、&quot;-&quot;、&quot;:&quot;、&quot;;&quot;、&quot;&lt;&quot;、&quot;=&quot;、&quot;.&quot;、&quot;>&quot;、&quot;?&quot;、&quot;@&quot;、&quot;[&quot;、&quot;]&quot;、&quot;^&quot;、&quot;_&quot;、&quot;{&quot;、&quot;}&quot;、&quot;|&quot;、&quot;~&quot;、&quot;,&quot;</li>
  </ul></p></pd>
       </plentry>
   </parml>
        </section>
        <section id="return_values">
   <title>Returns</title>
   <ul>
       <li>0: Success.</li>
       <li>&lt; 0: Failure.</li>
   </ul>
        </section></refbody>
</reference>
