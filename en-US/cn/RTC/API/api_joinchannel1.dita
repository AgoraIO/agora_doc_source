<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE reference PUBLIC "-//OASIS//DTD DITA Reference//EN" "reference.dtd">
<reference id="api_joinchannel">
    <title><ph keyref="joinChannel1"/><ph>[1/2]</ph></title>
    <shortdesc id="short"><ph id="shortdesc">Allows a user to join a channel.</ph></shortdesc>
    <prolog>
        <metadata>
   <keywords>
       <indexterm keyref="joinChannel1"/>
   </keywords>
        </metadata>
    </prolog>
    <refbody>
        <section id="prototype">
   
   <p conref="../conref/conref_rtc_api.dita#apidef/joinChannel1"/>
        </section>
        <section id="detailed_desc">
   
   <p>This method joins an AgoraRTC channel.</p>
   <p>Users in the same channel can talk to each other, and multiple users in the same channel can start a group chat.</p>
   <p>A successful call of this method triggers the following callbacks<xref keyref="onJoinChannelSuccess"/>: The local client: .The remote client: , if the user joining the channel is in the COMMUNICATION profile, or is a host in the LIVE_BROADCASTING<xref keyref="onUserJoined"/> profile.<xref keyref="onConnectionStateChanged"></xref></p>
   <p>When the connection between the client and Agora&apos;s server is interrupted due to poor network conditions, the SDK tries reconnecting to the server. When the local client successfully rejoins the channel, the SDK triggers the callback on the local client<xref
  keyref="onRejoinChannelSuccess"/>.</p>
   <note outputclass="note">Once the user joins the channel, the user subscribes to the audio and video streams of all the other users in the channel by default, giving rise to usage and billing calculation. If you do not want to subscribe to a specified stream or all remote streams, call the <apiname>mute</apiname> methods accordingly.</note>
        </section>
        <section id="parameters">
   <title>Parameter</title>
   <parml>
    <plentry conkeyref="joinChannel2/token">
        <pt/>
        <pd/>
    </plentry>
       <plentry>
  <pt><ph keyref="channelID"/></pt>
  <pd>
      <p>The channel name. This parameter signifies the channel in which users engage in real-time audio and video interaction. Under the premise of the same App ID, users who fill in the same <codeph>channelId</codeph> enter the same channel for audio and video interaction. The string length must be less than 64 bytes. Supported characters:<ul id="ul_lx4_nrc_h4b">
     <li>All lowercase English letters: a to z.</li>
     <li>All uppercase English letters: A to Z.</li>
     <li>All numeric characters: 0 to 9.</li>
     <li>Space</li>
     <li>&quot;!&quot;、&quot;#&quot;、&quot;$&quot;、&quot;%&quot;、&quot;&amp;&quot;、&quot;(&quot;、&quot;)&quot;、&quot;+&quot;、&quot;-&quot;、&quot;:&quot;、&quot;;&quot;、&quot;&lt;&quot;、&quot;=&quot;、&quot;.&quot;、&quot;>&quot;、&quot;?&quot;、&quot;@&quot;、&quot;[&quot;、&quot;]&quot;、&quot;^&quot;、&quot;_&quot;、&quot;{&quot;、&quot;}&quot;、&quot;|&quot;、&quot;~&quot;、&quot;,&quot;</li>
 </ul></p>
  </pd>
       </plentry>
       <plentry>
  <pt><ph keyref="info"/></pt>
  <pd>
      <p>(Optional) Pointer to additional information about the channel. This parameter can be set to NULL or contain channel related information. Other users in the channel will not receive this message.</p>
  </pd>
       </plentry>
       <plentry>
  <pt><ph keyref="uid"/></pt>
  <pd>User ID This parameter is used to identify the user in the real-time audio and video interaction channel. You need to set and manage user IDs yourself, and make sure that each user ID in the same channel is unique. User ID. A 32-bit unsigned integer with a value ranging from 1 to 232-1. The uid must be <sup></sup>unique. If a uid is not assigned (or set to 0), the SDK assigns and<apiname keyref="onJoinChannelSuccess"/> returns a uid in the callback. Your application must record and maintain the returned uid, because the SDK does not do so.</pd>
       </plentry>
   </parml>
        </section>
        <section id="return_values">
   <title>Returns</title>
   <ul>
       <li>0(ERR_OK): Success.</li>
       <li>&lt; 0: Failure.<ul>
      <li>-2 (ERR_INVALID_ARGUMENT): The parameter is invalid.</li>
      <li>-3(ERR_NOT_READY): The SDK fails to be initialized. You can try re-initializing the SDK.</li>
      <li>-5(ERR_REFUSED): The request is rejected. This may be caused by the following:<ul>
     <li>You have created an<xref keyref="IChannel"/> object with the same channel name.</li>
 <li>You have<apiname keyref="IChannel"/> joined and published a stream in a channel<apiname keyref="IChannel"/> created by the object.</li></ul></li>
  <li>-7(ERR_NOT_INITIALIZED): The SDK is not initialized before calling this method. Initialize the instance before calling<xref keyref="IRtcEngine"/> this method.</li>
  </ul></li>
   </ul>
        </section>
    </refbody>
</reference>
