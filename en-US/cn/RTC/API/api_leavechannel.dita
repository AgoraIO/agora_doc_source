<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE reference PUBLIC "-//OASIS//DTD DITA Reference//EN" "reference.dtd">
<reference id="api_leavechannel">
    <title><ph keyref="leaveChannel"/></title>
    <shortdesc id="short"><ph id="shortdesc">Leaves a channel. </ph><ph id="shortdesc">Leaves a channel.</ph></shortdesc>
    <prolog>
        <metadata>
   <keywords>
       <indexterm keyref="leaveChannel" />
   </keywords>
        </metadata>
    </prolog>
    <refbody><section id="prototype">
        
        <p conref="../conref/conref_rtc_api.dita#apidef/leaveChannel"/>
        </section>
        <section id="detailed_desc">
   
   <p>This method releases all resources related to the session. This method releases all resources related to the session. This method call is asynchronous, and the user has not left the channel when the method call returns. This method call is asynchronous, and the user has not left the channel when the method call returns.</p>
   <p>After calling <apiname keyref="joinChannel1"/>, you must call <apiname keyref="leaveChannel"/> to end the call, otherwise the next call cannot be started. After calling <apiname keyref="joinChannel1"/>, you must call <apiname keyref="leaveChannel"/> to end the call, otherwise the next call cannot be started.</p>
   <p>A successful call of this method triggers the following callbacks: A successful call of this method triggers the following callbacks:<ul id="ul_enf_q2p_lpb">
                    <li>The local client:<xref keyref="onLeaveChannel"/> . The local client:<xref keyref="onLeaveChannel"/> .</li>
                    <li>The remote client: , if the user joining the channel is in the communication profile, or is a host in the live streaming profile<xref keyref="onUserOffline"/>. The remote client: , if the user joining the channel is in the communication profile, or is a host in the live streaming profile<xref keyref="onUserOffline"/>.</li>
                </ul></p>
   <note type="attention">
       <ul>
  <li>If you call the <apiname keyref="leaveChannel"/>method immediately after calling<xref keyref="release"/>, the SDK will not be able to trigger the<apiname keyref="onLeaveChannel"/> callback. If you call the <apiname keyref="leaveChannel"/>method immediately after calling<xref keyref="release"/>, the SDK will not be able to trigger the<apiname keyref="onLeaveChannel"/> callback.</li>
  <li>If you call the method during the bypass push<apiname keyref="leaveChannel"/>, the SDK will automatically call<xref keyref="removePublishStreamUrl"/> the method. If you call the method during the bypass push<apiname keyref="leaveChannel"/>, the SDK will automatically call<xref keyref="removePublishStreamUrl"/> the method.</li>
       </ul>
   </note>
        </section>
        <section id="return_values">
   <title>Returns Returns</title>
   <ul>
       <li>0(ERR_OK): Success. 0(ERR_OK): Success.</li>
       <li>&lt; 0: Failure. &lt; 0: Failure.<ul>
  <li>-1(ERR_FAILED): A general error occurs (no specified reason). -1(ERR_FAILED): A general error occurs (no specified reason).</li>
  <li>-2 (ERR_INVALID_ARGUMENT): The parameter is invalid. -2 (ERR_INVALID_ARGUMENT): The parameter is invalid.</li>
  <li>-7(ERR_NOT_INITIALIZED): The SDK is not initialized. -7(ERR_NOT_INITIALIZED): The SDK is not initialized.</li>
       </ul></li>
   </ul>
        </section></refbody>
</reference>
