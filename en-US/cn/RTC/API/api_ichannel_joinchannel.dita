<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE reference PUBLIC "-//OASIS//DTD DITA Reference//EN" "reference.dtd">
<reference id="api_ichannel_joinchannel">
    <title><ph keyref="IChannel_joinChannel"/></title>
    <shortdesc id="short"><ph id="shortdesc">The UID joins the channel and starts sending audio or video streams.</ph></shortdesc>
    <prolog>
        <metadata>
   <keywords>
       <indexterm keyref="IChannel_joinChannel" />
   </keywords>
        </metadata>
    </prolog>
    <refbody><section id="prototype">
        
        <p conref="../conref/conref_rtc_api.dita#apidef/IChannel_joinChannel"/>
        </section>
        <section id="detailed_desc">
   
   <p>This method<xref keyref="IRtcEngine"/> has the following differences from the<apiname keyref="joinChannel1"/> method under the class:</p>
   <table id="table_diff">
       <tgroup cols="2">
  <colspec colnum="1" colname="col1"/>
  <colspec colnum="2" colname="col2"/>
  <tbody>
      <row>
 <entry><apiname keyref="IChannel_joinChannel">IChannel::joinChannel</apiname></entry>
 <entry><apiname keyref="joinChannel1">IRtcEngine::joinChannel</apiname></entry>
      </row>
      <row>
 <entry>The <parmname>channelId </parmname>parameter needs to be <parmname>channel</parmname>-specific. Because<xref keyref="IChannel"/> the channelId was specified when the object was<parmname></parmname> created.</entry>
 <entry>You need to fill in the channelId that can identify the <parmname>channel</parmname>.</entry>
      </row>
      <row>
 <entry>By creating multiple<apiname keyref="IChannel"/> objects and<apiname keyref="IChannel_joinChannel"/> calling the methods of the corresponding objects, you can join multiple channels at the same time.</entry>
 <entry>Allows a user to join a channel.</entry>
      </row>
      <row>
 <entry>After joining a channel through this method, the SDK will not publish local audio and video streams to this channel by default, and you need to call<xref
keyref="IChannel_publish"/> the method to publish.</entry>
 <entry>After joining a channel through this method, the SDK will publish audio and video streams to this channel by default.</entry>
      </row>
  </tbody>
       </tgroup>
   </table>
   <p>Once the user joins the channel, the user subscribes to the audio and video streams of all the other users in the channel by default, giving rise to usage and billing calculation. If you do not want to subscribe to a specified stream or all remote streams, call the <codeph>mute</codeph> methods accordingly.</p>
   <note type="attention">
       <ul>
  <li>Users that input the same channel name join the same channel.</li>
  <li>We recommend using different UIDs in different channels.</li>
  <li>If you want to join the same channel from different devices, ensure that the user IDs in all devices are different.</li>
       </ul>
   </note>
        </section>
        <section id="parameters"><title>Parameter</title>
   <parml>
       <plentry conkeyref="joinChannel2/token">
  <pt/>
  <pd/>
       </plentry>
       <plentry conkeyref="joinChannel2/info">
  <pt/>
  <pd/>
       </plentry>
       <plentry>
  <pt><ph keyref="uid"/></pt>
  <pd>User ID This parameter is used to identify the user in the channel for real-time audio and video interaction. You need to set and manage user IDs yourself, and ensure that each user ID in the same channel is unique. If a uid is not assigned<sup></sup> (or set to 0), the SDK assigns and returns a uid in the<xref keyref="IChannel_onJoinChannelSuccess"/> callback. Your application must record and maintain the returned uid, because the SDK does not do so.</pd>
       </plentry>
       <plentry conkeyref="joinChannel2/options">
  <pt/>
  <pd/>
       </plentry>
   </parml>
        </section>
        <section id="return_values" conkeyref="joinChannel2/return_values"/></refbody>
</reference>
