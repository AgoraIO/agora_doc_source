<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE reference PUBLIC "-//OASIS//DTD DITA Reference//EN" "reference.dtd">
<reference id="api_registerpacketobserver">
    <title><ph keyref="registerPacketObserver"/></title>
    <shortdesc id="short"><ph id="shortdesc">Registers a packet observer.</ph></shortdesc>
    <prolog>
        <metadata>
   <keywords>
       <indexterm keyref="registerPacketObserver" />
   </keywords>
        </metadata>
    </prolog>
    <refbody><section id="prototype">
        
        <p conref="../conref/conref_rtc_api.dita#apidef/registerPacketObserver"/>
        </section>
        <section id="detailed_desc">
   
   <p>This method registers the Packet Observer. The Agora SDK allows your application to register a packet<xref keyref="IPacketObserver"/> observer to receive callbacks for voice or video packet transmission.</p>
   <note outputclass="note">
       <ul>
  <li>The size of the packet sent to the network after processing should not exceed 1200 bytes, otherwise, the packet may fail to be sent.</li>
  <li>Ensure that both receivers and senders call this method, otherwise, you may meet?undefined behaviors such as no voice and black screen.</li>
  <li>When you use CDN live streaming, recording or storage functions, Agora doesn&apos;t recommend calling this method.</li>
  <li>Call this method before joining a channel.</li>
       </ul>
   </note>
        </section>
        <section id="parameters"><title>Parameter</title>
   <parml>
       <plentry>
  <pt>observer</pt>
  <pd><xref keyref="IPacketObserver"/> ã€‚</pd>
       </plentry>
   </parml>
        </section>
        <section id="return_values">
   <title>Returns</title>
   <ul>
       <li>0: Success.</li>
       <li>&lt; 0: Failure.</li>
   </ul>
        </section></refbody>
</reference>
