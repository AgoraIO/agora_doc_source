<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE reference PUBLIC "-//OASIS//DTD DITA Reference//EN" "reference.dtd">
<reference id="api_joinchannelwithuseraccount1">
    <title><ph keyref="joinChannelWithUserAccount1"/>[1/2]</title>
    <shortdesc id="short"><ph id="shortdesc">Allows a user to join a channel.</ph></shortdesc>
    <prolog>
        <metadata>
   <keywords>
       <indexterm keyref="joinChannelWithUserAccount1" />
   </keywords>
        </metadata>
    </prolog>
    <refbody><section id="prototype">

        <p conref="../conref/conref_rtc_api.dita#apidef/joinChannelWithUserAccount1"/>
        </section>
        <section id="detailed_desc">

   <dl outputclass="since">
       <dlentry>
  <dt>Since</dt>
  <dd>v2.8.0</dd>
       </dlentry>
   </dl>
   <p>This method allows a user to join the channel with the user account. After the user successfully joins the channel, the SDK triggers the following callbacks:<ul>
       <li>The local client: <xref keyref="onLocalUserRegistered"/>, <xref keyref="onJoinChannelSuccess"/> and <xref keyref="onConnectionStateChanged"></xref>callbacks.</li>
       <li>The remote client: <xref keyref="onUserJoined"/> and <xref keyref="onUserInfoUpdated"/>, if the user joining the channel is in the communication profile, or is a host in the live streaming profile.</li>
   </ul></p>
   <p>Once the user joins the channel, the user subscribes to the audio and video streams of all the other users in the channel by default, giving rise to usage and billing calculation. If you do not want to subscribe to a specified stream or all remote streams, call the <apiname>mute</apiname> methods accordingly.</p>
   <note outputclass="note">To ensure smooth communication, use the same parameter type to identify the user. For example, if a user joins the channel with a user ID, then ensure all the other users use the user ID too. The same applies to the user account. If a user joins the channel with the Agora Web SDK, ensure that the uid of the user is set to the same parameter type.</note>
        </section>
        <section id="parameters"><title>Parameter</title>
   <parml>
       <plentry>
  <pt>token</pt>
  <pd><p>The token generated at your server.<ul>
      <li>In scenarios with low security requirements, token is optional and can be set as <ph keyref="NULL"/>.</li>
      <li>In scenarios with high security requirements, set the value to the token generated from your server. If you enable the App Certificate, you must use a token to join the channel.</li>
  </ul>
      <note outputclass="warning">Please ensure that the App ID, channel name and user User Account used to generate the token are consistent with<xref keyref="create2"/> the App ID and channel name used when the method initializes the engine.</note>
  </p></pd>
       </plentry>
       <plentry>
  <pt>`channelName`: The name of the source channel.</pt>
  <pd><p>The channel name. This parameter signifies the channel in which users engage in real-time audio and video interaction. Under the premise of the same App ID, users who fill in the same <codeph>channelName</codeph> will enter the same<codeph> channel</codeph> for audio and video interaction. The string length must be less than 64 bytes. Supported characters:<ul id="ul_lx4_nrc_h4b">
      <li>All lowercase English letters: a to z.</li>
      <li>All uppercase English letters: A to Z.</li>
      <li>All numeric characters: 0 to 9.</li>
      <li>Space</li>
      <li>&quot;!&quot;、&quot;#&quot;、&quot;$&quot;、&quot;%&quot;、&quot;&amp;&quot;、&quot;(&quot;、&quot;)&quot;、&quot;+&quot;、&quot;-&quot;、&quot;:&quot;、&quot;;&quot;、&quot;&lt;&quot;、&quot;=&quot;、&quot;.&quot;、&quot;>&quot;、&quot;?&quot;、&quot;@&quot;、&quot;[&quot;、&quot;]&quot;、&quot;^&quot;、&quot;_&quot;、&quot;{&quot;、&quot;}&quot;、&quot;|&quot;、&quot;~&quot;、&quot;,&quot;</li>
  </ul></p></pd>
       </plentry>
       <plentry>
  <pt>userAccount</pt>
  <pd><p>The user account. This parameter is used to identify real-time audio and video interaction channels. You need to set up and manage the User Account of the user by yourself, and ensure that the User Account of each user in the same channel is unique. The maximum length of this parameter is 255 bytes. Ensure that you set this parameter and do not set it as null<ph keyref="NULL"/>. Supported character scopes are:<ul>
      <li>The 26 lowercase English letters: a to z.</li>
      <li>The 26 uppercase English letters: A to Z.</li>
      <li>All numeric characters: 0 to 9.</li>
      <li>Space</li>
      <li>&quot;!&quot;、&quot;#&quot;、&quot;$&quot;、&quot;%&quot;、&quot;&amp;&quot;、&quot;(&quot;、&quot;)&quot;、&quot;+&quot;、&quot;-&quot;、&quot;:&quot;、&quot;;&quot;、&quot;&lt;&quot;、&quot;=&quot;、&quot;.&quot;、&quot;>&quot;、&quot;?&quot;、&quot;@&quot;、&quot;[&quot;、&quot;]&quot;、&quot;^&quot;、&quot;_&quot;、&quot;{&quot;、&quot;}&quot;、&quot;|&quot;、&quot;~&quot;、&quot;,&quot;</li>
      </ul></p></pd>
       </plentry>
   </parml>
        </section>
        <section id="return_values">
   <title>Returns</title>
   <ul>
       <li>0: Success.</li>
       <li>&lt; 0: Failure.<ul>
  <li>-2 (ERR_INVALID_ARGUMENT): The parameter is invalid.</li>
  <li>-3(ERR_NOT_READY): The SDK fails to be initialized. You can try re-initializing the SDK.</li>
  <li>-5(ERR_REFUSED): The request is rejected.</li>
       </ul></li>
   </ul>
        </section></refbody>
</reference>
