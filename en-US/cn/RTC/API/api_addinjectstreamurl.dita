<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE reference PUBLIC "-//OASIS//DTD DITA Reference//EN" "reference.dtd">
<reference id="api_addinjectstreamurl">
    <title><ph keyref="addInjectStreamUrl"/></title>
    <shortdesc id="short"><ph id="shortdesc">Injects an online media stream to a live-broadcast channel.</ph></shortdesc>
    <prolog>
        <metadata>
   <keywords>
       <indexterm keyref="addInjectStreamUrl" />
   </keywords>
        </metadata>
    </prolog>
    <refbody><section id="prototype">
        
        <p conref="../conref/conref_rtc_api.dita#apidef/addInjectStreamUrl"/>
        </section>
        <section id="detailed_desc">
   
   <note id="streamurl" outputclass="warning">Agora will soon stop the service for injecting online media streams on the client. If you have not implemented this service, Agora recommends that you do not use it. For details, see <xref href="https://docs.agora.io/cn/Interactive%20Broadcast/rtc_sunset" scope="external" format="html">Service Sunset Plans</xref>.</note>
   <note outputclass="note">
  <ul>
      <li>Ensure that you enable the RTMP Converter service before using this function. See Prerequisites in the advanced guide Push Streams to CDN.</li>
      <li>This method applies to the Native SDK v2.4.1 and later.</li>
      <li>This method takes effect only when you are a host in a `LIVE_BROADCASTING` channel.</li>
      <li>Only one online media stream can be injected into the same channel at the same time.</li>
      <li>Call this method after joining a channel.</li>
  </ul>
       </note>
   <p>This method imports the currently playing audio and video as audio and video sources into the ongoing live broadcast. This is applicable to scenarios where all of the audience members in the channel can watch a live show and interact with each other. After calling this method, the SDK will trigger a callback locally<xref keyref="onStreamInjectedStatus"/> to report the status of the input online media stream; after successfully inputting the media stream, the audio and video stream will appear in the channel, and all users in the channel will receive the<xref keyref="onUserJoined"/> callback, where the <parmname>uid</parmname> is 666. The audio and video stream will appear in the channel.</p>
        </section>
        <section id="parameters"><title>Parameter</title>
   <parml>
       <plentry>
  <pt>url</pt>
  <pd>
      <p>@param url Pointer to the URL address to be added to the ongoing streaming. Valid protocols are RTMP, HLS, and HTTP-FLV.<ul>
     <li>Supported audio codec type: AAC.</li>
     <li>Supported video codec type: H264 (AVC).</li>
 </ul>
      </p>
  </pd>
       </plentry>
       <plentry>
  <pt>config</pt>
  <pd>For the definition of the added video stream attributes, see:<xref keyref="InjectStreamConfig"/>.</pd>
       </plentry>
   </parml>
        </section>
        <section id="return_values">
   <title>Returns</title>
   <ul>
       <li>0: Success.</li>
       <li>&lt; 0: Failure.<ul>
      <li>#<codeph>ERR_INVALID_ARGUMENT</codeph> (-2): The injected URL does not exist. Call this method again to inject the stream and ensure that the URL is valid.</li>
      <li>#<codeph>ERR_NOT_READY</codeph> (-3): The user is not in the channel.</li>
      <li>#<codeph>ERR_NOT_SUPPORTED</codeph> (-4): The channel profile is not `<codeph>LIVE_BROADCASTING</codeph>`. Please call<xref
     keyref="setChannelProfile"/> and set the channel as a live broadcast scene before calling this method.</li>
      <li>#<codeph>ERR_NOT_INITIALIZED</codeph> (-7): The SDK is not<codeph> initialized</codeph>. Initialize the instance before calling<xref
     keyref="IRtcEngine"/> this method.</li>
  </ul>
       </li>
   </ul>
        </section></refbody>
</reference>
