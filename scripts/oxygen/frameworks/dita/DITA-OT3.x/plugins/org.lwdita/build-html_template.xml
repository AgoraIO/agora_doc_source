<?xml version="1.0" encoding="UTF-8"?>
<project xmlns:dita="http://dita-ot.sourceforge.net"
         xmlns:if="ant:if">

  <target name="hdita.init">
    <condition property="out.ext" value=".md">
      <not>
        <isset property="out.ext" />
      </not>
    </condition>
    <condition property="hdita.type.prefix" value="_${hdita.type}" else="">
      <isset property="hdita.type"/>
    </condition>
    <condition property="args.xsl" value="${dita.plugin.com.elovirta.dita.html.dir}/xsl/dita2hdita${hdita.type.prefix}.xsl">
      <not>
        <isset property="args.xsl" />
      </not>
    </condition>
    <makeurl file="${dita.input.valfile}" property="dita.input.valfile.url" validate="no"/>
    <!-- Set to "true" if you get out-of-memory errors during preprocess
    while processing very large (thousands of files) document sets. -->
    <condition property="dita.hdita.reloadstylesheet" value="false">
      <not><isset property="dita.hdita.reloadstylesheet"/></not>
    </condition>
  </target>

  <target name="dita2hdita"
          depends="build-init,
                   preprocess, 
                   hdita.init,
                   dita.topics.hdita.common,
                   dita.inner.topics.hdita.common,
                   dita.map.hdita.init,
                   dita.map.hdita.toc,
                   dita.out.map.hdita.toc"/>

  <target name="dita.map.hdita.init" unless="noMap">
    <condition property="args.hdita.toc.xsl" value="${dita.plugin.com.elovirta.dita.html.dir}/xsl/map2hdita-cover.xsl">
      <not>
        <isset property="args.hdita.toc.xsl" />
      </not>
    </condition>
    <condition property="args.hdita.toc" value="index">
      <not>
        <isset property="args.hdita.toc" />
      </not>
    </condition>
  </target>
  
  <target name="dita.map.hdita.toc"
          unless="noMap" if="old.transform"
          description="Build hdita TOC file">
    <xslt basedir="${dita.temp.dir}"
          destdir="${output.dir}"
          includesfile="${dita.temp.dir}${file.separator}${user.input.file.listfile}"
          classpathref="dost.class.path"
          style="${args.hdita.toc.xsl}">
      <excludesfile name="${dita.temp.dir}${file.separator}${resourceonlyfile}" if:set="resourceonlyfile"/>
      <param name="OUTEXT" expression="${out.ext}" if:set="out.ext" />
      <dita:extension id="dita.conductor.hdita.toc.param" behavior="org.dita.dost.platform.InsertAction"/>
      <mapper type="glob"
              from="*${dita.input.filename}"
              to="*${args.hdita.toc}${out.ext}" />
      <xmlcatalog refid="dita.catalog"/>
    </xslt>
  </target>
  
  <target name="dita.out.map.hdita.toc"
          unless="noMap" if="inner.transform"
          description="Build hdita TOC file,which will adjust the directory">
    <xslt basedir="${dita.temp.dir}"
          destdir="${output.dir}"
          includesfile="${dita.temp.dir}${file.separator}${user.input.file.listfile}"
          classpathref="dost.class.path"
          style="${args.hdita.toc.xsl}">
      <excludesfile name="${dita.temp.dir}${file.separator}${resourceonlyfile}" if:set="resourceonlyfile"/>
      <param name="OUTEXT" expression="${out.ext}" if:set="out.ext" />
      <dita:extension id="dita.conductor.hdita.toc.param" behavior="org.dita.dost.platform.InsertAction"/>
      <mapper type="glob"
              from="${user.input.file}"
              to="${args.hdita.toc}${out.ext}" />
      <xmlcatalog refid="dita.catalog"/>
    </xslt>
  </target>
  
  <!--requirement 3, old solution-->
  
  <target name="dita.topics.hdita.common" unless="noTopic" if="old.transform">
    <xslt basedir="${dita.temp.dir}"
          destdir="${output.dir}" includesfile="${dita.temp.dir}${file.separator}${fullditatopicfile}"
          reloadstylesheet="${dita.hdita.reloadstylesheet}"
          classpathref="dost.class.path"
          extension="${out.ext}" style="${args.xsl}"
          filenameparameter="FILENAME"
          filedirparameter="FILEDIR">
      <excludesfile name="${dita.temp.dir}${file.separator}${resourceonlyfile}" if:set="resourceonlyfile"/>
      <param name="TRANSTYPE" expression="${transtype}" />
      <param name="FILTERFILE" expression="${dita.input.valfile.url}" if:set="dita.input.valfile" />
      <param name="DRAFT" expression="${args.draft}" if:set="args.draft" />
      <param name="ARTLBL" expression="${args.artlbl}" if:set="args.artlbl" />
      <param name="GENERATE-TASK-LABELS" expression="${args.gen.task.lbl}" if:set="args.gen.task.lbl" />
      <param name="PRESERVE-DITA-CLASS" expression="${args.hdita.classattr}" if:set="args.hdita.classattr"/>
      <param name="NOPARENTLINK" expression="${args.hide.parent.link}" if:set="args.hide.parent.link"/>
  	  <param name="include.rellinks" expression="${include.rellinks}"/>
      <param name="BREADCRUMBS" expression="${args.breadcrumbs}" if:set="args.breadcrumbs"/>
      <param name="INDEXSHOW" expression="${args.indexshow}" if:set="args.indexshow" />
      <param name="genDefMeta" expression="${args.gen.default.meta}" if:set="args.gen.default.meta" />
      <param name="OUTEXT" expression="${out.ext}" if:set="out.ext" />
      <param name="BASEDIR" expression="${basedir}"/>
      <param name="OUTPUTDIR" expression="${output.dir}"/>
      <param name="DBG" expression="${args.debug}" if:set="args.debug"/>
      <!--dita:extension id="dita.conductor.hdita.param" behavior="org.dita.dost.platform.InsertAction"/-->
  	  <xmlcatalog refid="dita.catalog"/>
    </xslt>
  </target>
  
  <!--To generate&copy inner files-->
  <!--requirement 1,2-->
  
  <target name="dita.inner.topics.hdita.common" unless="noTopic" if="inner.transform">
    <xslt basedir="${dita.temp.dir}"
          destdir="${output.dir}" includesfile="${dita.temp.dir}${file.separator}${fullditatopicfile}"
          reloadstylesheet="${dita.hdita.reloadstylesheet}"
          classpathref="dost.class.path"
          extension="${out.ext}" style="${args.xsl}"
          filenameparameter="FILENAME"
          filedirparameter="FILEDIR">
    	<excludesfile name="${dita.temp.dir}${file.separator}${resourceonlyfile}" if:set="resourceonlyfile"/>
      <param name="TRANSTYPE" expression="${transtype}" />
      <param name="FILTERFILE" expression="${dita.input.valfile.url}" if:set="dita.input.valfile" />
      <param name="DRAFT" expression="${args.draft}" if:set="args.draft" />
      <param name="ARTLBL" expression="${args.artlbl}" if:set="args.artlbl" />
      <param name="GENERATE-TASK-LABELS" expression="${args.gen.task.lbl}" if:set="args.gen.task.lbl" />
      <param name="PRESERVE-DITA-CLASS" expression="${args.hdita.classattr}" if:set="args.hdita.classattr"/>
      <param name="NOPARENTLINK" expression="${args.hide.parent.link}" if:set="args.hide.parent.link"/>
      <param name="include.rellinks" expression="${include.rellinks}"/>
      <param name="BREADCRUMBS" expression="${args.breadcrumbs}" if:set="args.breadcrumbs"/>
      <param name="INDEXSHOW" expression="${args.indexshow}" if:set="args.indexshow" />
      <param name="genDefMeta" expression="${args.gen.default.meta}" if:set="args.gen.default.meta" />
      <param name="OUTEXT" expression="${out.ext}" if:set="out.ext" />
      <param name="BASEDIR" expression="${basedir}"/>
      <param name="OUTPUTDIR" expression="${output.dir}"/>
      <param name="DBG" expression="${args.debug}" if:set="args.debug"/>
      <!--dita:extension id="dita.conductor.hdita.param" behavior="org.dita.dost.platform.InsertAction"/-->
      <!--New,To generate&copy all dita files in the inputmap.dir, not all files in dita.temp.dir -->
      <mapper type="regexp"
              from="^(${tempdirToinputmapdir.relative.value})(.*?)(\.(\w+))$$" 
              to="\2${out.ext}"/>
      <xmlcatalog refid="dita.catalog"/>
    </xslt>
  </target>
  
</project>
