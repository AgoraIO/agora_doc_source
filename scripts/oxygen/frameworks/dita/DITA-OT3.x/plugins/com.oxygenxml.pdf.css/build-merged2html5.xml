<?xml version="1.0" encoding="UTF-8"?><!--

Applies the XSL transformation to get html5 from the merged map.

--><project xmlns:if="ant:if" basedir=".">

	<target name="pdf-css.merged-to-html5">
		<!-- Figure title placement. May come as argument. -->
		<property name="figure.title.placement" value="top"/>
		<!-- Table title placement. May come as argument. -->
		<property name="table.title.placement" value="top"/>
		<!-- Table title repeat. May come as argument. -->
		<property name="table.title.repeat" value="yes"/>
	  <!-- Related links grouping mode -->
    <property name="args.rellinks.group.mode">single-group</property>
		<antcall target="pdf-css.merged-to-html5.x" inheritrefs="true"/>
		<antcall target="copyXHTML" inheritrefs="true">
			<param name="src" value="${mh5.html.file}"/>
			<param name="dest" value="${dita.map.output.dir}/${outputFile.base}.merged.html"/>
		</antcall>
	</target>
	
	<target name="pdf-css.merged-to-html5.x">
		<pipeline message="Process the merged map to html5" taskname="m2h">
			<xslt in="${mh5.dita.file}" out="${mh5.html.file}" style="${mh5.xsl.file}">
				<xmlcatalog classpath="">
						<!-- 
			      		If this empty classpath attribute is not set, the catalog resolver
			      		will try to scan the full classpath-ul and the build will fail
			      		when a security policy file is in place. 
			      		-->
					<catalogpath path="${xsl.extensions.xml.catalog.file.path}"/>
                    <catalogpath path="${dita.plugin.org.dita.base.dir}/catalog-dita.xml"/>
				</xmlcatalog>
				<param name="DRAFT" expression="${args.draft}" if:set="args.draft"/>
				<param name="html5.css.links" expression="${html5.css.links}"/>
				<param name="figure.title.placement" expression="${figure.title.placement}"/>
				<param name="table.title.placement" expression="${table.title.placement}"/>
				<param name="table.title.repeat" expression="${table.title.repeat}"/>
			    <param name="args.rellinks.group.mode" expression="${args.rellinks.group.mode}" if:set="args.rellinks.group.mode"/>
			    <param name="sort.and.group.glossentries" expression="${sort.and.group.glossentries}" if:set="sort.and.group.glossentries"/>
				<param name="GENERATE-TASK-LABELS" expression="${args.gen.task.lbl}" if:set="args.gen.task.lbl"/>
				<param name="mappath" expression="${args.input}"/>
				<param name="com.oxygenxml.xhtml.linkToMediaResources" expression="${show.media.as.link}" if:set="show.media.as.link"/>
				
				
    <param xmlns:dita="http://dita-ot.sourceforge.net" name="com.oxygenxml.xhtml.linkToMediaResources" expression="${com.oxygenxml.xhtml.linkToMediaResources}" if:set="com.oxygenxml.xhtml.linkToMediaResources"/>
    <param name="ditaTempDir" expression="${dita.temp.dir}"/>

			</xslt>
		</pipeline>
	</target>

</project>