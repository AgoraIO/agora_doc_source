<?xml version="1.0" encoding="UTF-8"?>
    <xs:schema xmlns:xs="http://www.w3.org/2001/XMLSchema" elementFormDefault="qualified"
    xmlns:vc="http://www.w3.org/2007/XMLSchema-versioning" vc:minVersion="1.1"
    targetNamespace="http://www.oxygenxml.com/ns/author/external-action"
    xmlns:ea="http://www.oxygenxml.com/ns/author/external-action">

    <xs:import namespace="http://www.w3.org/XML/1998/namespace"
        schemaLocation="http://www.w3.org/XML/1998/namespace"/>

    <xs:element name="authorAction">
        <xs:annotation>
            <xs:documentation>An author action definition.</xs:documentation>
        </xs:annotation>
        <xs:complexType>
            <xs:all>
                <xs:element ref="ea:name"/>
                <xs:element ref="ea:description" minOccurs="0"/>
                <xs:element ref="ea:smallIconPath" minOccurs="0"/>
                <xs:element ref="ea:largeIconPath" minOccurs="0"/>
                <xs:element ref="ea:accessKey" minOccurs="0"/>
                <xs:element ref="ea:accelerator" minOccurs="0"/>
                <xs:element ref="ea:enabledInReadOnlyContext" minOccurs="0"/>
                <xs:element ref="ea:operations"/>
            </xs:all>
            <xs:attribute name="id" type="ea:idType" use="required">
                <xs:annotation>
                    <xs:documentation>The action's ID. It is used to refer this action from a toolbar or menu.</xs:documentation>
                </xs:annotation>
            </xs:attribute>
        </xs:complexType>
    </xs:element>

    <xs:element name="name">
        <xs:simpleType>
            <xs:restriction base="xs:string">
                <xs:assertion test="string-length($value) > 0"
                    xmlns:xerces="http://xerces.apache.org"
                    xerces:message="The 'name' element cannot be empty."/>
            </xs:restriction>
        </xs:simpleType>
    </xs:element>

    <xs:element name="description" type="xs:string">
        <xs:annotation>
            <xs:documentation>
                A description of the action. It usually appears on the tooltip.
            </xs:documentation>
        </xs:annotation>
    </xs:element>

    <xs:element name="largeIconPath" type="ea:imageType">
        <xs:annotation>
            <xs:documentation>
                <p>The path to an icon that will be used when the action is added to a toolbar.
                It is recommended to use <code>${framework}</code> or <code>${frameworkDir}</code> to refer images from within the framework directory.</p>
                <p>If the path starts with a slash ('/'), the resource will be searched for in the Classpath of the framework.</p>
            </xs:documentation>
        </xs:annotation>
    </xs:element>

    <xs:element name="smallIconPath" type="ea:imageType">
        <xs:annotation>
            <xs:documentation>
                The path to an icon that will be used when the action is added on the toolbar.
                It is recommended to use <code>${framework}</code> or <code>${frameworkDir}</code> to refer images from within the framework directory.
            </xs:documentation>
        </xs:annotation>
    </xs:element>

    <xs:element name="accessKey" type="xs:string">
        <xs:annotation>
            <xs:documentation>
                <p>In Windows, you can access menus by holding down the <code>Alt</code> key and then pressing the key that corresponds to the letter that is underlined 
                in the name of the menu. Then, while still holding down <code>Alt,</code> you can select submenus and menu action the same way, by pressing the subsequent 
                    corresponding keys.</p> 
                <p>You can use this element to specify the letter in the name of the action that can be used to access the action.</p>
            </xs:documentation>
        </xs:annotation>
    </xs:element>

    <xs:element name="accelerator" type="xs:string">
        <xs:annotation>
            <xs:documentation>
                <p>This element allows you to configure a shortcut for the action that you are editing. The + character separates the shortcut keys.</p>
                <p>The "M" modifier keys are a platform-independent way of representing keys:
                    <ul>
                        <li>M1 is the COMMAND key on MacOS X, and the CTRL key on other platforms.</li>
                        <li>M2 is the SHIFT key.</li>
                        <li>M3 is the Option key on MacOS X, and the ALT key on other platforms.</li>
                        <li>M4 is the CTRL key on MacOS X, and is undefined on other platforms.</li>
                    </ul>
                </p>
            </xs:documentation>
        </xs:annotation>
    </xs:element>

    <xs:element name="enabledInReadOnlyContext" type="xs:boolean" default="false">
        <xs:annotation>
            <xs:documentation>
                If <code>true,</code> the action can be invoked even when the cursor is placed in a read-only location.
            </xs:documentation>
        </xs:annotation>
    </xs:element>

    <xs:element name="operations">
        <xs:annotation>
            <xs:documentation>
                <p>Element used to configure the functionality of the action that you are editing.</p>
                <p>An action has one or more operation modes. The evaluation of an XPath 2.0 expression activates an operation mode.
                    The first selected operation mode is activated when you trigger the action.</p>
                <p>The scope of the XPath expression must consist only of element and attribute nodes of the edited document.
                    Otherwise, the XPath expression does not return a match and does not fire the action. </p>
            </xs:documentation>
        </xs:annotation>
        <xs:complexType>
            <xs:sequence>
                <xs:element minOccurs="1" maxOccurs="unbounded" ref="ea:operation"/>
            </xs:sequence>
            <xs:attribute ref="xml:base" fixed="preserve"/>
        </xs:complexType>
    </xs:element>

    <xs:element name="operation">
        <xs:complexType>
            <xs:all>
                <xs:element name="xpathCondition" minOccurs="0">
                    <xs:annotation>
                        <xs:documentation>An XPath 2.0 expression used for operation activation.</xs:documentation>
                    </xs:annotation>
                    <xs:complexType>
                        <xs:simpleContent>
                            <xs:extension base="xs:string">
                                <xs:attribute ref="xml:space" fixed="preserve">
                                    <xs:annotation>
                                        <xs:documentation>If the content is a simple text then we can control how it is treated.</xs:documentation>
                                    </xs:annotation>
                                </xs:attribute>
                                <xs:attribute ref="xml:base"/>
                            </xs:extension>
                        </xs:simpleContent>
                    </xs:complexType>
                </xs:element>
                <xs:element name="arguments" minOccurs="0">
                    <xs:annotation>
                        <xs:documentation>The arguments for the invoked operation.</xs:documentation>
                    </xs:annotation>
                    <xs:complexType>
                        <xs:sequence>
                            <xs:element maxOccurs="unbounded" ref="ea:argument" minOccurs="0"/>
                        </xs:sequence>
                    </xs:complexType>
                </xs:element>
            </xs:all>
            <xs:attribute name="id" use="required" type="ea:idType">
                <xs:annotation>
                    <xs:documentation>The qualified name of the operation class: <i>ro.sync.ecss.extensions.commons.operations.InsertFragmentOperation</i>. A built-in operation can be specified just by its name: <i>InsertFragmentOperation</i>.</xs:documentation>
                </xs:annotation>
            </xs:attribute>
            <xs:attribute ref="xml:base" fixed="preserve"/>
        </xs:complexType>
    </xs:element>
    <xs:element name="argument">
        <xs:annotation>
            <xs:documentation>An argument or parameter for an author operation.</xs:documentation>
        </xs:annotation>
        <xs:complexType mixed="true">
            <xs:choice minOccurs="0">
                <xs:any namespace="##local" processContents="skip" maxOccurs="unbounded"/>
                <xs:any namespace="##other" processContents="skip" maxOccurs="unbounded"/>
            </xs:choice>
            <xs:attribute name="name" use="required"/>
            <xs:attribute ref="xml:space" fixed="preserve">
                <xs:annotation>
                    <xs:documentation>If the content is a simple text then we can control how it is treated.</xs:documentation>
                </xs:annotation>
            </xs:attribute>
            <xs:attribute ref="xml:base" fixed="preserve"/>
        </xs:complexType>
    </xs:element>

    <xs:complexType name="imageType">
        <xs:attribute name="href">
            <xs:annotation>
                <xs:documentation>
                    <p>The path to an icon. It is recommended to use <code>${framework}</code> or <code>${frameworkDir}</code> to refer images from within the framework directory.</p>
                    <p>If the path starts with a slash ('/'), the resource will be searched for in the Classpath of the framework.</p>
                </xs:documentation>
            </xs:annotation>
        </xs:attribute>
    </xs:complexType>
    <xs:simpleType name="idType">
        <xs:restriction base="xs:string">
            <xs:assertion test="string-length($value) > 0" xmlns:xerces="http://xerces.apache.org"
                xerces:message="The 'id' attribute cannot be empty."/>
        </xs:restriction>
    </xs:simpleType>
</xs:schema>
